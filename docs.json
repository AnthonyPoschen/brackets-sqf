[{"Name":"abs","Desc":" Absolute value of a real number ","Syn":{"Syntax":" Number = abs n ","Params":["n: Number"],"Return":" Number "},"Examples":["_n = abs -3;\nReturns 3"],"Additional":["Math Commands"]},{"Name":"accTime","Desc":" Returns the current time acceleration factor ","Syn":{"Syntax":"  Number = accTime ","Params":null,"Return":" Number "},"Examples":["_acc = accTime"],"Additional":["setAccTime","setTimeMultiplier","timeMultiplier"]},{"Name":"acos","Desc":" ArcCosine of a number, result in Degrees","Syn":{"Syntax":"  Number = acos x ","Params":["x: Number"],"Return":" Number "},"Examples":["_degrees = acos 0.5\nreturns 60"],"Additional":["Math Commands"]},{"Name":"action","Desc":" Make a unit to perform an action. Use the List of Actions for reference about the available actions and their syntax. \n\n NOTE: While this command should be executed where unit is local, it is not always the case. Actions such as \"Eject\", \"GetOut\", \"GetInXXXX\", \"MoveToXXXX\", etc can be executed on remote units. ","Syn":{"Syntax":" unit action action ","Params":["unit: Object\n\n","action: Array"],"Return":" Nothing "},"Examples":["player action [\"SitDown\", player];","_soldier action [\"Eject\", vehicle _soldier];"],"Additional":["addAction","removeAction","removeAllActions","setUserActionText","inputAction"]},{"Name":"actionKeys","Desc":" Returns a list of dikCodes of buttons assigned to the given user action. You can find the action names in config class ControllerSchemes or user action names. ","Syn":{"Syntax":"  Array = actionKeys userAction ","Params":["userAction: String"],"Return":" Array "},"Examples":["_array = actionKeys \"ReloadMagazine\""],"Additional":["actionKeysNames","actionKeysNamesArray","actionKeysImages"]},{"Name":"actionKeysImages","Desc":" Returns a list of button images or names assigned to the given user action. A maximum of maxKeys keys is listed. You can find the action names in config class ControllerSchemes or user action names. ","Syn":{"Syntax":"  Structured Text = actionKeysImages userAction \u003cbr\u003e(Alternate Syntax exists check Read more)","Params":["userAction: String"],"Return":" Structured Text "},"Examples":["_text = actionKeysImages \"ReloadMagazine\"","_reload = actionKeysImages [\"ReloadMagazine\",1]will return \"R\" (incl. the quotation marks!)"],"Additional":["actionKeys","actionKeysNames","actionKeysNamesArray"]},{"Name":"actionKeysNames","Desc":" Returns a list of button names assigned to the given user action. A maximum of maxKeys keys is listed. You can find the action names in config class ControllerSchemes or user action names. ","Syn":{"Syntax":" String = actionKeysNames userAction \u003cbr\u003e(Alternate Syntax exists check Read more)","Params":["userAction: String"],"Return":" String "},"Examples":["_list = actionKeysNames \"ReloadMagazine\""],"Additional":["actionKeys","actionKeysImages","actionKeysNamesArray"]},{"Name":"actionKeysNamesArray","Desc":" Returns a list of button names assigned to the given user action. A maximum of maxKeys keys is listed. You can find the action names in config class ControllerSchemes or user action names. ","Syn":{"Syntax":"actionKeysNamesArray userAction \u003cbr\u003e(Alternate Syntax exists check Read more)","Params":["userAction: String - name of the action"],"Return":" Array of Strings "},"Examples":["list = actionKeysNamesArray \"ReloadMagazine\";","list = actionKeysNamesArray [\"ReloadMagazine\", 1];"],"Additional":["actionKeys","actionKeysImages","actionKeysNames"]},{"Name":"actionName","Desc":" Returns localized name of action.  ","Syn":{"Syntax":" actionName action ","Params":["action: String"],"Return":" String "},"Examples":["actionName \"ReloadMagazine\""],"Additional":["Arma_3_Actions","playAction","playActionNow"]},{"Name":"activateAddons","Desc":" Activates the listed addons. The list of active addons is initialized during this function. ","Syn":{"Syntax":" activateAddons [addon1, ...] ","Params":["[addon1, ...]: Array"],"Return":" Nothing "},"Examples":["activateAddons [\"BISOFP\"];"],"Additional":["unitAddons","activatedAddons"]},{"Name":"activatedAddons","Desc":" Returns a list of all activated addons. ","Syn":{"Syntax":" activatedAddons ","Params":null,"Return":" Array "},"Examples":["_addons = activatedAddons;"],"Additional":["activateAddons"]},{"Name":"activateKey","Desc":" Activates the given keyname for the current user profile. The keys are used to unlock missions or campaigns.\n\nSee keys, keysLimit and doneKeys in the description.ext file of the missions. ","Syn":{"Syntax":" activateKey keyname ","Params":["keyname: String"],"Return":" Nothing "},"Examples":["activateKey \"Mission04Key\";"],"Additional":["deActivateKey","isKeyActive"]},{"Name":"addAction","Desc":" Adds an entry to the action menu of an object (scroll wheel menu). The action can only be activated when in proximity to the object (eg: building). Adding an action to the player obviously makes that action available to the player at all times. \n\nThis command has local effect. Created action is only available on the computer where command was executed. To make action available to all players, command must be executed on all connected clients.\n\nNote: addAction will be ignored on dedicated server, probably because no UI.  ","Syn":{"Syntax":" unit addAction [title, script, arguments, priority, showWindow, hideOnUse, shortcut, condition, positionInModel, radius, radiusView, showIn3D, available, textDefault, textToolTip] \u003cbr\u003e(Alternate Syntax exists check Read more)","Params":["\nunit\nObject - unit, vehicle or static object               \ntitle\nString - The action name which is displayed in the action menu, may contain XML like syntax. Because of that \u003c and \u003e symbols will be interpreted as opening and closing XML tags. To avoid this use \u0026lt; for \u003c and \u0026gt; for \u003e\nscript\nString or Code - Either path to the script file, relative to the mission folder or string with code or (since Take On Helicopters) the actual script code. If the string is a path to script file, the script file *must* have extension .SQS or .SQF (in Arma), or .SQS (in OFP). The script, whether it is a file or a code, will run in scheduled environment, i.e. it is ok to use sleep. \nParameters array passed to the script upon activation in _this variable is: [target, caller, ID, arguments]\ntarget (_this select 0): Object - the object which the action is assigned to\ncaller (_this select 1): Object - the unit that activated the action\nID (_this select 2): Number - ID of the activated action (same as ID returned by addAction)\narguments (_this select 3): Anything - arguments given to the script if you are using the extended syntax\n\narguments\n(optional): Anything - Arguments to pass to the script (will be _this select 3 inside the script). If Array is used as an argument for example, its 1st element reference would be _this select 3 select 0. Default value: nil\npriority\n(optional): Number - Priority value of the action. Actions will be arranged in descending order according to this value. Every game action has a preset priority value. Value can be negative or decimal fraction. Actions with same values will be arranged in order which they were made, newest at the bottom. The bigger the number the higher the action will be positioned on the menu. Typical range is 0 (low priority. Eg: 'Get out') to 6 (high priority. Eg: 'Auto-hover on'). Default value: 1.5\nshowWindow\n(optional): Boolean - If set to true, players see \"Titletext\" at mid-lower screen, as they approach the object. Only the title text for the action with highest priority and 'showWindow true' will be shown. Setting it to false disables the feature. Default value: true\nhideOnUse\n(optional): Boolean - If set to true, it will hide the action menu after selecting that action. If set to false, it will leave the action menu open and visible after selecting that action, leaving the same action highlighted, for the purpose of allowing you to reselect that same action quickly, or to select another action. Default value: true\nshortcut\n(optional): String - One of the key names defined in bin.pbo (e.g. \"moveForward\"). Adding available shortcut will bind corresponding keyboard key to this action. Shortcut availability can be tested with inputAction command. Default value: \"\"\ncondition\n(optional): String - script code that must return true for the action to be shown. Special variables passed to the script code are _target (unit to which action is attached to) and _this (caller/executing unit). Default value: \"true\"\n\nNOTE: condition is evaluated on each frame in non-scheduled environment. If action is added to some object and not to player, condition will only get evaluated IF player is closer than 15m to the object AND is looking at the object. If action is added to player, the condition is evaluated all the time.\npositionInModel\n(optional, TKOH only): String - Name of the named selection in the model for positioning the action in 3D space, typically a memory point. Default: \"\"\nradius\n(optional, TKOH only): Number - Distance in meters the unit activating the action must be within to activate it. -1 disables this radius\nradiusView\n(optional, TKOH only): Number - Maximum distance in meters the cursor can be away from the 3D action to activate it. -1 disables this radius\nshowIn3D\n(optional, TKOH only): Number - Condition for showing the action in 3D space (combine by adding up)\n\n1 - show\n2 - draw if unit is pilot\n4 - draw if unit is inside vehicle\n8 - draw if unit is outside vehicle\n16 - draw if not in external camera\n32 - draw if not in internal camera\n64 - draw if not in gunner camera (turret optics)\navailable\n(optional, TKOH only): Number - Condition for being able to activate the action (combine by adding up)\n\n0 - disabled\n1 - unit is pilot or copilot\n2 - unit is inside target\n4 - unit is not inside target\ntextDefault\n(optional, TKOH only): String - Structured Text which is shown as the 3D action (so it can be an icon), or in the center of the screen when the action is highlighted in the action menu for a 2D action\ntextToolTip\n(optional, TKOH only): String - Structured Text which is faded in under the textDefault when hovering over the action in 3D space\n\n","Object - unit, vehicle or static object","String - The action name which is displayed in the action menu, may contain XML like syntax. Because of that \u003c and \u003e symbols will be interpreted as opening and closing XML tags. To avoid this use \u0026lt; for \u003c and \u0026gt; for \u003e","String or Code - Either path to the script file, relative to the mission folder or string with code or (since Take On Helicopters) the actual script code. If the string is a path to script file, the script file *must* have extension .SQS or .SQF (in Arma), or .SQS (in OFP). The script, whether it is a file or a code, will run in scheduled environment, i.e. it is ok to use sleep. \nParameters array passed to the script upon activation in _this variable is: [target, caller, ID, arguments]\ntarget (_this select 0): Object - the object which the action is assigned to\ncaller (_this select 1): Object - the unit that activated the action\nID (_this select 2): Number - ID of the activated action (same as ID returned by addAction)\narguments (_this select 3): Anything - arguments given to the script if you are using the extended syntax\n","(optional): Anything - Arguments to pass to the script (will be _this select 3 inside the script). If Array is used as an argument for example, its 1st element reference would be _this select 3 select 0. Default value: nil","(optional): Number - Priority value of the action. Actions will be arranged in descending order according to this value. Every game action has a preset priority value. Value can be negative or decimal fraction. Actions with same values will be arranged in order which they were made, newest at the bottom. The bigger the number the higher the action will be positioned on the menu. Typical range is 0 (low priority. Eg: 'Get out') to 6 (high priority. Eg: 'Auto-hover on'). Default value: 1.5","(optional): Boolean - If set to true, players see \"Titletext\" at mid-lower screen, as they approach the object. Only the title text for the action with highest priority and 'showWindow true' will be shown. Setting it to false disables the feature. Default value: true","(optional): Boolean - If set to true, it will hide the action menu after selecting that action. If set to false, it will leave the action menu open and visible after selecting that action, leaving the same action highlighted, for the purpose of allowing you to reselect that same action quickly, or to select another action. Default value: true","(optional): String - One of the key names defined in bin.pbo (e.g. \"moveForward\"). Adding available shortcut will bind corresponding keyboard key to this action. Shortcut availability can be tested with inputAction command. Default value: \"\"","(optional): String - script code that must return true for the action to be shown. Special variables passed to the script code are _target (unit to which action is attached to) and _this (caller/executing unit). Default value: \"true\"\n\nNOTE: condition is evaluated on each frame in non-scheduled environment. If action is added to some object and not to player, condition will only get evaluated IF player is closer than 15m to the object AND is looking at the object. If action is added to player, the condition is evaluated all the time.","(optional, TKOH only): String - Name of the named selection in the model for positioning the action in 3D space, typically a memory point. Default: \"\"","(optional, TKOH only): Number - Distance in meters the unit activating the action must be within to activate it. -1 disables this radius","(optional, TKOH only): Number - Maximum distance in meters the cursor can be away from the 3D action to activate it. -1 disables this radius","(optional, TKOH only): Number - Condition for showing the action in 3D space (combine by adding up)\n\n1 - show\n2 - draw if unit is pilot\n4 - draw if unit is inside vehicle\n8 - draw if unit is outside vehicle\n16 - draw if not in external camera\n32 - draw if not in internal camera\n64 - draw if not in gunner camera (turret optics)","(optional, TKOH only): Number - Condition for being able to activate the action (combine by adding up)\n\n0 - disabled\n1 - unit is pilot or copilot\n2 - unit is inside target\n4 - unit is not inside target","(optional, TKOH only): String - Structured Text which is shown as the 3D action (so it can be an icon), or in the center of the screen when the action is highlighted in the action menu for a 2D action","(optional, TKOH only): String - Structured Text which is faded in under the textDefault when hovering over the action in 3D space"],"Return":" Number\nThe ID of the action is returned. IDs are incrementing. The first given action to each unit has got the ID 0, the second the ID 1 etc. ID's are also passed to the called script and used to remove an action with removeAction "},"Examples":["Short and sweet:player addAction [\"A Useless Action\", \"\"];\nplayer addAction [\"\u003ct color='#FF0000'\u003eThis Useless Action Is RED\u003c/t\u003e\", \"\"];\nplayer addAction [\"Hint Hello!\", { hint format [\"Hello %1!\", _this select 3] }, name player];\nplayer addAction [\"string exec\", \"hint 'this is also compiled'\"];","Actionception:actions = [];\nactions set [0, player addAction [\"Actionception\", {\n\u0009if (count actions == 1) then {\n\u0009\u0009actions set [1, player addAction [\" Actionception \", {\n\u0009\u0009\u0009if (count actions == 2) then {\n\u0009\u0009\u0009\u0009actions set [2, player addAction [\"  Actionception  \", {\n\u0009\u0009\u0009\u0009\u0009if (count actions == 3) then {\n\u0009\u0009\u0009\u0009\u0009\u0009actions set [3, player addAction [\"   Actionception   \", {\n\u0009\u0009\u0009\u0009\u0009\u0009\u0009{\n\u0009\u0009\u0009\u0009\u0009\u0009\u0009\u0009player removeAction _x;\n\u0009\u0009\u0009\u0009\u0009\u0009\u0009} forEach actions;\n\u0009\u0009\u0009\u0009\u0009\u0009}, [], 10, false, true]];\n\u0009\u0009\u0009\u0009\u0009};\n\u0009\u0009\u0009\u0009}, [], 10, false, false]];\n\u0009\u0009\u0009};\n\u0009\u0009}, [], 10, false, false]];\n\u0009};\n}, [], 10, false, false]];","SQS example: _genAct = generator addAction [\"Switch on generator\", \"activate_generator.sqs\"]\nactivate_generator.sqs:\n\n_gen = _this select 0\n_caller = _this select 1\n_id = _this select 2\n; remove the action once it is activated\n_gen removeAction _id\n\nThis example shows an action called \"Switch on generator\" added to an object with the name 'generator'. As soon as the player gets close to this object, he can execute the given action via the action menu. Then the script 'activate_generator.sqs' is executed, which in our example only removes the action from the generator.","TKOH example:_heli addAction [\n\u0009\"Test\",\n\u0009\"myTest.sqf\",\n\u0009\"\",\n\u00091,\n\u0009true,\n\u0009true,\n\u0009\"\",\n\u0009\"true\",\n\u0009\"display1\",\n\u00092,\n\u00090.25,\n\u00099,\n\u00090,\n\u0009\"\u003cimg image='\\HSim\\UI_H\\data\\ui_action_autohover_ca.paa' size='1.8' shadow=0 /\u003e\",\n\u0009\"\u003cbr /\u003eMy test tooltip\"\n]"],"Additional":["removeAction","removeAllActions","setUserActionText","inputAction","action"]},{"Name":"addBackpack","Desc":" Adds a backpack for a unit.\nClassname list of available backpacks :\n\nArma 2 OA backpacks\n\nArma 3 backpacks - objects starting with \"B_\", starts with \"B_AssaultPack_khk\" ","Syn":{"Syntax":" unit addBackpack packClassName","Params":["unit: Object\n\n","packClassName: String"],"Return":" Nothing "},"Examples":["this addBackpack \"TK_RPG_Backpack_EP1\";","_mySoldierDude addBackpack \"US_Patrol_Pack_EP1\";"],"Additional":["addBackpackGlobal","backpackContainer","firstBackpack","unitBackpack","backpack","backpackCargo","getBackpackCargo","backpackItems","addBackpackCargo","addBackpackCargoGlobal","removeBackpack","clearBackpackCargo","clearBackpackCargoGlobal","clearAllItemsFromBackpack","loadBackpack","backpackSpaceFor","canAddItemToBackpack","addItemToBackpack","removeItemFromBackpack","everyBackpack"]},{"Name":"addBackpackCargo","Desc":"  Add backpack(s) to the cargo space of vehicle. Classname list of available backpacks is here ","Syn":{"Syntax":"vehicle addBackpackCargo [packClassName,count] ","Params":["vehicle: Object - vehicle to add the backpack to\n\n","packClassName: String - backpack classname","count: Number - number of backpacks to add."],"Return":" Nothing "},"Examples":["this addBackpackCargo [\"TK_RPG_Backpack_EP1\",2];","_apc addBackpackCargo [\"US_Patrol_Pack_EP1\",4];"],"Additional":["backpackContainer","firstBackpack","unitBackpack","backpack","backpackCargo","getBackpackCargo","backpackItems","addBackpack","addBackpackCargoGlobal","removeBackpack","clearBackpackCargo","clearBackpackCargoGlobal","clearAllItemsFromBackpack","loadBackpack","backpackSpaceFor","canAddItemToBackpack","addItemToBackpack","removeItemFromBackpack","everyBackpack"]},{"Name":"addBackpackCargoGlobal","Desc":"  Add backpack(s) to the cargo space of vehicle. MP synchronized. Classname list of available backpacks is here ","Syn":{"Syntax":" vehicle addBackpackCargoGlobal  [packClassName, count] ","Params":["vehicle: Object to add the Backpack to\n\n","packClassName: String,  See the topic Category:Weapons for reference about possible values.","count: Number"],"Return":" Nothing"},"Examples":["this addBackpackCargoGlobal [\"TK_RPG_Backpack_EP1\",2];","_apc addBackpackCargoGlobal [\"US_Patrol_Pack_EP1\",4];"],"Additional":["backpackContainer","firstBackpack","unitBackpack","backpack","backpackCargo","getBackpackCargo","backpackItems","addBackpack","addBackpackCargo","removeBackpack","clearBackpackCargo","clearBackpackCargoGlobal","clearAllItemsFromBackpack","loadBackpack","backpackSpaceFor","canAddItemToBackpack","addItemToBackpack","removeItemFromBackpack","everyBackpack","addMagazineCargo","clearMagazineCargo","clearWeaponCargo","addMagazineCargoGlobal","addWeaponCargo","addWeaponCargoGlobal","addItemCargo","addItemCargoGlobal"]},{"Name":"addCamShake","Desc":" Creates the camera shaking effect, like when you are near an explosion ","Syn":{"Syntax":" addCamShake [power, duration, frequency] ","Params":["power: Number - Strength of shake, practical range is 0 to 20 (how strong the camera movement will be).\n\n","duration: Number - Duration in seconds (how long the effect will last)","frequency: Number - Frequency of shake, practical range is 0 to 100 (how will be the rhythm)."],"Return":" Nothing "},"Examples":["addCamShake [10, 1, 25];","enableCamShake true;\naddCamShake [5, 5, 25];"],"Additional":["enableCamShake","setCamShakeDefParams","setCamShakeParams","resetCamShake"]},{"Name":"addCuratorAddons","Desc":" Allow curator use of given addon. ","Syn":{"Syntax":" curatorObj addCuratorAddons addons ","Params":["curatorObj: Object - Curator module.\n\n","addons: Array of CfgPatches classes"],"Return":" Nothing "},"Examples":["curatorObj addCuratorAddons [\"A3_Armor_F_AMV\",\"A3_Armor_F_Panther\"];","curatorObj addCuratorAddons [\"A3_Modules_F_Curator_Lightning\"];","Addons can be stacked:curatorObj addCuratorAddons [\"A3_Armor_F_AMV\",\"A3_Armor_F_Panther\"];\ncuratorObj addCuratorAddons [\"A3_Modules_F_Curator_Lightning\"];\ndiag_log curatorAddons curatorObj;\n\n[\n\u0009\"A3_Armor_F_AMV\",\n\u0009\"A3_Armor_F_Panther\",\n\u0009\"A3_Modules_F_Curator_Lightning\"\n]"],"Additional":["Curator","removeCuratorAddons","removeAllCuratorAddons","curatorAddons"]},{"Name":"addCuratorCameraArea","Desc":" Adds or changes curator camera area (depends on if ID is already used). ","Syn":{"Syntax":" curatorObj addCuratorCameraArea [cameraAreaID,position,radius] ","Params":["curatorObj: Object - Curator module.\n\n","cameraAreaID: Number","position: Position","radius: Number"],"Return":" Nothing "},"Examples":["myCurator addCuratorCameraArea [3,position mySoldier,300];"],"Additional":["Curator","removeCuratorCameraArea","removeAllCuratorCameraAreas","curatorCameraArea"]},{"Name":"addCuratorEditableObjects","Desc":" Register objects which can be edited by a curator. ","Syn":{"Syntax":" curatorObj addCuratorEditableObjects [[objects],addCrew] ","Params":["curatorObj: Object - Curator module.\n\n","objects: Array","addCrew: Boolean"],"Return":" Nothing "},"Examples":["curatorModule addCuratorEditableObjects [[car],true ];"],"Additional":["Curator","removeCuratorEditableObjects","curatorEditableObjects"]},{"Name":"addCuratorEditingArea","Desc":" Adds or changes curator edit area (depends on if ID is already used). ","Syn":{"Syntax":" curatorObj addCuratorEditingArea [editAreaID,position,radius] ","Params":["curatorObj: Object - Curator module.\n\n","editAreaID: Number","position: Position","radius: Number"],"Return":" Nothing "},"Examples":["myCurator addCuratorEditingArea [4,position player,1000];"],"Additional":["Curator","removeCuratorEditingArea","removeAllCuratorEditingAreas","curatorEditingArea"]},{"Name":"addCuratorPoints","Desc":" Adds or removes curator points. Points can be only in range from 0 to 1. ","Syn":{"Syntax":" curatorObj addCuratorPoints points ","Params":["curatorObj: Object - Curator module.\n\n","points: Number"],"Return":" Nothing "},"Examples":["curatorModule addCuratorPoints 0.5"],"Additional":["Curator","curatorPoints"]},{"Name":"addEditorObject","Desc":" Add an object to the editor and assign arguments. Create script is,called with _new equal to true. Returns the ID of the new EditorObject.,Subtype class is optional.  ","Syn":{"Syntax":" map addEditorObject [type,[name1,value1,...],subtype class] ","Params":["map: Control -\n\n","[name1,value1,...],subtype class]: Array -"],"Return":" String "},"Examples":["Example needed"],"Additional":["See also needed"]},{"Name":"addEventHandler","Desc":" Adds an event handler to a given unit. For more information about event handlers and their types check the scripting topic Event handlers in this reference. You may add as many event handlers of any type as you like to every unit. For instance, if you add an event handler of type \"killed\" and one already exists, the old one doesn't get overwritten. Use removeEventHandler to delete event handlers. \n\nEvery event will create an array named _this, which contains specific information about the particular event. (e.g. the \"killed\" EH will return an array with 2 elements: the killed unit, and the killer.)\n","Syn":{"Syntax":" Number = object addEventHandler [type, command] ","Params":["object: Object\n\n","[type, command]: Array","type: String - Event Handler type","command: Code or String - code that should be executed once the event occurs, by default executed in missionNamespace"],"Return":" Number - The index of the currently added event handler is returned. Indices start at 0 for each unit and increment with each added event handler. (optional)"},"Examples":["_EHkilledIdx = player addEventHandler [\"killed\", {_this exec \"playerKilled.sqs\"}]","this addEventHandler [\"killed\", \"hint format ['Killed by %1',_this select 1]\"]"],"Additional":["","EventHandlers list","addMPEventHandler","removeEventHandler","removeAllEventHandlers"]},{"Name":"addGoggles","Desc":" Create a new item and try to link it into goggles slot. This command doesn't add NVGoggles. Use addItem and assignItem or just linkItem for latter. ","Syn":{"Syntax":" unit addGoggles type ","Params":["unit: Object\n\n","type: String"],"Return":" Nothing "},"Examples":["player addGoggles \"G_Tactical_Clear\";\n","diver addGoggles \"G_Diving\";\n"],"Additional":["goggles","removeGoggles"]},{"Name":"addGroupIcon","Desc":" Add icon to a group. Returns icon ID ","Syn":{"Syntax":" group addGroupIcon properties ","Params":["group: Group -\n\n","properties: Array -"],"Return":" Number "},"Examples":["groupName addGroupIcon [\"b_inf\",[offsetX,ofsetY]]"],"Additional":["clearGroupIcons","getGroupIcon","getGroupIconParams","groupIconSelectable","groupIconsVisible","onGroupIconClick","removeGroupIcon","setGroupIcon","setGroupIconParams","setGroupIconsSelectable","setGroupIconsVisible"]},{"Name":"addHandgunItem","Desc":" Adds item to the weapon cargo space. This is used for infantry weapons. \n\nNote:  ","Syn":{"Syntax":" unit addHandgunItem item ","Params":["unit: Object\n\n","item: String"],"Return":" Nothing "},"Examples":[" player addHandgunItem \"muzzle_snds_L\";\n"],"Additional":["removeHandgunItem","removeAllHandgunItems","addPrimaryWeaponItem","addSecondaryWeaponItem","weaponsItems","handgunItems","primaryWeaponItems","secondaryWeaponItems"]},{"Name":"addHeadgear","Desc":" Creates a headgear item and tries to link it to headgear slot. If slot is occupied with another item, the item in the slot will be replaced. ","Syn":{"Syntax":" unit addHeadgear item ","Params":["unit: Object\n\n","item: String"],"Return":" Nothing "},"Examples":["player addHeadgear \"H_HelmetB\";"],"Additional":["headgear","removeHeadgear"]},{"Name":"addItem","Desc":" Creates new item and tries to add it into inventory. Inventory must have enough space to accomodate new item or command will fail. ","Syn":{"Syntax":" unit addItem item ","Params":["unit: Object\n\n","item: String"],"Return":" Nothing "},"Examples":["bluforUnit addItem \"NVGoggles\";\nbluforUnit assignItem \"NVGoggles\";\nopforUnit addItem \"NVGoggles_OPFOR\";\nopforUnit assignItem \"NVGoggles_OPFOR\";\nindependentUnit addItem \"NVGoggles_INDEP\";\nindependentUnit assignItem \"NVGoggles_INDEP\";"],"Additional":["removeItem","assignItem","unassignItem","assignedItems","linkItem","unlinkItem","removeAllAssignedItems"]},{"Name":"addItemCargo","Desc":" Create new items and store them to the weapon holder.  ","Syn":{"Syntax":" unit addItemCargo [item, count] ","Params":["unit: Object\n\n","[item, count]: Array","item: String","count: Number"],"Return":" Nothing "},"Examples":["rearmTruckOne addItemCargo [\"optic_ARCO\", 10]"],"Additional":["addItemCargoGlobal","clearItemCargo","addMagazineCargo","addMagazineCargoGlobal","addWeaponCargo","addWeaponCargoGlobal","addBackpackCargo","addBackpackCargoGlobal"]},{"Name":"addItemCargoGlobal","Desc":" Create new items and store them to the weapon holder. ","Syn":{"Syntax":" unit addItemCargoGlobal [item, count] ","Params":["unit: Object\n\n","[item, count]: Array","item: String","count: Number"],"Return":" Nothing "},"Examples":["rearmTruckOne addItemCargoGlobal [\"optic_ARCO\", 10]"],"Additional":["addItemCargo","clearItemCargoGlobal","addMagazineCargo","addMagazineCargoGlobal","addWeaponCargo","addWeaponCargoGlobal","addBackpackCargo","addBackpackCargoGlobal"]},{"Name":"addItemPool","Desc":" Adds count items of type name into the weapon pool (used in the campaign to transfer items to the next mission) ","Syn":{"Syntax":" addItemPool [\"itemName\", count] ","Params":["[\"itemName\", count]: Array\n\n","\"itemName\": String - Item name","count: Number - Number of items to add"],"Return":" Nothing "},"Examples":["addItemPool [\"ItemGPS\", 5];"],"Additional":["clearItemPool"]},{"Name":"addItemToBackpack","Desc":" Create new item and store it to soldier's backpack. The item can also be a a weapon or a magazine. ","Syn":{"Syntax":" unit addItemToBackpack item ","Params":["unit: Object\n\n","item: String"],"Return":" Nothing "},"Examples":["player addItemToBackpack \"arifle_MXM_Hamr_pointer_F\";\n","player addItemToBackpack \"itemGPS\";\n"],"Additional":["addItemToUniform","addItemToVest","backpackContainer","firstBackpack","unitBackpack","backpack","backpackCargo","getBackpackCargo","backpackItems","addBackpack","addBackpackCargo","addBackpackCargoGlobal","removeBackpack","clearBackpackCargo","clearBackpackCargoGlobal","clearAllItemsFromBackpack","loadBackpack","backpackSpaceFor","canAddItemToBackpack","removeItemFromBackpack","everyBackpack"]},{"Name":"addItemToUniform","Desc":" Create new item and store it to soldier's uniform. The item can also be a a weapon or a magazine.","Syn":{"Syntax":" unit addItemToUniform item ","Params":["unit: Object\n\n","item: String"],"Return":" Nothing "},"Examples":["player addItemToUniform \"itemGPS\";","player addItemToUniform \"hgun_Rook40_F\";"],"Additional":["removeItemFromUniform","addItemToBackpack","addItemToVest"]},{"Name":"addItemToVest","Desc":" Create new item and store it to soldier's vest. The item can also be a weapon or a magazine.","Syn":{"Syntax":" unit addItemToVest item ","Params":["unit: Object\n\n","item: String"],"Return":" Nothing "},"Examples":["player addItemToVest \"itemGPS\";\n","player addItemToVest \"hgun_Rook40_F\";\n"],"Additional":["removeItemFromVest","addItemToBackpack","addItemToUniform"]},{"Name":"addLiveStats","Desc":" Adds score to the Xbox Live Statistics score for the given unit (or the commander unit of the given vehicle). (Also available in OFPE \u0026 VBS2) ","Syn":{"Syntax":" unit addLiveStats score ","Params":["unit Object\n\n","score Number"],"Return":" Nothing "},"Examples":["player addLiveStats 10"],"Additional":["See also needed"]},{"Name":"addMagazine","Desc":" Add a magazine to a person. Infantry units can only carry a specific number of magazines, once the magazine slots are filled, any further addMagazine commands are ignored.\n\nNote: When you add a new weapon via scripting commands as well as the magazines for it, the addMagazine command has to be given before the addWeapon command, otherwise the weapon won't be loaded. \n","Syn":{"Syntax":" unitName addMagazine magazineName ","Params":["unitName: Object - person to add the magazines to\n\n","magazineName: String - magazine name. See the topic Category:Weapons for reference about possible values."],"Return":" Nothing "},"Examples":["player addMagazine \"M16\";"],"Additional":["addMagazineGlobal","addMagazine_array","addMagazines","addMagazineCargo","addMagazineCargoGlobal","addMagazinePool","addMagazineTurret","removeMagazine","removeMagazines","addWeapon"]},{"Name":"addMagazine_array","Desc":" Adds a magazine to a person with said ammunition count.\n\nNote: When you add a new weapon via scripting commands as well as the magazines for it, the addMagazine command has to be given before the addWeapon command, otherwise the weapon won't be loaded. \n\n\n\n\n\n \n\n In Arma 3 this command accepts global arguments , i.e. you can use it on the server to give remote unit a magazine with limited ammo.\n","Syn":{"Syntax":" unitName addMagazine [magazineName, ammoCount] ","Params":["unitName: Object - person to add the magazine to\n\n","magazineName: String - magazine name. See the topic Category:Weapons for reference about possible values.","ammoCount: Number - number of bullets in the magazine"],"Return":" Nothing "},"Examples":["player addMagazine [\"30Rnd_556x45_STANAG\", 15];"],"Additional":["addMagazine","addMagazineGlobal","addMagazines","addMagazineCargo","addMagazineCargoGlobal","addMagazinePool","addMagazineTurret","removeMagazine","removeMagazines","addWeapon"]},{"Name":"addMagazineCargo","Desc":" Add magazines to the cargo space of vehicles, which can be taken out by infantry units. Once the magazine cargo space is filled up, any further addMagazineCargo commands are ignored. ","Syn":{"Syntax":" vehicleName addMagazineCargo [magazineName, count] ","Params":["vehicleName: Object - vehicle to add the magazines to\n\n","[magazineName, count]: Array","magazineName: String - magazine name. See the topic Category:Weapons for reference about possible values.","count: Number - number of magazines to add"],"Return":" Nothing "},"Examples":["_truck addMagazineCargo [\"M16\", 5];"],"Additional":["addMagazineCargoGlobal","addMagazine","addMagazineGlobal","addMagazine_array","addMagazines","addMagazinePool","addMagazineTurret","clearMagazineCargo","addWeaponCargo","clearWeaponCargo","getMagazineCargo","addItemCargo","addItemCargoGlobal","addMagazineAmmoCargo"]},{"Name":"addMagazineCargoGlobal","Desc":" Add magazines to the cargo space of vehicles, which can be taken out by infantry units.\n\nMP Synchronized ","Syn":{"Syntax":" vehicleName addMagazineCargoGlobal [magazineName, count] ","Params":["vehicleName: Object - vehicle to add the magazines to\n\n","[magazineName, count]: Array","magazineName: String - magazine name. See the topic Category:Weapons for reference about possible values.","count: Number - number of magazines to add"],"Return":" Nothing "},"Examples":["_truck addMagazineCargoGlobal [\"M16\", 5];"],"Additional":["addMagazineCargo","addMagazineGlobal","addMagazine","addMagazine_array","addMagazines","addMagazinePool","addMagazineTurret","clearMagazineCargo","addWeaponCargo","clearWeaponCargo","clearWeaponCargo","addWeaponCargoGlobal","addBackpackCargoGlobal","addItemCargo","addItemCargoGlobal","addMagazineAmmoCargo"]},{"Name":"addMagazineGlobal","Desc":" Adds a magazine to the unit. \n\nNote: You may create invalid combinations by adding more magazines than the free space in unit's inventory allows. When doing so, application behaviour is undefined.  ","Syn":{"Syntax":" unit addMagazineGlobal magazineName ","Params":["unit: Object\n\n","magazineName: String"],"Return":" Nothing "},"Examples":["player addMagazineGlobal \"30Rnd_65x39_caseless_mag\";"],"Additional":["addMagazine","addMagazine_array","addMagazines","addMagazineCargo","addMagazineCargoGlobal","addMagazinePool","addMagazineTurret","addMagazineAmmoCargo"]},{"Name":"addMagazinePool","Desc":" Add magazines to the magazine pool, of which the player may choose in the following mission. Available in campaigns only. ","Syn":{"Syntax":" addMagazinePool [magazineName, count] ","Params":["[magazineName, count]: Array\n\n","magazineName: String - magazine name. See the topic Category:Weapons for reference about possible values.","count: Number - number of magazines to add"],"Return":" Nothing "},"Examples":["addMagazinePool [\"M16\", 20];"],"Additional":["addMagazineGlobal","addMagazine","addMagazine_array","addMagazines","addMagazineCargo","addMagazineCargoGlobal","addMagazineTurret","addWeaponPool","clearMagazinePool","queryMagazinePool","addMagazineAmmoCargo"]},{"Name":"addMagazines","Desc":" Adds multiple magazines to the unit.  ","Syn":{"Syntax":" unit addMagazines [magazineName, count] ","Params":["unit: Object\n\n","[magazineName, count]: Array","magazineName: String","count: Number - Number of magazines."],"Return":" Nothing "},"Examples":["player addMagazines [\"30Rnd_65x39_caseless_mag\", 3];"],"Additional":["addMagazineGlobal","addMagazine","addMagazine_array","addMagazineCargo","addMagazineCargoGlobal","addMagazinePool","addMagazineTurret","addMagazineAmmoCargo"]},{"Name":"addMagazineTurret","Desc":" Adds a magazine to the turret. Use turret path [-1] for driver's turret.\n\nNote: you may create invalid combinations by using this function, for example by adding 20 grenades. When doing so, application behaviour is undefined. ","Syn":{"Syntax":" vehicle addMagazineTurret [magazineName, turretPath]","Params":["vehicle: Object\n\n","[weaponName, turretPath]: Array","magazineName: String","turretPath: Array"],"Return":" Nothing "},"Examples":["_tank addMagazineTurret [\"SmokeLauncherMag\",[0,0]];","_tank addMagazineTurret [\"20Rnd_120mmSABOT_M1A2\",[0]];"],"Additional":["addMagazineGlobal","addMagazine","addMagazine_array","addMagazines","addMagazineCargo","addMagazineCargoGlobal","addMagazinePool","magazinesTurret","removeMagazinesTurret","removeMagazineTurret","weaponsTurret","addMagazineAmmoCargo","addWeaponTurret","removeWeaponTurret","turretLocal"]},{"Name":"addMenu","Desc":"  Adds a new menu button. Priority is optional.  ","Syn":{"Syntax":" map addMenu [text,priority] ","Params":["map: Control -\n\n","[text,priority]: Array -"],"Return":" Number "},"Examples":["example\n"],"Additional":["See also needed"]},{"Name":"addMenuItem","Desc":" Creates a new menu item. Menu can be \"file\" or \"view\",index is index,as returned from addMenu command. priority is optional and determines,where in the menu the item will reside (higher priority items first).  ","Syn":{"Syntax":" map addMenuItem [menu or index,text,command,priority] ","Params":["map: Control -\n\n","[menu or index,text,command,priority]: Array -"],"Return":" Number "},"Examples":["Example needed"],"Additional":["See also needed"]},{"Name":"addMissionEventHandler","Desc":" Adds mission event handler. Every event will create an array named _this, which contains specific information about the particular event. Available mission event handlers:\n\"Loaded\"\n\"Ended\" - Triggered when the mission is successfully ended. In variable _this is stored type of the end (\"end1\",\"end2\", etc.).\n\"Draw3D\" - It seems \"Draw3D\" mission EH is connected to your primary display. It will stop firing as soon as you Alt+Tab from the game and resume when you come back (unless Arma 3 client is launched with -window -nopause params). \"Draw3D\" does not fire at all on a dedicated server.\n\"HandleDisconnect\" - Triggered when player disconnects from the game. Similar to onPlayerDisconnected event but can be stacked and contains the unit occupied by player before disconnect. Must be added on the server and triggers only on the server. For more info: HandleDisconnect ","Syn":{"Syntax":" addMissionEventHandler [type, command] ","Params":["[type, command]: Array\n\n","type: String","command: Code or String - By default executed in missionNamespace"],"Return":" Number - The index of the currently added mission event handler is returned. "},"Examples":["_id = addMissionEventHandler [\"Ended\",{_this exec \"missionEnded.sqs\"}];"],"Additional":["removeMissionEventHandler","removeAllMissionEventHandlers"]},{"Name":"addMPEventHandler","Desc":" The format of handler is [type,command]. Check scripting topic Event handlers for more information. The index of the current handler is returned. ","Syn":{"Syntax":" unitName addMPEventHandler [type, command];  ","Params":["unitName: Object - object to monitor\n\n","type: String - event handler name","command: String or Code - code to execute"],"Return":" Number "},"Examples":[" _index = player addMPEventHandler [\"mpkilled\", {Null = _this execVM \"playerkilled.sqf\";}]; "],"Additional":["EventHandlers list","removeMPEventHandler","removeAllMPEventHandlers"]},{"Name":"addMusicEventHandler","Desc":" Add music track event handler. Returns id of the handler or -1 when failed. ","Syn":{"Syntax":" addMusicEventHandler [type, function] ","Params":["[type, function]: Array\n\n","type: String - \"MusicStart\" or \"MusicStop\"","function: String or Code. Passed params array 0: CfgMusic class name, 1: event handler id"],"Return":" Number - event handler id "},"Examples":["_ehID = addMusicEventHandler [\"MusicStart\", {hint str _this}];","_ehID = addMusicEventHandler [\"MusicStop\", {hint str _this}];"],"Additional":["setMusicEventHandler","playMusic","removeMusicEventHandler","removeAllMusicEventHandlers"]},{"Name":"addPrimaryWeaponItem","Desc":" Adds item to the weapon cargo space. This is used for infantry weapons.  ","Syn":{"Syntax":" unit addPrimaryWeaponItem item ","Params":["unit: Object\n\n","item: String"],"Return":" Nothing "},"Examples":["player addPrimaryWeaponItem \"muzzle_snds_H\";\n"],"Additional":["removePrimaryWeaponItem","removeAllPrimaryWeaponItems","addSecondaryWeaponItem","addHandgunItem","weaponsItems","handgunItems","primaryWeaponItems","secondaryWeaponItems"]},{"Name":"addPublicVariableEventHandler","Desc":" This event handler will detect if a missionNamespace variable (it is attached to) has been broadcast over network with publicVariable, publicVariableClient or publicVariableServer commands and will execute EH code upon detection. Arguments passed to the code in _this array are:\n\n_this select 0: String - broadcast variable name (same variable name EH is attached to)\n_this select 1: Anything - broadcast variable value \n\nPlease note:\n* EH works only in Multiplayer environment.\n* EH will not fire on the machine that executed broadcast command, only on the machines that receive the broadcast.\n* The value of broadcast variable can be exactly the same, it is the actual broadcast that triggers EH not the change in variable.\n\n","Syn":{"Syntax":" varName addPublicVariableEventHandler code ","Params":["varName: String - missionNamespace variable name\n\n","code: Code - By default, the code is executed in missionNamespace"],"Return":" Nothing "},"Examples":["\"publicThis\" addPublicVariableEventHandler {\n\u0009hint format [\n\u0009\u0009\"%1 has been updated to: %2\",\n\u0009\u0009_this select 0,\n\u0009\u0009_this select 1\n\u0009]\n};","Client:\"'^:)123BURP,+=lol\" addPublicVariableEventHandler {hint (\"NUTS are \" + (_this select 1))};\nServer:missionNamespace setVariable [\"'^:)123BURP,+=lol\", \"craZZZZy\"];\npublicVariable \"'^:)123BURP,+=lol\";"],"Additional":["publicVariable","publicVariableClient","publicVariableServer"]},{"Name":"addRating","Desc":" Add a number to the rating of a unit - negative values can be used to reduce the rating.\nThis command is usually used to reward for completed mission objectives. The rating is given at the end of the mission and is automatically adjusted when killing enemies or friendlies. \n\nWhen the rating gets below -2000, the unit's side switches to \"ENEMY\" (sideEnemy) and the unit is attacked by everyone.(see Rating Values)","Syn":{"Syntax":" unitName addRating rating ","Params":["unitName: Object\n\n","rating: Number"],"Return":" Nothing "},"Examples":["player addRating 2000;"],"Additional":["Side relations","Rating Values","rating","rank","setUnitRank","sideEnemy"]},{"Name":"addResources","Desc":" Adds resources to a team member. ","Syn":{"Syntax":" teamMember addResources [resource1, resource2, ...] ","Params":["teamMember: Team Member\n\n","resource1: String","resource2: String"],"Return":" Nothing "},"Examples":["Example needed"],"Additional":["resources","deleteResources"]},{"Name":"addScore","Desc":" Add a number to the score of a unit. This score is shown in multiplayer in the \"I\" (\"P\" in Arma 3) screen. Negative values will remove from the score. Server execution only. ","Syn":{"Syntax":" unit addScore score ","Params":["unit: Object\n\n","score: Number"],"Return":" Nothing "},"Examples":["unit addScore 10;"],"Additional":["score","addScoreSide","scoreSide"]},{"Name":"addScoreSide","Desc":" Adds side score. This is shown in the MP score tab as the total score. MP Only. Server execution only. ","Syn":{"Syntax":" side addScoreSide value ","Params":["side: Side\n\n","value: Number"],"Return":" Nothing "},"Examples":["west addScoreSide 10;"],"Additional":["addScore","score","scoreSide"]},{"Name":"addSecondaryWeaponItem","Desc":" Adds item to the weapon cargo space. This is used for infantry weapons.  ","Syn":{"Syntax":" unit addSecondaryWeaponItem item ","Params":["unit: Object\n\n","item: String"],"Return":" Nothing "},"Examples":["Example needed"],"Additional":["addPrimaryWeaponItem","addHandgunItem","weaponsItems","handgunItems","primaryWeaponItems","secondaryWeaponItems"]},{"Name":"addSwitchableUnit","Desc":" Add a unit into the list of units available for Team Switch. ","Syn":{"Syntax":" addSwitchableUnit unitName","Params":["unitName: Object"],"Return":" Nothing "},"Examples":["addSwitchableUnit player"],"Additional":["Team_Switch","removeSwitchableUnit","switchableUnits"]},{"Name":"addTeamMember","Desc":" Add given member to given team. Effect is local, unless both member and team are local to PC on which command is executed, then effect is global.\n\n The same Team Member can be member of several different teams at the same time.","Syn":{"Syntax":" team addTeamMember member ","Params":["team: Team Member\n\n","member: Team Member"],"Return":" Nothing "},"Examples":["_team addTeamMember _teamMember;"],"Additional":["createTeam","deleteTeam","forEachMemberTeam","removeTeamMember","teamMember","teamName","teams","teamType","forEachMember","forEachMemberAgent"]},{"Name":"addToRemainsCollector","Desc":" Adds an array of vehicles/units to disposal manager for automatic wreck/body removal. The disposal manager follows wreck/body removal values set in description.ext ","Syn":{"Syntax":" addToRemainsCollector remains ","Params":["remains: Array - array of vehicles/units"],"Return":" Nothing "},"Examples":["addToRemainsCollector [unit1, unit2, vehicle1];"],"Additional":["removeFromRemainsCollector","isInRemainsCollector"]},{"Name":"addUniform","Desc":" Create a new uniform and try to link it into uniform slot (given uniform has to be supported by allowedUniforms list of target soldier).  ","Syn":{"Syntax":" unit addUniform type ","Params":["unit: Object\n\n","type: String"],"Return":" Nothing "},"Examples":["_unit addUniform \"U_B_CombatUniform_mcam\";\n"],"Additional":["forceAddUniform","isUniformAllowed","removeUniform","uniform"]},{"Name":"addVehicle","Desc":" Adds a specified vehicle for use by a specified AI led group. The vehicle will be considered as an available vehicle for use by his group. ","Syn":{"Syntax":" groupName addVehicle vehicleName","Params":["groupName: Group\n\n","vehicleName: Object"],"Return":" Nothing "},"Examples":["_grp addVehicle _vehicle"],"Additional":["leaveVehicle"]},{"Name":"addVest","Desc":" Create a new vest and try to link it into vest slot.  ","Syn":{"Syntax":" unit addVest type ","Params":["unit: Object\n\n","type: String"],"Return":" Nothing "},"Examples":["player addVest \"V_TacVest_blk_POLICE\";\n"],"Additional":["removeVest","vest"]},{"Name":"addWaypoint","Desc":" Adds (or inserts when index is given) a new waypoint to a group.\n\nThe waypoint is placed randomly within a circle with the given center and radius.\n\nThe function returns a waypoint with format [group, index].   ","Syn":{"Syntax":" groupName addWaypoint [center, radius, index, name]","Params":["groupName: Group\n\n","center: Position or Object","radius: Number - random waypoint placement within radius from center","index (optional): Number - can be used to insert a waypoint in between existing waypoints","name (optional): String - waypointName"],"Return":" Array - format Waypoint - [Group, index] "},"Examples":["_wp =_grp addWaypoint [position player, 0];"],"Additional":["waypoints","deleteWaypoint","copyWaypoints","move","setCurrentWaypoint","setWaypointBehaviour","setWaypointCombatMode","setWaypointCompletionRadius","setWaypointDescription","setWaypointFormation","setWaypointHousePosition","setWaypointPosition","setWaypointScript","setWaypointSpeed","setWaypointStatements","setWaypointTimeout","setWaypointType","setWaypointVisible","waypointAttachVehicle","waypointAttachedVehicle","setWaypointLoiterRadius","waypointLoiterRadius","setWaypointLoiterType","currentWaypoint","waypointName","waypointSpeed","setWPPos"]},{"Name":"addWeapon","Desc":" Add a weapon to a unit. The unit must be local to the computer where command is executed. For a global version of this command see addWeaponGlobal.\n\nInfantry units can only carry a specific number of weapons, once the weapon slots are filled, any further addWeapon commands are ignored. ","Syn":{"Syntax":" unit addWeapon weapon ","Params":["unit: Object - unit or vehicle to add the weapon to\n\n","weapon: String - weapon class name. See the topic Category:Weapons for reference about possible values."],"Return":" Nothing "},"Examples":["player addMagazine \"30Rnd_556x45_Stanag\";\nplayer addWeapon \"BAF_L85A2_RIS_SUSAT\";","An_2 addMagazine \"100Rnd_762x51_M240\";\nAn_2 addWeapon \"M240_veh\";"],"Additional":["addWeaponGlobal","removeWeapon","removeAllWeapons","addMagazine"]},{"Name":"addWeaponCargo","Desc":" Add weapons to the cargo space of vehicles, which can be taken out by infantry units. Once the weapon cargo space is filled up, any further addWeaponCargo commands are ignored. ","Syn":{"Syntax":" vehicleName addWeaponCargo [weaponName, count] ","Params":["vehicleName: Object - vehicle to add the weapons to\n\n","[weaponName, count]: Array","weaponName: String - weapon name. See the topic Category:Weapons for reference about possible values.","count: Number - number of weapons to add."],"Return":" Nothing "},"Examples":["_truck addWeaponCargo [\"M16\",5]"],"Additional":["addWeaponCargoGlobal","addMagazineCargo","addMagazineCargoGlobal","clearMagazineCargo","clearWeaponCargo","getWeaponCargo","addItemCargo","addItemCargoGlobal","addBackpackCargo","addBackpackCargoGlobal"]},{"Name":"addWeaponCargoGlobal","Desc":" Add weapons to the cargo space of vehicles, which can be taken out by infantry units. \n\nMP Synchronized","Syn":{"Syntax":" vehicleName addWeaponCargoGlobal [weaponName, count] ","Params":["vehicleName: Object - vehicle to add the weapons to\n\n","[weaponName, count]: Array","weaponName: String - weapon name. See the topic Category:Weapons for reference about possible values.","count: Number - number of weapons to add."],"Return":" Nothing "},"Examples":["_truck addWeaponCargoGlobal[\"M16\",5];"],"Additional":["addMagazineCargo","clearMagazineCargo","clearWeaponCargo","addMagazineCargoGlobal","addBackpackCargo","addBackpackCargoGlobal","addItemCargo","addItemCargoGlobal"]},{"Name":"addWeaponGlobal","Desc":" Add a weapon to a unit. Infantry units can only carry weapons in their respective slots (primary, secondary and handgun), the addWeaponGlobal command will replace the weapon currently in a slot with the added weapon if it shares the same slot.\n\nTo make sure the added weapon is loaded and ready, add the magazine first. ","Syn":{"Syntax":" unit addWeaponGlobal weapon ","Params":["unit: Object - unit or vehicle to add the weapon to\n\n","weapon: String - weapon class name"],"Return":" Nothing "},"Examples":["{\n\u0009_x addMagazineGlobal \"Laserbatteries\";\n\u0009_x addWeaponGlobal \"Laserdesignator\";\n} forEach allUnits;","{\n\u0009if (typeOf _x == \"O_Heli_Attack_02_black_F\") then {\n\u0009\u0009_x addMagazineGlobal \"38Rnd_80mm_rockets\";\n\u0009\u0009_x addWeaponGlobal \"rockets_Skyfire\";\n\u0009};\n} forEach vehicles;"],"Additional":["removeWeaponGlobal","addWeapon","addMagazine","addMagazineGlobal"]},{"Name":"addWeaponPool","Desc":" Add weapons to the weapon pool, of which the player may choose in the following mission. Available in campaigns only. ","Syn":{"Syntax":" addWeaponPool [weaponName, count] ","Params":["[weaponName, count]: Array\n\n","weaponName: String - weapon name. See the topic Category:Weapons for reference about possible values.","count: Number - number of weapons to add"],"Return":" Nothing "},"Examples":["addWeaponPool [\"M16\",5];"],"Additional":["addMagazinePool","clearWeaponPool","queryWeaponPool","addMagazineAmmoCargo"]},{"Name":"agent","Desc":" Return a person for a given agent. ","Syn":{"Syntax":" agent teamMember ","Params":["teamMember: Team Member"],"Return":" Object "},"Examples":["Example needed"],"Additional":["agents","createAgent","forEachMemberAgent","isAgent"]},{"Name":"agents","Desc":" Return a list of agents in the current mission. ","Syn":{"Syntax":" agents ","Params":null,"Return":" Array of Team Members"},"Examples":["{agent _x moveTo position player} forEach agents;"],"Additional":["agent","createAgent","isAgent","forEachMemberAgent","entities","allCurators","allGroups","allDead","playableUnits","switchableUnits","vehicles","allUnitsUAV","allDeadMen"]},{"Name":"aimedAtTarget","Desc":" Returns how good the weapon of the vehicle is aimed at the target. ","Syn":{"Syntax":" vehicle aimedAtTarget [target, weapon] ","Params":["vehicle: Object\n\n","[target, weapon]: Array","target: Object","weapon: String - (optional)"],"Return":" Number - 0...1 "},"Examples":[" _aimingQuality = heli aimedAtTarget [target];"," _aimingQuality = heli aimedAtTarget [target,\"M197\"];"],"Additional":["fireAtTarget"]},{"Name":"aimPos","Desc":" Returns the object's (main turret) aiming position. ","Syn":{"Syntax":" aimPos object ","Params":["object: Object"],"Return":" Array - format PositionASL "},"Examples":["aimPos player"],"Additional":["eyePos","getPosASL","weaponDirection"]},{"Name":"airportSide","Desc":" Checks a side of the airport. ID is the number to identify which airport on the island you want to check. \n\nPossible values for sara are:\n\n\n 0 - Paraiso\n\n 1 - Rahmadi\n\n 2 - Pita\n\n 3 - Antigua ","Syn":{"Syntax":" airportSide id ","Params":["id: Number"],"Return":" Side "},"Examples":["airportSide 0"],"Additional":["setAirportSide"]},{"Name":"AISFinishHeal","Desc":" Alternative Injury Simulation (AIS) end state. Used to tell engine that script side healing is done when using \"HandleHeal\" event handler. ","Syn":{"Syntax":" AISFinishHeal [unit, healer, healercanheal] ","Params":["[unit, healer, healercanheal]: Array\n\n","unit: Object - wounded","healer: Object - medic","healercanheal: Boolean"],"Return":" Nothing "},"Examples":["AISFinishHeal [_wounded, _medic, true];"],"Additional":["ArmA_2:_Event_Handlers#HandleHeal","ArmA_3:_Event_Handlers#HandleHeal"]},{"Name":"alive","Desc":" Check if given vehicle/person/building is alive (i.e. not dead or destroyed). ","Syn":{"Syntax":" alive object ","Params":["object: Object to test"],"Return":" Boolean: true when alive, false when dead "},"Examples":["?!(alive player) : exit"],"Additional":["setDamage","damage"]},{"Name":"allCurators","Desc":" Returns list of all curators. ","Syn":{"Syntax":" allCurators ","Params":null,"Return":" Array "},"Examples":["Example needed"],"Additional":["allGroups","allDead","playableUnits","switchableUnits","vehicles","allUnitsUAV","allSites"]},{"Name":"allDead","Desc":" Return a list of all dead units including agents and destroyed vehicles. Dead units may be in vehicles. ","Syn":{"Syntax":" allDead ","Params":null,"Return":" Array "},"Examples":["{ deleteVehicle _x } forEach allDead;","allAlive: _all = allUnits + vehicles;\n{\n\u0009_all pushBack agent _x;\n} forEach (agents - [teamMemberNull]);\nallAlive = _all - allDead;"],"Additional":["allDeadMen","allUnits","allGroups","playableUnits","switchableUnits","units","vehicles","allCurators"]},{"Name":"allDeadMen","Desc":" Return a list of dead units including agents. Dead unit might be inside vehicle.  ","Syn":{"Syntax":" allDeadMen ","Params":null,"Return":" Array "},"Examples":["{ deleteVehicle _x } forEach allDeadMen;\n"],"Additional":["allDead","allUnits","allGroups","playableUnits","switchableUnits","units","vehicles","allCurators"]},{"Name":"allGroups","Desc":" Return a list of all groups. ","Syn":{"Syntax":" allGroups ","Params":null,"Return":" Array "},"Examples":["{(leader _x) sideChat \"Go ! Go ! Go !\"} forEach allGroups"],"Additional":["group","units","allCurators","allDead","playableUnits","switchableUnits","vehicles","allUnitsUAV"]},{"Name":"allMapMarkers","Desc":" Return all markers in map. ","Syn":{"Syntax":" allMapMarkers ","Params":null,"Return":" Array of Strings"},"Examples":["_markers = allMapMarkers;\n\nreturns: [\"marker1\",\"_USER_DEFINED #2/0\"]","{\n  private \"_a\";\n  _a = toArray _x;\n  _a resize 15;\n  if (toString _a == \"_USER_DEFINED #\") then {\n    deleteMarker _x;\n  }\n} forEach allMapMarkers;","if (_someString in allMapMarkers) then {\n  hint (_someString + \" is a valid marker name\");\n};\n"],"Additional":["createMarker","deleteMarker"]},{"Name":"allMines","Desc":"Returns an array of all mines in the mission ","Syn":{"Syntax":" allMines ","Params":null,"Return":" Array "},"Examples":["allMines","(allMines select 0) mineDetectedBy west;"],"Additional":["detectedMines","mineDetectedBy","createMine","mineActive","revealMine","allMissionObjects"]},{"Name":"allMissionObjects","Desc":" Returns all mission objects with given type (or its subtype). ","Syn":{"Syntax":" allMissionObjects type ","Params":["type: String"],"Return":" Array of Objects"},"Examples":["_airObjects = allMissionObjects \"Air\";","{ deleteVehicle _x } forEach (allMissionObjects \"\");","_allMObjects = allMissionObjects \"All\";"],"Additional":["allDead","allGroups","allUnits","entities","vehicles","allMines"]},{"Name":"allow3DMode","Desc":" Allow/dissallow 3D mode.,  ","Syn":{"Syntax":" map allow3DMode bool ","Params":["map: Control -\n\n","bool: Boolean -"],"Return":" Nothing "},"Examples":["Example needed"],"Additional":["See also needed"]},{"Name":"allowCrewInImmobile","Desc":" If true, units can be in a vehicle with broken tracks/wheels. ","Syn":{"Syntax":" vehicle allowCrewInImmobile bool ","Params":["vehicle: Object\n\n","bool: Boolean"],"Return":" Nothing "},"Examples":["_vehicle allowCrewInImmobile true;"],"Additional":["canMove"]},{"Name":"allowCuratorLogicIgnoreAreas","Desc":" Allows curator placing and working with modules outside of edit areas. ","Syn":{"Syntax":" curatorObj allowCuratorLogicIgnoreAreas allow ","Params":["curatorObj: Object - Curator module.\n\n","allow: Boolean"],"Return":" Nothing "},"Examples":["curatorModule allowCuratorLogicIgnoreAreas true"],"Additional":["Curator","addCuratorEditingArea","removeCuratorEditingArea","removeAllCuratorEditingAreas","curatorEditingArea"]},{"Name":"allowDamage","Desc":" Allow or prevent an object being damaged (or injured, or killed).\n\nThe command does not prevent object from taking scripted damage such as setDamage or setHit.\n\n\n\n\n\n !\n\n Command has to be executed where object is local and as long as object does not change locality the effect of this command will be global.\nIf object changes locality, the command needs to be executed again on the new owner's machine to maintain the effect.\n\n ","Syn":{"Syntax":" object allowDamage allow ","Params":["object: Object -\n\n","allow: Boolean -"],"Return":" Nothing "},"Examples":["player allowDamage false;"],"Additional":["setDamage","setHit"]},{"Name":"allowDammage","Desc":" This is an obsolete command in OFP and does nothing.  However, working versions are available for both VBS2 (see allowDammage for VBS1) and ArmA2 (see allowDamage).\n\n","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Operation Flashpoint","1.00"],"Additional":null},{"Name":"allowFileOperations","Desc":" Allow/dissallow file ops (load/save etc). ","Syn":{"Syntax":" map allowFileOperations bool ","Params":["map: Control -\n\n","bool: Boolean -"],"Return":" Nothing "},"Examples":["Example needed"],"Additional":["See also needed"]},{"Name":"allowFleeing","Desc":" Sets the cowardice level (the lack of courage or bravery) of a group or unit.\n\nThe more cowardice a Group or Object has, the sooner it will start fleeing.\n\n0 means maximum courage, while 1 means always fleeing. ","Syn":{"Syntax":" name allowFleeing cowardice ","Params":["name: Object or Group\n\n","cowardice: Number"],"Return":" Nothing "},"Examples":["_group1 allowFleeing 1"],"Additional":["fleeing"]},{"Name":"allowGetIn","Desc":" Set if the units given in the list are allowed to enter vehicles. ","Syn":{"Syntax":" unitArray allowGetIn allow ","Params":["unitArray: Array of units\n\n","allow: Boolean - true allows the units to enter, false denies them"],"Return":" Nothing "},"Examples":["[_soldier1, _soldier2] allowGetIn true;"],"Additional":["orderGetIn"]},{"Name":"allSites","Desc":" Return all sites in map. ","Syn":{"Syntax":" allSites ","Params":null,"Return":" Array "},"Examples":["_allSites = allSites;"],"Additional":["deleteSite","createSite","allGroups","allDead","playableUnits","switchableUnits","vehicles","allUnitsUAV","allCurators","allDeadMen"]},{"Name":"allUnits","Desc":" Return a list of all units (all persons except agents). Dead units and units waiting to respawn are excluded. ","Syn":{"Syntax":" allUnits ","Params":null,"Return":" Array "},"Examples":["{_x setDamage 0.5; _x groupChat \"Braaains\"} forEach allUnits;"],"Additional":["allGroups","allDead","playableUnits","switchableUnits","units","vehicles","allUnitsUAV","allCurators"]},{"Name":"allUnitsUAV","Desc":" Return a list of all UAV units. ","Syn":{"Syntax":" allUnitsUAV ","Params":null,"Return":" Array of Objects "},"Examples":["hint format [\"No. of UAV(s) on the map: %1\", count allUnitsUAV];","{_x setDamage 1} forEach allUnitsUAV;"],"Additional":["allCurators","allGroups","allDead","playableUnits","switchableUnits","vehicles","allDeadMen","agents","showUAVFeed","shownUAVFeed","getConnectedUAV","UAVControl","connectTerminalToUAV","isUAVConnected"]},{"Name":"ammo","Desc":" Check how many rounds are left in the currently loaded magazine of the given weapon. ","Syn":{"Syntax":"  Number = unitName ammo weaponName ","Params":["unitName: Object\n\n","weaponName: String - weapon name. See the topic Category:Weapons for reference about possible values."],"Return":" Number "},"Examples":["_count = player ammo \"M16\"\nreturns 30 in case of a full magazine","_count = player ammo \"M203Muzzle\""],"Additional":["setAmmo","someAmmo","magazines"]},{"Name":"and","Desc":" Returns true only if both conditions are true. In case of the alternative syntax, lazy evaluation is used (if left operand is false, evaluation of the right side is skipped completely). ","Syn":{"Syntax":" Boolean = a and b \u003cbr\u003e(Alternate Syntax exists check Read more)","Params":["a: Boolean - Test condition or variable that returns Boolean.\n\n","b: Boolean - Test condition or variable that returns Boolean."],"Return":" Boolean "},"Examples":["if ((alive player) and (_enemycount == 0)) then {hint \"you win !\"}","if ((count _array \u003e 0) and {(_array select 0) == player}) then {hint \"It works! Without lazy evaluation it would throw an error if array was empty.\"}"],"Additional":["a \u0026\u0026 b","or","Operators"]},{"Name":"animate","Desc":" Process a linear animation on an object. Such animations are only used in user-made addons, they can be defined in the addon's config.cpp. ","Syn":{"Syntax":" objectName animate [animationName, phase] ","Params":["objectName: Object\n\n","[animationName, phase]: Array","animationName: String - name of the animation. This is the class-name of the animation defined in the addon's config.cpp.","phase: Number - range 0 (start point of the animation) to 1 (end point of the animation). The speed, in which the animation is processed, is defined in the addon's config.cpp and cannot be changed during running missions."],"Return":" Nothing "},"Examples":["_building animate [\"maindoor\", 1];"],"Additional":["animationPhase","setFaceAnimation","animateDoor"]},{"Name":"animateDoor","Desc":" Process animation of door on vehicle. Animation is defined in config file. Wanted animation phase is set to phase.  ","Syn":{"Syntax":" object animateDoor [doorname, phase, now] ","Params":["object: Object\n\n","[doorname, phase, now]: Array","doorname: String","phase: Number","now: Boolean (When true and phase is either 0 or 1, door will change phase instantaneously)"],"Return":" Nothing "},"Examples":["heli animateDoor [\"doors1\", 1, false];","Open left front door on Ifrit instantly:ifrit animateDoor [\"Door_LF\", 1, true];"],"Additional":["doorPhase","animate","animationPhase","setFaceAnimation"]},{"Name":"animationPhase","Desc":" Return the phase of the given animation on the given object, which is set by the animate command. ","Syn":{"Syntax":" Number = object animationPhase animationName ","Params":["object: Object - building eg\n\n","animationName: String - name of the animation. This is the class-name of the animation defined in the addon's config.cpp."],"Return":" Number -  \nInteger of range 0 (start point of the animation) to 1 (end point of the animation). "},"Examples":["_building animate [\"maindoor\",1];\nsleep 1;\n_p = _building animationPhase \"maindoor\";\n\nreturns 1 (if the animation speed is \u003c= 2 seconds)"],"Additional":["animate","setFaceAnimation","animateDoor","doorPhase"]},{"Name":"animationState","Desc":" Return the name of a unit's current primary animation. ","Syn":{"Syntax":" String = animationState unitName ","Params":["unitName: Object"],"Return":" String "},"Examples":["_state = animationState player;"],"Additional":["BIS_fnc_ambientAnimGetParams"]},{"Name":"armoryPoints","Desc":" Return the stored value of armory points. ","Syn":{"Syntax":" armoryPoints ","Params":null,"Return":" Number "},"Examples":["myArPt = armoryPoints;"],"Additional":["setArmoryPoints"]},{"Name":"asin","Desc":" Arcsine of a number, result in Degrees. ","Syn":{"Syntax":" Number = asin x ","Params":["x: Number"],"Return":" Number "},"Examples":["_degrees=asin 0.5\nreturns 30"],"Additional":["Math Commands"]},{"Name":"ASLToATL","Desc":" Converts a position from PositionASL to PositionATL ","Syn":{"Syntax":" ASLToATL PositionASL ","Params":null,"Return":" PositionATL "},"Examples":["ASLToATL (getPosASL player) isEqualTo getPosATL player"],"Additional":["ATLToASL","getPos","getPosATL","getPosASL","visiblePosition","visiblePositionASL"]},{"Name":"assert","Desc":" Tests a condition and if the condition is false, displays error on screen (if -showscripterrors enabled) and logs error into .rpt file. It does not interrupt the script execution.\n\nIf script was pre-processed with preprocessFileLineNumbers, it will also show/log the error line number and the file name.\n\n","Syn":{"Syntax":" assert condition ","Params":["condition: Boolean"],"Return":" Boolean - mirrors condition "},"Examples":["assert (1\u003e2); \n\n","Check function params (Faster alternative to BIS_fnc_param)some_func = {\u0009\n\u0009_0 = _this select 0;\n\u0009_1 = _this select 1;\n\u0009_2 = _this select 2;\n\u0009if (!assert (\n\u0009\u0009typeName _0 == \"ARRAY\" \u0026\u0026 \n\u0009\u0009typeName _1 == \"STRING\" \u0026\u0026 \n\u0009\u0009typeName _2 == \"SCALAR\"\n\u0009)) exitWith {/*optional error logging*/};\n\u0009hint \"Alright!\";\n};\n[1,2,3] call some_func; //assert error\n[[1],\"2\",3] call some_func; //Alright!"],"Additional":["try","catch","throw","diag_captureFrame","diag_captureSlowFrame","diag_logSlowFrame"]},{"Name":"assignAsCargo","Desc":" Assign a unit as cargo of a vehicle. Used together with orderGetIn to order a unit to get in as cargo into a specific vehicle. Before usage of this command a subordinate unit hasn't got the option to get into the cargo space of the vehicle. ","Syn":{"Syntax":" unitName assignAsCargo vehicleName","Params":["unitName: Object\n\n","vehicleName: Object"],"Return":" Nothing "},"Examples":["_soldier1 assignAsCargo _truck\n[_soldier1] orderGetIn true"],"Additional":["assignAsDriver","assignAsGunner","assignAsCommander","moveInCargo","moveInCommander","moveInDriver","moveInGunner","moveInTurret","assignedVehicle","unassignVehicle","leaveVehicle"]},{"Name":"assignAsCargoIndex","Desc":" Assigns the character to a specific cargo / passenger index of the given vehicle. ","Syn":{"Syntax":" character assignAsCargoIndex [vehicle, index]","Params":["character: Object - character to assign\n\n","vehicle: Object - vehicle to assign to","index: Number - cargo / passenger index"],"Return":" Boolean "},"Examples":["player assignAsCargoIndex [myHelicopter, 1];"],"Additional":["assignAsCargo","assignAsDriver","assignAsCommander","assignAsGunner","getCargoIndex"]},{"Name":"assignAsCommander","Desc":" Assign a unit as commander of a vehicle. Used together with orderGetIn to order subordinate units to get in as commander of a specific vehicle. Before usage of this command a subordinate unit hasn't got the option to get into the commander place of the vehicle. ","Syn":{"Syntax":" unitName assignAsCommander vehicleName","Params":["unitName: Object\n\n","vehicleName: Object"],"Return":" Nothing "},"Examples":["_soldier1 assignAsCommander _tank\n[_soldier1] orderGetIn true"],"Additional":["assignAsDriver","assignAsGunner","assignAsCargo","moveInCargo","moveInCommander","moveInDriver","moveInGunner","moveInTurret","assignedVehicle","unassignVehicle","leaveVehicle"]},{"Name":"assignAsDriver","Desc":" Assign a unit as driver of a vehicle. Used together with orderGetIn to order subordinate units to get in as driver of a specific vehicle. Before usage of this command a subordinate unit hasn't got the option to get into the driver place of the vehicle. ","Syn":{"Syntax":" unitName assignAsDriver vehicleName","Params":["unitName: Object\n\n","vehicleName: Object"],"Return":" Nothing "},"Examples":["_soldier1 assignAsDriver _tank\n[_soldier1] orderGetIn true"],"Additional":["assignAsCommander","assignAsGunner","assignAsCargo","moveInCargo","moveInCommander","moveInDriver","moveInGunner","moveInTurret","assignedVehicle","unassignVehicle","leaveVehicle"]},{"Name":"assignAsGunner","Desc":" Assign a unit as gunner of a vehicle. Used together with orderGetIn to order subordinate units to get in as gunner of a specific vehicle. Before usage of this command a subordinate unit hasn't got the option to get into the gunner place of the vehicle. ","Syn":{"Syntax":" unitName assignAsGunner vehicleName ","Params":["unitName: Object\n\n","vehicleName: Object"],"Return":" Nothing "},"Examples":["_soldier1 assignAsGunner _tank\n[_soldier1] orderGetIn true"],"Additional":["assignAsCommander","assignAsDriver","assignAsCargo","moveInCargo","moveInCommander","moveInDriver","moveInGunner","moveInTurret","assignedVehicle","unassignVehicle","leaveVehicle"]},{"Name":"assignAsTurret","Desc":" Assigns the soldier to turret.  ","Syn":{"Syntax":" unit assignAsTurret [vehicle, [turretPath]] ","Params":["unit: Object\n\n","[vehicle, turretPath]: Array","vehicle: Object","[turretPath]: Array - Array of numbers."],"Return":" Nothing "},"Examples":["Example needed"],"Additional":["assignedVehicleRole","unassignVehicle","turretUnit","moveInTurret"]},{"Name":"assignCurator","Desc":" Assign player as curator. Two players cannot act as one curator. ","Syn":{"Syntax":" player assignCurator curatorObj ","Params":["player: Object\n\n","curatorObj: Object - Curator module."],"Return":" Nothing "},"Examples":["player assignCurator myCurator;"],"Additional":["Curator","unassignCurator"]},{"Name":"assignedCargo","Desc":" Returns the list of soldiers assigned to the given vehicle as a cargo. ","Syn":{"Syntax":" assignedCargo vehicle ","Params":["vehicle: Object -"],"Return":" Array "},"Examples":["_list = assignedCargo _vehicleName"],"Additional":["assignAsCargo","assignAsGunner","assignAsCommander","assignAsDriver","moveInCargo","moveInGunner","moveInCommander","moveInDriver","assignAsTurret","gunner","commander","driver","moveInTurret","assignedGunner","assignedCommander","assignedDriver"]},{"Name":"assignedCommander","Desc":" Returns the soldier assigned to the given vehicle as a commander. ","Syn":{"Syntax":" assignedCommander vehicle ","Params":["vehicle: Object -"],"Return":" Object "},"Examples":["_commander = assignedCommander vehicleName "],"Additional":["assignAsCommander","assignAsGunner","assignAsTurret","assignAsDriver","moveInCommander","moveInGunner","moveInTurret","moveInDriver","commander","gunner","assignAsCargo","driver","moveInCargo","assignedGunner","assignedCargo","assignedDriver"]},{"Name":"assignedDriver","Desc":" Returns the soldier assigned to the given vehicle as a driver. ","Syn":{"Syntax":" assignedDriver vehicle ","Params":["vehicle: Object -"],"Return":" Object "},"Examples":["_driver= assignedDriver vehicleName "],"Additional":["assignAsDriver","assignAsGunner","assignAsTurret","assignAsCommander","moveInDriver","moveInGunner","moveInTurret","moveInCommander","driver","gunner","moveInCargo","commander","assignAsCargo","assignedGunner","assignedCargo","assignedCommander"]},{"Name":"assignedGunner","Desc":" Returns the soldier assigned to the given vehicle as a gunner. ","Syn":{"Syntax":" assignedGunner vehicle ","Params":["vehicle: Object -"],"Return":" Object "},"Examples":["Example needed"],"Additional":["assignAsGunner","assignAsTurret","assignAsCommander","assignAsDriver","moveInGunner","moveInTurret","moveInCommander","moveInDriver","gunner","GetInTurret","commander","driver","assignAsCargo","moveInCargo","assignedCommander","assignedDriver"]},{"Name":"assignedItems","Desc":" Get array with all assigned items.  ","Syn":{"Syntax":" assignedItems unit ","Params":["unit: Object"],"Return":" Array "},"Examples":[" hint str assignedItems player;"],"Additional":["assignItem","unassignItem","linkItem","unlinkItem","addItem","removeItem","removeAllAssignedItems"]},{"Name":"assignedTarget","Desc":" Return the target assigned to the vehicle.","Syn":{"Syntax":" Object = assignedTarget vehicleName ","Params":["vehicleName: Object"],"Return":" Object "},"Examples":["_target = assignedTarget _T72"],"Additional":["commandTarget","doTarget"]},{"Name":"assignedTeam","Desc":" Returns the team the unit belongs to. Possible values:\n\n\n MAIN (default and white)\n\n RED\n\n GREEN\n\n BLUE\n\n YELLOW ","Syn":{"Syntax":" assignedTeam unitName ","Params":["unitName: Object"],"Return":" String: \"BLUE\" "},"Examples":["_team = assignedTeam player;"],"Additional":["assignTeam"]},{"Name":"assignedVehicle","Desc":" Return the vehicle a unit is assigned to.If no vehicle is assigned objNull is returned. ","Syn":{"Syntax":" Object = assignedVehicle unitName ","Params":["unitName: Object"],"Return":" Object "},"Examples":["_vehicle= assignedVehicle player"],"Additional":["addVehicle","assignAsDriver","assignAsCargo","assignAsCommander","assignAsGunner","unassignVehicle","leaveVehicle"]},{"Name":"assignedVehicleRole","Desc":" Return the role a unit is assigned to within its assigned vehicle.\n\nThe array which is returned contains:\n\n [] - Not assigned to any vehicle\n\n [\"Driver\"] - Assigned as driver\n\n [\"Cargo\"] (or [\"Cargo\", [turret path]] since Arma 3 1.31.127272) - Assigned as cargo\n\n [\"Turret\", [turret path]] - Assigned to a turret\n\n\n\nIf no vehicle role is assigned, an empty array is returned.\n\n","Syn":{"Syntax":" Array = assignedVehicleRole unitName ","Params":["unitName: Object"],"Return":" Array "},"Examples":["_RoleArray = assignedVehicleRole player;","Get weapons available to player at player occupied turret:_weaponsTurret = vehicle player weaponsTurret (assignedVehicleRole player select 1);"],"Additional":["addVehicle","assignedVehicle","unassignVehicle","weaponsTurret","assignAsCargo","assignAsCommander","assignAsDriver","assignAsGunner","assignAsTurret"]},{"Name":"assignItem","Desc":" Assigns existing item from inventory (uniform, vest, backpack) to a correct slot. If the slot is occupied by another item, it gets replaced. ","Syn":{"Syntax":" unit assignItem item ","Params":["unit: Object\n\n","item: String"],"Return":" Nothing "},"Examples":["bluforUnit addItem \"NVGoggles\";\nbluforUnit assignItem \"NVGoggles\";\nopforUnit addItem \"NVGoggles_OPFOR\";\nopforUnit assignItem \"NVGoggles_OPFOR\";\nindependentUnit addItem \"NVGoggles_INDEP\";\nindependentUnit assignItem \"NVGoggles_INDEP\";"],"Additional":["unassignItem","addItem","removeItem","linkItem","unlinkItem","assignedItems","removeAllAssignedItems"]},{"Name":"assignTeam","Desc":" Assigns the unit (in case of a vehicle, its commander) to the given team.\n\nThe possible team values are: \"MAIN\", \"RED\", \"GREEN\", \"BLUE\" and \"YELLOW\". ","Syn":{"Syntax":"  vehicleName assignTeam team ","Params":["vehicleName: Object\n\n","team: String"],"Return":" Nothing "},"Examples":["_soldier2 assignTeam \"RED\""],"Additional":["assignedTeam","dissolveTeam","unassignTeam"]},{"Name":"assignToAirport","Desc":" Not correctly implemented yet, currently it does the same as landAt. As the implementation may get fixed sometime, please do not use this command until then. ","Syn":{"Syntax":" assignToAirport ","Params":null,"Return":"  "},"Examples":["assignToAirport"],"Additional":["See also needed"]},{"Name":"atan","Desc":" ArcTangent of a number, result in Degrees. ","Syn":{"Syntax":" Number = atan x ","Params":["x: Number"],"Return":" Number\n\n"},"Examples":["_degrees = atan 1; //45"],"Additional":["atan2","Math Commands"]},{"Name":"atan2","Desc":" ArcTangent of x/y. Used to determine the angle of a vector [x,y]. Result in Degrees.\n\nNote that this command can handle y being 0, unlike when using atan, and will return 90 ","Syn":{"Syntax":" Number = x atan2 y ","Params":["x: Number\n\n","y: Number"],"Return":" Number \n\n"},"Examples":["_xy = [5,3];\n_degrees = (_xy select 0) atan2 (_xy select 1); //59.0362","Get direction from _obj1 to _obj2:_vd = getPosASL _obj2 vectorDiff getPosASL _obj1;\n_dir = (_vd select 0) atan2 (_vd select 1); //_dir range from -180 to +180 \nif (_dir \u003c 0) then {_dir = 360 + _dir}; //_dir range from 0 to 360"],"Additional":["atan","Math Commands"]},{"Name":"atg","Desc":" Equivalent to atan ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Operation Flashpoint","1.00"],"Additional":null},{"Name":"ATLToASL","Desc":" Converts a position from PositionATL to PositionASL ","Syn":{"Syntax":" ATLToASL PositionATL ","Params":null,"Return":" PositionASL "},"Examples":["ATLToASL (getPosATL player) isEqualTo getPosASL player"],"Additional":["ASLToATL","getPos","getPosATL","getPosASL"]},{"Name":"attachedObject","Desc":" Returns the object a location is attached to. If the location is unattached, then objNull is returned. ","Syn":{"Syntax":" attachedObject location ","Params":["location: Location"],"Return":" Object "},"Examples":["_locAttachedObj = attachedObject myLocation;"],"Additional":["attachObject","attachTo","attachedObjects","attachedTo","waypointAttachVehicle","waypointAttachedVehicle","lightAttachObject","triggerAttachVehicle"]},{"Name":"attachedObjects","Desc":" Returns a list of attached objects. ","Syn":{"Syntax":" attachedObjects obj ","Params":["obj: Object"],"Return":" Array of Objects "},"Examples":["{\n  detach _x;\n} forEach attachedObjects player;","if (count attachedObjects player == 0) then {\n  hint \"There are no objects attached to player\";\n};"],"Additional":["attachObject","attachTo","attachedTo","waypointAttachVehicle","waypointAttachedVehicle","lightAttachObject","triggerAttachVehicle","attachedObject","detach"]},{"Name":"attachedTo","Desc":" Returns the object it is attached to.\nReturns objNull if not attached to anything.\n  ","Syn":{"Syntax":" attachedTo object ","Params":["object: Object - child object"],"Return":" Object - parent object "},"Examples":["if (isNull attachedTo _obj1) then {\n  hint \"_obj1 is not attached to anything.\";\n};"],"Additional":["attachObject","attachTo","attachedObjects","waypointAttachVehicle","waypointAttachedVehicle","lightAttachObject","triggerAttachVehicle","attachedObject","detach"]},{"Name":"attachObject","Desc":" Attaches a location to the specified object. To detach a location, attach it to objNull.","Syn":{"Syntax":" location attachObject object ","Params":["location: Location\n\n","object: Object"],"Return":" Nothing "},"Examples":["myLocation attachObject player;"],"Additional":["attachedObject","createLocation"]},{"Name":"attachTo","Desc":"Attaches an object to another object. The offset is applied to the object center unless a memory point is provided. If no offset is specified, the offset used will be the current relative positioning of objects against each other. ","Syn":{"Syntax":"Object attachTo [TObject, Offset, MemPoint] ","Params":["Object: Object or player\n\n","TObject: Object or player","Offset: Array - format Position - (optional)","MemPoint: String - (optional), see ArmA: Selection Translations for czech selections names"],"Return":"Nothing "},"Examples":["player attachTo [car, [0, 0, 1] ]; ","player attachTo [tank, [0, -1, 0], \"Usti hlavne\"]; ","Automatic offset:\nammoCrate attachTo [player];","To set orientation of attached object use setVectorDirAndUp command:\n_expl1 = \"DemoCharge_Remote_Ammo\" createVehicle position player;\n_expl1 attachTo [player, [-0.1, 0.1, 0.15], \"Pelvis\"];\n_expl1 setVectorDirAndUp [ [0.5, 0.5, 0], [-0.5, 0.5, 0] ];\n_expl2 = \"DemoCharge_Remote_Ammo\" createVehicle position player;\n_expl2 attachTo [player, [0, 0.15, 0.15], \"Pelvis\"];\n_expl2 setVectorDirAndUp [ [1, 0, 0], [0, 1, 0] ];\n_expl3 = \"DemoCharge_Remote_Ammo\" createVehicle position player;\n_expl3 attachTo [player, [0.1, 0.1, 0.15], \"Pelvis\"];\n_expl3 setVectorDirAndUp [ [0.5, -0.5, 0], [0.5, 0.5, 0] ]; \n\n"],"Additional":["attachObject","attachedObjects","attachedTo","waypointAttachVehicle","waypointAttachedVehicle","lightAttachObject","triggerAttachVehicle","attachedObject","detach","setVectorDir","setVectorUp","setVectorDirAndUp","modelToWorld"]},{"Name":"attackEnabled","Desc":" Return whether a group's leader can issue attack commands to soldiers under his command. ","Syn":{"Syntax":" Boolean = attackEnabled name ","Params":["name: Object or Group"],"Return":" Boolean "},"Examples":["if (not attackEnabled _soldier) then {_soldier setCombatMode \"Careless\"} "],"Additional":["enableAttack"]},{"Name":"backpack","Desc":" Returns a class of a backpack.  ","Syn":{"Syntax":" backpack unit ","Params":["unit: Object"],"Return":" String "},"Examples":["Example needed"],"Additional":["backpackContainer","firstBackpack","unitBackpack","backpackCargo","getBackpackCargo","backpackItems","addBackpack","addBackpackCargo","addBackpackCargoGlobal","removeBackpack","clearBackpackCargo","clearBackpackCargoGlobal","clearAllItemsFromBackpack","loadBackpack","backpackSpaceFor","canAddItemToBackpack","addItemToBackpack","removeItemFromBackpack","everyBackpack"]},{"Name":"backpackCargo","Desc":" Get array with backpacks from ammo box (or any general weapon holder container).  ","Syn":{"Syntax":" backpackCargo box ","Params":["box: Object"],"Return":" Array - Format: [\"BackpackType1\",\"BackpackType1\",\"BackpackType2\"...]"},"Examples":["hint str backpackCargo vehicle player;"],"Additional":["backpackContainer","firstBackpack","unitBackpack","backpack","getBackpackCargo","backpackItems","addBackpack","addBackpackCargo","addBackpackCargoGlobal","removeBackpack","clearBackpackCargo","clearBackpackCargoGlobal","clearAllItemsFromBackpack","loadBackpack","backpackSpaceFor","canAddItemToBackpack","addItemToBackpack","removeItemFromBackpack","everyBackpack"]},{"Name":"backpackContainer","Desc":" Returns a cargo container of a unit's backpack. ","Syn":{"Syntax":" backpackContainer unit ","Params":["unit: Object - a soldier"],"Return":" Object - cargo container or \u003cNULL-object\u003e  "},"Examples":["hint str backpackContainer player; //1a5f7900# 163944: backpack_fast.p3d\n","hint str getMagazineCargo backpackContainer player;\n\n[\n\u0009[\n\u0009\u0009\"APERSBoundingMine_Range_Mag\",\n\u0009\u0009\"ClaymoreDirectionalMine_Remote_Mag\",\n\u0009\u0009\"SLAMDirectionalMine_Wire_Mag\",\n\u0009\u0009\"DemoCharge_Remote_Mag\"\n\u0009],[\n\u0009\u00093,\n\u0009\u00092,\n\u0009\u00092,\n\u0009\u00091\n\u0009]\n]","(backpackContainer player) addWeaponCargo [ weapons player select 0,1]\n\n"],"Additional":["firstBackpack","unitBackpack","backpack","backpackCargo","getBackpackCargo","backpackItems","addBackpack","addBackpackCargo","addBackpackCargoGlobal","removeBackpack","clearBackpackCargo","clearBackpackCargoGlobal","clearAllItemsFromBackpack","loadBackpack","backpackSpaceFor","canAddItemToBackpack","addItemToBackpack","removeItemFromBackpack","everyBackpack","uniformContainer","vestContainer","everyContainer","getChosenCont"]},{"Name":"backpackItems","Desc":" Get array with all items (of any kind, even weapons) in backpack of the given unit.  ","Syn":{"Syntax":" backpackItems unit ","Params":["unit: Object"],"Return":" Array "},"Examples":["backpackItems player;\n\n[\n\u0009\"hgun_P07_F\",\n\u0009\"Titan_AT\"\n]"],"Additional":["uniformItems","vestItems","backpackContainer","firstBackpack","unitBackpack","backpack","backpackCargo","getBackpackCargo","addBackpack","addBackpackCargo","addBackpackCargoGlobal","removeBackpack","clearBackpackCargo","clearBackpackCargoGlobal","clearAllItemsFromBackpack","loadBackpack","backpackSpaceFor","canAddItemToBackpack","addItemToBackpack","removeItemFromBackpack","everyBackpack"]},{"Name":"backpackMagazines","Desc":"  Get array with all magazines from backpack of the given unit. ","Syn":{"Syntax":" backpackMagazines unit ","Params":["unit : Object"],"Return":" Array "},"Examples":["backpackMagazines player;\n\n[\n\u0009\"Titan AT Missile(1/1)[id/cr:16/0](2x)\"\n]"],"Additional":["uniformMagazines","vestMagazines","soldierMagazines"]},{"Name":"backpackSpaceFor","Desc":" Returns how much space is in backpack for given weapon or magazine ","Syn":{"Syntax":" result = backpack backpackSpaceFor weaponName","Params":["backpack: Object\n\n","weaponName: String"],"Return":" Array "},"Examples":["(backpack player) backpackSpaceFor \"m16\"; // [weapons, magazines]"],"Additional":["backpackContainer","firstBackpack","unitBackpack","backpack","backpackCargo","getBackpackCargo","backpackItems","addBackpack","addBackpackCargo","addBackpackCargoGlobal","removeBackpack","clearBackpackCargo","clearBackpackCargoGlobal","clearAllItemsFromBackpack","loadBackpack","canAddItemToBackpack","addItemToBackpack","removeItemFromBackpack","everyBackpack"]},{"Name":"behaviour","Desc":" Return the behaviour of a unit. ","Syn":{"Syntax":" String = behaviour unitName ","Params":["unitName: Object"],"Return":" String -  \nOne of \"CARELESS\", \"SAFE\", \"AWARE\", \"COMBAT\" and \"STEALTH\". "},"Examples":["_soldier setBehaviour \"CARELESS\"\n_b = behaviour _soldier \nreturns \"CARELESS\""],"Additional":["behaviour description","AIBehaviour","setBehaviour","setWaypointBehaviour","combatMode","setCombatMode","skill","setSkill array","CfgAISkill"]},{"Name":"benchmark","Desc":" Returns the value of \"3D Performance\" in OFP Preferences (flashpoint.cfg). This can be used to estimate the computer performance to adapt CPU and GPU demanding settings like view distance dynamically in missions. ","Syn":{"Syntax":" Number = benchmark ","Params":null,"Return":" Number "},"Examples":["? (benchmark\u003e2000) : setViewDistance 2000"],"Additional":["See also needed"]},{"Name":"binocular","Desc":" Returns class name of currently used binocular weapon.  ","Syn":{"Syntax":" binocular unit ","Params":["unit: Object"],"Return":" String "},"Examples":["_binocs = binocular player; //Rangefinder"],"Additional":["headgear","goggles","hmd"]},{"Name":"blufor","Desc":" Pre-defined variable for the blufor side.\nAlias for west. ","Syn":{"Syntax":" blufor ","Params":null,"Return":" Side "},"Examples":["if (side player == blufor) then {\n    hint \"BLUFOR\";\n};\n"],"Additional":["side","civilian","east","independent","opfor","resistance","west"]},{"Name":"boundingBox","Desc":" Returns a bounding box of given object in model coordinate space.  ","Syn":{"Syntax":" Array = boundingBox model ","Params":["model : Object"],"Return":" Array - An array with the extreme points of the model. Format: [[minX, minY, minZ], [maxX, maxY, maxZ]]\n\n  "},"Examples":["_box = boundingBox _abrams"],"Additional":["sizeOf","boundingBoxReal","boundingCenter"]},{"Name":"boundingBoxReal","Desc":" Returns a bounding box of given object in model coordinates space. This command is similar to boundingBox but gives more precise measurements. ","Syn":{"Syntax":" boundingBoxReal obj ","Params":["obj: Object"],"Return":" Array - An array with the extreme points of the model. Format [[x1,y1,z1],[x2,y2,z2]]. \n\n"},"Examples":["_bbr = boundingBoxReal vehicle player;\n_p1 = _bbr select 0;\n_p2 = _bbr select 1;\n_maxWidth = abs ((_p2 select 0) - (_p1 select 0));\n_maxLength = abs ((_p2 select 1) - (_p1 select 1));\n_maxHeight = abs ((_p2 select 2) - (_p1 select 2));\n"],"Additional":["boundingBox","sizeOf","boundingCenter"]},{"Name":"boundingCenter","Desc":" Returns the position of original (loaded) center of object in model coordinates. The result is in format [x,z,y] ","Syn":{"Syntax":" boundingCenter object ","Params":["object: Object -"],"Return":" Array "},"Examples":["_center = boundingCenter TruckOne"],"Additional":["boundingBox","sizeOf","boundingBoxReal"]},{"Name":"breakOut","Desc":" Breaks block out of scope named name. Nil is returned.\n\nScope name can be assigned using scopeName command. ","Syn":{"Syntax":" breakOut name ","Params":["name: String"],"Return":" Nothing "},"Examples":["scopeName \"main\";\nwhile {true} do {\n\u0009scopeName \"loop1\";\n\u0009while {true} do {\n\u0009\u0009scopeName \"loop2\";\n\u0009\u0009if (condition1) then {breakTo \"main\"}; // Breaks all scopes and return to \"main\"\n\u0009\u0009if (condition2) then {breakOut \"loop2\"}; // Breaks scope named \"loop2\"\n\u0009\u0009sleep 1;\n\u0009};\n\u0009sleep 1;\n};\n"],"Additional":["scopeName","breakTo","exitWith"]},{"Name":"breakTo","Desc":" Breaks block to scope named name. Nil is returned.\n\nScope name can be assigned using scopeName command. ","Syn":{"Syntax":" breakTo name ","Params":["name: String"],"Return":" Nothing "},"Examples":["scopeName \"main\";\nwhile {true} do {\n\u0009scopeName \"loop1\";\n\u0009while {true} do {\n\u0009\u0009scopeName \"loop2\";\n\u0009\u0009if (condition1) then {breakTo \"main\"}; // Breaks all scopes and return to \"main\"\n\u0009\u0009if (condition2) then {breakOut \"loop2\"}; // Breaks scope named \"loop2\"\n\u0009\u0009sleep 1;\n\u0009};\n\u0009sleep 1;\n};\n"],"Additional":["scopeName","breakOut","exitWith"]},{"Name":"briefingName","Desc":" Returns the name of the current briefing.  ","Syn":{"Syntax":" briefingName ","Params":null,"Return":" String "},"Examples":["Example needed"],"Additional":["See also needed"]},{"Name":"buildingExit","Desc":" Returns the given indexed exit in a building. The returned value is in format Position. ","Syn":{"Syntax":" building buildingExit index ","Params":["building: Object\n\n","index: Number"],"Return":" Array - format Position "},"Examples":["_building buildingExit 0"],"Additional":["buildingPos","BIS_fnc_buildingPositions"]},{"Name":"buildingPos","Desc":" Returns the ATL position of a given indexed position in a building\n\nThe index is 0-based (i.e. the first possible position would be 0. So if a building has 5 positions listed in the editor, 4 would be the highest position index usable with this command). \nCommand will return [0,0,0] if buildingPos with given index is non-existent. \n","Syn":{"Syntax":" building buildingPos index ","Params":["building: Object\n\n","index: Number"],"Return":" Array "},"Examples":["_soldier setPosATL (_house1 buildingPos 2);"],"Additional":["nearestBuilding","nearestObject","nearestObjects","nearObjects","buildingExit","position","setPos","BIS_fnc_buildingPositions"]},{"Name":"buttonAction","Desc":" Return the action assigned to a control of the currently active user dialog. Can be used for buttons and active texts. Read Dialog Control for more information about user dialogs and controls. ","Syn":{"Syntax":" buttonAction idc \u003cbr\u003e(Alternate Syntax exists check Read more)","Params":["idc: Number. index of button"],"Return":" String "},"Examples":["buttonSetAction [100, {player exec \"reply.sqs\"}]\n_action = buttonAction 100\nreturns {player exec \"reply.sqs\"}"],"Additional":["buttonSetAction","ctrlActivate"]},{"Name":"buttonSetAction","Desc":" Set the action of a control of the currently active user dialog. Can be used for buttons and active texts. See Dialog Control for more information about user dialogs. ","Syn":{"Syntax":" buttonSetAction [idc, action] \u003cbr\u003e(Alternate Syntax exists check Read more)","Params":["[idc, action]: Array\n\n","idc: Number - control ID","action: String - code body that should be executed when the button/active text is clicked"],"Return":" Nothing "},"Examples":["buttonSetAction [100, \"player exec \"\"reply.sqs\"\"\"]"],"Additional":["buttonAction","ctrlActivate"]},{"Name":"cadetMode","Desc":" Returns if the player is currently playing in cadet or veteran mode. ","Syn":{"Syntax":" Boolean = cadetMode ","Params":null,"Return":" Boolean -  \ntrue when playing in cadet mode, false when playing in veteran mode "},"Examples":["? (cadetMode) : _AIsoldier setSkill 0.1"],"Additional":["See also needed"]},{"Name":"call","Desc":" Executes the function string.\n\nThe argument(s) (if any) are passed as _this. (argument(s) are passed in an array).\n\nTo execute a sleep function in the called code, execute it with spawn instead. ","Syn":{"Syntax":" argument(s) call body ","Params":["argument(s): Any Value - Optional. Argument that is passed to the function in the \"_this\" variable.\n\n","body: Code - A function body provided directly 'inline' or\nthe String returned from the commands loadFile or preprocessFile."],"Return":" Anything -  \nThe last value given in the function is returned. See the topic Function for more information. "},"Examples":["call {\"x = 3\"}","Operation Flashpoint syntax:\n_n = 3;call format [{var%1 = 0},_n];\nArmed Assault syntax:\n_n = 3;call compile format [\"var%1 = 0\",_n];\nresult of both syntaxes is var3 = 0","Operation Flashpoint syntax:\n_fAdd = loadFile \"add.sqf\"\n[1,2] call _fAdd \nArmed Assault syntax:\n_fAdd = compile loadFile \"add.sqf\"\n_result = [1,2] call _fAdd"],"Additional":["spawn","compile","preprocessFile"]},{"Name":"callExtension","Desc":" Execute an extension function. ","Syn":{"Syntax":" extension callExtension functionWithArguments ","Params":["extension: String\n\n","functionWithArguments: String"],"Return":" String "},"Examples":["handle = \"pipes\" callExtension \"openPipe(pipe)\";"],"Additional":["extension","call"]},{"Name":"camCommand","Desc":" Executes a command on the given camera / actor object.\n\nThe \"manual on\" and \"manual off\" commands are recognized for all types.\n\nFor the \"camera\" type, the following commands can be used: \"inertia on\" and \"inertia off\".\n\nFor the \"seagull\" type it's one of: \"landed\" and \"airborne\" these control if they land or fly.\n\nWhen you execute camCommand \"landed\" on a flying seagull, it will land and sit on the floor until you call camCommand \"airborne\".\n\nThe camCommand changes are conducted immediately, the command doesn't wait for camCommit. ","Syn":{"Syntax":" camera camCommand command ","Params":["camera: Object - object of type \"camera\" or \"seagull\"\n\n","command: String - one of \"manual on\", \"manual off\", \"inertia on\", \"inertia off\", \"landed\" and \"airborne\" corresponding to the description above."],"Return":" Nothing "},"Examples":["_camera camCommand \"manual on\";"],"Additional":["See also needed"]},{"Name":"camCommit","Desc":" Smoothly conduct the changes that were assigned to a camera within the given time. If the time is set to zero, the changes are done immediately. ","Syn":{"Syntax":" camera camCommit time ","Params":["camera: Object - object of type \"camera\"\n\n","time: Number - time in seconds during which the changes shall be done"],"Return":" Nothing "},"Examples":["SQS; create a camera object\n_cam = \"camera\" camCreate [5600,4800,10]\n_cam camSetTarget player\n_cam cameraEffect [\"internal\", \"BACK\"]\n_cam camCommit 0\n\n; smoothly move the camera to its new position in 6 seconds\n_cam camSetPos [5680,4720,20]\n_cam camCommit 6\n@camCommitted _cam\n\n; proceed","SQFprivate \"_cam\";\n\ncomment \"create a camera object\";\n_cam = \"camera\" camCreate [position player select 0, position player select 1, 2];\n_cam camSetTarget player;\n_cam cameraEffect [\"internal\", \"BACK\"];\n_cam camCommit 0;\n\ncomment \"smoothly move the camera to its new position in 6 seconds\";\n_cam camSetPos [position player select 0, (position player select 1) + 10, 20];\n_cam camCommit 6;\nwaitUntil { camCommitted _cam; };"],"Additional":["camCommitted"]},{"Name":"camCommitPrepared","Desc":" Smoothly conduct the changes that were assigned to a camera within the given time. If the time is set to zero, the changes are done immediately. ","Syn":{"Syntax":" camera camCommitPrepared time ","Params":["camera: Object - object of type \"camera\"\n\n","time: Number - time in seconds during which the changes shall be done"],"Return":" Nothing "},"Examples":["//create a camera object\n_cam = \"camera\" camCreate [5600,4800,10];\n_cam camPrepareTarget player;\n_cam cameraEffect [\"internal\", \"BACK\"];\n_cam camCommitPrepared 0;\n//smoothly move the camera to its new position in 6 seconds.\n_cam camPreparePos [5680,4720,20];\n_cam camCommitPrepared 6;\nwaitUntil {camCommitted _cam};\n//proceed"],"Additional":["camCommit"]},{"Name":"camCommitted","Desc":" Checks if the conduction of the last camCommit call already finished. ","Syn":{"Syntax":" Boolean = camCommitted camera ","Params":["camera: Object - object of type \"camera\""],"Return":" Boolean -  \ntrue if the last camCommit already finished, false if not "},"Examples":["; create a camera object\n_cam = \"camera\" camCreate [5600,4800,10]\n_cam camSetTarget player\n_cam cameraEffect [\"internal\", \"BACK\"]\n_cam camCommit 0\n\n; smoothly move the camera to its new position in 6 seconds\n_cam camSetPos [5680,4720,20]\n_cam camCommit 6\n@camCommitted _cam\n\n; proceed"],"Additional":["camCommit"]},{"Name":"camConstuctionSetParams","Desc":" Sets construction camera parameters. ","Syn":{"Syntax":" camera camConstuctionSetParams [[x,y,z], radius, max above land] ","Params":["camera: Object\n\n","[[x,y,z], radius, max above land]: Array","[x,y,z]: Position","radius: Number","max above land: Number"],"Return":" Nothing "},"Examples":["_camera camConstuctionSetParams [getPos player, 50, 20];"],"Additional":["See also needed"]},{"Name":"camCreate","Desc":" Create a camera or a seagull object on the given position. Also other objects can be created this way, but vehicles created with camCreate cannot be entered. Any units created with camCreate will remain static. With difference to createVehicle, objects are created without consideration of the collision detection with surrounding objects, thus the objects are spawned exactly at the given position.camCreate is conducted immediately, the command doesn't wait for camCommit. ","Syn":{"Syntax":" Object = type camCreate position","Params":["type: String - either \"camera\", \"seagull\" or any other class name of OFP vehicles.\n\n","position: Array - format Position - position to create the object at"],"Return":" Object -  \nThe newly created object is returned. "},"Examples":["_cam = \"camera\" camCreate (position player)"],"Additional":["camDestroy","createVehicle","createUnit"]},{"Name":"camDestroy","Desc":" Destroy an object created with camCreate.camDestroy is conducted immediately, the command doesn't wait for camCommit. ","Syn":{"Syntax":" camDestroy object ","Params":["object: Object"],"Return":" Nothing "},"Examples":["camDestroy _cam;","\nplayer cameraEffect [\"terminate\",\"back\"];\ncamDestroy _cam;\n"],"Additional":["camCreate","cameraEffect"]},{"Name":"cameraEffect","Desc":" Switch to the given camera or object with the given effect. If you want to switch the screen directly to the first-person, aiming, third-person or group view of an object, use switchCamera instead. The effect type \"Terminate\" is used to exit the current camera view and switch back to the player's view. Does not need camCommit.","Syn":{"Syntax":" camera cameraEffect [name, position, rtt] ","Params":["camera: Object - object of type \"camera\"\n\n","[name, position]: Array","name: String - the effect type. One of \"Internal\", \"External\", \"Fixed\", \"FixedWithZoom\" and \"Terminate\"","position: String - position of the effect. One of \"TOP\", \"LEFT\", \"RIGHT\", \"FRONT\" and \"BACK\" (\"BACK\" is normally used)","rtt: String - (optional) Render To Texture surface reference"],"Return":" Nothing "},"Examples":["_cam cameraEffect [\"internal\", \"BACK\"];","_cam cameraEffect [\"internal\", \"back\", \"rendersurface\"];"],"Additional":["switchCamera","setCameraEffect","cameraView","cameraOn","setPiPEffect"]},{"Name":"cameraEffectEnableHUD","Desc":" Enable / disable showing of in-game UI during currently active camera effect. ","Syn":{"Syntax":" cameraEffectEnableHUD enable ","Params":["enable: Boolean"],"Return":" Nothing "},"Examples":["cameraEffectEnableHUD true;"],"Additional":["See also needed"]},{"Name":"cameraInterest","Desc":" Return camera interest for given entity, as set by setCameraInterest, or as autodetected.","Syn":{"Syntax":" Number = cameraInterest entity ","Params":["entity: Object"],"Return":" Number "},"Examples":["Example needed"],"Additional":["setCameraInterest"]},{"Name":"cameraOn","Desc":" Returns the vehicle to which the camera is attached. ","Syn":{"Syntax":" Object = cameraOn ","Params":null,"Return":" Object "},"Examples":["Example needed"],"Additional":["switchCamera","cameraView","cameraEffect"]},{"Name":"cameraView","Desc":" Returns mode of active camera view. Mode is one of: \n\n \"INTERNAL\" (1st person)\n\n \"EXTERNAL\" (3rd person)\n\n \"GUNNER\" (optics / sights)\n\n \"GROUP\" (commander view) ","Syn":{"Syntax":" cameraView ","Params":null,"Return":" String "},"Examples":["if (cameraOn == _vehicle \u0026\u0026 cameraView == \"External\") then\n{\n  _vehicle switchCamera \"Internal\";\n};"],"Additional":["switchCamera","cameraOn","cameraEffect"]},{"Name":"campaignConfigFile","Desc":" Return root of campaign description.ext entries hierarchy. ","Syn":{"Syntax":" Config = campaignConfigFile ","Params":null,"Return":" Config "},"Examples":["Example needed"],"Additional":["configFile","missionConfigFile","config/name","config \u003e\u003e name","configName","count","getArray","getText","getNumber","inheritsFrom","isArray","isClass","isNumber","isText","select"]},{"Name":"camPreload","Desc":" Preload the scene for the prepared camera. Time gives timeout, zero means no (infinite) timeout. ","Syn":{"Syntax":" camera camPreload time ","Params":["camera: Object\n\n","time: Number"],"Return":" Nothing "},"Examples":[" _camera camPreload 5 "],"Additional":["camPreloaded","preloadCamera"]},{"Name":"camPreloaded","Desc":" Checks whether the camera has finished preloading. ","Syn":{"Syntax":" Boolean = camPreloaded camera ","Params":["camera: Object"],"Return":" Boolean "},"Examples":[" ?(camPreloaded _camera) : exit "],"Additional":["See also needed"]},{"Name":"camPrepareBank","Desc":" Prepares the camera bank angle. ","Syn":{"Syntax":" camera camPrepareBank bank ","Params":["camera: Object\n\n","bank: Number"],"Return":" Nothing "},"Examples":[" _camera camPrepareBank -0.1 "],"Additional":["camPreload","camCommitPrepared"]},{"Name":"camPrepareDir","Desc":" Prepares the camera heading. ","Syn":{"Syntax":" camera camPrepareDir direction ","Params":["camera: Object\n\n","direction: Number"],"Return":" Nothing "},"Examples":[" _camera camPrepareDir 150 "],"Additional":["camPreload","camCommitPrepared"]},{"Name":"camPrepareDive","Desc":" Prepares the camera dive angle. ","Syn":{"Syntax":" camera camPrepareDive dive ","Params":["camera: Object\n\n","dive: Number"],"Return":" Nothing "},"Examples":[" _camera camPrepareDive -0.1 "],"Additional":["camPreload","camCommitPrepared"]},{"Name":"camPrepareFocus","Desc":" focusRange is in format [distance,blur]. Prepares the camera focus blur.\n\n[-1,1] will reset default values (auto focusing), [-1,-1] will disable postprocessing (all is focused). ","Syn":{"Syntax":" camera camPrepareFocus focusRange ","Params":["camera: Object\n\n","focusRange: Array"],"Return":" Nothing "},"Examples":[" _camera camPrepareFocus [50, 1] "],"Additional":["camPreload","camCommitPrepared","camSetFocus"]},{"Name":"camPrepareFov","Desc":" Prepares the camera field of view (zoom). The default zoom level is 0.7, 0.01 is the nearest and 2 the furthest zoom value. The angle of the field of view is atan(FOV)*2 radians when in 4:3 aspect ratio. Needs the call of camCommitPrepared to be conducted. ","Syn":{"Syntax":" camera camPrepareFov fieldOfView ","Params":["camera: Object\n\n","fieldOfView: Number"],"Return":" Nothing "},"Examples":[" _camera camPrepareFov 0.1   "],"Additional":["camPreload","camCommitPrepared"]},{"Name":"camPrepareFovRange","Desc":" Prepares the camera field of view range for auto zooming. ","Syn":{"Syntax":" camera camPrepareFovRange fovRange ","Params":["camera: Object\n\n","fovRange: Array"],"Return":" Nothing "},"Examples":[" _camera camPrepareFovRange [0.1, 0.5]   "],"Additional":["camPreload","camCommitPrepared"]},{"Name":"camPreparePos","Desc":" Prepares the camera position (format Position). ","Syn":{"Syntax":" camera camPreparePos position ","Params":["camera: Object\n\n","position: Array - format Position"],"Return":" Nothing "},"Examples":[" _camera camPreparePos getPos player "],"Additional":["camPreload","camCommitPrepared"]},{"Name":"camPrepareRelPos","Desc":" Prepares the camera position relative to the current position of the currect target (see camPrepareTarget). ","Syn":{"Syntax":" camera camPrepareRelPos position ","Params":["camera: Object\n\n","position: Array - format (Position)"],"Return":" Nothing "},"Examples":[" _camera camPrepareRelPos [10,5,-2]   "],"Additional":["camPreload","camCommitPrepared"]},{"Name":"camPrepareTarget","Desc":" Prepares the camera target to a position or to a target. ","Syn":{"Syntax":" camera camPrepareTarget position \u003cbr\u003e(Alternate Syntax exists check Read more)","Params":["camera: Object - object of type \"camera\"\n\n","position: Array - format Position,  target location"],"Return":" Nothing "},"Examples":["_camera camPrepareTarget getPos player ","_camera camPrepareTarget player "],"Additional":["camPreload","camCommitPrepared"]},{"Name":"camSetBank","Desc":" Set camera bank angle.\n\nDoes not commit changes. ","Syn":{"Syntax":" camera camSetBank bank ","Params":["camera: Object\n\n","bank: Number"],"Return":" Nothing "},"Examples":["_camera camSetBank -0.1 "],"Additional":["camSetDive","setVectorUp","fn vbs setPitchBank (VBS2)"]},{"Name":"camSetDir","Desc":" Set the direction of the given camera. Needs the call of camCommit to be conducted. ","Syn":{"Syntax":" camera camSetDir direction ","Params":["camera: Object - object of type \"camera\"\n\n","direction: (Prior to Arma 3) Number - direction in degrees, range 0 to 360.","direction: (Since Arma 3) Array - direction of camera"],"Return":" Nothing "},"Examples":["_cam camSetDir 90"],"Additional":["direction","setDir","camSetTarget"]},{"Name":"camSetDive","Desc":" Set camera dive angle.\n\nDoes not commit changes. ","Syn":{"Syntax":" camera camSetDive dive ","Params":["camera: Object\n\n","dive: Number"],"Return":" Nothing"},"Examples":[" _camera camSetDive -0.1"],"Additional":["camSetBank","setVectorUp","fn vbs setPitchBank (VBS2)"]},{"Name":"camSetFocus","Desc":" focusRange is in format [distance,blur]. Sets the camera focus blur. It does not automatically commit changes. ","Syn":{"Syntax":" camera camSetFocus focusRange ","Params":["camera: Object\n\n","focusRange: Array"],"Return":" Nothing "},"Examples":["_camera camSetFocus [50, 1]"],"Additional":["camPrepareFocus"]},{"Name":"camSetFov","Desc":" Set the zoom level (Field Of View) of the given camera.\n\nThe zoom level is from 0.01 for the nearest and 2 for the furthest zoom value, with a default zoom level of 0.7\n\nThe angle of the field of view is atan(FOV)*2 radians when in 4:3 aspect ratio.\n\nNeeds the call of camCommit to be conducted. ","Syn":{"Syntax":" camera camSetFov level ","Params":["camera: Object - object of type \"camera\"\n\n","level: Number - zoom level, range 0.01 to 2 (see description above)"],"Return":" Nothing "},"Examples":["_cam camSetFov 0.7;"],"Additional":["camSetFovRange","camSetTarget"]},{"Name":"camSetFovRange","Desc":" Set the zoom level (Field Of View) start and end values for automatical zooming. \n\nThe default zoom level is 0.7 where 0 is the nearest and 1 is the most far zoom value.\n\nNeeds the call of camCommit to be conducted. ","Syn":{"Syntax":" camera camSetFovRange fovRange ","Params":["camera: Object - object of type \"camera\"\n\n","fovRange: Array - zoom level, range 0 to 1 (see description above)"],"Return":" Nothing "},"Examples":["_cam camSetFovRange [0.1, 0.7];"],"Additional":["camSetFov"]},{"Name":"camSetPos","Desc":" Set the position of the given camera or seagull.Needs the call of camCommit to be conducted. ","Syn":{"Syntax":" camera camSetPos position","Params":["camera: Object - object of type \"camera\" or \"seagull\"\n\n","position: Array - Position to set the object to"],"Return":" Nothing "},"Examples":["_cam camSetPos [2300,1000,130]"],"Additional":["camSetRelPos","setPos"]},{"Name":"camSetRelPos","Desc":" Set the position of the given camera relative to its target set with camSetTarget.Needs the call of camCommit to be conducted. ","Syn":{"Syntax":" camera camSetRelPos position","Params":["camera: Object - object of type \"camera\"\n\n","position: Array - relative Position"],"Return":" Nothing "},"Examples":["_cam camSetTarget _car\n_cam camSetRelPos [0,10,8]"],"Additional":["camSetPos"]},{"Name":"camSetTarget","Desc":" Set the target object or position where the given camera should point at. Needs the call of camCommit to be conducted. ","Syn":{"Syntax":" camera camSetTarget target \u003cbr\u003e(Alternate Syntax exists check Read more)","Params":["camera: Object - object of type \"camera\"\n\n","target: Object - target location"],"Return":" Nothing "},"Examples":["_camera camSetTarget player","_camera camSetTarget [2540,1503,26]"],"Additional":["camTarget"]},{"Name":"camTarget","Desc":" Returns camera's target. ","Syn":{"Syntax":" camTarget camera ","Params":["camera: Object -"],"Return":" Object "},"Examples":["Example needed"],"Additional":["camSetTarget"]},{"Name":"camUseNVG","Desc":" Set / clear using of night vision during cutscenes. ","Syn":{"Syntax":" camUseNVG set ","Params":["set: Boolean"],"Return":" Nothing "},"Examples":[" camUseNVG true "],"Additional":["See also needed"]},{"Name":"canAdd","Desc":" Check if given object can be stored in inventory of given unit.  ","Syn":{"Syntax":" unit canAdd item ","Params":["unit: Object\n\n","item: String - Config class"],"Return":" Boolean "},"Examples":["if (player canAdd \"FirstAidKit\") then {\n   player addItem \"FirstAidKit\";\n} else {\n   hint \"Not enough space\";\n};\n"],"Additional":["See also needed"]},{"Name":"canAddItemToBackpack","Desc":" Checks if given object can be stored into soldier's backpack. ","Syn":{"Syntax":" unit canAddItemToBackpack item ","Params":["unit: Object\n\n","item: String"],"Return":" Boolean "},"Examples":["Example needed"],"Additional":["backpackContainer","firstBackpack","unitBackpack","backpack","backpackCargo","getBackpackCargo","backpackItems","addBackpack","addBackpackCargo","addBackpackCargoGlobal","removeBackpack","clearBackpackCargo","clearBackpackCargoGlobal","clearAllItemsFromBackpack","loadBackpack","backpackSpaceFor","addItemToBackpack","removeItemFromBackpack","everyBackpack"]},{"Name":"canAddItemToUniform","Desc":" Checks if given object can be stored into soldier's uniform. ","Syn":{"Syntax":" unit canAddItemToUniform item ","Params":["unit: Object\n\n","item: String"],"Return":" Boolean "},"Examples":["Example needed"],"Additional":["See also needed"]},{"Name":"canAddItemToVest","Desc":" Checks if given object can be stored into soldier's vest. ","Syn":{"Syntax":" unit canAddItemToVest item ","Params":["unit: Object\n\n","item: String"],"Return":" Boolean "},"Examples":["Example needed"],"Additional":["See also needed"]},{"Name":"cancelSimpleTaskDestination","Desc":" Cancels a simple task destination.  ","Syn":{"Syntax":" cancelSimpleTaskDestination task ","Params":["task: Task"],"Return":" Nothing "},"Examples":["Example needed"],"Additional":["taskDestination","setSimpleTaskDestination"]},{"Name":"canFire","Desc":" Returns if the given vehicle is still able to fire. This command checks only the damage value, not the ammo! ","Syn":{"Syntax":" Boolean = canFire unitName","Params":["unitName: Object"],"Return":" Boolean -  \ntrue if it's still able to fire, false if not "},"Examples":["?!(canFire _tank) : player sideChat \"Tank disabled!\""],"Additional":["canMove","canStand"]},{"Name":"canMove","Desc":" Returns if the given vehicle is still able to move. This command checks only the damage value, not the amount of fuel! ","Syn":{"Syntax":" Boolean = canMove unitName","Params":["unitName: Object"],"Return":" Boolean -  \ntrue if the vehicle is still able to move, false if not "},"Examples":["?!(canMove _tank) : player sideChat \"He's nailed on the ground! Now hurry!\""],"Additional":["canFire","canStand"]},{"Name":"canStand","Desc":" Returns if the given soldier is able to stand up. ","Syn":{"Syntax":" Boolean = canStand unitName","Params":["unitName: Object"],"Return":" Boolean -  \ntrue if he's still able to stand up, false if not. Automatically return false if unit is vehicle. "},"Examples":["?!(canStand player) : player groupChat \"My legs! They hit my legs!\""],"Additional":["canMove","canFire"]},{"Name":"canUnloadInCombat","Desc":" Check if cargo of this vehicle want to get out when in combat. ","Syn":{"Syntax":" canUnloadInCombat vehicle ","Params":["vehicle: Object -"],"Return":" Boolean "},"Examples":["if (canUnloadInCombat _vehicle) then {...};"],"Additional":["See also needed"]},{"Name":"captive","Desc":" Returns if the given unit is captive. \"captive\" means that enemies will not shoot at the unit. ","Syn":{"Syntax":" Boolean = captive object","Params":["object: Object"],"Return":" Boolean -  \ntrue if the unit is captive, false if not "},"Examples":["if !(captive _general) then {_general setCaptive true};"],"Additional":["setCaptive"]},{"Name":"captiveNum","Desc":" Checks whether the unit is a captive. If the unit is a vehicle, its commander is checked instead.\n\nIf a unit's captivity level was set as a Boolean, then the returned number is either 0 (for false) or 1 (for true).\n","Syn":{"Syntax":" captiveNum unit ","Params":["unit: Object"],"Return":" Number "},"Examples":["_captivity = captiveNum _unit;"],"Additional":["captive","setCaptive"]},{"Name":"case","Desc":" See switch do ","Syn":{"Syntax":" case b ","Params":["b: Anything"],"Return":" Switch Type "},"Examples":["Example needed"],"Additional":["Control Structures","switch do","default"]},{"Name":"catch","Desc":" Processes code when an exception is thrown in a try block. The exception caught can be found in the _exception variable. ","Syn":{"Syntax":" try-block catch code ","Params":["try-Block Exception Type\n\n","code Code"],"Return":" Anything "},"Examples":["Example needed"],"Additional":["Exception handling"]},{"Name":"cbChecked","Desc":" Returns the current state of a checkbox (CT_CHECKBOX type 77 of Dialog Control). ","Syn":{"Syntax":" cbChecked control","Params":["control : Control"],"Return":" Boolean "},"Examples":["_checked = cbChecked _myCheckBox;"],"Additional":["cbSetChecked","ctrlChecked","ctrlSetChecked"]},{"Name":"cbSetChecked","Desc":" Sets the current state of a checkbox (CT_CHECKBOX type 77 of Dialog Control). ","Syn":{"Syntax":" control cbSetChecked state","Params":["control : Control\n\n","state : Boolean"],"Return":" Nothing "},"Examples":["_myCheckBox cbSetChecked true;"],"Additional":["cbChecked","ctrlSetChecked","ctrlChecked"]},{"Name":"ceil","Desc":" The ceil value of x. ","Syn":{"Syntax":" Number = ceil x ","Params":["x: Number"],"Return":" Number "},"Examples":["ceil 5.25\nResult is 6","ceil -5.25\nResult is -5"],"Additional":["Math Commands","floor","round"]},{"Name":"cheatsEnabled","Desc":" Checks whether cheats are enabled (whether the designers' version is running). ","Syn":{"Syntax":" Boolean = cheatsEnabled ","Params":null,"Return":" Boolean "},"Examples":["Example needed"],"Additional":["See also needed"]},{"Name":"checkAIFeature","Desc":" Check if given AI feature is currently enabled. Feature may be one of:\n\n\"AwareFormationSoft\", \"CombatFormationSoft\". ","Syn":{"Syntax":" checkAIFeature feature ","Params":["feature: String"],"Return":" Boolean "},"Examples":[" _featureUsed = checkAIFeature \"AwareFormationSoft\" "],"Additional":["enableAIFeature"]},{"Name":"civilian","Desc":" Pre-defined variable for the civilian side.\n\nWhen used in a format statement (hint format[\"%1\",civilian]), the string returned is \"CIV\". ","Syn":{"Syntax":" civilian ","Params":null,"Return":" Side "},"Examples":["SQS:?((side _unit) == civilian) : hint \"This is a civilian unit!\"","SQF:if ((side _unit) == civilian) then {\n    hint \"This is a civilian unit!\";\n};"],"Additional":["side","west","east","resistance"]},{"Name":"className","Desc":" Returns short name of location.  ","Syn":{"Syntax":" className loc ","Params":["loc: Location"],"Return":" String "},"Examples":["Example needed"],"Additional":["See also needed"]},{"Name":"clearAllItemsFromBackpack","Desc":" Removes all items from the backpack.  ","Syn":{"Syntax":" clearAllItemsFromBackpack unit ","Params":["unit: Object"],"Return":" Nothing "},"Examples":["Example needed"],"Additional":["backpackContainer","firstBackpack","unitBackpack","backpack","backpackCargo","getBackpackCargo","backpackItems","addBackpack","addBackpackCargo","addBackpackCargoGlobal","removeBackpack","clearBackpackCargo","clearBackpackCargoGlobal","loadBackpack","backpackSpaceFor","canAddItemToBackpack","addItemToBackpack","removeItemFromBackpack","everyBackpack"]},{"Name":"clearBackpackCargo","Desc":" Removes all backpacks from ammo box (or any general weapon holder container).  ","Syn":{"Syntax":" clearBackpackCargo box ","Params":["box: Object"],"Return":" Nothing "},"Examples":["Example needed"],"Additional":["backpackContainer","firstBackpack","unitBackpack","backpack","backpackCargo","getBackpackCargo","backpackItems","addBackpack","addBackpackCargo","addBackpackCargoGlobal","removeBackpack","clearBackpackCargoGlobal","clearAllItemsFromBackpack","loadBackpack","backpackSpaceFor","canAddItemToBackpack","addItemToBackpack","removeItemFromBackpack","everyBackpack"]},{"Name":"clearBackpackCargoGlobal","Desc":" Removes all backpacks from the vehicle cargo space. MP synchronized. ","Syn":{"Syntax":" clearBackpackCargoGlobal unit ","Params":["unit: Object"],"Return":" Nothing "},"Examples":["clearBackpackCargoGlobal jeepOne;"],"Additional":["backpackContainer","firstBackpack","unitBackpack","backpack","backpackCargo","getBackpackCargo","backpackItems","addBackpack","addBackpackCargo","addBackpackCargoGlobal","removeBackpack","clearBackpackCargo","clearAllItemsFromBackpack","loadBackpack","backpackSpaceFor","canAddItemToBackpack","addItemToBackpack","removeItemFromBackpack","everyBackpack","clearMagazineCargo","clearMagazineCargoGlobal","clearWeaponCargo","clearWeaponCargoGlobal","clearItemCargo","clearItemCargoGlobal"]},{"Name":"clearGroupIcons","Desc":" Removes all icon from group. ","Syn":{"Syntax":" clearGroupIcons group ","Params":["group: Group -"],"Return":" Nothing "},"Examples":["Example needed"],"Additional":["addGroupIcon","getGroupIcon","getGroupIconParams","groupIconSelectable","groupIconsVisible","onGroupIconClick","removeGroupIcon","setGroupIcon","setGroupIconParams","setGroupIconsSelectable","setGroupIconsVisible"]},{"Name":"clearItemCargo","Desc":" Removes all items from ammo box (or any general weapon holder container).  ","Syn":{"Syntax":" clearItemCargo box ","Params":["box: Object"],"Return":" Nothing "},"Examples":["Example needed"],"Additional":["clearItemCargoGlobal","addItemCargo","clearMagazineCargo","clearMagazineCargoGlobal","clearWeaponCargo","clearWeaponCargoGlobal","clearBackpackCargo","clearBackpackCargoGlobal"]},{"Name":"clearItemCargoGlobal","Desc":" Removes all items from ammo box (or any general weapon holder container).  ","Syn":{"Syntax":" clearItemCargoGlobal box ","Params":["box: Object"],"Return":" Nothing "},"Examples":["Example needed"],"Additional":["clearItemCargo","addItemCargoGlobal","clearMagazineCargo","clearMagazineCargoGlobal","clearWeaponCargo","clearWeaponCargoGlobal","clearBackpackCargo","clearBackpackCargoGlobal"]},{"Name":"clearItemPool","Desc":" Removes all items from ammo box (or any general weapon holder container) ","Syn":{"Syntax":" clearItemPool box ","Params":["box: Object"],"Return":" Nothing"},"Examples":["clearItemPool jeepOne"],"Additional":["addItemPool"]},{"Name":"clearMagazineCargo","Desc":" Remove all magazines from the given vehicle's magazine cargo space. ","Syn":{"Syntax":" clearMagazineCargo vehicleName","Params":["vehicleName: Object"],"Return":" Nothing "},"Examples":["clearMagazineCargo _truck;"],"Additional":["clearMagazineCargoGlobal","addMagazineCargo","addWeaponCargo","clearWeaponCargo","clearWeaponCargoGlobal","clearBackpackCargo","clearBackpackCargoGlobal","clearItemCargo","clearItemCargoGlobal","addMagazineAmmoCargo"]},{"Name":"clearMagazineCargoGlobal","Desc":" Removes all magazines from the vehicle cargo space. MP synchronized. ","Syn":{"Syntax":" clearMagazineCargoGlobal unit ","Params":["unit: Object"],"Return":" Nothing "},"Examples":["clearMagazineCargoGlobal jeepOne;"],"Additional":["clearMagazineCargo","addMagazineCargoGlobal","clearWeaponCargo","clearWeaponCargoGlobal","clearBackpackCargo","clearBackpackCargoGlobal","clearItemCargo","clearItemCargoGlobal"]},{"Name":"clearMagazinePool","Desc":" Remove all magazines from the magazine pool, of which the player may choose in the following missions. Available in campaigns only. ","Syn":{"Syntax":" clearMagazinePool ","Params":null,"Return":" Nothing "},"Examples":["Example needed"],"Additional":["addMagazinePool"]},{"Name":"clearOverlay","Desc":" Clear the current overlay. ","Syn":{"Syntax":" clearOverlay map ","Params":["map: Control -"],"Return":" Nothing "},"Examples":["clearOverlay _map,"],"Additional":["See also needed"]},{"Name":"clearRadio","Desc":" Clean up the content of radio protocol history. ","Syn":{"Syntax":" clearRadio ","Params":null,"Return":" Nothing "},"Examples":["clearRadio;"],"Additional":["enableRadio"]},{"Name":"clearWeaponCargo","Desc":" Remove all weapons from the given vehicle's weapon cargo space. ","Syn":{"Syntax":" clearWeaponCargo vehicleName","Params":["vehicleName: Object"],"Return":" Nothing "},"Examples":["clearWeaponCargo _truck"],"Additional":["clearWeaponCargoGlobal","addWeaponCargo","addMagazineCargo","clearMagazineCargo","clearMagazineCargoGlobal","clearBackpackCargo","clearBackpackCargoGlobal","clearItemCargo","clearItemCargoGlobal"]},{"Name":"clearWeaponCargoGlobal","Desc":" Removes all weapons from the vehicle cargo space. MP synchronized. ","Syn":{"Syntax":" clearWeaponCargoGlobal unit ","Params":["unit: Object"],"Return":" Nothing "},"Examples":["clearWeaponCargoGlobal jeepOne;"],"Additional":["clearWeaponCargo","addWeaponCargo","clearMagazineCargo","clearMagazineCargoGlobal","clearBackpackCargo","clearBackpackCargoGlobal","clearItemCargo","clearItemCargoGlobal"]},{"Name":"clearWeaponPool","Desc":" Remove all weapons from the weapon pool, of which the player may choose in the following missions. Available in campaigns only. ","Syn":{"Syntax":" clearWeaponPool ","Params":null,"Return":" Nothing "},"Examples":["Example needed"],"Additional":["addWeaponPool"]},{"Name":"closeDialog","Desc":" Close the currently active user dialog with exit code. Most common exit codes are:\n#define IDC_OK            1 //emulate \"Ok\" button\n#define IDC_CANCEL        2 //emulate \"Cancel\" button","Syn":{"Syntax":" closeDialog idc ","Params":["idc : Number"],"Return":" Nothing "},"Examples":["closeDialog 2;","#define IDC_CANCEL 2\ncloseDialog IDC_CANCEL;"],"Additional":["createDialog","dialog","closeDisplay"]},{"Name":"closeDisplay","Desc":" Close given display with exit code. Most common exit codes are:\n#define IDC_OK            1 //emulate \"Ok\" button\n#define IDC_CANCEL        2 //emulate \"Cancel\" button","Syn":{"Syntax":" display closeDisplay exitcode ","Params":["display: Display\n\n","exitcode: Number"],"Return":" Nothing "},"Examples":["_display closeDisplay 1;","#define IDC_OK 1\n_display closeDisplay IDC_OK;"],"Additional":["createDisplay","closeDialog"]},{"Name":"closeOverlay","Desc":" Closes the current overlay without committing. ","Syn":{"Syntax":" closeOverlay map ","Params":["map: Control -"],"Return":" Nothing "},"Examples":["Example needed"],"Additional":["See also needed"]},{"Name":"collapseObjectTree","Desc":" Collapse the object tree. ","Syn":{"Syntax":" collapseObjectTree map ","Params":["map: Control -"],"Return":" Nothing "},"Examples":["collapseObjectTree _map,"],"Additional":["See also needed"]},{"Name":"combatMode","Desc":" Returns the combat mode of the given unit. See setCombatMode for more information about combat modes. ","Syn":{"Syntax":" String = combatMode grp","Params":["grp: Object or Group"],"Return":" String -  \nOne of \"BLUE\", \"GREEN\", \"WHITE\", \"YELLOW\" and \"RED\" "},"Examples":["if (combatMode _grp1) == \"BLUE\") then {_grp1 setCombatMode \"GREEN\"};"],"Additional":["combat mode description","AI Combat Modes","setCombatMode","behaviour","setBehaviour","skill","setSkill array","CfgAISkill"]},{"Name":"commandArtilleryFire","Desc":" Orders a unit to reload defined magazine commence fire burst on the given position (via the radio).  ","Syn":{"Syntax":" unit commandArtilleryFire [position, type, rounds] ","Params":["unit: Object\n\n","[position, type, rounds]: Array","position: Position","type: String","rounds: Number"],"Return":" Nothing "},"Examples":["mortar1 commandArtilleryFire [[3000, 120, 1000], \"8Rnd_82mm_Mo_shells\", 3]"],"Additional":["getArtilleryAmmo","getArtilleryETA","doArtilleryFire","enableEngineArtillery","getArtilleryComputerSettings","shownArtilleryComputer","inRangeOfArtillery"]},{"Name":"commandChat","Desc":" Types text to the command radio channel.,Note: this function only types text to the list,it does not broadcast,the message. If you want the message to show on all computers,you have,to execute it on all of them. ","Syn":{"Syntax":" unit commandChat chatText ","Params":["unit: Object or Array -\n\n","chatText: String -"],"Return":" Nothing "},"Examples":["soldierOne commandChat \"Show this text\""],"Additional":["See also needed"]},{"Name":"commander","Desc":" In OFP it returns the commander of a vehicle. Since ArmA and VBS2 it returns the primary observer. The commander of a vehicle can be found with effectiveCommander. ","Syn":{"Syntax":"Object = commander vehicleName ","Params":["vehicleName: Object"],"Return":" Object -  \nThe unit sitting in the commander place is returned. If vehicle is not a vehicle but a person, the person is returned. "},"Examples":["(commander _tank) action [\"getout\",_tank]"],"Additional":["driver","gunner","crew"]},{"Name":"commandFire","Desc":" Order the given unit to fire on the given target (via the radio).\nIf the target is objNull, the unit is ordered to fire on its current target (set with doTarget or commandTarget). ","Syn":{"Syntax":" unitName commandFire target ","Params":["unitName: Object or Array\n\n","target: Object"],"Return":" Nothing "},"Examples":["_ESoldier1 commandFire _WSoldier1"],"Additional":["doFire","fire","forceWeaponFire","fireAtTarget"]},{"Name":"commandFollow","Desc":" Order the given unit to follow the given other unit (via the radio). ","Syn":{"Syntax":" unitName commandFollow followedunit ","Params":["unitName: Object or Array\n\n","followedunit: Object"],"Return":" Nothing "},"Examples":["_soldier1 commandFollow _soldier2"],"Additional":["doFollow"]},{"Name":"commandFSM","Desc":" Orders a unit to process command defined by FSM file (via the radio). ","Syn":{"Syntax":"unitName commandFSM [fsm name, position, target] ","Params":["unitName: Object or Array\n\n","[fsm name, position, target]: Array"],"Return":" Nothing "},"Examples":["_soldierOne commandFSM [\"move.fsm\", position player, player]"],"Additional":["FSM","FSM_Editor_Manual","execFSM","completedFSM","doFSM","getFSMVariable","setFSMVariable"]},{"Name":"commandGetOut","Desc":" Orders the unit to get out from the vehicle (via the radio). ","Syn":{"Syntax":" commandGetOut unitName ","Params":["unitName: Object or Array"],"Return":" Nothing "},"Examples":["commandGetOut _unitOne"],"Additional":["doGetOut","leaveVehicle"]},{"Name":"commandingMenu","Desc":" Return the name of the player actual topmost commanding menu. ","Syn":{"Syntax":" commandingMenu ","Params":null,"Return":" String "},"Examples":["waitUntil {commandingMenu == \"RscStatus\"}; hint \"Press 4, I'm bleeding !\";"],"Additional":["showCommandingMenu","BIS_fnc_addCommMenuItem","BIS_fnc_removeCommMenuItem"]},{"Name":"commandMove","Desc":" Order the given unit(s) to move to the given location (via the radio). Exactly the same as doMove, except this command displays a radio message. ","Syn":{"Syntax":" unitName commandMove position","Params":["unitName: Object or Array\n\n","position: (Array) - format Position"],"Return":" Nothing "},"Examples":["_soldier1 commandMove (getMarkerPos \"Marker1\") "],"Additional":["doMove","setDestination","moveTo","move","addWaypoint","fn_vbs_doMoveEx"]},{"Name":"commandRadio","Desc":" Sends the message to the command radio channel. The message is defined in the description.ext file or radio protocol. ","Syn":{"Syntax":" unit commandRadio radioName ","Params":["unit: Object or Array\n\n","radioName: String"],"Return":" Nothing "},"Examples":["player commandRadio \"messageOne\";"],"Additional":["See also needed"]},{"Name":"commandStop","Desc":" Order the given unit(s) to stop (via the radio). A stop command will never finish, the unit will never be ready. ","Syn":{"Syntax":" commandStop unitName ","Params":["unitName: Object or Array of Objects"],"Return":" Nothing "},"Examples":["commandStop _soldier1;","commandStop [_soldier1, _soldier2];","commandStop (units player);"],"Additional":["doStop","stopped","stop"]},{"Name":"commandTarget","Desc":" Order the given unit(s) to target the given target (via the radio). ","Syn":{"Syntax":" unitName commandTarget target ","Params":["unitName: Object\n\n","target: Object"],"Return":" Nothing "},"Examples":["_ESoldier1 commandTarget _WSoldier1"],"Additional":["assignedTarget","doTarget"]},{"Name":"commandWatch","Desc":" Orders the unit(s) to watch the given position or target (via the radio). Use objNull as the target to order a unit to stop watching a position/target ","Syn":{"Syntax":" unitName(s) commandWatch position \u003cbr\u003e(Alternate Syntax exists check Read more)","Params":["unitName(s): Object or Array\n\n","position: Array - format Position"],"Return":" Nothing "},"Examples":["_soldierOne commandWatch markerPos \"MarkerMoveOne\"","[s1,s2] commandWatch player"],"Additional":["doWatch","lookAt"]},{"Name":"comment","Desc":" Define a comment. \n\nMainly used in SQF Syntax, as you're able to introduce comment lines with semicolons in a SQS script. ","Syn":{"Syntax":" comment comment ","Params":["comment: String - the comment that you'd like to write here"],"Return":" Nothing "},"Examples":["script.sqs comment \"This is a commented line\"","function.sqf comment \"This is a commented line\";"],"Additional":["Control Structures"]},{"Name":"commitOverlay","Desc":" Commit the current overlay. ","Syn":{"Syntax":" commitOverlay map ","Params":["map: Control -"],"Return":" Nothing "},"Examples":["commitOverlay _map,"],"Additional":["See also needed"]},{"Name":"compile","Desc":" Compile expression. ","Syn":{"Syntax":" compile expression ","Params":["expression: String"],"Return":" Code "},"Examples":["_string = \"a = a + 1\";\n_code = compile _string; \ncall _code;","hint str compile \"a = b\";\n//Result: {a=b}"],"Additional":["call","spawn","compileFinal"]},{"Name":"compileFinal","Desc":" Compile expression and makes it final, preventing it from:\n\n repeated compile or compileFinal\n\n removal by nil\n\n remote rewrite using publicVariable, publicVariableClient and publicVariableServer\n\n\n ","Syn":{"Syntax":" Code = compileFinal expression ","Params":["expression: String"],"Return":" Code "},"Examples":["myCode = compileFinal \"a = a + 1\"; \ncall myCode; \n//--- Repeated compile won't have any effect\nmyCode = compileFinal \"a = a + 2\";\n//--- Duplicate code will be final as well\nmyDuplicateCode = myCode;\n"],"Additional":["compile","call","spawn"]},{"Name":"completedFSM","Desc":" Check whether the given FSM completes.\n\nThe FSM handle is the number returned by the execFSM command.  ","Syn":{"Syntax":" completedFSM fsmHandle ","Params":["fsmHandle: Number"],"Return":" Boolean "},"Examples":["_completed = completedFSM _fsmHandle;"],"Additional":["FSM","commandFSM","doFSM","execFSM","getFSMVariable","setFSMVariable"]},{"Name":"composeText","Desc":" Creates a structured text by joining the given structured or plain texts. ","Syn":{"Syntax":" composeText [text1, text2, ...] ","Params":["[text1, text2, ...]: Array of Strings and/or Structured Texts"],"Return":" Structured Text "},"Examples":["_txt = composeText [\"First line\", image \"data\\isniper.paa\", lineBreak, \"Second line\"];"],"Additional":["image","lineBreak","parseText","text"]},{"Name":"configClasses","Desc":"  Returns an array of config entries which meet criteria in condition code. Command iterates through all available config sub classes of the given config class. Current looked at config is stored in _x variable (similar to alternative count command implementation). Condition has to return true in order for the looked at config to be added to the resulting array. ","Syn":{"Syntax":" condition configClasses config ","Params":["condition: String\n\n","config: Config"],"Return":" Array - Array of Configs "},"Examples":["List all CfgVehicles class names in .rpt file: _configs = \"diag_log configName _x; true\" configClasses (configFile \u003e\u003e \"CfgVehicles\");","Return all classes that can transport 10 and more soldiers: _transporters = \"getNumber (_x \u003e\u003e 'transportSoldier') \u003e= 10\" configClasses (configFile \u003e\u003e \"CfgVehicles\");","Return all classes that inherit from 'RscText': hint str (\"inheritsFrom _x == (configFile \u003e\u003e 'RscText')\" configClasses configFile);","Generate an array of west (useable) vehicles and spawn them around the player: private [\"_path\",\"_cfgArray\",\"_veh\"];\n_path = (configFile \u003e\u003e \"CfgVehicles\");\n_cfgArray = \"(\n\u0009(getNumber (_x \u003e\u003e 'scope') \u003e= 2) \u0026\u0026 \n\u0009{getNumber (_x \u003e\u003e 'side') == 1 \u0026\u0026 \n\u0009{getText (_x \u003e\u003e 'vehicleClass') in ['Armored', 'Car', 'Air']\n\u0009\u0009}\n\u0009}\n)\" configClasses _path;\n\n{\n\u0009_veh = createVehicle [configName _x, getPosATL player, [], 0, \"None\"];\n\u0009sleep 1;\n} forEach _cfgArray;"],"Additional":["Config","configFile","missionConfigFile"]},{"Name":"configFile","Desc":" Return root of config entries hierarchy.\nSee AllInOne Config for a full config extract as example. ","Syn":{"Syntax":" Config = configFile ","Params":null,"Return":" Config "},"Examples":["_isMyClassActive = isClass (configFile / \"CfgPatches\" / \"MyClass\");"],"Additional":["configClasses","missionConfigFile","campaignConfigFile","config/name","config \u003e\u003e name","configName","count","getArray","getText","getNumber","inheritsFrom","isArray","isClass","isNumber","isText","select"]},{"Name":"configName","Desc":" Returns name of config entry. ","Syn":{"Syntax":" String = configName config ","Params":["config: Config"],"Return":" String "},"Examples":["_name = configName (configFile \u003e\u003e \"CfgVehicles\");\nResult is \"CfgVehicles\""],"Additional":["configFile","config/name","config \u003e\u003e name","count","getArray","getText","getNumber","inheritsFrom","isArray","isClass","isNumber","isText","select"]},{"Name":"connectTerminalToUAV","Desc":" Connect person with UAV terminal to UAV unit. UAV Terminal item needs to be assigned to GPS slot. ","Syn":{"Syntax":" person connectTerminalToUAV uav ","Params":["person: Object\n\n","uav: Object"],"Return":" Boolean "},"Examples":["bool = player connectTerminalToUAV uav1;","player connectTerminalToUAV objNull; //disconnect"],"Additional":["allUnitsUAV","getConnectedUAV","isUAVConnected","UAVControl","showUAVFeed","shownUAVFeed"]},{"Name":"controlNull","Desc":" A non-existing Control. This value is not equal to anything, including itself. ","Syn":{"Syntax":" Control = controlNull ","Params":null,"Return":" Control "},"Examples":["Example needed"],"Additional":["See also needed"]},{"Name":"copyFromClipboard","Desc":" Return the content of the (text) clipboard.  ","Syn":{"Syntax":" copyFromClipboard ","Params":null,"Return":" String "},"Examples":["Example needed"],"Additional":["copyToClipboard","diag_log"]},{"Name":"copyToClipboard","Desc":" Copy the text to the clipboard.  ","Syn":{"Syntax":" copyToClipboard text ","Params":["text: String"],"Return":" Nothing "},"Examples":["copyToClipboard (str (_data));"],"Additional":["copyFromClipboard","diag_log"]},{"Name":"copyWaypoints","Desc":" Copy the chain of waypoints from source to target group. The target group will start to process waypoints from the first one. ","Syn":{"Syntax":" groupTo copyWaypoints groupFrom ","Params":["groupTo: Group\n\n","groupFrom: Group"],"Return":" Nothing "},"Examples":["Example needed"],"Additional":["waypoints","deleteWaypoint","setCurrentWaypoint","setWaypointBehaviour","setWaypointCombatMode","setWaypointCompletionRadius","setWaypointDescription","setWaypointFormation","setWaypointHousePosition","setWaypointPosition","setWaypointScript","setWaypointSpeed","setWaypointStatements","setWaypointTimeout","setWaypointType","setWaypointVisible","waypointAttachVehicle","waypointAttachedVehicle","setWaypointLoiterRadius","waypointLoiterRadius","addWaypoint","setWaypointLoiterType","waypointSpeed"]},{"Name":"cos","Desc":" Cosine of a number, argument in degrees. ","Syn":{"Syntax":" cos x ","Params":["x: Number"],"Return":" Number "},"Examples":["cos 60;//returns 0.5"],"Additional":["acos","sin","asin","tan","atan","atan2"]},{"Name":"count","Desc":" Can be used to count:\n\n the number of elements in array\n\n the number of elements in array with condition\n\n the number of sub-entries in a config object\n\n the number of characters in a string (since [\"Arma 3\",\"Arma3\",127,126674,\"Development\"])\n\n\n","Syn":{"Syntax":" count array \u003cbr\u003e(Alternate Syntax exists check Read more)","Params":["array: Array"],"Return":" Number "},"Examples":["_cnt = count [0,0,1,2]; // returns 4\n_cnt = count units group player; // returns number of units in player group","_cnt = {_x == 4} count [1,9,8,3,4,4,4,5,6]; // returns 3\n_cnt = {alive _x} count allUnits; // returns the number of alive units","_cnt = count (configFile \u003e\u003e \"CfgVehicles\");","hint str count \"japa is the man!\"; //16"],"Additional":["set","resize","pushBack","reverse","select","in","find","toArray","toString","forEach","in Array","deleteAt","deleteRange"]},{"Name":"countEnemy","Desc":" Count how many units in the array are considered enemy to the given unit. ","Syn":{"Syntax":" Number = unitName countEnemy arrayName ","Params":["unitName: Object\n\n","arrayName: Array"],"Return":" Number "},"Examples":["_num=player countEnemy list _triggerOne"],"Additional":["countFriendly","countSide","countUnknown"]},{"Name":"countFriendly","Desc":" Count how many units in the array are considered friendly to the given unit. ","Syn":{"Syntax":" Number = unitName countFriendly arrayName ","Params":["unitName: Object\n\n","arrayName: Array"],"Return":" Number "},"Examples":["_num=player countFriendly list _triggerOne"],"Additional":["countEnemy","countSide","countUnknown"]},{"Name":"countSide","Desc":" Count how many units in the array belong to given side. ","Syn":{"Syntax":" side countSide arrayName","Params":["side: Side\n\n","arrayName: Array of Objects"],"Return":" Number "},"Examples":["_num = west countSide list _triggerOne;","_numCivPlayable = civilian countSide playableUnits;"],"Additional":["count","countFriendly","countEnemy","countUnknown"]},{"Name":"countType","Desc":" Count how many units in the array are of given type. Other than typeOf this command also works with parent classes like \"Air\", \"Tank\" and \"Car\". For a full class reference see Classes. ","Syn":{"Syntax":" Number = type countType arrayName ","Params":["type: String - class type\n\n","arrayName: Array"],"Return":" Number "},"Examples":["_count= \"Tank\" countType list _triggerOne;"],"Additional":["isKindOf","typeOf","countFriendly","countEnemy","countSide"]},{"Name":"countUnknown","Desc":" Count how many units in the array are unknown to the given unit. ","Syn":{"Syntax":" Number = unitName countUnknown arrayName","Params":["unitName: Object\n\n","arrayName: Array"],"Return":" Number "},"Examples":["_num=player countUnknown list _triggerOne"],"Additional":["countFriendly","countEnemy","countType"]},{"Name":"createAgent","Desc":" Creates an (independent) agent (person) of the given type (type is a name of a subclass of CfgVehicles). If the markers array contains several marker names, the position of a random one is used, otherwise, the given position is used. The unit is placed inside a circle with this position as its center and placement as its radius.\n\nPlayers assigned to an agent using setPlayable will be able to control the agent, operate weapons and other actions, but will not be able to access their inventory using the gear screen.\n\nSpecial properties can be: \"NONE\" and \"FORM\". ","Syn":{"Syntax":" Object = createAgent [type, position, markers, placement, special] ","Params":["[type, position, markers, placement, special]: Array\n\n","type: String from CfgVehicles","position: Array (Position format)","markers: Array","placement: Number radius","special: String \"None\", or \"Form\""],"Return":" Object "},"Examples":["agent = createAgent [\"SoldierWB\", position player, [], 0, \"FORM\"];"],"Additional":["agent","agents","isAgent","forEachMemberAgent"]},{"Name":"createCenter","Desc":" Creates a new AI HQ for the given side. An 'HQ ' is something each side needs to have to be able to communicate. By default, all centers for units which are present in the mission are created before the mission is started. This command can be used to initialize a side which has no units present in the Mission.sqm, so that you can spawn groups and units for it.\n\nFor the available sides see Side. ","Syn":{"Syntax":" Side = createCenter side","Params":["side: Side"],"Return":" Side "},"Examples":["_SideHQ = createCenter east"],"Additional":["createUnit","createUnit array","createGroup","createVehicle","createVehicle array","Side"]},{"Name":"createDialog","Desc":" Create a dialog which is defined either in the mission's description.ext, in the campaign's description.ext or in the global resource.cpp. The given name has to be the class name used in one of these files. If another dialog is already opened, the desired dialog is created as a child dialog of the one already opened. ","Syn":{"Syntax":" createDialog dialogName ","Params":["dialogName: String - class name used in the description.ext / resource.cpp"],"Return":" Boolean -  \ntrue when the dialog was created successfully "},"Examples":["_ok = createDialog \"RscDisplayGame\";\nif (!_ok) then {hint \"Dialog couldn't be opened!\"};"],"Additional":["closeDialog","dialog","createDisplay"]},{"Name":"createDiaryLink","Desc":" Create a link to the section of diary given by subject. Record is selected based on given object (diary record,task or unit). ","Syn":{"Syntax":" createDiaryLink [subject,object,text] ","Params":["[subject,object,text]: Array -"],"Return":" String "},"Examples":["_link = createDiarySubject [\"Group\",player,\"Player\"]","\ndiaryRec1 = player createDiaryRecord [\"diary\", [\"Record 1\", \"We can't refer to next record ((\"]];\ndiaryRec2 = player createDiaryRecord [\"diary\", [\"Record 2\", \"Got to \" + (createDiaryLink [\"Diary\", diaryRec1, \"record 1\"])]]; \ndiaryRec3 = player createDiaryRecord [\"diary\", [\"Record 3\", \"Got to \" + (createDiaryLink [\"Diary\", diaryRec2, \"record 2\"])]];\n","\nfuncProcessDiaryLink = {\n    processDiaryLink createDiaryLink [\"diary\", _this, \"\"];\n};\ndiaryRec1 = player createDiaryRecord [\"diary\", [\"Record 1\", \n    \"In this example, we can go to any next record: go to \u003cexecute expression='diaryRec2 call funcProcessDiaryLink'\u003eRecord 2\u003c/execute\u003e\"\n]];\ndiaryRec2 = player createDiaryRecord [\"diary\", [\"Record 2\", \n    \"Go to \u003cexecute expression='diaryRec3 call funcProcessDiaryLink'\u003eRecord 3\u003c/execute\u003e\"\n]];\ndiaryRec3 = player createDiaryRecord [\"diary\", [\"Record 3\", \n    \"Go to \u003cexecute expression='diaryRec1 call funcProcessDiaryLink'\u003eRecord 1\u003c/execute\u003e\"\n]];\n"],"Additional":["processDiaryLink","createDiaryRecord","createDiarySubject","diarySubjectExists"]},{"Name":"createDiaryRecord","Desc":" creates a diary entry.\n\nSupported tags and their parameters:\n\n \u003cAll\u003e\n\n image: String - path to image. When present, any element with it will be displayed as image.\n\n width: Number - image width in pixels.\n\n height: Number - image height in pixels.\n\n\n\n font\n\n color: String - HTML color in format #aarrggbb or #rrggbb\n\n size: Number - font height in pixels.\n\n face: String - font type (class from CfgFontFamilies)\n\n\n\n br\n\n marker\n\n name: String - marker name\n\n\n\n execute\n\n expression: String - executed code\n\n\n\n executeClose\n\n expression: String - executed code, diary is closed afterwards\n\n\n\n log\n\n subject: String - subject name.\n\n record: String - record name (e.g. \"Record6\" or \"Unit1059524\")\n\n\n\n gear\n\n unit: Number - unit ID\n\n\n\n teamSwitch\n\n unit: Number - unit ID\n\n\n\n kick\n\n id: Number - player ID\n\n\n\n ban\n\n id: Number - player ID\n\n\n\n mute\n\n id: Number - player ID\n\n\n\n currentTask\n\n id: Number - task ID\n\n\n\n\n ","Syn":{"Syntax":" unitName createDiaryRecord parameters ","Params":["unitName: Object\n\n","parameters: Array.\ncan be [subject, text(, task(, state))]\nor [subject, [title, text](, task(, state))]"],"Return":" text: String "},"Examples":["player createDiaryRecord [\"Diary\", [\"Intel\", \"Enemy base is on grid \u003cmarker name=\"enemyBase\"\u003e161170\u003c/marker\u003e\"]]","player createDiaryRecord [\"Diary\", \"Informations gathered.\u003cbr /\u003e\u003cimg image=\"wellDone_ca.paa\" /\u003e\"]"],"Additional":["processDiaryLink","createDiaryLink","createDiarySubject","diarySubjectExists"]},{"Name":"createDiarySubject","Desc":" Create a new subject page in a log. ","Syn":{"Syntax":" person createDiarySubject [subject,display name] or [subject,display name,picture] ","Params":["person: Object -\n\n","[subject,display name,picture]: Array -"],"Return":" Number "},"Examples":["_index =player createDiarySubject [\"myPage\",\"My page\"];"],"Additional":["processDiaryLink","createDiaryLink","createDiaryRecord","diarySubjectExists"]},{"Name":"createDisplay","Desc":" Create child display of given display and load from \"resourceName\". The notable difference between createDisplay and createDialog is that if child display class has movingEnable = 1; param, the player would be able to move whilst having control of the mouse pointer. ","Syn":{"Syntax":" parent createDisplay resourceName ","Params":["parent: Display\n\n","resourceName: String"],"Return":" Nothing "},"Examples":["findDisplay 46 createDisplay \"RscObserver\";"],"Additional":["closeDisplay","createDialog"]},{"Name":"createGearDialog","Desc":" Opens gear dialog for given unit. ","Syn":{"Syntax":" CreateGearDialog [unit,resource] ","Params":["[unit,resource]: Array -"],"Return":" Nothing "},"Examples":["\ncreateGearDialog [player, \"RscDisplayGear\"];\ncreateGearDialog [player, \"RscMyDisplayGear\"];\n"],"Additional":["See also needed"]},{"Name":"createGroup","Desc":" Creates a new AI group for the given Side. An HQ (center) for that side must already be in the Mission.sqm or have been initialized with createCenter.\n\nFor the available sides see Side. \n\n\n\n\n\n \n\n In Arma 3 when last unit leaves a group, the group gets auto deleted.\n ","Syn":{"Syntax":" Group = createGroup side ","Params":["side: Side"],"Return":" Group "},"Examples":["_group = createGroup east"],"Additional":["deleteGroup","group","setGroupId","groupID","units","groupFromNetId","netId","leader","selectLeader","join","createCenter","createUnit","createUnit array","createVehicle","createVehicle array","Side"]},{"Name":"createGuardedPoint","Desc":" Adds a point guarded by the given side. The actual item or position guarded is determined by the following priority.\n\n\nIf idStatic is not negative, the position of a static object with the given id is guarded. \n\n\n\n\nIf the given vehicle is valid, the starting position of the vehicle is guarded.\n\n\n\n\notherwise the given position is guarded. ","Syn":{"Syntax":" createGuardedPoint [side, position, idStatic, vehicle] ","Params":["[side, position, idStatic, vehicle]: Array\n\n","side: Side","position: Position","idStatic: Number","vehicle: Object"],"Return":" Nothing or undocumented "},"Examples":["_point = createGuardedPoint [ east, [0, 0], -1, vehicle player ];"],"Additional":["See also needed"]},{"Name":"createLocation","Desc":" Creates a location of the specified class and dimensions at the specified position. Classes are defined in CfgLocationTypes. ","Syn":{"Syntax":" Location = createLocation [className, position, sizeX, sizeY]","Params":["[className, position, sizeX, sizeY]: Array\n\n","className: String","position: Position","sizeX: Number in meters","sizeY: Number in meters"],"Return":" Location "},"Examples":["_location = createLocation [\"NameVillage\", [4035,2151,10], 100, 100];"],"Additional":["setText","nearestLocation","nearestLocations","locationPosition","nearestLocationWithDubbing"]},{"Name":"createMarker","Desc":" Creates a new marker at the given position. The marker name has to be unique. ","Syn":{"Syntax":" String = createMarker [name, position] ","Params":["[name, position]: Array\n\n","name: String","position: Array - format Position"],"Return":" String "},"Examples":["_marker = createMarker [\"Marker1\", position player ]"],"Additional":["createMarkerLocal","setMarkerBrush","setMarkerColor","setMarkerDir","setMarkerPos","setMarkerShape","setMarkerSize","setMarkerText","setMarkerType","setMarkerAlpha"]},{"Name":"createMarkerLocal","Desc":" Creates a new marker at the given position. The marker name has to be unique. ","Syn":{"Syntax":" String = createMarkerLocal [name, position] ","Params":["[name, position]: Array\n\n","name: String","position: Array - format Position"],"Return":" String "},"Examples":["_marker= createMarkerLocal [Marker1, position player ]"],"Additional":["setMarkerBrushLocal","setMarkerColorLocal","setMarkerDirLocal","setMarkerPosLocal","setMarkerShapeLocal","setMarkerSizeLocal","setMarkerTextLocal","setMarkerTypeLocal","setMarkerAlphaLocal","deleteMarkerLocal"]},{"Name":"createMenu","Desc":" Creates a previously added menu. ","Syn":{"Syntax":" map createMenu index ","Params":["map: Control -\n\n","index: Number -"],"Return":" Nothing "},"Examples":["Example needed"],"Additional":["See also needed"]},{"Name":"createMine","Desc":" Creates a mine of the given type (type is the name of the subclass of CfgVehicles). If the markers array contains several marker names, the position of a random one is used, otherwise, the given position is used. The mine is placed inside a circle with this position as its center and placement as its radius. ","Syn":{"Syntax":" Object = createMine [type, position, markers, placement] ","Params":["[type, position, markers, placement]: Array\n\n","type: String","position: Position","markers: Array","placement: Number radius"],"Return":" Object "},"Examples":["_mine = createMine [\"MineMine\", position player, [], 0];"],"Additional":["allMines","detectedMines","mineDetectedBy","mineActive","revealMine"]},{"Name":"createMissionDisplay","Desc":" Create single missions display as a child of given display. The mission dialog will be set to the directory given as an argument \"root\". ","Syn":{"Syntax":" Display = display createMissionDisplay string  ","Params":["display : Display\n\n","string: String"],"Return":" Display "},"Examples":["_ChildDisplay = _Rootdisplay createMissionDisplay \"Tutorial\";","In Arma 3 this would create scenarios UI findDisplay 46 createMissionDisplay \"\";"],"Additional":["See also needed"]},{"Name":"createSimpleTask","Desc":" Creates a new Task. The task effect is local, it will only exist on PC it was added. ","Syn":{"Syntax":" Object createSimpleTask Array","Params":["Object: Unit to add this new task\n\n","Array: [\"TaskName\"] or [\"TaskName\", taskParent]"],"Return":" Task - the new task "},"Examples":["_currentTask = player createSimpleTask [\"NewTask\"];","_childTask = player createSimpleTask [\"ChildTask\", _currentTask];"],"Additional":["Tasks","simpleTasks","briefing","removeSimpleTask","setSimpleTaskDescription","setSimpleTaskDestination","setTaskState","setTaskResult","taskState"]},{"Name":"createSite","Desc":" Create a new site.  ","Syn":{"Syntax":" type createSite pos ","Params":["type: String\n\n","pos: Position"],"Return":" Object "},"Examples":["Example needed"],"Additional":["deleteSite","allSites"]},{"Name":"createSoundSource","Desc":" Creates a sound source of the given type (type is the name of the subclass of CfgVehicles which is pointing to the sound defined in CfgSFX). If the markers array contains several marker names, the position of a random one is used, otherwise, the given position is used. The sound source is placed inside a circle with this position as its center and placement as its radius. ","Syn":{"Syntax":" Object = createSoundSource [type, position, markers, placement] ","Params":["[type, position, markers, placement]: Array\n\n","type: String as per CfgVehicles","position: Position","markers: Array","placement: Number. radius"],"Return":" Object "},"Examples":["_soundSource = createSoundSource [\"LittleDog\", position player, [], 0]","[] spawn {\n\u0009_alarm = createSoundSource [\"Sound_Alarm\", position player, [], 0]; //starts alarm\n\u0009sleep 10;\n\u0009deleteVehicle _alarm; //stops alarm\n};"],"Additional":["playSound","playSound3D","sideRadio","say","say2D","say3D","playMusic"]},{"Name":"createTask","Desc":" Create a new AI task (subtask of parentTask). Type is name of registered task type. ","Syn":{"Syntax":" teamMember createTask  [[type] or [type, parentTask], priority, name1, value1, name2, value2, ...] ","Params":null,"Return":" Task "},"Examples":["Example needed"],"Additional":["See also needed"]},{"Name":"createTeam","Desc":" Create a team and name it. ","Syn":{"Syntax":" createTeam [type, name] ","Params":["[type, name]: Array\n\n","type: String","name: String"],"Return":" Team Member "},"Examples":["_team = createTeam [\"USMC_Team\", \"Fire Team Red\"];"],"Additional":["addTeamMember","deleteTeam","forEachMemberTeam","removeTeamMember","teamMember","teamName","teams","teamType","forEachMember","forEachMemberAgent"]},{"Name":"createTrigger","Desc":" Creates a new trigger on the given position. \n\nAn object of the given type is created; this type must be a class name in CfgNonAIVehicles or CfgVehicles with simulation = detector.\n\nAn array containing all units that have activated the trigger is available via list triggerobj.\n\nCreated triggers can be deleted using deleteVehicle.\n\nNOTE: Triggers in multiplayer are global objects and therefore should only be created on the server. Creating trigger on a client will result in trigger becoming a dead weight transferred to the server when client logs out. When created in the editor triggers are created on the server only, the trigger statements are then set on each client individually. After creating a trigger on the server, you can use setTriggerStatements and other setTriggerXXXX commands on each client to set the required client trigger operation individually.\n \n","Syn":{"Syntax":" Object = createTrigger [type, position] ","Params":["[type, position]: Array\n\n","type: String","position: Position"],"Return":" Object "},"Examples":["_trg=createTrigger[\"EmptyDetector\",getPos player];\n_trg setTriggerArea[5,5,0,false];_trg setTriggerActivation[\"CIV\",\"PRESENT\",true];_trg setTriggerStatements[\"this\", \"hint 'Civilian near player'\", \"hint 'no civilian near'\"]; "],"Additional":["setTriggerActivation","setTriggerArea","setTriggerStatements","setTriggerText","setTriggerTimeout","setTriggerType","setEffectCondition","setSoundEffect","setMusicEffect","setTitleEffect","deleteVehicle","synchronizeWaypoint","synchronizeTrigger"]},{"Name":"createUnit","Desc":" Create unit of a class that's defined in CfgVehicles.\n\nThe Group parameter MUST be an existing group or the unit won't be created. ","Syn":{"Syntax":" type createUnit [ position, group, init, skill, rank] ","Params":["type: String - Classname of unit to be created as per cfgVehicles\n\n","[ position, group, init, skill, rank]: Array","position: Position - Location unit is created at.","group: Group - Existing group new unit will join.","init: String - (optional, default \"\") Command to be executed upon creation of unit. Parameter this is set to the created unit and passed to the code.","skill: Number - (optional, default 0.5)","rank: String - (optional, default \"PRIVATE\")"],"Return":" Nothing "},"Examples":["\"SoldierWB\" createUnit [ position player, group player ];","\"soldierWB\" createUnit [ getMarkerPos \"barracks\", _groupAlpha];","\"soldierWB\" createUnit [ getMarkerPos \"marker_1\", _groupAlpha,\"loon1 = this;\n this addWeapon {binocular}\", 0.6, \"corporal\"];"],"Additional":["publicVariable","createUnit array","createCenter","createGroup","createVehicle","createVehicle array"]},{"Name":"createUnit_array","Desc":" Creates a unit (person) of the given type (type is a name of a subclass of CfgVehicles) and makes it a member of the given group. If the markers array contains several marker names, the position of a random one is used. Otherwise, the given position is used. The unit is placed inside a circle with this position as its center and placement as its radius.\n\nSpecial properties can be: \"NONE\" and \"FORM\" (also \"CAN_COLLIDE\" in Arma 3).  ","Syn":{"Syntax":" Object = group createUnit [type, position, markers, placement, special] ","Params":["group: Group\n\n","[type, position, markers, placement, special]: Array","type: String","position: Position","markers: Array","placement: Number. Radius","special: String"],"Return":" Object "},"Examples":["_unit = group player createUnit [\"SoldierWB\", Position player, [], 0, \"FORM\"];"],"Additional":["createUnit","createCenter","createGroup","createVehicle","createVehicle array"]},{"Name":"createVehicle","Desc":" Creates an empty object of given classname type (See Arma 3 Assets or createVehicle/vehicles)\n\nFor a class reference from older games see Classes. ","Syn":{"Syntax":" type createVehicle position \u003cbr\u003e(Alternate Syntax exists check Read more)","Params":["type: String - vehicle/object className\n\n","position: Position - Desired placement position. If the exact position is occupied, nearest empty position is used."],"Return":" Object "},"Examples":["_jeep = \"Jeep\" createVehicle position player;","_heli = \"AH1Z\" createVehicle getMarkerPos \"hspawn\";","_veh = createVehicle [\"ah1w\", position player, [], 0, \"FLY\"];","_veh = createVehicle [\"2S6M_Tunguska\", getMarkerPos \"marker1\", [\"marker2\",\"marker3\"], 0, \"NONE\"];"],"Additional":["createVehicle array","createVehicleLocal","createVehicleCrew","createUnit","createUnit array","deleteVehicle","createGroup","createCenter"]},{"Name":"createVehicle_array","Desc":" Creates a vehicle of the given type (type is the name of the subclass in CfgVehicles).\n\nIf the markers array contains several marker names, the position of a random one is used. Otherwise, the given position is used. The vehicle is placed inside a circle with this position as center and placement as its radius.\n\nSpecial properties can be: \"NONE\", \"FLY\" and \"FORM\". \"CAN_COLLIDE\" creates the vehicle exactly where asked, not checking if others objects can cross its 3D model. ","Syn":{"Syntax":" createVehicle [type, position, markers, placement, special] ","Params":["[type, position, markers, placement, special]: Array\n\n","type: String","position: Position","markers: Array","placement: Number","special: String"],"Return":" Object "},"Examples":["_veh = createVehicle [\"ah1w\", position player, [], 0, \"FLY\"]  ","_veh = createVehicle [\"2S6M_Tunguska\", getMarkerPos \"marker1\",[\"marker2\",\"marker3\"], 0, \"NONE\"] "],"Additional":["createVehicle","createVehicleCrew","createVehicleLocal","createUnit","createUnit array","deleteVehicle","createGroup","createCenter"]},{"Name":"createVehicleCrew","Desc":" Creates crew to given empty vehicle. Crew members are default crew defined in config. Crew side will also correspond to vehicle's faction. ","Syn":{"Syntax":" createVehicleCrew vehicle ","Params":["vehicle: Object"],"Return":" Nothing "},"Examples":["// Spawn a flying UAV with crew.  \nmyUAV = [getPos player, 0, \"B_UAV_02_F\", west] call BIS_fnc_spawnVehicle;\ncreateVehicleCrew (myUAV select 0);\n","_veh = createVehicle [\"O_MRAP_02_hmg_F\", position player, [], 0, \"NONE\"];\ncreateVehicleCrew _veh;\n{\n\u0009diag_log [_x, faction _x, side _x, side group _x];\n} forEach crew _veh;\n\n[O Alpha 1-1:1,\"OPF_F\",EAST,EAST]\n[O Alpha 1-1:2,\"OPF_F\",EAST,EAST]\n"],"Additional":["deleteVehicleCrew","moveInDriver","moveInGunner","moveInCommander","moveInTurret","moveInCargo"]},{"Name":"createVehicleLocal","Desc":" Creates an object of the given type. Created object is not transferred through network in MP games. ","Syn":{"Syntax":" Object = type createVehicleLocal position ","Params":["type: String\n\n","position: Position"],"Return":" Object "},"Examples":["_lightsource = \"#lightpoint\" createVehicleLocal _pos;"],"Additional":["createVehicle","deleteVehicle","createUnit","createUnit array","createVehicle array"]},{"Name":"crew","Desc":" Returns the crew (both dead and alive) of the given vehicle. ","Syn":{"Syntax":" Array = crew vehicleName ","Params":["vehicleName: Object"],"Return":" Array -  An array with all units in the vehicle is returned. "},"Examples":["player in (crew _tank);"],"Additional":["commander","driver","gunner"]},{"Name":"ctrlActivate","Desc":" Launch actions attached to given (button based) control. ","Syn":{"Syntax":" ctrlActivate controlName","Params":["controlName: Control"],"Return":" Nothing "},"Examples":["ctrlActivate _control"],"Additional":["See also needed"]},{"Name":"ctrlAddEventHandler","Desc":" Add an event handler (User Interface Event Handlers) to the given control. Returns id of the handler or -1 when failed. ","Syn":{"Syntax":" control ctrlAddEventHandler [handler,function] ","Params":["control: Control\n\n","[handler,function]: Array","handler: String - handler name","function: String or Code - script"],"Return":" Number "},"Examples":["_map ctrlAddEventHandler [\"draw\",\"_this call BIS_fnc_strategicMapOpen_draw\"];","_map ctrlAddEventHandler [\"draw\",{hintSilent str _this}];"],"Additional":["displayAddEventHandler"]},{"Name":"ctrlAutoScrollDelay","Desc":" Returns number of seconds until auto-scroll starts. -2 if scrollbar not present. ","Syn":{"Syntax":" ctrlAutoScrollDelay control ","Params":["control: Control -"],"Return":" Number "},"Examples":["Example needed"],"Additional":["See also needed"]},{"Name":"ctrlAutoScrollRewind","Desc":" True if auto-scroll should move back to start after it reach end. ","Syn":{"Syntax":" ctrlAutoScrollRewind control ","Params":["control: Control -"],"Return":" Boolean "},"Examples":["Example needed"],"Additional":["See also needed"]},{"Name":"ctrlAutoScrollSpeed","Desc":" Returns number of seconds to auto-scroll one line. -1 if auto-scroll is disabled. -2 if scrollbar not present. ","Syn":{"Syntax":" ctrlAutoScrollSpeed control ","Params":["control: Control -"],"Return":" Number "},"Examples":["Example needed"],"Additional":["See also needed"]},{"Name":"ctrlChecked","Desc":" Returns the current state of checkbox (CT_CHECKBOXES, Type 7).  ","Syn":{"Syntax":" ctrlChecked control ","Params":["control: Control"],"Return":" Boolean "},"Examples":["Example needed"],"Additional":["ctrlSetChecked","cbChecked","cbSetChecked"]},{"Name":"ctrlCommit","Desc":" Commit control animation. ","Syn":{"Syntax":" controlName ctrlCommit time ","Params":["controlName: Control\n\n","time: Number"],"Return":" Nothing "},"Examples":["_control ctrlCommit 2"],"Additional":["See also needed"]},{"Name":"ctrlCommitted","Desc":" Check if the control animation is finished. ","Syn":{"Syntax":" Boolean = ctrlCommitted controlName","Params":["controlName: Control"],"Return":" Boolean "},"Examples":["_done = ctrlCommitted _control"],"Additional":["See also needed"]},{"Name":"ctrlCreate","Desc":" Creates new control in given display. ","Syn":{"Syntax":" display ctrlCreate [class, idc] ","Params":["display : Display\n\n","class: String - Existing classname (see ctrlCreate/classnames) of the new control (currently only configFile classes are supported)","idc: Number - IDC of the new control"],"Return":" Control "},"Examples":["_display ctrlCreate [\"RscText\", 1234];","_map = findDisplay 46 ctrlCreate [\"RscMapControl\", -1];"],"Additional":["ctrlDelete","ctrlModel","ctrlSetModel","ctrlPosition","ctrlSetPosition","ctrlClassName","ctrlModelScale","ctrlSetModelScale","ctrlModelDirAndUp","ctrlSetModelDirAndUp"]},{"Name":"ctrlDelete","Desc":" Deletes given control.\nReturns whether the deletion was successful. ","Syn":{"Syntax":" ctrlDelete control ","Params":["control: Control"],"Return":" Boolean"},"Examples":["ctrlDelete ((findDisplay 20000) displayCtrl 20001);"],"Additional":["ctrlCreate","ctrlModel","ctrlSetModel","ctrlPosition","ctrlSetPosition","ctrlClassName","displayCtrl","ctrlModelScale","ctrlSetModelScale","ctrlModelDirAndUp","ctrlSetModelDirAndUp"]},{"Name":"ctrlEnable","Desc":" Enable or disable a control of the currently active user dialog. Disabled controls cannot be clicked onto.\n\nRead Dialog Control for more information about user dialogs and controls. ","Syn":{"Syntax":" ctrlEnable [idc, enable] \u003cbr\u003e(Alternate Syntax exists check Read more)","Params":["[idc, enable]: Array\n\n","idc: Number - control ID","enable: Boolean - true to enable the control, false to disable it"],"Return":" Nothing "},"Examples":["ctrlEnable [100, false]","_ctrl ctrlEnable false"],"Additional":["ctrlEnabled"]},{"Name":"ctrlEnabled","Desc":" Returns if a control on the currently active user dialog is enabled. Disabled controls cannot be focused.\n\nRead Dialog Control for more information about user dialogs and controls. ","Syn":{"Syntax":" Boolean =  ctrlEnabled idc \u003cbr\u003e(Alternate Syntax exists check Read more)","Params":["idc: Number - control ID"],"Return":" Boolean -  \ntrue if the control is enabled, false if not. "},"Examples":["if (!(ctrlEnabled 100)) then\n{\n  ctrlEnable [100, true]\n};","_enabled = ctrlEnabled _control"],"Additional":["ctrlEnable"]},{"Name":"ctrlFade","Desc":" Returns the current fade factor of control. ","Syn":{"Syntax":" Number = ctrlFade controlName","Params":["controlName: Control"],"Return":" Number "},"Examples":["_scale = ctrlFade _control"],"Additional":["ctrlSetFade"]},{"Name":"ctrlHTMLLoaded","Desc":" Returns true when HTML content was successfully loaded.  ","Syn":{"Syntax":" ctrlHTMLLoaded control ","Params":["control: Control"],"Return":" Boolean "},"Examples":["_control htmlLoad \"test.html\";\nif (!ctrlHTMLLoaded _control) then {\n    hint \"Loading test.html failed!\";\n};\n"],"Additional":["htmlLoad","Dialog Control"]},{"Name":"ctrlIDC","Desc":" Returns control IDC.  ","Syn":{"Syntax":" ctrlIDC control ","Params":["control: Control"],"Return":" Number "},"Examples":["Example needed"],"Additional":["See also needed"]},{"Name":"ctrlIDD","Desc":" Returns display IDD.  ","Syn":{"Syntax":" ctrlIDD display ","Params":["display: Display"],"Return":" Number "},"Examples":["Example needed"],"Additional":["See also needed"]},{"Name":"ctrlMapAnimAdd","Desc":" Adds the next frame to the map animation. ","Syn":{"Syntax":" map ctrlMapAnimAdd [time, zoom, position] ","Params":["map: Control\n\n","[time, zoom, position]: Array","time: Number","zoom: Number","position: Array or Object - formats: Position2D, Position3D, Object"],"Return":" Nothing "},"Examples":["_map ctrlMapAnimAdd [1, 0.1, getMarkerPos \"anim1\"];\nctrlMapAnimCommit _map;","Centre map on player: _ctrl ctrlMapAnimAdd [0, 0.05, player];\nctrlMapAnimCommit _ctrl;"],"Additional":["mapAnimAdd","mapAnimClear","mapAnimCommit","mapAnimDone","ctrlMapAnimClear","ctrlMapAnimCommit","ctrlMapAnimDone"]},{"Name":"ctrlMapAnimClear","Desc":" Clears the map animation. ","Syn":{"Syntax":" ctrlMapAnimClear controlName","Params":["controlName: Control"],"Return":" Nothing "},"Examples":["Example needed"],"Additional":["mapAnimAdd","mapAnimClear","mapAnimCommit","mapAnimDone","ctrlMapAnimAdd","ctrlMapAnimCommit","ctrlMapAnimDone"]},{"Name":"ctrlMapAnimCommit","Desc":" Plays the map animation. ","Syn":{"Syntax":" ctrlMapAnimCommit controlName","Params":["controlName: Control"],"Return":" Nothing "},"Examples":["Centre map on player: _ctrl ctrlMapAnimAdd [0, 0.05, player];\nctrlMapAnimCommit _ctrl;"],"Additional":["mapAnimAdd","mapAnimClear","mapAnimCommit","mapAnimDone","ctrlMapAnimAdd","ctrlMapAnimClear","ctrlMapAnimDone"]},{"Name":"ctrlMapAnimDone","Desc":" Checks whether the map animation has finished. ","Syn":{"Syntax":" Boolean = ctrlMapAnimDone controlName","Params":["controlName: Control"],"Return":" Boolean "},"Examples":["Example needed"],"Additional":["mapAnimAdd","mapAnimClear","mapAnimCommit","mapAnimDone","ctrlMapAnimAdd","ctrlMapAnimClear","ctrlMapAnimCommit"]},{"Name":"ctrlMapCursor","Desc":" Changes the default cursor that appears when interacting with a map control to a custom one. Use an empty string to restore the default cursor. If the specified cursor does not exist, the default is used and no error is produced. The cursor is the name of a config entry from CfgWrapperUI / Cursors. Some possible class names:\n\n\n Arrow\n\n Track\n\n Move\n\n Scroll\n\n Rotate\n\n Track3D\n\n Move3D\n\n Rotate3D\n\n Raise3D\n\n Wait\n\n HC_move\n\n HC_overFriendly\n\n HC_overEnemy\n\n HC_overMission\n\n HC_unsel\n\n\n\nNOTE: Cursor name is case sensitive.","Syn":{"Syntax":" control ctrlMapCursor [defaultCursor, newCursor] ","Params":["control: Control - Map control\n\n","defaultCursor: String - Cursor class name","newCursor: String - Cursor class name"],"Return":" Nothing "},"Examples":["_map ctrlMapCursor [\"Track\", \"Arrow\"];","uiNamespace setVariable [\"_map\",findDisplay 12 displayCtrl 51];\n(uiNamespace getVariable \"_map\") ctrlMapCursor [\"Track\",\"HC_overFriendly\"];","findDisplay 12 displayCtrl 51 ctrlMapCursor [\"Scroll\", \"Wait\"];"],"Additional":["setMousePosition"]},{"Name":"ctrlMapMouseOver","Desc":" Returns description of map sign mouse cursor is over. ","Syn":{"Syntax":" ctrlMapMouseOver control ","Params":["control: Control -"],"Return":" Array "},"Examples":["(uiNamespace getVariable \"_map\") ctrlMapCursor [\"Track\",\"HC_overFriendly\"];\n\n_mouseover = if (count (ctrlMapMouseOver (uiNamespace getVariable \"_map\")) \u003e 0) then\n{\n\u0009ctrlMapMouseOver (uiNamespace getVariable \"_map\")\n}\nelse\n{\n\u0009[\"\"]\n};\n\nif (_mouseover select 0 == \"task\" \u0026\u0026 str(_logic getVariable \"onTaskAssigned\") != str{}) then\n{\n\u0009//--- Task\n\u0009(uiNamespace getVariable \"_map\") ctrlMapCursor [\"Track\",\"HC_overMission\"];\n}\nelse\n{\n\u0009//--- Waypoint\n\u0009(uiNamespace getVariable \"_map\") ctrlMapCursor [\"Track\",\"HC_move\"];\n};\n"],"Additional":["See also needed"]},{"Name":"ctrlMapScale","Desc":" Return the current scale of the map control.  ","Syn":{"Syntax":" Number =  ctrlMapScale controlName","Params":["controlName: Control"],"Return":" Number "},"Examples":["_scale = ctrlMapScale _control"],"Additional":["See also needed"]},{"Name":"ctrlMapScreenToWorld","Desc":" Convert screen coordinates in map to world coordinates. ","Syn":{"Syntax":" map ctrlMapScreenToWorld [x, y] ","Params":["map: Control\n\n","[x, y]: Array"],"Return":" Array (Position2D Format) "},"Examples":["_WorldCoord = _Control ctrlMapScreenToWorld _ScreenCoord","_WorldCoord = _Control ctrlMapScreenToWorld [_x,_y]"],"Additional":["ctrlMapWorldToScreen","posScreenToWorld","posWorldToScreen"]},{"Name":"ctrlMapWorldToScreen","Desc":" Transfers a map control world position to screen coordinates. ","Syn":{"Syntax":" control ctrlMapWorldToScreen position ","Params":["control: Control\n\n","position: Position"],"Return":" Array (Position2D Format) "},"Examples":["_screenCoord = _control ctrlMapWorldToScreen _worldCoord;","_screenCoord = _control ctrlMapWorldToScreen position player;"],"Additional":["ctrlMapScreenToWorld"]},{"Name":"ctrlModel","Desc":" Returns model used in 3D Dialog Control. ","Syn":{"Syntax":" ctrlModel control","Params":["control : Control - 3D control"],"Return":" String - model path"},"Examples":["_model = ctrlModel _control3D;"],"Additional":["ctrlCreate","ctrlDelete","ctrlSetModel","ctrlPosition","ctrlSetPosition","ctrlClassName","displayCtrl","ctrlModelScale","ctrlSetModelScale","ctrlModelDirAndUp","ctrlSetModelDirAndUp"]},{"Name":"ctrlModelDirection","Desc":" Returns vectorDir and vectorUp of the model used in 3D Dialog Control. ","Syn":{"Syntax":" ctrlModelDirAndUp control","Params":["control : Control - 3D control"],"Return":" Array - format [vectorDir, vectorUp]"},"Examples":["_vectorDirAndUp = ctrlModelDirAndUp _control3D;"],"Additional":["ctrlCreate","ctrlDelete","ctrlSetModelDirAndUp","ctrlModel","ctrlSetModel","ctrlSetModelScale","ctrlModelScale","ctrlPosition","ctrlSetPosition","ctrlClassName","displayCtrl"]},{"Name":"ctrlModelSide","Desc":" REMOVED FROM Arma 3\n Returns vector which is vectorCrossProduct of vectorDir and vectorUp of the model used in 3D Dialog Control. In other words compared to [x,y,z] orientation, if ctrlModelUp is z vector and ctrlModelDirection is y vector then ctrlModelSide is x vector.  ","Syn":{"Syntax":" ctrlModelSide control","Params":["control : Control - 3D control"],"Return":" Array - vector "},"Examples":["_vectorSide = ctrlModelSide _control3D;"],"Additional":["ctrlCreate","ctrlDelete","ctrlSetDirection","ctrlModel","ctrlSetModel","ctrlModelDirection","ctrlModelUp","ctrlPosition","ctrlSetPosition","ctrlClassName","displayCtrl"]},{"Name":"ctrlModelUp","Desc":" Returns vectorDir and vectorUp of the model used in 3D Dialog Control. ","Syn":{"Syntax":" ctrlModelDirAndUp control","Params":["control : Control - 3D control"],"Return":" Array - format [vectorDir, vectorUp]"},"Examples":["_vectorDirAndUp = ctrlModelDirAndUp _control3D;"],"Additional":["ctrlCreate","ctrlDelete","ctrlSetModelDirAndUp","ctrlModel","ctrlSetModel","ctrlSetModelScale","ctrlModelScale","ctrlPosition","ctrlSetPosition","ctrlClassName","displayCtrl"]},{"Name":"ctrlParent","Desc":" Returns container of the given control. ","Syn":{"Syntax":" Display = ctrlParent controlName","Params":["controlName: Control"],"Return":" Display "},"Examples":["_display = ctrlParent _control"],"Additional":["See also needed"]},{"Name":"ctrlPosition","Desc":" Returns the current position of 2D control as [x, y, w, h] array. For 3D control it returns relative [x,y,z]. ","Syn":{"Syntax":" ctrlPosition controlName","Params":["controlName: Control"],"Return":" Array "},"Examples":["_pos = ctrlPosition _control;"],"Additional":["ctrlCreate","ctrlDelete","ctrlModel","ctrlSetModel","ctrlSetPosition","ctrlClassName","displayCtrl","ctrlModelScale","ctrlSetModelScale","ctrlModelDirAndUp","ctrlSetModelDirAndUp"]},{"Name":"ctrlRemoveAllEventHandlers","Desc":" Remove all even handlers from the given control. ","Syn":{"Syntax":" control ctrlRemoveAllEventHandlers handler name ","Params":["control: Control -\n\n","handler name: String -"],"Return":" Nothing "},"Examples":["Example needed"],"Additional":["See also needed"]},{"Name":"ctrlRemoveEventHandler","Desc":" Remove a given event handler from the given control. ","Syn":{"Syntax":" control ctrlRemoveEventHandler [handler name,id] ","Params":["control: Control -\n\n","[handler name,id]: Array -"],"Return":" Nothing "},"Examples":["Example needed"],"Additional":["See also needed"]},{"Name":"ctrlScale","Desc":" Returns the current scale of the control. ","Syn":{"Syntax":" Number = ctrlScale controlName","Params":["controlName: Control"],"Return":" Number "},"Examples":["_scale = ctrlScale _control"],"Additional":["ctrlSetScale","ctrlModelScale","ctrlSetModelScale"]},{"Name":"ctrlSetActiveColor","Desc":" Sets text color of given control when control is selected. ","Syn":{"Syntax":" display ctrlSetActiveColor color ","Params":["display: Control\n\n","color: Array (format Color)"],"Return":" Nothing "},"Examples":["_control ctrlSetActiveColor [1, 0, 0, 1]"],"Additional":["See also needed"]},{"Name":"ctrlSetAutoScrollDelay","Desc":" Sets number of second before auto-scroll starts. ","Syn":{"Syntax":" control ctrlSetAutoScrollDelay delay ","Params":["control: Control -\n\n","delay: Number -"],"Return":" Nothing "},"Examples":["Example needed"],"Additional":["See also needed"]},{"Name":"ctrlSetAutoScrollRewind","Desc":" Defines if scroll should rewind when auto-scroll reach end. ","Syn":{"Syntax":" control ctrlSetAutoScrollRewind delay ","Params":["control: Control -\n\n","delay: Boolean -"],"Return":" Nothing "},"Examples":["Example needed"],"Additional":["See also needed"]},{"Name":"ctrlSetAutoScrollSpeed","Desc":" Sets number of second required to scroll to next line. If speed smaller than 0,auto-scroll is disabled. ","Syn":{"Syntax":" control ctrlSetAutoScrollSpeed speed ","Params":["control: Control -\n\n","speed: Number -"],"Return":" Nothing "},"Examples":["Example needed"],"Additional":["See also needed"]},{"Name":"ctrlSetBackgroundColor","Desc":" Sets background color of given control. ","Syn":{"Syntax":" display ctrlSetBackgroundColor color ","Params":["display: Control\n\n","color: Array (format Color)"],"Return":" Nothing "},"Examples":["_control ctrlSetBackgroundColor [1, 0, 0, 1]"],"Additional":["See also needed"]},{"Name":"ctrlSetChecked","Desc":" Sets checked state of checkbox (CT_CHECKBOXES, Type 7).  ","Syn":{"Syntax":" control ctrlSetChecked bool ","Params":["control: Control\n\n","bool: Boolean"],"Return":" Nothing "},"Examples":["Example needed"],"Additional":["ctrlChecked","cbChecked","cbSetChecked"]},{"Name":"ctrlSetEventHandler","Desc":" Sets given event handler of given control.\n\nThe provided function should return true/false indicating that the event has handled this event fully or not and whether the engine should execute it's default code or not afterwards. \n\nSee User Interface Event Handlers for the full list of handler names.\n\nIf applicable, see DIK_KeyCodes for a list of key code constants, which are relevant to key related user interface events like: KeyDown \u0026 KeyUp. ","Syn":{"Syntax":" controlName ctrlSetEventHandler [handlerName, function] ","Params":["controlName: Control\n\n","[handlerName, function]: Array","handlerName: String","function: String"],"Return":" Nothing "},"Examples":["_control ctrlSetEventHandler [\"KeyDown\", \"\"]","(_display displayCtrl 108) ctrlSetEventHandler [\"LBSelChanged\",\"['ListChange',_this] call FireEvents\"];"],"Additional":["displaySetEventHandler","UI Event Handlers","DIK KeyCodes"]},{"Name":"ctrlSetFade","Desc":" Sets wanted transparency for control animation. ","Syn":{"Syntax":" controlName ctrlSetFade fade ","Params":["controlName: Control\n\n","fade: Number"],"Return":" Nothing "},"Examples":["_control ctrlSetFade 1"],"Additional":["ctrlFade"]},{"Name":"ctrlSetFocus","Desc":" Set the input focus on given control. ","Syn":{"Syntax":" ctrlSetFocus controlName","Params":["controlName: Control"],"Return":" Nothing "},"Examples":["ctrlSetFocus _control"],"Additional":["See also needed"]},{"Name":"ctrlSetFont","Desc":" Sets the font of given control. \n\n","Syn":{"Syntax":" controlName ctrlSetFont fontName\n\n\n","Params":["controlName: Control\n\n","fontName: String"],"Return":" Nothing "},"Examples":["_control ctrlSetFont \"TahomaB\""],"Additional":["See also needed"]},{"Name":"ctrlSetFontH1","Desc":" Sets H1 font of given HTML control. ","Syn":{"Syntax":" controlName ctrlSetFontH1 fontName ","Params":["controlName: Control\n\n","fontName: String"],"Return":" Nothing "},"Examples":["_control ctrlSetFontH1 \"TahomaB\""],"Additional":["See also needed"]},{"Name":"ctrlSetFontH1B","Desc":" Sets H1 bold font of given HTML control. ","Syn":{"Syntax":" controlName ctrlSetFontH1B fontName ","Params":["controlName: Control\n\n","fontName: String"],"Return":" Nothing "},"Examples":["_control ctrlSetFontH1B \"TahomaB\""],"Additional":["See also needed"]},{"Name":"ctrlSetFontH2","Desc":" Sets H2 font of given HTML control ","Syn":{"Syntax":" controlName ctrlSetFontH2 fontName ","Params":["controlName: Control\n\n","fontName: String"],"Return":" Nothing "},"Examples":["_control ctrlSetFontH2 \"TahomaB\""],"Additional":["See also needed"]},{"Name":"ctrlSetFontH2B","Desc":" Sets H2 bold font of given HTML control. ","Syn":{"Syntax":" controlName ctrlSetFontH2B fontName ","Params":["controlName: Control\n\n","fontName: String"],"Return":" Nothing "},"Examples":["_control ctrlSetFontH2B \"TahomaB\""],"Additional":["See also needed"]},{"Name":"ctrlSetFontH3","Desc":" Sets H3 font of given HTML control. ","Syn":{"Syntax":" controlName ctrlSetFontH3 fontName ","Params":["controlName: Control\n\n","fontName: String"],"Return":" Nothing "},"Examples":["_control ctrlSetFontH3 \"TahomaB\""],"Additional":["See also needed"]},{"Name":"ctrlSetFontH3B","Desc":" Sets H3 bold font of given HTML control. ","Syn":{"Syntax":" controlName ctrlSetFontH3B fontName ","Params":["controlName: Control\n\n","fontName: String"],"Return":" Nothing "},"Examples":["_control ctrlSetFontH3B \"TahomaB\""],"Additional":["See also needed"]},{"Name":"ctrlSetFontH4","Desc":" Sets H4 font of given HTML control. ","Syn":{"Syntax":" controlName ctrlSetFontH4 fontName ","Params":["controlName: Control\n\n","fontName: String"],"Return":" Nothing "},"Examples":["_control ctrlSetFontH4 \"TahomaB\""],"Additional":["See also needed"]},{"Name":"ctrlSetFontH4B","Desc":" Sets H4 bold font of given HTML control. ","Syn":{"Syntax":" controlName ctrlSetFontH4B fontName ","Params":["controlName: Control\n\n","fontName: String"],"Return":" Nothing "},"Examples":["_control ctrlSetFontH4B \"TahomaB\""],"Additional":["See also needed"]},{"Name":"ctrlSetFontH5","Desc":" Sets H5 font of given HTML control. ","Syn":{"Syntax":" controlName ctrlSetFontH5 fontName ","Params":["controlName: Control\n\n","fontName: String"],"Return":" Nothing "},"Examples":["_control ctrlSetFontH5 \"TahomaB\""],"Additional":["See also needed"]},{"Name":"ctrlSetFontH5B","Desc":" Sets H5 bold font of given HTML control. ","Syn":{"Syntax":" controlName ctrlSetFontH5B fontName ","Params":["controlName: Control\n\n","fontName: String"],"Return":" Nothing "},"Examples":["_control ctrlSetFontH5B \"TahomaB\""],"Additional":["See also needed"]},{"Name":"ctrlSetFontH6","Desc":" Sets H6 font of given HTML control. ","Syn":{"Syntax":" controlName ctrlSetFontH6 fontName ","Params":["controlName: Control\n\n","fontName: String"],"Return":" Nothing "},"Examples":["_control ctrlSetFontH6 \"TahomaB\""],"Additional":["See also needed"]},{"Name":"ctrlSetFontH6B","Desc":" Sets H6 bold font of given HTML control. ","Syn":{"Syntax":" controlName ctrlSetFontH6B fontName ","Params":["controlName: Control\n\n","fontName: String"],"Return":" Nothing "},"Examples":["_control ctrlSetFontH6B \"TahomaB\""],"Additional":["See also needed"]},{"Name":"ctrlSetFontHeight","Desc":" Sets the font size of given control. ","Syn":{"Syntax":" controlName ctrlSetFontHeight height \n\n","Params":["controlName: Control\n\n","height: Number"],"Return":" Nothing "},"Examples":["_control ctrlSetFontHeight 0.05"],"Additional":["See also needed"]},{"Name":"ctrlSetFontHeightH1","Desc":" Sets H1 font size of given HTML control. ","Syn":{"Syntax":" controlName ctrlSetFontHeightH1 height ","Params":["controlName: Control\n\n","height: Number"],"Return":" Nothing "},"Examples":["_control ctrlSetFontHeightH1 0.05"],"Additional":["See also needed"]},{"Name":"ctrlSetFontHeightH2","Desc":" Sets H2 font size of given HTML control. ","Syn":{"Syntax":" controlName ctrlSetFontHeightH2 height ","Params":["controlName: Control\n\n","height: Number"],"Return":" Nothing "},"Examples":["_control ctrlSetFontHeightH2 0.05"],"Additional":["See also needed"]},{"Name":"ctrlSetFontHeightH3","Desc":" Sets H3 font size of given HTML control. ","Syn":{"Syntax":" controlName ctrlSetFontHeightH3 height ","Params":["controlName: Control\n\n","height: Number"],"Return":" Nothing "},"Examples":["_control ctrlSetFontHeightH3 0.05"],"Additional":["See also needed"]},{"Name":"ctrlSetFontHeightH4","Desc":" Sets H3 font size of given HTML control. ","Syn":{"Syntax":" controlName ctrlSetFontHeightH4 height ","Params":["controlName: Control\n\n","height: Number"],"Return":" Nothing "},"Examples":["_control ctrlSetFontHeightH4 0.05"],"Additional":["See also needed"]},{"Name":"ctrlSetFontHeightH5","Desc":" Sets H5 font size of given HTML control. ","Syn":{"Syntax":" controlName ctrlSetFontHeightH5 height ","Params":["controlName: Control\n\n","height: Number"],"Return":" Nothing "},"Examples":["_control ctrlSetFontHeightH5 0.05"],"Additional":["See also needed"]},{"Name":"ctrlSetFontHeightH6","Desc":" Sets H6 font size of given HTML control. ","Syn":{"Syntax":" controlName ctrlSetFontHeightH6 height ","Params":["controlName: Control\n\n","height: Number"],"Return":" Nothing "},"Examples":["_control ctrlSetFontHeightH6 0.05"],"Additional":["See also needed"]},{"Name":"ctrlSetFontP","Desc":" Sets P font of given HTML control or its size.  ","Syn":{"Syntax":" control ctrlSetFontP fontOrSize ","Params":["control: Control\n\n","fontOrSize: String or Number"],"Return":" Nothing "},"Examples":["_control ctrlSetFontP \"TahomaB\"","_control ctrlSetFontP 0.05"],"Additional":["See also needed"]},{"Name":"ctrlSetFontPB","Desc":" Sets P bold font of given HTML control. ","Syn":{"Syntax":" controlName ctrlSetFontPB fontName ","Params":["controlName: Control\n\n","fontName: String"],"Return":" Nothing "},"Examples":["_control ctrlSetFontPB \"TahomaB\""],"Additional":["See also needed"]},{"Name":"ctrlSetForegroundColor","Desc":" Sets foreground color of given control. Color is in format Color. ","Syn":{"Syntax":" display ctrlSetForegroundColor color ","Params":["display: Control\n\n","color: Array"],"Return":" Nothing "},"Examples":["_control ctrlSetForegroundColor [1, 0, 0, 1]"],"Additional":["See also needed"]},{"Name":"ctrlSetModel","Desc":" Sets model for 3D Dialog Control. ","Syn":{"Syntax":" control ctrlSetModel model","Params":["control : Control - 3D control\n\n","model : String - model path"],"Return":" Nothing "},"Examples":["_control3D ctrlSetModel \"\\a3\\Ui_f\\objects\\Compass.p3d\";"],"Additional":["ctrlCreate","ctrlDelete","ctrlModel","ctrlPosition","ctrlSetPosition","ctrlClassName","displayCtrl","ctrlModelScale","ctrlSetModelScale","ctrlModelDirAndUp","ctrlSetModelDirAndUp"]},{"Name":"ctrlSetPosition","Desc":" Sets wanted position and size for 2D control animation. Width and height are optional. ctrlCommit is required to complete the operation. For 3D control, param is relative [x,y,z] and no ctrlCommit is required as it cannot be animated. ","Syn":{"Syntax":" controlName ctrlSetPosition [x, y, w, h] \u003cbr\u003e(Alternate Syntax exists check Read more)","Params":["controlName: Control - 2D control\n\n","[x, y, w, h]: Array"],"Return":" Nothing "},"Examples":["_control2D ctrlSetPosition [0, 0, 1, 1];\n_control2D ctrlCommit 0;","_control3D ctrlSetPosition [0.5, 1, 0.5]; //centered and 1m away from screen"],"Additional":["ctrlCreate","ctrlDelete","ctrlModel","ctrlSetModel","ctrlPosition","ctrlClassName","displayCtrl","ctrlModelScale","ctrlSetModelScale","ctrlModelDirAndUp","ctrlSetModelDirAndUp"]},{"Name":"ctrlSetScale","Desc":" Sets wanted scale for control animation. Top left corner remains same. ","Syn":{"Syntax":" controlName ctrlSetScale scale ","Params":["controlName: Control\n\n","scale: Number"],"Return":" Nothing "},"Examples":["_control ctrlSetScale 0.5"],"Additional":["ctrlScale","ctrlModelScale","ctrlSetModelScale"]},{"Name":"ctrlSetStructuredText","Desc":" Set the structured text which will be displayed in structured text control. ","Syn":{"Syntax":" control ctrlSetStructuredText structuredText ","Params":["control: Control\n\n","structuredText: Structured Text"],"Return":" Nothing "},"Examples":["_control ctrlSetStructuredText parseText \"First line\u003cimg image=data\\isniper.paa /\u003e\u003cbr /\u003eSecond line\""],"Additional":["composeText","parseText","text"]},{"Name":"ctrlSetText","Desc":" Set the text of a control of the currently active user dialog or display. This command can be used for: static texts, buttons, edit lines and active texts as well as for images, where you can use it to set the image path.\n\nRead Dialog Control for more information about user dialogs and controls. ","Syn":{"Syntax":" ctrlSetText [idc, text] \u003cbr\u003e(Alternate Syntax exists check Read more)","Params":["[idc, text]: Array\n\n","idc: Integer - control ID","text: String - text or image path, depending on the control type"],"Return":" Nothing "},"Examples":["ctrlSetText [100, \"Hello world\"];//for Dialogs","_control ctrlSetText \"Hello world.\";// for Displays"],"Additional":["ctrlText"]},{"Name":"ctrlSetTextColor","Desc":" Sets text color of given control. Color is in format Color. ","Syn":{"Syntax":" display ctrlSetTextColor color ","Params":["display: Control\n\n","color: Array"],"Return":" Nothing "},"Examples":["_control ctrlSetTextColor [1, 0, 0, 1]"],"Additional":["See also needed"]},{"Name":"ctrlSetTooltip","Desc":" Sets tooltip text of given control. ","Syn":{"Syntax":" control ctrlSetTooltip text ","Params":["control: Control - Any control type, except for CT_STATIC \u0026 CT_STRUCTURED_TEXT\n\n","text: String"],"Return":" Nothing "},"Examples":["_control ctrlSetTooltip \"tooltip\"","((findDisplay 10000) displayCtrl 10001) ctrlSetTooltip \"ThisIsAGoodTip\"\n\n"],"Additional":["See also needed"]},{"Name":"ctrlSetTooltipColorBox","Desc":" Sets tooltip border color of given control. Color is in format Color. ","Syn":{"Syntax":" display ctrlSetTooltipColorBox color ","Params":["display: Control\n\n","color: Array"],"Return":" Nothing "},"Examples":["_control ctrlSetTooltipColorBox [1, 0, 0, 1]"],"Additional":["See also needed"]},{"Name":"ctrlSetTooltipColorShade","Desc":" Sets tooltip background color of given control. Color is in format Color. ","Syn":{"Syntax":" display ctrlSetTooltipColorShade color ","Params":["display: Control\n\n","color: Array"],"Return":" Nothing "},"Examples":["_control ctrlSetTooltipColorShade [1, 0, 0, 1]"],"Additional":["See also needed"]},{"Name":"ctrlSetTooltipColorText","Desc":" Sets tooltip text color of given control. Color is in format Color. ","Syn":{"Syntax":" display ctrlSetTooltipColorText color ","Params":["display: Control\n\n","color: Array"],"Return":" Nothing "},"Examples":["_control ctrlSetTooltipColorText [1, 0, 0, 1]"],"Additional":["See also needed"]},{"Name":"ctrlShow","Desc":" Set if a control of the currently active user dialog is shown or not.\n\nRead Dialog Control for more information about user dialogs and controls. ","Syn":{"Syntax":" ctrlShow [idc, show] \u003cbr\u003e(Alternate Syntax exists check Read more)","Params":["[idc, show]: Array\n\n","idc: Integer - control ID","show: Boolean - true if the control should be shown, false if not"],"Return":" Nothing "},"Examples":["ctrlShow [100, false ];","_control ctrlShow false;"],"Additional":["ctrlVisible","ctrlShown","ctrlEnable"]},{"Name":"ctrlShown","Desc":" Returns whether given control is shown. ","Syn":{"Syntax":" Boolean = ctrlShown controlName","Params":["controlName: Control"],"Return":" Boolean "},"Examples":["_bool = ctrlShown _ctrl;"],"Additional":["ctrlShow","ctrlVisible"]},{"Name":"ctrlText","Desc":" Returns the text of a control of the currently active user dialog. This command can be used on static texts, buttons, edit lines and active texts as well as for images, where it returns the image path.\n\nRead Dialog Control for more information about user dialogs and controls. ","Syn":{"Syntax":" String =  ctrlText idc \u003cbr\u003e(Alternate Syntax exists check Read more)","Params":["idc: Number - control ID"],"Return":" String - The text or image path is returned, dependent on the control type. "},"Examples":["_text = ctrlText 100","_text = ctrlText _control"],"Additional":["ctrlSetText"]},{"Name":"ctrlTextHeight","Desc":" Returns the text height.  ","Syn":{"Syntax":" ctrlTextHeight structuredTextControl ","Params":["structuredTextControl: Control"],"Return":" Number "},"Examples":["Example needed"],"Additional":["See also needed"]},{"Name":"ctrlType","Desc":" Returns value representing type of control. ","Syn":{"Syntax":" Number = ctrlType controlName ","Params":["controlName: Control"],"Return":" Number "},"Examples":["_type = ctrlType _control"],"Additional":["See also needed"]},{"Name":"ctrlVisible","Desc":" Returns if a control of the currently active user dialog is shown or not. Read Dialog Control for more information about user dialogs and controls. ","Syn":{"Syntax":" Boolean = ctrlVisible idc ","Params":["idc: Number - control ID"],"Return":" Boolean - true if the control is shown, false if not "},"Examples":["_bool = ctrlVisible 100;"],"Additional":["ctrlShow","ctrlShown"]},{"Name":"curatorAddons","Desc":" Returns list of addons allowed to given curator. ","Syn":{"Syntax":" curatorAddons curatorObj ","Params":["curatorObj: Object - Curator module."],"Return":" Array "},"Examples":["_addons = curatorAddons myCurator;"],"Additional":["Curator","addCuratorAddons","removeCuratorAddons","removeAllCuratorAddons"]},{"Name":"curatorCamera","Desc":" Returns curator camera object. ","Syn":{"Syntax":" curatorCamera ","Params":null,"Return":" Object "},"Examples":["Example needed"],"Additional":["See also needed"]},{"Name":"curatorCameraArea","Desc":" Returns all curator camera areas. ","Syn":{"Syntax":" curatorCameraArea curatorObj ","Params":["curatorObj: Object - Curator module."],"Return":" Array "},"Examples":["_camArea = curatorCameraArea myCurator;"],"Additional":["Curator","addCuratorCameraArea","removeCuratorCameraArea","removeAllCuratorCameraAreas"]},{"Name":"curatorCameraAreaCeiling","Desc":" Returns ceiling height for curator camera.  ","Syn":{"Syntax":" curatorCameraAreaCeiling curatorObj ","Params":["curatorObj: Object - Curator module."],"Return":" Number "},"Examples":["Example needed"],"Additional":["See also needed"]},{"Name":"curatorCoef","Desc":" Returns current coeficient setting. ","Syn":{"Syntax":" curatorObj curatorCoef action ","Params":["curatorObj: Object - Curator module.\n\n","action: String"],"Return":" Number "},"Examples":["curatorModule curatorCoef \"Place\""],"Additional":["See also needed"]},{"Name":"curatorEditableObjects","Desc":" Returns all editable objects which belong to a curator. ","Syn":{"Syntax":" curatorEditableObjects curatorObj ","Params":["curatorObj: Object - Curator module."],"Return":" Array "},"Examples":["_objects = curatorEditableObjects myCurator;"],"Additional":["Curator","curatorMouseOver","addCuratorEditableObjects","removeCuratorEditableObjects"]},{"Name":"curatorEditingArea","Desc":" Returns all curator editing areas. ","Syn":{"Syntax":" curatorEditingArea curatorObj ","Params":["curatorObj: Object - Curator module."],"Return":" Array "},"Examples":["_editingArea = curatorEditingArea myCurator;"],"Additional":["Curator","addCuratorEditingArea","removeCuratorEditingArea","removeAllCuratorEditingAreas"]},{"Name":"curatorEditingAreaType","Desc":" Returns type of edit areas assigned to curator (blacklist/whitelist). ","Syn":{"Syntax":" curatorEditingAreaType obj ","Params":["obj: Object"],"Return":" Boolean "},"Examples":["Example needed"],"Additional":["See also needed"]},{"Name":"curatorMouseOver","Desc":" Returns Curator Editable Object under curator mouse pointer in form of array:\n [] - when not in curator mode\n [\"\"] - if no curator editable object under the pointer in curator mode\n [typeName, Curator Editable Object] - if there is curator editable object under the pointer in curator mode ","Syn":{"Syntax":" curatorMouseOver ","Params":null,"Return":" Array "},"Examples":["_mouseOver = curatorMouseOver;\n\n[\n\u0009\"OBJECT\",\n\u00093594ab00# 164218: apc_wheeled_01_cannon_f.p3d\n]"],"Additional":["Curator","curatorEditableObjects"]},{"Name":"curatorPoints","Desc":" Returns number of points that curator have. Points can be only in range from 0 to 1. ","Syn":{"Syntax":" curatorPoints curatorObj ","Params":["curatorObj: Object - Curator module."],"Return":" Number "},"Examples":["_points = curatorPoints myCurator;"],"Additional":["Curator","addCuratorPoints"]},{"Name":"curatorRegisteredObjects","Desc":" Returns array with all objects that has curator registered and their settings. ","Syn":{"Syntax":" curatorRegisteredObjects curatorObj ","Params":["curatorObj: Object - Curator module."],"Return":" Array "},"Examples":["Example needed"],"Additional":["See also needed"]},{"Name":"curatorSelected","Desc":" Returns list of all curator selected items. ","Syn":{"Syntax":" curatorSelected ","Params":null,"Return":" Array "},"Examples":["Example needed"],"Additional":["See also needed"]},{"Name":"curatorWaypointCost","Desc":" Return current price for placing waypoints (curator specific). ","Syn":{"Syntax":" curatorWaypointCost curatorObj ","Params":["curatorObj: Object - Curator module."],"Return":" Number "},"Examples":["Example needed"],"Additional":["See also needed"]},{"Name":"currentCommand","Desc":" Return the current command type (empty string when no command) for the commander of given vehicle (or for a given soldier). Value returned can be one of:\n\n\"WAIT\", \"ATTACK\", \"HIDE\", \"MOVE\", \"HEAL\", \"REPAIR\", \"REFUEL\", \"REARM\", \"SUPPORT\", \"JOIN\", \"GET IN\", \"FIRE\", \"GET OUT\", \"STOP\", \"EXPECT\", \"ACTION\", \"ATTACKFIRE\",\n","Syn":{"Syntax":" String = currentCommand vehicleName ","Params":["vehicleName: Object"],"Return":" String "},"Examples":["Example needed"],"Additional":["See also needed"]},{"Name":"currentMagazine","Desc":" Returns class name of currently loaded vehicle's magazine.  ","Syn":{"Syntax":" currentMagazine vehicle ","Params":["vehicle: Object - unit or vehicle"],"Return":" String "},"Examples":["_magazineClass = currentMagazine player;//Example: \"30Rnd_545x39_AK\""],"Additional":["magazines","currentMagazineDetail","currentWeapon","currentMuzzle","currentVisionMode","currentWeaponMode","currentZeroing","magazinesTurret","weaponsTurret"]},{"Name":"currentMagazineDetail","Desc":" Returns description of vehicle's currently loaded magazine, its ammo count (current/default) and its id.  ","Syn":{"Syntax":" currentMagazineDetail vehicle ","Params":["vehicle: Object - unit or vehicle"],"Return":" String "},"Examples":["_currentMagazineDetail = currentMagazineDetail player; //\"6.5mm 30Rnd STANAG Mag(30/30)[id:0]\"","_currentMagazineDetail = currentMagazineDetail Mi_48; //\"30mm HE Shells(250/250)[id:21]\""],"Additional":["magazinesDetail","currentMagazine"]},{"Name":"currentMagazineDetailTurret","Desc":" Returns the class name of currently used magazine on specified turret. Use turret path [-1] for driver's turret. Note that a turret is not loaded until unit enters it, so this command will return \"\". ","Syn":{"Syntax":" vehicle currentMagazineDetailTurret [turret path] ","Params":["vehicle: Object\n\n","[turret path]: Array"],"Return":" String "},"Examples":["_magazineDetail = MBT_Kuma currentMagazineDetailTurret [0];"],"Additional":["currentMagazineTurret","currentWeaponTurret","addWeaponTurret","removeWeaponTurret","turretLocal"]},{"Name":"currentMagazineTurret","Desc":" Returns the name of the type of the currently using magazine on specified turret. Use turret path [-1] for driver's turret. Note that a turret is not loaded until unit enters it, so this command will return \"\". ","Syn":{"Syntax":" vehicle currentMagazineTurret [turret path] ","Params":["vehicle: Object\n\n","[turret path]: Array"],"Return":" String "},"Examples":["_magazine = MBT_Kuma currentMagazineTurret [0];"],"Additional":["currentMagazineDetailTurret","currentWeaponTurret","addWeaponTurret","removeWeaponTurret","turretLocal"]},{"Name":"currentMuzzle","Desc":" Returns current muzzle of unit's weapon. ","Syn":{"Syntax":" currentMuzzle gunner ","Params":["gunner: Object"],"Return":" String - current muzzle "},"Examples":["_muzzle = currentMuzzle player;","_muzzle = currentMuzzle gunner vehicle player;"],"Additional":["currentWeapon"]},{"Name":"currentTask","Desc":" Return current task of given person. ","Syn":{"Syntax":" currentTask person ","Params":["person: Object -"],"Return":" Task "},"Examples":["Example needed"],"Additional":["createSimpleTask","simpleTasks","taskCompleted"]},{"Name":"currentTasks","Desc":" List all uncompleted tasks. ","Syn":{"Syntax":" currentTasks member ","Params":["member: Team Member"],"Return":" Array "},"Examples":["_playerTasks = currentTasks teamMember player"],"Additional":["taskCompleted"]},{"Name":"currentVisionMode","Desc":" Returns current vision mode of unit's weapon.\n\n\n 0 - daytime\n\n 1 - night vision\n\n 2 - FLIR ","Syn":{"Syntax":" currentVisionMode unit ","Params":["unit: Object"],"Return":" Number "},"Examples":["_currMode = currentVisionMode gunner _tank","if (currentVisionMode player == 1) then\n{\n\u0009hint \"nightvision active\";\n};\n"],"Additional":["currentMagazine","currentWeapon","currentMuzzle","currentWeaponMode","currentZeroing","magazinesTurret","weaponsTurret"]},{"Name":"currentWaypoint","Desc":" Return the index of the current waypoint.\n\nTo determine the validity of the index, compare it to the waypoints count.\n\nIf all waypoints are 'completed', then the index is 1 greater than the last valid index.\n\nIf there are no waypoints, then the index is 0.\n\nBy default, a group has 1 waypoint at their starting position, which is considered completed and so the currentWaypoint is 1.\n","Syn":{"Syntax":" currentWaypoint groupName ","Params":["groupName: Group"],"Return":" Number "},"Examples":["_index = currentWaypoint group player;"],"Additional":["waypoints","deleteWaypoint","copyWaypoints","setCurrentWaypoint","setWaypointBehaviour","setWaypointCombatMode","setWaypointCompletionRadius","setWaypointDescription","setWaypointFormation","setWaypointHousePosition","setWaypointPosition","setWaypointScript","setWaypointSpeed","setWaypointStatements","setWaypointTimeout","setWaypointType","setWaypointVisible","waypointAttachVehicle","waypointAttachedVehicle","setWaypointLoiterRadius","waypointLoiterRadius","addWaypoint","setWaypointLoiterType","waypointSpeed","setWPPos","waypointName"]},{"Name":"currentWeapon","Desc":" Return the name of the currently selected weapon (on the primary turret for vehicles).  ","Syn":{"Syntax":" currentWeapon vehicle ","Params":["vehicle: Object"],"Return":" String "},"Examples":["_weaponClass = currentWeapon (vehicle player);//Example: \"M16A2GL\"","_weaponClass = currentWeapon player;"],"Additional":["currentMagazine","currentMuzzle","currentVisionMode","currentWeaponMode","currentZeroing","magazinesTurret","weaponsTurret"]},{"Name":"currentWeaponMode","Desc":" Returns current weapon mode of unit's weapon. Result can be: \"Single\", \"Burst\", \"FullAuto\", \"manual\", \"player\" ","Syn":{"Syntax":" currentWeaponMode gunner ","Params":["gunner: Object"],"Return":" String "},"Examples":[" _weaponMode = currentWeaponMode player;"," _weaponMode = currentWeaponMode gunner vehicle player;"],"Additional":["SWITCHWEAPON","currentWeapon"]},{"Name":"currentWeaponTurret","Desc":" Returns the name of the currently selected weapon on specified turret. Use turret path [-1] for driver's turret. ","Syn":{"Syntax":" vehicle currentWeaponTurret [turret path] ","Params":["vehicle: Object\n\n","[turret path]: Array"],"Return":" String "},"Examples":["_weapon = MBT_Kuma currentWeaponTurret [0];"],"Additional":["currentMagazineDetailTurret","currentMagazineTurret","addWeaponTurret","removeWeaponTurret","turretLocal"]},{"Name":"currentZeroing","Desc":" Returns zeroing of unit's weapon. ","Syn":{"Syntax":" currentZeroing gunner ","Params":["gunner: Object"],"Return":" Number "},"Examples":["_zeroing = currentZeroing player; "],"Additional":["See also needed"]},{"Name":"cursorTarget","Desc":" This is the entity pointed to by a players cursor. ","Syn":{"Syntax":" cursorTarget ","Params":null,"Return":" Object "},"Examples":["alive cursorTarget"],"Additional":["laserTarget","nearTargets","knowsAbout"]},{"Name":"customChat","Desc":" Sends the chat message to the custom radio channel.  ","Syn":{"Syntax":" unit customChat [channel, message] ","Params":["unit: Object\n\n","[channel, message]: Array","channel: Number","message: String"],"Return":" Nothing "},"Examples":["sweetBoy customChat [1, \"Hi, any sweetgirls to chat?\"]"],"Additional":["radioChannelCreate","customRadio"]},{"Name":"customRadio","Desc":" Sends the message to the custom radio channel. The message is defined in the description.ext file or radio protocol.  ","Syn":{"Syntax":" unit customRadio [channel, message] ","Params":["unit: Object\n\n","[channel, message]: Array","channel: Number","message: String"],"Return":" Nothing "},"Examples":["_soldierOne customRadio [1, \"WordEnemy\"];"],"Additional":["radioChannelCreate","customChat"]},{"Name":"cutFadeOut","Desc":" Terminate the effect in the given layer and set duration of the fade out phase to the given time. ","Syn":{"Syntax":" layer cutFadeOut delay","Params":["layer: Number\n\n","delay: Number"],"Return":" Nothing "},"Examples":["0 cutFadeOut 2"],"Additional":["cutText","cutRsc"]},{"Name":"cutObj","Desc":" Display an object defined in the mission's description.ext, the campaign's description.ext or the global resource.cpp. ","Syn":{"Syntax":" (layer) cutObj [name, type, (speed)] ","Params":["layer: Number - This parameter is optional and only available in Arma 2. Omit it for earlier versions. It defines the layer in which the effect is shown, where 0 is the back most.\n\n","[name, type, speed]: Array","name: String - the className of the object","type: String - one of \"PLAIN\", \"PLAIN DOWN\", \"BLACK\", \"BLACK FADED\", \"BLACK OUT\", \"BLACK IN\", \"WHITE OUT\" and \"WHITE IN\". See Title Effect Types for more information about these values.","speed: Number - This value is optional, time is seconds, in which the object will be faded in. If no speed is given, 1 is assumed."],"Return":" Nothing "},"Examples":["cutObj [\"TVSet\",\"PLAIN\"];\ncutObj [\"TVSet\",\"PLAIN\",2]","2 cutObj [\"TVSet\",\"PLAIN\",2];"],"Additional":["titleObj","cutText","cutRsc"]},{"Name":"cutRsc","Desc":" Display a resource defined in the mission's Description.ext, the campaign's description.ext or the global resource.cpp. ","Syn":{"Syntax":" cutRsc [name, type, speed, showOnMap] \u003cbr\u003e(Alternate Syntax exists check Read more)","Params":["name: String - the class name of the resource. (\"Default\" will remove the current resource.)\n\n","type: String - one of \"PLAIN\", \"PLAIN DOWN\", \"BLACK\", \"BLACK FADED\", \"BLACK OUT\", \"BLACK IN\", \"WHITE OUT\" and \"WHITE IN\". See Title Effect Types for more information about these values.","speed: Number - Time in seconds to fade in resource (optional, default: 1).","showOnMap: Boolean - false to hide the resource when the map is opened (Introduced in ARMA 3 )."],"Return":" Nothing "},"Examples":["cutRsc [\"binocular\",\"PLAIN\"];\ncutRsc [\"binocular\",\"PLAIN\",2];","2 cutRsc [\"binocular\",\"PLAIN\",2];"],"Additional":["titleRsc","cutText","cutObj","cutFadeOut","setTitleEffect"]},{"Name":"cutText","Desc":" Displays a text message in the center of the screen.","Syn":{"Syntax":" cutText [text,type,speed,showOnMap] \u003cbr\u003e(Alternate Syntax exists check Read more)","Params":["text: String - text to be displayed\n\n","type: String one of \"PLAIN\", \"PLAIN DOWN\", \"BLACK\", \"BLACK FADED\", \"BLACK OUT\", \"BLACK IN\", \"WHITE OUT\" and \"WHITE IN\". See Title Effect Types for more information about these values.","speed: Number - Time in seconds to fade in resource (optional, default: 1)","showOnMap: Boolean - false to hide the text when the map is opened (Introduced in ARMA 3 )."],"Return":" Nothing "},"Examples":["cutText [\"\",\"BLACK OUT\"];\ncutText [\"Hello World!\",\"PLAIN\",2];","2 cutText [\"Hello World!\",\"PLAIN\",2];","1000 cutText [\"In The Centre\",\"PLAIN\"];\n1001 cutText [\"At The Bottom\",\"PLAIN DOWN\"];"],"Additional":["titleText","cutRsc","cutObj","cutFadeOut"]},{"Name":"damage","Desc":" Return the damage value of an object. ","Syn":{"Syntax":" Number = damage object ","Params":["object: Object"],"Return":" Number -  \nThe returned number is in range 0 (healthy) to 1 (dead). "},"Examples":["? ((damage player)\u003e0.1) : player groupChat \"I'm hurt! Medic!\""],"Additional":["setDamage","setDammage","getDammage","setHit"]},{"Name":"date","Desc":" Return the actual mission date and time as an array [year, month, day, hour, minute]. Month is a full number between 1 and 12, day is between 1 and 31, hour is between 0 and 23 and minute is between 0 and 59. ","Syn":{"Syntax":" Array = date ","Params":null,"Return":" Array "},"Examples":[" _DateStamp=Date;"],"Additional":["setDate","fn_vbs_timeDifference_(VBS2)"]},{"Name":"dateToNumber","Desc":" Convert a date to a float number, based on Jan 1st 00:00:00 = 0 and Dec 31th  23:59:59 = 1 ","Syn":{"Syntax":" dateToNumber date ","Params":["date: Array -"],"Return":" Number "},"Examples":["_float = dateToNumber [2035,7,6,12,0]; //0.510959","dateToNumber date; //will return float number for the current date."],"Additional":["date","daytime","time","numberToDate"]},{"Name":"daytime","Desc":" Returns the current ingame time in hours. ","Syn":{"Syntax":" Number = daytime ","Params":null,"Return":" Number -  \nTime using a 24 hour clock. "},"Examples":["; assumme it is 16:30\n_daytime = daytime\nreturns 16.5"],"Additional":["date","dateToNumber","time","skipTime"]},{"Name":"deActivateKey","Desc":" Deactivates the given keyname for the current user profile. The keys are used to unlock missions or campaigns.\n\nSee keys, keysLimit and doneKeys in the description.ext file of the missions. ","Syn":{"Syntax":" deActivateKey keyname ","Params":["keyname: String"],"Return":" Nothing "},"Examples":["deActivateKey \"Mission04Key\""],"Additional":["isKeyActive","activateKey"]},{"Name":"debriefingText","Desc":" Returns debriefing text.  ","Syn":{"Syntax":" debriefingText end ","Params":["end: String"],"Return":" String "},"Examples":["_deathText = debriefingText \"endDeath\";"],"Additional":["setDebriefingText","disableDebriefingStats","enableDebriefingStats"]},{"Name":"debugFSM","Desc":" Dump (something about FSM) to debugging output. This command is (assumed to be) non-functional in the retail version. ","Syn":{"Syntax":" FSMhandle debugFSM true ","Params":["FSMhandle: Number\n\n","true: Boolean"],"Return":" Nothing "},"Examples":["Example needed"],"Additional":["See also needed"]},{"Name":"debugLog","Desc":" Dump argument type and value to debugging output. \n\nNote: This command is non-functional in the retail version.","Syn":{"Syntax":" debugLog anything ","Params":["anything: Any Value"],"Return":" Nothing "},"Examples":["debugLog player"],"Additional":["See also needed"]},{"Name":"default","Desc":" See switch do. ","Syn":{"Syntax":" default a ","Params":["a: Code"],"Return":" Nothing "},"Examples":["Example needed"],"Additional":["Control Structures","switch do","case"]},{"Name":"deg","Desc":" Convert a number from Radians to Degrees. ","Syn":{"Syntax":" Number = deg x","Params":["x: Number"],"Return":" Number  "},"Examples":["_degrees= deg 1\nreturns 57.295"],"Additional":["Math Commands","rad"]},{"Name":"deleteCenter","Desc":" Destroys the AI center of the given side. ","Syn":{"Syntax":" deleteCenter side","Params":["side: Side"],"Return":" Nothing "},"Examples":["deleteCenter east"],"Additional":["createCenter"]},{"Name":"deleteCollection","Desc":" Delete a collection. As example, used with a soldier, it'll hide the ingame model.\n\nWhen targetting ArmA 2 1.06 or newer, use hideObject instead. This function is a relic from dynamic building destruction development. It is left only for compatibility with scripts created before ArmA 2 1.06, and its functionality may be changed or removed in the future.","Syn":{"Syntax":" deleteCollection object","Params":["object: Object"],"Return":" Nothing "},"Examples":["deleteCollection unitName; "],"Additional":["hideObject"]},{"Name":"deleteEditorObject","Desc":" Delete the editor object. Requires all editor object links to be removed prior. ","Syn":{"Syntax":" map deleteEditorObject object ","Params":["map: Control -\n\n","object: String -"],"Return":" Any "},"Examples":["Example needed"],"Additional":["See also needed"]},{"Name":"deleteGroup","Desc":" Destroys the given group. Group must be empty and local to the machine executing command. \n\nNOTE: You cannot find out locality of the group with local command as it does not work with groups, and neither is owner or setOwner. The group will always be local to the client that created it, until the client disconnects, then the group becomes local to the server.\n\n\n\n\n\n \n\n In Arma 3 when last unit leaves a group, the group gets auto deleted.\n ","Syn":{"Syntax":" deleteGroup group","Params":["group: Group"],"Return":" Nothing "},"Examples":["deleteGroup _groupname"],"Additional":["createGroup","units","group","groupFromNetId"]},{"Name":"deleteIdentity","Desc":" Delete an identity (created with saveIdentity) from the campaign's progress file. ","Syn":{"Syntax":" Boolean = deleteIdentity identityName ","Params":["identityName: String - name of the saved identity"],"Return":" Boolean -  \ntrue if the identy was deleted successfully, false if not "},"Examples":["?deleteIdentity \"playerIdentity\":hint \"Delete ok\""],"Additional":["saveIdentity"]},{"Name":"deleteLocation","Desc":" Delete a location. ","Syn":{"Syntax":" deleteLocation location ","Params":["location: Location"],"Return":" Nothing "},"Examples":["deleteLocation myLocation"],"Additional":["See also needed"]},{"Name":"deleteMarker","Desc":" Destroys the given marker. ","Syn":{"Syntax":" deleteMarker name ","Params":["name: String"],"Return":" Nothing "},"Examples":["deleteMarker \"Marker1\""],"Additional":["deleteMarkerLocal"]},{"Name":"deleteMarkerLocal","Desc":" Destroys the given marker. ","Syn":{"Syntax":" deleteMarkerLocal markerName ","Params":["markerName: String"],"Return":" Nothing "},"Examples":["deleteMarkerLocal \"Marker1\""],"Additional":["deleteMarker"]},{"Name":"deleteResources","Desc":" Delete (unregister) resources of the team member. Resources are deleted in the order they were added. Case insensitive. ","Syn":{"Syntax":" teamMember deleteResources [resource1, resource2,...] ","Params":["teamMember: Team Member\n\n","resource1: String","resource2: String"],"Return":" Nothing "},"Examples":["teamMember _agent deleteResources [\"Legs\"];"],"Additional":["resources","addResources"]},{"Name":"deleteSite","Desc":" Removes the site.  ","Syn":{"Syntax":" deleteSite site ","Params":["site: Object"],"Return":" Nothing "},"Examples":["Example needed"],"Additional":["createSite","allSites"]},{"Name":"deleteStatus","Desc":" Delete a status (created with saveStatus) from the campaign's progress file. ","Syn":{"Syntax":" Boolean = deleteStatus statusName ","Params":["statusName: String - name of the saved status"],"Return":" Boolean -  \ntrue if the status was deleted successfully, false if not "},"Examples":["? deleteStatus \"playerStatus\" : \"saved status gone from campaign\""],"Additional":["saveStatus"]},{"Name":"deleteTeam","Desc":"  Destroy given team. ","Syn":{"Syntax":"deleteTeam team ","Params":["team: Team Member"],"Return":" Nothing "},"Examples":["deleteTeam _team;"],"Additional":["addTeamMember","createTeam","forEachMemberTeam","removeTeamMember","teamMember","teamName","teams","teamType","forEachMember","forEachMemberAgent"]},{"Name":"deleteVehicle","Desc":" Deletes an object.\nOnly units inserted in the mission editor and units created during the game's progress can be deleted by this command. Island objects and player units cannot be removed. \nDeleting a vehicle, which is still being accessed by a running script, can result in a CTD.","Syn":{"Syntax":" deleteVehicle object ","Params":["object: Object"],"Return":" Nothing "},"Examples":["deleteVehicle _house1;","{\n\u0009_x action [\"Eject\", car];\n} forEach crew car;\ndeleteVehicle car;"],"Additional":["createUnit","createUnit array","createVehicle array","createVehicleLocal","createVehicle"]},{"Name":"deleteWaypoint","Desc":" Removes the specified waypoint. ","Syn":{"Syntax":" deleteWaypoint [group, index] ","Params":["[group, index]: Array\n\n","group: Group","index: Number"],"Return":" Nothing "},"Examples":["deleteWaypoint [_grp, 2]"],"Additional":["waypoints","copyWaypoints","setCurrentWaypoint","setWaypointBehaviour","setWaypointCombatMode","setWaypointCompletionRadius","setWaypointDescription","setWaypointFormation","setWaypointHousePosition","setWaypointPosition","setWaypointScript","setWaypointSpeed","setWaypointStatements","setWaypointTimeout","setWaypointType","setWaypointVisible","waypointAttachVehicle","waypointAttachedVehicle","setWaypointLoiterRadius","waypointLoiterRadius","addWaypoint","setWaypointLoiterType","waypointSpeed"]},{"Name":"detach","Desc":" Detaches previously attached with attachTo object. ","Syn":{"Syntax":" detach object ","Params":["object: Object -"],"Return":" Nothing "},"Examples":["obj1 attachTo [player];\ndetach obj1;"],"Additional":["attachedObjects","attachedTo","attachTo"]},{"Name":"detectedMines","Desc":"Returns an array of all mines detected by a given side ","Syn":{"Syntax":" detectedMines side ","Params":null,"Return":" Array "},"Examples":["detectedMines west","detectedMines side player;"],"Additional":["allMines","mineDetectedBy","createMine","mineActive","revealMine"]},{"Name":"diag_captureFrame","Desc":" This command starts counting frames from the moment it is executed and when the count reaches the number passed as param, the current frame is captured and captured data UI dialog appears, similar to diag_captureSlowFrame.\nNote: Only available in specific builds. See Performance Profiling for details. ","Syn":{"Syntax":" diag_captureFrame frame","Params":["frame: Number - next n-th frame to be captured"],"Return":" Nothing "},"Examples":["diag_captureFrame 1; //capture the first frame after command execution","diag_captureFrame 24; //capture 24th frame after command execution"],"Additional":["Performance Profiling","diag_captureSlowFrame","diag_logSlowFrame"]},{"Name":"diag_captureSlowFrame","Desc":"  Opens \"capture frame\" dialog if current frame exceeds set threshold in seconds. One can indicate to either capture duration of a specific profiling selection or the total duration of the frame. The selection names can be obtained by expanding the profiling tree. Clicking on a tree item will highlight the item on the graph and vice versa. The GUI also provides method of copying of the displayed data to clipboard. Some of the selections:\nRender\n - bgD3D\nMain Thread\n - total\n - memAl\nVisualize\n - visul\nMjob\n - Mjob\nNote: Only available in specific builds. See Performance Profiling for details. ","Syn":{"Syntax":" diag_captureSlowFrame [section, threshold] ","Params":["section: String - (case sensitive)\n\n","threshold: Number - Duration of the section in seconds"],"Return":" Nothing "},"Examples":["diag_captureSlowFrame ['total',0.003];","diag_captureSlowFrame ['memAl', 0.0001];"],"Additional":["Performance Profiling","diag_captureFrame","diag_logSlowFrame"]},{"Name":"diag_fps","Desc":" Returns average framerate calculated over last 16 frames.  ","Syn":{"Syntax":" diag_fps ","Params":null,"Return":" Number "},"Examples":["diag_log diag_fps;"],"Additional":["diag_fpsmin","diag_frameno","diag_log","diag_tickTime"]},{"Name":"diag_fpsmin","Desc":" Returns minimal framerate. Calculated from the longest frame over last 16 frames.  ","Syn":{"Syntax":" diag_fpsmin ","Params":null,"Return":" Number "},"Examples":["_minfps = diag_fpsmin"],"Additional":["diag_fps","diag_frameno","diag_log","diag_tickTime"]},{"Name":"diag_frameno","Desc":" Returns number of frame currently displayed .  ","Syn":{"Syntax":" diag_frameno ","Params":null,"Return":" Number "},"Examples":["_currFrameNo = diag_frameno;"],"Additional":["diag_fps","diag_fpsmin","diag_log","diag_tickTime"]},{"Name":"diag_log","Desc":" Dumps the argument's value to the report file. Each call creates a new line in the file. ","Syn":{"Syntax":" diag_log anything ","Params":["anything: Anything -"],"Return":" Nothing "},"Examples":["diag_log time;","diag_log format [\"%1, %2\", player, time];","_arr = [1, \"foo\", player, \"bar\"];\n{\n    diag_log _x;\n} forEach _arr; // Creates 4 entries on 4 lines","_arr = [1, \"foo\", player, \"bar\"];\ndiag_log _arr;\nCreates one entry of e.g. [1,\"foo\",B Alpha 1-1:1 (Player Name),\"bar\"]"],"Additional":["arma.RPT","copyToClipboard","copyFromClipboard","diag_fps","diag_fpsmin","diag_frameno","diag_tickTime"]},{"Name":"diag_logSlowFrame","Desc":" Log all frames, where section takes longer than the threshold (in seconds). \nNote: Only available in specific builds. See Performance Profiling for details. ","Syn":{"Syntax":" diag_logSlowFrame [section, threshold] ","Params":["section: String - Valid: ???\n\n","threshold: Number - Duration of frame in seconds"],"Return":" Nothing "},"Examples":["diag_logSlowFrame ['total',0.3]"],"Additional":["Performance Profiling","diag_captureFrame","diag_captureSlowFrame"]},{"Name":"diag_tickTime","Desc":" Real time spent from the start of the game. Expressed in fractions of second. Resolution of 1 tick is 1 ms. ","Syn":{"Syntax":" diag_tickTime ","Params":null,"Return":" Number "},"Examples":["_start = diag_tickTime;\n//code\n_stop = diag_tickTime;\ndiag_log format [\"%1\",_stop - _start];"],"Additional":["diag_fps","diag_fpsmin","diag_frameno","diag_log"]},{"Name":"dialog","Desc":" Tests whether any user dialog is open.","Syn":{"Syntax":" Boolean = dialog ","Params":null,"Return":" Boolean -  \ntrue if a dialog is open, false if not "},"Examples":["if (!dialog) then {createDialog \"Dialog1\";};"],"Additional":["createDialog","closeDialog","Dialog Control"]},{"Name":"diarySubjectExists","Desc":" Checks whether given subject is present in the diary of given person. ","Syn":{"Syntax":" person diarySubjectExists name ","Params":["person: Object -\n\n","name: String -"],"Return":" Boolean "},"Examples":["Example needed"],"Additional":["processDiaryLink","createDiaryLink","createDiaryRecord","createDiarySubject"]},{"Name":"difficulty","Desc":" Returns high-level selected difficulty mode.   \n\nReturned value will be: 0 (Recruit), 1 (Regular), 2 (Veteran) or 3 (Elite)","Syn":{"Syntax":" difficulty  ","Params":null,"Return":" Number "},"Examples":["value = difficulty;","The command returns the index of selected difficulty as they appear in CfgDifficulties\n\nhint str difficulty; //Result: 4"],"Additional":["Arma_3_Difficulty_Menu"]},{"Name":"difficultyEnabled","Desc":" Checks specific difficulty settings of the current user. Difficulty flag names can be found in the ArmA profile file under class Difficulties/xxx/Flags (xxx being regular or veteran). ","Syn":{"Syntax":" Boolean = difficultyEnabled flagName ","Params":["flagName: String - difficulty flag name"],"Return":" Boolean "},"Examples":["hint str (difficultyEnabled \"armor\")"],"Additional":["See also needed"]},{"Name":"direction","Desc":" Returns the direction an object or a location is facing (differs from getDir in that this also works with locations). ","Syn":{"Syntax":" direction object","Params":["object: Object or Location"],"Return":" Number -  \nDirection in degrees, range 0 to 360 "},"Examples":["player setDir 90;\n_d = direction player;//returns 90"],"Additional":["getDir","getDirVisual","setDir","setDirection"]},{"Name":"directSay","Desc":" Sends the message to the direct channel. The message is defined in the description.ext file, radio protocol, or a kbAddTopic. ","Syn":{"Syntax":" unit directSay radioName ","Params":["unit: Object -\n\n","radioName: String -"],"Return":" Nothing "},"Examples":["Example needed"],"Additional":["See also needed"]},{"Name":"disableAI","Desc":" Disable parts of the AI behaviour to get a better control over the actions of a unit.\n\nPossible values are:\n\n\"TARGET\" - stop the unit to watch the assigned target\n\n\"AUTOTARGET\" - prevent the unit from assigning a target independently and watching unknown objects\n\n\"MOVE\" - disable the AI's movement\n\n\"ANIM\" - disable ability of AI to change animation. Available only since ArmA: Cold War Assault (OFP 1.99).\n\n\"FSM\" - disable the execution of AI behavior scripts. Available only since Operation Arrowhead v1.60.\n\n\nNote: All effects of disableAI command are cancelled after mission save or load.\n\nNote: In OFP is no way to undo this command. ","Syn":{"Syntax":" unitName disableAI section ","Params":["unitName: Object - AI unit\n\n","section: String"],"Return":" Nothing "},"Examples":["_soldier1 disableAI \"AUTOTARGET\";"],"Additional":["enableAI"]},{"Name":"disableCollisionWith","Desc":" Disable collision between vehicles. This commmand doesn't disable collision between PhysX objects. ","Syn":{"Syntax":" vehicle disableCollisionWith vehicle ","Params":["vehicle: Object\n\n","vehicle: Object"],"Return":" Nothing "},"Examples":["Example needed"],"Additional":["See also needed"]},{"Name":"disableConversation","Desc":" Disable the ability to talk to other people. ","Syn":{"Syntax":" unitName disableConversation disable ","Params":["unitName: Object\n\n","disable: Boolean"],"Return":"Nothing "},"Examples":["player disableConversation true","soldier1 disableConversation true"],"Additional":["See also needed"]},{"Name":"disableDebriefingStats","Desc":" Disable debrifing score table. ","Syn":{"Syntax":" disableDebriefingStats ","Params":null,"Return":"  Nothing  "},"Examples":["disableDebriefingStats;"],"Additional":["enableDebriefingStats"]},{"Name":"disableSerialization","Desc":" Disable saving of script containing this command. After this script can work with the data types which do not support serialization (UI types).  ","Syn":{"Syntax":" disableSerialization ","Params":null,"Return":" Nothing "},"Examples":["disableSerialization;\n_display = findDisplay 46;"],"Additional":["Display","displayAddEventHandler","displayRemoveAllEventHandlers","displayRemoveEventHandler","uiSleep"]},{"Name":"disableTIEquipment","Desc":" Disables TI equipment for given vehicle. ","Syn":{"Syntax":" vehicle disableTIEquipment state ","Params":["vehicle: Object\n\n","state: Boolean - true to turn TI off, false to turn TI on"],"Return":" Nothing "},"Examples":["vehicle player disableTIEquipment true;","_tank disableTIEquipment true;"],"Additional":["See also needed"]},{"Name":"disableUAVConnectability","Desc":" Disables unit's AV terminal(s) connecting to UAV. ","Syn":{"Syntax":" object disableUAVConnectability [uav, checkAllItems] ","Params":["object: Object\n\n","[uav, checkAllItems]: Array","uav: Object or Array","checkAllItems: Boolean - True for disabling of all terminals in unit's inventory, false for disabling of terminal assigned to proper slot only."],"Return":" Nothing "},"Examples":["unit disableUAVConnectability [uav,true];"],"Additional":["isUAVConnectable","enableUAVConnectability"]},{"Name":"disableUserInput","Desc":" Disable and enable the keyboard and mouse input, usually used during cutscenes.\n\nBe careful with the usage of this command, always remember to enable the user input again, as once the user input is disabled, you can only shut down OFP but not exit the mission with escape. ","Syn":{"Syntax":" disableUserInput state ","Params":["state: Boolean"],"Return":" Nothing "},"Examples":["disableUserInput true\n; cutscene\n\ndisableUserInput false"],"Additional":["enableSimulation","enableSimulationGlobal"]},{"Name":"displayAddEventHandler","Desc":" Adds an event handler to the given display. Returns the ID of the event handler, or -1 when failed.\n\nReturning true in EH code will override default engine handling for keyboard events.\n\nSee User Interface Event Handlers for the full list of event names.\n\nIf applicable, see DIK_KeyCodes for a list of key code constants, which are relevant to key related user interface events like: KeyDown \u0026 KeyUp. ","Syn":{"Syntax":" display displayAddEventHandler [eventName, code] ","Params":["display: Display\n\n","[eventName, code]: Array","eventName: String","code: String or Code"],"Return":" Number "},"Examples":["moduleName_keyDownEHId = (findDisplay 46) displayAddEventHandler [\"KeyDown\", \"hint str _this;\"];","moduleName_keyDownEHId = findDisplay 46 displayAddEventHandler [\"KeyDown\", {hint str _this}];"],"Additional":["ListOfKeyCodes","disableSerialization","displayRemoveAllEventHandlers","displayRemoveEventHandler","displaySetEventHandler","ctrlAddEventHandler","UI Event Handlers","findDisplay","DIK KeyCodes","keyName"]},{"Name":"displayCtrl","Desc":" Return child control with specified idc. ","Syn":{"Syntax":" Control = display displayCtrl idc ","Params":["display: Display\n\n","idc: Number"],"Return":" Control "},"Examples":["_ChildControl = _ParentDisplay displayCtrl 101;"],"Additional":["findDisplay","ctrlCreate","ctrlDelete","ctrlModel","ctrlSetModel","ctrlPosition","ctrlSetPosition","ctrlClassName","ctrlModelScale","ctrlSetModelScale","ctrlModelDirAndUp","ctrlSetModelDirAndUp"]},{"Name":"displayNull","Desc":" A non-existing Display. This value is not equal to anything, including itself. ","Syn":{"Syntax":" Display = displayNull ","Params":null,"Return":" Display "},"Examples":["Example needed"],"Additional":["See also needed"]},{"Name":"displayRemoveAllEventHandlers","Desc":" Remove all even handlers from the given display. ","Syn":{"Syntax":" display displayRemoveAllEventHandlers handler name ","Params":["display: Display -\n\n","handler name: String -"],"Return":" Nothing "},"Examples":["Example needed"],"Additional":["displayAddEventHandler","displayRemoveEventHandler"]},{"Name":"displayRemoveEventHandler","Desc":" Remove a given event handler from the given display. ","Syn":{"Syntax":" display displayRemoveEventHandler [handler name,id] ","Params":["display: Display -\n\n","[handler name,id]: Array -"],"Return":" Nothing "},"Examples":["Example needed"],"Additional":["disableSerialization","Display","displayAddEventHandler","displayRemoveAllEventHandlers"]},{"Name":"displaySetEventHandler","Desc":" Sets given event handler of given display.\n\nThe return code of the provided function should indicate whether this event was handled correctly. This implies telling the engine whether it's default code should be executed. \n\nSee User Interface Event Handlers for the full list of handler names.\n\nIf applicable, see DIK_KeyCodes for a list of key code constants, which are relevant to key related user interface events like: KeyDown \u0026 KeyUp. ","Syn":{"Syntax":" display displaySetEventHandler [handlerName, function] ","Params":["display: Display\n\n","[handlerName, function]: Array","handlerName: String","function: String. {Code}"],"Return":" Nothing "},"Examples":["_control displaySetEventHandler [\"KeyDown\", \"\"] ","init.sqf keyspressed = compile preprocessFile \"keyspressed.sqf\";\n_display = findDisplay 46;\n_display displaySetEventHandler [\"KeyDown\",\"_this call keyspressed\"];\n\nkeyspressed.sqf private['_handled'];\n_handled = false;\nswitch (_this select 1) do\n{\n\u0009//F key\n\u0009case 33: \n\u0009{\n\u0009\u0009// code here\n\u0009\u0009_handled = true;\n\u0009};\n};\n_handled;\n"],"Additional":["ListOfKeyCodes","displayAddEventHandler","displayRemoveEventHandler","displayRemoveAllEventHandlers","ctrlSetEventHandler","UI Event Handlers","DIK KeyCodes","keyName"]},{"Name":"dissolveTeam","Desc":" Dissolves the given team. All members become members of the main team. Possible team values are: \"RED\", \"GREEN\", \"BLUE\" or \"YELLOW\". ","Syn":{"Syntax":" dissolveTeam teamColor ","Params":["teamColor: String"],"Return":" Nothing "},"Examples":["dissolveTeam \"RED\""],"Additional":["assignTeam","unassignTeam"]},{"Name":"distance","Desc":" Returns the distance in meters between two Objects, Positions or (since VBS2 1.24) Locations.\n\nNOTE: If positions are supplied as arguments, the coordinates are treated as PositionATL if over the land and as PositionASLW if over the sea.","Syn":{"Syntax":" param1 distance param2 ","Params":["param1: Object, Location (since VBS2 1.24) or Array-format Position\n\n","param2: Object, Location (since VBS2 1.24) or Array-format Position"],"Return":" Number -  Distance in meters. "},"Examples":["_meters=player distance _object","_meters=player distance [1,2,3]","_meters=[1,2,3] distance player"],"Additional":["distanceSqr","vectorDistance"]},{"Name":"distanceSqr","Desc":" Computes the squared distance between two objects or positions. ","Syn":{"Syntax":" var1 distanceSqr var2 ","Params":["var1: Object or Position\n\n","var2: Object or Position"],"Return":" Number "},"Examples":["player distanceSqr (leader player)","_distance = sqrt ((x2 - x1) ^ 2 + (y2 - y1) ^ 2 + (z2 - z1) ^ 2);\n_distanceSqr = (x2 - x1) ^ 2 + (y2 - y1) ^ 2 + (z2 - z1) ^ 2;\n_distance = [x1, y1, z1] distance [x2, y2, z2];\n_distanceSqr = [x1, y1, z1] distanceSqr [x2, y2, z2];\n_distance = sqrt ([x1, y1, z1] distanceSqr [x2, y2, z2]);\n_distanceSqr = ([x1, y1, z1] distance [x2, y2, z2]) ^ 2;"],"Additional":["distance","vectorDistanceSqr"]},{"Name":"distributionRegion","Desc":" Returns the numerical index for the distribution region of this copy of ArmA. \n\n1 - US\n\n2 - Rest of the world ","Syn":{"Syntax":" Number = distributionRegion","Params":null,"Return":" Number "},"Examples":["distributionRegion == 1"],"Additional":["See also needed"]},{"Name":"do","Desc":" Executes code. Used as part of construct, such as while, with, for and switch. The code is always executed in missionNamespace. ","Syn":{"Syntax":" construct do code ","Params":["construct: while, with, for, switch\n\n","code: Code"],"Return":" Nothing "},"Examples":["while {b \u003e a} do {a = a + 1};","A practical example: Repair all members of a group to such a level that they are able to stand up: {\n    while {!canStand _x \u0026\u0026 alive _x} do {\n        _x setDamage (damage _x - 0.01);\n    };\n} forEach units group unitname;"],"Additional":["Control Structures"]},{"Name":"doArtilleryFire","Desc":" Orders a unit to reload defined magazine commence fire burst on the given position (silently).  ","Syn":{"Syntax":" unit doArtilleryFire [position, type, rounds] ","Params":["unit: Object\n\n","[position, type, rounds]: Array","position: Position","type: String","rounds: Number"],"Return":" Nothing "},"Examples":["mortar1 doArtilleryFire [[3000, 120, 1000], \"8Rnd_82mm_Mo_shells\", 3]"],"Additional":["getArtilleryAmmo","commandArtilleryFire","getArtilleryETA","enableEngineArtillery","getArtilleryComputerSettings","shownArtilleryComputer","inRangeOfArtillery"]},{"Name":"doFire","Desc":" Order the given unit(s) to fire on the given target (without radio messages).\n\nThe target is set with doTarget or commandTarget.\n\nThe target can be a unit or a vehicle, but not an object.","Syn":{"Syntax":" unitName doFire target ","Params":["unitName: Object or Array\n\n","target: Object"],"Return":" Nothing "},"Examples":["_ESoldier1 doFire _WSoldier1;"],"Additional":["commandFire","fire","forceWeaponFire","fireAtTarget"]},{"Name":"doFollow","Desc":" Order the given unit(s) to follow the given other unit or vehicle eg (without radio messages). ","Syn":{"Syntax":" unitName doFollow unitName2 ","Params":["unitName: Object or Array\n\n","unitName2: Object"],"Return":" Nothing "},"Examples":["_soldier1 doFollow _soldier2"],"Additional":["commandFollow"]},{"Name":"doFSM","Desc":" Orders a unit to process command defined by FSM file (silently). \n\nUnlike with execFSM where _this is passed to the FSM, the following parameters are passed when using doFSM/commandFSM:\n\n\n _leader\n leader of subgroup with this command \n\n _destination\n command destination/position\n\n _target\n command target \n\n _units\n list of all persons in subgroup \n\n\n\n leader of subgroup with this command \n command destination/position\n command target \n list of all persons in subgroup \n","Syn":{"Syntax":" leader of subgroup with this command \n\u003cbr\u003e(Alternate Syntax exists check Read more)","Params":[" command destination/position\n"," command target \n"],"Return":" list of all persons in subgroup \n"},"Examples":["_soldierOne doFSM [\"move.fsm\", position player, player]"],"Additional":["FSM","FSM_Editor_Manual","commandFSM","completedFSM","execFSM","getFSMVariable","setFSMVariable"]},{"Name":"doGetOut","Desc":" Orders a unit or units to get out from the vehicle (silently). ","Syn":{"Syntax":" doGetOut unit(s) ","Params":["unit(s): Object or Array"],"Return":" Nothing "},"Examples":["doGetOut _unitOne"],"Additional":["commandGetOut","leaveVehicle"]},{"Name":"doMove","Desc":" Order the given unit(s) to move to the given position (without radio messages). After reaching his destination, the unit will immediately return to formation (if in a group); or order his group to form around his new position (if a group leader). ","Syn":{"Syntax":" unit(s) doMove position ","Params":["unit(s): Object or Array\n\n","position: Array - format Position"],"Return":" Nothing "},"Examples":["_soldier1 doMove (position _officer);","this doMove (getMarkerPos \"Marker1\");"],"Additional":["commandMove","setDestination","moveTo","move","addWaypoint","fn_vbs_doMoveEx","setExactMovement (VBS2)","getExactMovement (VBS2)"]},{"Name":"doorPhase","Desc":" Return animation phase of door on vehicle.  ","Syn":{"Syntax":" object doorPhase animation ","Params":["object: Object\n\n","animation: String"],"Return":" Number "},"Examples":["heli doorPhase \"gunnerDoor\";"],"Additional":["animate","animationPhase","setFaceAnimation","animateDoor"]},{"Name":"doStop","Desc":" Order the given unit(s) to stop (without radio messages).DoStop'ed units leave the groups formation. It will prevent the unit from moving around with their group (or formation leader), while still beeing able to turn around and even move to a new position if they see fit. They will still respond to orders from their group leader (like engage, rearm, board a vehicle), but all of their actions will be separate from the group formation \n. ","Syn":{"Syntax":" doStop unit(s) ","Params":["unit(s): Object or Array of Objects"],"Return":" Nothing "},"Examples":["doStop _soldier1;","doStop [_soldier1, _soldier2];","doStop (units player);"],"Additional":["commandStop","stop","stopped"]},{"Name":"doTarget","Desc":" Order the given unit(s) to target the given target (without radio messages). ","Syn":{"Syntax":" unit(s) doTarget target ","Params":["unit(s): Object or Array\n\n","target: Object"],"Return":" Nothing "},"Examples":["_ESoldier1 doTarget _WSoldier1"],"Additional":["assignedTarget","commandTarget","doWatch","doFire"]},{"Name":"doWatch","Desc":" Order the given unit(s) to watch the given position or target (without radio messages). Use objNull as the target to order a unit to stop watching a position/target.  ","Syn":{"Syntax":" unit(s) doWatch position \u003cbr\u003e(Alternate Syntax exists check Read more)","Params":["unit(s): Object or Array\n\n","position: Array - format Position"],"Return":" Nothing "},"Examples":["_soldierOne doWatch markerPos \"MarkerMoveOne\"\n\nThe unit named \"soldierOne\" will watch the position where the marker \"MarkerMoveOne\" is placed.","_soldierOne doWatch _eastSoldier\n\nThe unit named \"soldierOne\" will watch the unit named \"eastSoldier\"."],"Additional":["commandWatch","lookAt"]},{"Name":"drawArrow","Desc":" Draw an arrow on the map. ","Syn":{"Syntax":" map drawArrow [position1, position2, color] ","Params":["map: Control\n\n","[position1, position2, Color]: Array"],"Return":" Nothing "},"Examples":["Example needed"],"Additional":["drawEllipse","drawIcon","drawLine","drawRectangle"]},{"Name":"drawEllipse","Desc":" Draw an ellipse on the map. ","Syn":{"Syntax":" map drawEllipse [center, a, b, angle, color, fill] ","Params":["map: Control\n\n","[center, a, b, angle, color, fill]: Array"],"Return":" Nothing "},"Examples":["(findDisplay 137 displayCtrl 51) drawEllipse [getpos player, 50, 50, 0, [1,1,0,1], \"\"]"],"Additional":["drawArrow","drawIcon","drawLine","drawRectangle"]},{"Name":"drawIcon","Desc":" Draw an icon on the map. The command needs to be called every frame, preferably with \"Draw\" control event handler ctrlAddEventHandler.\n\n","Syn":{"Syntax":" map drawIcon [texture, color, position, width, height, angle, text, shadow, textSize, font, align] ","Params":["map: Control\n\n","texture: String","color: Array - [r,g,b,a]","position: Position2D or Position3D or Object","width: Number","height: Number","angle: Number","text: String","shadow: Number - 0: no shadow, 1: shadow, 2: outline (works for text and for icon only if icon angle is 0)","textSize: Number - (since Arma 3 v0.72)","font: String - (since Arma 3 v0.72)","align: String - (since Arma 3 v0.72) \"left\", \"right\", \"center\". Default is \"right\""],"Return":" Nothing "},"Examples":["findDisplay 12 displayCtrl 51 ctrlAddEventHandler [\"Draw\", \"\n\u0009_this select 0 drawIcon [\n\u0009\u0009'iconStaticMG',\n\u0009\u0009[1,0,0,1],\n\u0009\u0009getPos player,\n\u0009\u000924,\n\u0009\u000924,\n\u0009\u0009getDir player,\n\u0009\u0009'Player Vehicle',\n\u0009\u00091,\n\u0009\u00090.03,\n\u0009\u0009'TahomaB',\n\u0009\u0009'right'\n\u0009]\n\"];"],"Additional":["drawArrow","drawEllipse","drawLine","drawRectangle"]},{"Name":"drawIcon3D","Desc":" Draws an ingame icon at a given position. Command has to be executed each frame. Use onEachFrame or addMissionEventHandler \"Draw3D\" ","Syn":{"Syntax":" drawIcon3D [texture, color, pos, width, height, angle, text, shadow, textSize, font] ","Params":["[texture, color, pos, width, height, angle, text, shadow, textSize, font]: Array\n\n","texture: String","color: Color","pos: Position","width: Number","height: Number","angle: Number","text: String - (optional)","shadow: Number - (optional)","textSize: Number - (optional)","font: String - (optional)"],"Return":" Nothing "},"Examples":["Icon and text:onEachFrame {\n\u0009drawIcon3D [\"targetIcon.paa\", [1,1,1,1], getPos cursorTarget, 1, 1, 45, \"Target\", 1, 0.05, \"TahomaB\"];\n};","Just text:\naddMissionEventHandler [\"Draw3D\", {\n\u0009drawIcon3D [\"\", [1,0,0,1], position cursorTarget, 0, 0, 0, \"Target\", 1, 0.05, \"PuristaMedium\"];\n}];"],"Additional":["drawLine3D"]},{"Name":"drawLine","Desc":" Draw a line on the map. ","Syn":{"Syntax":" map drawLine [position1, position2, color] ","Params":["map: Control\n\n","[position1, position2, color]: Array","position1: Position3D","position2: Position3D","color: Color"],"Return":" Nothing "},"Examples":["Example needed"],"Additional":["drawArrow","drawEllipse","drawIcon","drawRectangle"]},{"Name":"drawLine3D","Desc":" Draws a line of a given color between two 3D positions. Command has to be executed each frame. Use onEachFrame or addMissionEventHandler \"Draw3D\". ","Syn":{"Syntax":" drawLine3D [start, end, color] ","Params":["[start, end, color]: Array\n\n","start: Position","end: Position","color: Color"],"Return":" Nothing "},"Examples":["onEachFrame {\n\u0009drawLine3D [getPos player, getPos cursorTarget, [1,1,1,1]];\n};"],"Additional":["drawIcon3D"]},{"Name":"drawLink","Desc":" The editor will draw a line between the two specified editor objects. Line type can be LINE or ARROW. ","Syn":{"Syntax":" map drawLink [from,to,param type,line type,color] ","Params":["map: Control -\n\n","[from,to,param type,line type,color]: Array -"],"Return":" Nothing "},"Examples":["Example needed"],"Additional":["See also needed"]},{"Name":"drawLocation","Desc":" Unknown effect.","Syn":{"Syntax":" control drawLocation location ","Params":["control: Control\n\n","location: Location"],"Return":" Unknown "},"Examples":[""],"Additional":["See also needed"]},{"Name":"drawRectangle","Desc":" Draw a Rectangle on the map. ","Syn":{"Syntax":" map drawRectangle [c, a, b, angle, colour, fill] ","Params":["map: Control\n\n","c: Array - centre of rectangle Position2D, Position3D, Object","a: Number - 1/2 width of rectangle (in metres)","b: Number - 1/2 height of rectangle (in metres)","angle: Number - angle of rotation","colour: Array - border colour [r,g,b,a]. If you are planning on using texture, set colour to white [1,1,1,1]","fill: String - fill texture file or Procedural_Textures. Note that the file texture will not rotate with rectangle, use drawIcon for that."],"Return":" Nothing\n\n"},"Examples":["_ctrl drawRectangle [\n\u0009getPos player,\n\u000920,\n\u000920,\n\u0009getDir player,\n\u0009[0,0,1,1],\n\u0009\"\"\n];","_ctrl drawRectangle [\n\u0009player,\n\u000910,\n\u000920,\n\u0009getDir player,\n\u0009[1,1,1,1],\n\u0009\"#(rgb,8,8,3)color(1,0,0,1)\"\n];"],"Additional":["drawArrow","drawEllipse","drawIcon","drawLine"]},{"Name":"driver","Desc":" Returns the driver of a vehicle. ","Syn":{"Syntax":" Object = driver vehicle ","Params":["vehicle: Object"],"Return":" Object -  \nThe unit sitting in the driver place is returned. If vehicle is not a vehicle but a person, the person is returned. "},"Examples":["(driver _tank) action [\"getout\", _tank];"],"Additional":["commander","gunner","crew"]},{"Name":"drop","Desc":" Creates a particle effect.\n\nThis command is used to create smoke, fire and similar effects.\n\nThe particles are single polygons with single textures that always face the player.\n\nThey can be set to dynamically change their position, size, direction, can be set to different weights and more or less dependant on the wind. ","Syn":{"Syntax":" drop array ","Params":["array: Array - format ParticleArray."],"Return":" Nothing "},"Examples":["drop [\"cl_basic\", \"\", \"Billboard\", 1, 1, [-3.5*(sin(direction xural)),\n-3.5*(cos(direction xural)),0], [ random 0.1,random 0.1,random 0.5], 1, 0.005, 0.0042,\n 0.7, [0.3,3], [[0.5,0.5,0.5,0],[0.7,0.7,0.7,0.5],[0.9,0.9,0.9,0]], [0,1,0,1,0,1],\n 0.2, 0.2, \"\", \"\", xural]"],"Additional":["ParticleArray","setParticleCircle","setParticleParams","setParticleRandom","ParticleTemplates","setParticleClass","particlesQuality","setParticleFire"]},{"Name":"east","Desc":" Pre-defined variable for the eastern side. ","Syn":{"Syntax":" east ","Params":null,"Return":" Side "},"Examples":["SQS:?((side _unit) == east) : hint \"This is a eastern unit!\"","SQF:if ((side _unit) == east) then {\n    hint \"This is a eastern unit!\";\n};"],"Additional":["side","west","resistance","civilian"]},{"Name":"echo","Desc":" Sends any text into the debugger console or the logfile. Present in internal version only, not working in the retail version. ","Syn":{"Syntax":" echo text ","Params":["text: String"],"Return":" Nothing "},"Examples":["echo \"Text in logfile\""],"Additional":["diag_log"]},{"Name":"editObject","Desc":" Show the edit object dialog for the given object. ","Syn":{"Syntax":" map editObject object ","Params":["map: Control -\n\n","object: String -"],"Return":" Any "},"Examples":["Example needed"],"Additional":["See also needed"]},{"Name":"editorSetEventHandler","Desc":" Sets given event handler of given editor. ","Syn":{"Syntax":" map editorSetEventHandler [handler name,function] ","Params":["map: Control -\n\n","[handler name,function]: Array -"],"Return":" Nothing "},"Examples":["_map editorSetEventHandler [\"SelectObject\",\"\"]"],"Additional":["See also needed"]},{"Name":"effectiveCommander","Desc":" Returns the effective commander (who really commands) of the vehicle. ","Syn":{"Syntax":" Object = effectiveCommander vehicle ","Params":["vehicle: Object"],"Return":" Object "},"Examples":["Example needed"],"Additional":["See also needed"]},{"Name":"else","Desc":" Executes else code when if condition returns false","Syn":{"Syntax":" ifCode else elseCode ","Params":["ifCode: Code\n\n","elseCode: Code"],"Return":" Array "},"Examples":["if (a \u003e b) then { c = 0 } else { c = 1 };","if (a \u003c b) then {\n    hint \"B is greater than A\";\n} else {\n    hint \"A is greater than B\";\n};"],"Additional":["Control Structures","if","then"]},{"Name":"emptyPositions","Desc":" Returns the number of given positions in the vehicle.\n\nPositions can be \"Commander\", \"Driver\", \"Gunner\" or \"Cargo\" ","Syn":{"Syntax":" Number = vehicle emptyPositions  position ","Params":["vehicle: Object\n\n","position: String"],"Return":" Number "},"Examples":["_freeCargoPositions = vehicle player emptyPositions \"cargo\";"],"Additional":["moveInDriver","moveInTurret","moveInCommander","moveInGunner","moveInCargo","getCargoIndex"]},{"Name":"enableAI","Desc":" Enables parts of the AI behavior that was disabled by disableAI.  ","Syn":{"Syntax":" unit enableAI skilltype ","Params":["unit: Object\n\n","skilltype: String - See disableAI for possible values."],"Return":" Nothing "},"Examples":["_soldierOne enableAI \"Move\""],"Additional":["disableAI"]},{"Name":"enableAIFeature","Desc":" Enable/disable given AI feature. Feature may be one of:\n\n\"AwareFormationSoft\", \"CombatFormationSoft\". ","Syn":{"Syntax":" feature enableAIFeature enabled ","Params":["feature: String\n\n","enabled: Boolean"],"Return":" Nothing "},"Examples":[" \"AwareFormationSoft\" enableAIFeature true "],"Additional":["checkAIFeature"]},{"Name":"enableAttack","Desc":" Set if leader can issue attack commands to the soldiers in his group. ","Syn":{"Syntax":" group enableAttack enable   ","Params":["group: Object or Group\n\n","enable: Boolean"],"Return":" Nothing "},"Examples":["_group1 enableAttack true"],"Additional":["attackEnabled"]},{"Name":"enableCamShake","Desc":" Allows camera shake effects via addCamShake. If set to false, then a currently active shake effect will stop immediately.\nBy default, shake effects are enabled, but once they have been disabled by this command, they will have to be enabled first, in order to be visible. ","Syn":{"Syntax":" enableCamShake value ","Params":["value: Boolean - If true, then shake effects are visible"],"Return":" Nothing "},"Examples":["enableCamShake false;"],"Additional":["addCamShake","setCamShakeDefParams","setCamShakeParams","resetCamShake"]},{"Name":"enableCaustics","Desc":" Enable/disable caustics drawing.  ","Syn":{"Syntax":" enableCaustics bool ","Params":["bool: Boolean"],"Return":" Nothing "},"Examples":["Example needed"],"Additional":["See also needed"]},{"Name":"enableCollisionWith","Desc":" Enable collision between vehicles.  ","Syn":{"Syntax":" vehicle enableCollisionWith vehicle ","Params":["vehicle: Object\n\n","vehicle: Object"],"Return":" Nothing "},"Examples":["Example needed"],"Additional":["See also needed"]},{"Name":"enableCopilot","Desc":" Enables copilot actions. ","Syn":{"Syntax":" vehicle enableCopilot enable ","Params":["vehicle: Object\n\n","enable: Boolean"],"Return":" Nothing "},"Examples":["if (!isCopilotEnabled myHeli) then {\n    myHeli enableCopilot true;\n};\n"],"Additional":["isCopilotEnabled"]},{"Name":"enableDebriefingStats","Desc":" enable debrifing score table. ","Syn":{"Syntax":" enableDebriefingStats ","Params":null,"Return":"  Nothing  "},"Examples":["enableDebriefingStats;"],"Additional":["disableDebriefingStats"]},{"Name":"enableDiagLegend","Desc":" Enable or disable the legend for diagnotic. ","Syn":{"Syntax":" enableDiagLegend Bool","Params":["Bool : Boolean"],"Return":" Nothing "},"Examples":["enableDiagLegend false"],"Additional":["See also needed"]},{"Name":"enableEndDialog","Desc":" Enables the execution of a custom camera sequence after the players death, coded in the script onPlayerKilled.sqs. ","Syn":{"Syntax":" enableEndDialog ","Params":null,"Return":" Nothing "},"Examples":["Example needed"],"Additional":["See also needed"]},{"Name":"enableEngineArtillery","Desc":"Enable/disable the artillery engine. This allows the user to use the artillery computer on mortar/artillery, and for AI to use it for indirect fire. ","Syn":{"Syntax":"enableEngineArtillery enabled","Params":["enabled: Boolean"],"Return":" Nothing "},"Examples":["enableEngineArtillery false; "],"Additional":["shownArtilleryComputer","getArtilleryAmmo","commandArtilleryFire","doArtilleryFire","getArtilleryComputerSettings","getArtilleryETA","inRangeOfArtillery"]},{"Name":"enableEnvironment","Desc":" Enable/disable environmental effects (ambient life + sound). ","Syn":{"Syntax":" enableEnvironment enabled   ","Params":["enabled: Boolean"],"Return":" Nothing "},"Examples":["enableEnvironment false;"],"Additional":["See also needed"]},{"Name":"enableFatigue","Desc":" Enables/Disables the person's fatigue.  ","Syn":{"Syntax":" unit enableFatigue enable ","Params":["unit: Object\n\n","enable: Boolean"],"Return":" Nothing "},"Examples":["player enableFatigue false;","{ _x enableFatigue false; } forEach (units group player);"],"Additional":["getFatigue","setFatigue"]},{"Name":"enableGunLights","Desc":" Force the AI to use gun lights ","Syn":{"Syntax":" thing enableGunLights value ","Params":["thing: Object or Group - the unit or the group forced to use gun lights\n\n","value: Boolean - true/false / String (Arma 3) - \"AUTO\", \"forceOn\", \"forceOff\""],"Return":" Nothing "},"Examples":["group enableGunLights true","unitName enableGunLights true"],"Additional":["See also needed"]},{"Name":"enableIRLasers","Desc":" Allows the AI to use IR lasers ","Syn":{"Syntax":" thing enableIRLasers value ","Params":["thing: Object or Group - the unit or the group allowed to use IR lasers\n\n","value: Boolean - true/false"],"Return":" Nothing "},"Examples":["(units group player) enableIRLasers true"],"Additional":["See also needed"]},{"Name":"enableMimics","Desc":"Enables/disables mimics on a given unit. ","Syn":{"Syntax":" unit enableMimics enabled ","Params":["vector: Object\n\n","vector: Boolean"],"Return":" Nothing "},"Examples":["cursorTarget enableMimics false"],"Additional":["setMimic"]},{"Name":"enableRadio","Desc":" Enable and disable radio messages to be heard and shown in the left lower corner of the screen. This command can be helpful during cutscenes. ","Syn":{"Syntax":" enableRadio state ","Params":["state: Boolean - true to enable the radio, false to disable it"],"Return":" Nothing "},"Examples":["enableRadio false"],"Additional":["See also needed"]},{"Name":"enableReload","Desc":" Enable / disable reload when magazine is empty. ","Syn":{"Syntax":" object enableReload enable ","Params":["object: Object\n\n","enable: Boolean"],"Return":" Nothing "},"Examples":["_vehicle enableReload false"],"Additional":["See also needed"]},{"Name":"enableSatNormalOnDetail","Desc":" Enables/Disables satellite normal map od detail maps. ","Syn":{"Syntax":" enableSatNormalOnDetail state ","Params":["state: Boolean"],"Return":"  Nothing   "},"Examples":[" enableSatNormalOnDetail true;"],"Additional":["See also needed"]},{"Name":"enableSaving","Desc":" Enable / disable saving of the game.\n\nWhen disabled, the autosave is created (if not forbidden by save == false). ","Syn":{"Syntax":" enableSaving enable \u003cbr\u003e(Alternate Syntax exists check Read more)","Params":["enable: Boolean -"],"Return":" Nothing "},"Examples":["enableSaving false; // Saving disabled and make autosave.\nenableSaving true;  // Saving enabled without autosave.\n\nenableSaving [ false, false ]; // Saving disabled without autosave.\nenableSaving [ false, true  ]; // Saving disabled and make autosave.\nenableSaving [ true,  false ]; // Saving enabled without autosave.\nenableSaving [ true,  true  ]; // Saving enabled and make autosave.\n"],"Additional":["loadGame","saveGame","savingEnabled"]},{"Name":"enableSentences","Desc":" Enables radio transmissions to be heard and seen on screen. It does not affect KBTell conversations. ","Syn":{"Syntax":" enableSentences enable ","Params":["enable: Boolean"],"Return":" Nothing "},"Examples":["enableSentences false;"],"Additional":["See also needed"]},{"Name":"enableSimulation","Desc":" Enable / disable simulation for given entity. ","Syn":{"Syntax":" object enableSimulation bool ","Params":["Object\n\n","Boolean"],"Return":" None "},"Examples":["player enableSimulation false;"],"Additional":["enableSimulationGlobal","simulationEnabled"]},{"Name":"enableSimulationGlobal","Desc":" MP command. Enable or disable simulation for given entity, globally. Call this only from the server. In SP use enableSimulation","Syn":{"Syntax":" entity enableSimulationGlobal enable ","Params":["enable: Boolean"],"Return":" Nothing "},"Examples":["_myObject enableSimulationGlobal false;"],"Additional":["enableSimulation","simulationEnabled"]},{"Name":"enableTeamSwitch","Desc":" Enable / disable Team Switch. The default setting is enabled. ","Syn":{"Syntax":" enableTeamSwitch enable ","Params":["enable: Boolean"],"Return":" Nothing "},"Examples":["Example needed"],"Additional":["Team_Switch","onBriefingTeamSwitch","onTeamSwitch","teamSwitch","teamSwitchEnabled"]},{"Name":"enableUAVConnectability","Desc":" Enables unit's AV terminal(s) connecting to UAV. ","Syn":{"Syntax":" object enableUAVConnectability [uav, checkAllItems] ","Params":["object: Object\n\n","[uav, checkAllItems]: Array","uav: Object or Array","checkAllItems: Boolean - True for enabling of all terminals in unit's inventory, false for enabling of terminal assigned to proper slot only."],"Return":" Nothing "},"Examples":["unit enableUAVConnectability [uav,true];"],"Additional":["disableUAVConnectability","isUAVConnectable"]},{"Name":"endLoadingScreen","Desc":" Finish loading screen displaying (started by startLoadingScreen). ","Syn":{"Syntax":" endLoadingScreen ","Params":null,"Return":" Nothing "},"Examples":["startLoadingScreen [\"Loading My Mission\"];//Batch of codeprogressLoadingScreen 0.5;//Batch of codeendLoadingScreen;","\n// Provide a screen is loading\ndisableSerialization;\nendLoadingScreen; //to avoid freezing the game, end loading screen in advance if a display was created who need user input at the next frame.\nfindDisplay 49 createDisplay \"RscDisplayCommonMessagePause\";\n"],"Additional":["startLoadingScreen","progressLoadingScreen"]},{"Name":"endMission","Desc":" Finish the mission.\n\nThe end type can be:\n\n \"CONTINUE\"\n\n \"KILLED\"\n\n \"LOSER\"\n\n \"END1\"\n\n \"END2\"\n\n \"END3\"\n\n \"END4\"\n\n \"END5\"\n\n \"END6\"\n\n\n\nMission saves are deleted. Use failMission if they should not.\n\n\n\n\n \n\n To maintain Arma 3 visual style, it's recommended to use BIS_fnc_endMission instead.\n\n","Syn":{"Syntax":" endMission end type ","Params":["end type: String -"],"Return":" Nothing "},"Examples":["endMission \"END1\""],"Additional":["failMission","forceEnd"]},{"Name":"engineOn","Desc":" Activates and deactivates the engine of a vehicle. This command has to be executed where vehicle is local. \n\nNOTE: Executed on a remote vehicle this command may turn the engine on but then it will get turned off by itself after a short while. ","Syn":{"Syntax":" vehicle engineOn state ","Params":["vehicle: Object\n\n","state: Boolean - true to turn the engine on, false to turn it off"],"Return":" Nothing "},"Examples":["if (!isEngineOn _jeep) then {_jeep engineOn true};","if (local vehicle player) then {\n\u0009vehicle player engineOn true; \n} else {\n\u0009hint \"Get in the driver seat, soldier!\";\n};"],"Additional":["isEngineOn"]},{"Name":"entities","Desc":" Returns a list of all dead or alive entities with given type.  ","Syn":{"Syntax":" entities type ","Params":["type: String"],"Return":" Array "},"Examples":["_allcars = entities \"Car\";"],"Additional":["nearEntities","allUnits","vehicles","agents"]},{"Name":"estimatedEndServerTime","Desc":" Estimated end of MP game in seconds converted to serverTime. ","Syn":{"Syntax":" estimatedEndServerTime ","Params":null,"Return":" Number - seconds left "},"Examples":["Estimated minutes left: \n_min = (ceil (estimatedEndServerTime - serverTime) / 60);"],"Additional":["estimatedTimeLeft","serverTime"]},{"Name":"estimatedTimeLeft","Desc":" Sets the estimated time left in the game. Using this function the designer can provide a \"time left\" estimate that is shown in the \"Game in progress\" screen or in the master browser. This command works in MP only and must be executed on the server only.","Syn":{"Syntax":" estimatedTimeLeft seconds","Params":["seconds: Number - estimated time in seconds (Do not use value \u003e 7200)."],"Return":" Nothing "},"Examples":["estimatedTimeLeft 600; //10 min","For missions with a hard set limit adjusted via Param1, the following example can be used in the init.sqs file:estimatedTimeLeft Param1;"],"Additional":["estimatedEndServerTime","serverTime"]},{"Name":"evalObjectArgument","Desc":" Return argument in mission editor of a given object. ","Syn":{"Syntax":" map evalObjectArgument [object, argument] ","Params":["map: Control\n\n","[object, argument]: Array"],"Return":" Any Value "},"Examples":["\n// returns string \"[1009.0351, 1319.4928]\"\n(findDisplay 128 displayCtrl 51) getObjectArgument [\"_unit_1\", \"POSITION\"]\n\n// returns array [1009.0351, 1319.4928]\n(findDisplay 128 displayCtrl 51) evalObjectArgument [\"_unit_1\", \"POSITION\"]\n"],"Additional":["setObjectArguments"]},{"Name":"everyBackpack","Desc":" Returns array of backpacks stored in given crate or vehicle. Used for accessing backpack content of a backpack on ground. ","Syn":{"Syntax":" everyBackpack box ","Params":["box: Object"],"Return":" Array "},"Examples":["everyBackpack cursorTarget;","_vehicleBackpacks = everyBackpack vehicle player;"],"Additional":["firstBackpack","unitBackpack","backpack","backpackCargo","getBackpackCargo","backpackItems","addBackpack","addBackpackCargo","addBackpackCargoGlobal","removeBackpack","clearBackpackCargo","clearBackpackCargoGlobal","clearAllItemsFromBackpack","loadBackpack","backpackSpaceFor","canAddItemToBackpack","addItemToBackpack","removeItemFromBackpack","backpackContainer","everyContainer"]},{"Name":"everyContainer","Desc":" Returns array of all containers (uniforms, vests, backpacks) stored in given crate or vehicle. Used for accessing containers content stored in ammo box or ground holder. ","Syn":{"Syntax":" everyContainer box ","Params":["box: Object"],"Return":" Array "},"Examples":["everyContainer cursorTarget;\n[\n\u0009[\"V_PlateCarrier1_rgr\",2bc06b00# 163955: dummyweapon.p3d],\n\u0009[\"U_B_CombatUniform_mcam\",2bc07900# 163954: dummyweapon.p3d]\n]"],"Additional":["everyBackpack","uniformContainer","vestContainer","backpackContainer"]},{"Name":"exec","Desc":" Execute a script using (the deprecated) .sqs syntax. The argument is passed to the script in the \"_this\" variable, and magic variable \"_time\" within the script contains the time in seconds that the script has been running.\nIt is not recommended to use this command in any game other than OFP. Instead, the execVM command should be used.\nLearn more about scripts under Scripts. ","Syn":{"Syntax":" argument exec script ","Params":["argument: Any Value - the argument which should be passed to the script. To pass multiple arguments, use an array.\n\n","script: String - the name of the script. It should be given relatively to the mission folder, campaign scripts subfolder or global scripts folder and is searched there in the same order. If you refer to a script packed together with an addon, the path should look like this: \"\\ADDON_PBO_NAME\\script.sqs\" where ADDON_PBO_NAME is the name of the addon's *.pbo file without extension."],"Return":" Nothing "},"Examples":["[player, _jeep] exec \"getin.sqs\""],"Additional":["execVM","call","spawn","execFSM"]},{"Name":"execEditorScript","Desc":" Execute an editor script for the specified object. ","Syn":{"Syntax":" map execEditorScript [object,script] ","Params":["map: Control -\n\n","[object,script]: Array -"],"Return":" Any "},"Examples":["_map execEditorScript [\"_team_1\",\"create\"]"],"Additional":["See also needed"]},{"Name":"execFSM","Desc":" Execute the scripted FSM. The FSM file is first searched in the mission folder, then in the campaign scripts folder and finally in the global scripts folder. \nArgument(s) (if any) is/are passed as _this to the FSM.\nReturns the FSM handle or 0 when failed. ","Syn":{"Syntax":" argument(s) execFSM filename ","Params":["argument(s): Any Value(s) - Optional. Argument(s) accessible as _this in the FSM\n\n","filename: String"],"Return":" Number - FSM handle "},"Examples":["_id = player execFSM \"test.fsm\";","_handle = [_a, _b, _c] execFSM \"test.fsm\";","_handle = execFSM \"test.fsm\";"],"Additional":["FSM","FSM Editor Manual","execVM","call","spawn","exec","commandFSM","completedFSM","doFSM","getFSMVariable","setFSMVariable"]},{"Name":"execVM","Desc":" Compile and execute SQF Script.\n\nThe optional argument is passed to the script as local variable _this.\n\nScript is compiled every time you use this command.\n\nThe Script is first searched for in the mission folder, then in the campaign scripts folder and finally in the global scripts folder. ","Syn":{"Syntax":" argument(s) execVM filename ","Params":["argument(s): Any Value(s)  - Optional.  Argument(s) accessible as _this in the script\n\n","filename: String"],"Return":" Script - script handle, which can be used to determine (via scriptDone) when the spawned script has finished."},"Examples":["_handle = execVM \"test.sqf\";","_handle = player execVM \"test.sqf\"; \nwaitUntil {scriptDone _handle};"],"Additional":["call","spawn","exec","execFSM","scriptDone","terminate","SQF syntax","Control Structures"]},{"Name":"exit","Desc":" Stops the execution of a  SQS script.\n\nIt's ignored in  SQF Scripts.","Syn":{"Syntax":" exit ","Params":null,"Return":" Nothing "},"Examples":["exit"],"Additional":["exitWith","Control Structures"]},{"Name":"exitWith","Desc":" If the result of condition is true, code is evaluated, and current block with result of code. It only exits the current scope.\n\nexitWith exits the execution of a loop defined by one of commands do, for, count or forEach. When you use exitWith not inside a loop, the behaviour is undefined - sometimes it may exit the script, sometimes some other scope, but this is not intended and designed behaviour of this command, and it is not guaranteed to work reliably.\n\nIt exits the loop only, not the script. ","Syn":{"Syntax":" if (condition) exitWith {Code} ","Params":["If Type\n\n","Code"],"Return":" Anything "},"Examples":["if (_x\u003e5) exitWith {echo \"_x is too big\"; _x}\n\nWhen _x is greater than 5, outputs message and terminates code in current level with value of _x.","for \"_j\" from 1 to 10 do\n{\n\u0009player sideChat format [\"%1\",_j];\n\u0009if (_j==5) exitWith {player sideChat \"5 is enough\"};\n};\nplayer sideChat \"Complete\";\nOnly the \"for\" loop will exit when the exitWith condition has been fulfilled (not the whole script). Execution will continue after the end of the loop (player sideChat \"Complete\").","Most loops will also terminate when their scope exited. To exit and terminate scopes which are called every frame such as onEachFrame and waitUntil use the following examples:\n\nonEachFrame {\n\u0009if (!alive player) exitWith {\n\u0009\u0009onEachFrame {}\n\u0009}\n}\n\n\n_time = time + 10;\nwaitUntil {\n\u0009if (time \u003e _time) exitWith {\n\u0009\u0009true\n\u0009}\n}\n"],"Additional":["scopeName","breakOut","breakTo","else","Control Structures","then","assert"]},{"Name":"exp","Desc":" Let x be a number, then exp (x) is equal to e to the power of x (or e^x) ","Syn":{"Syntax":" Number = exp x ","Params":["x: Number"],"Return":" Number "},"Examples":["_result=exp 1\nreturns 2.7182"],"Additional":["Math Commands","E (mathematical constant)"]},{"Name":"expectedDestination","Desc":" Return expected destination of unit as an array with format: [ Position, planningMode, forceReplan]. ","Syn":{"Syntax":" Array = expectedDestination person ","Params":["person: Object"],"Return":" Array "},"Examples":["Example needed"],"Additional":["setDestination"]},{"Name":"eyeDirection","Desc":" Returns the direction object is watching (eyes, or a vehicle primary observer).  ","Syn":{"Syntax":" eyeDirection unit ","Params":["unit: Object"],"Return":" Array "},"Examples":["can = \"Land_Can_V3_F\" createVehicle position player; \nonEachFrame {\n    can setPosASL [\n        (eyePos player select 0) + (eyeDirection player select 0),\n        (eyePos player select 1) + (eyeDirection player select 1),\n        (eyePos player select 2) + (eyeDirection player select 2)\n    ]\n}\n"],"Additional":["positionCameraToWorld","weaponDirection"]},{"Name":"eyePos","Desc":" Returns the object's eyes / main turret position. ","Syn":{"Syntax":" eyePos object ","Params":["object: Object"],"Return":" Array - format PositionASL "},"Examples":["eyePos player"],"Additional":["getPosASL","setPosASL","setPosASL2"]},{"Name":"face","Desc":" Returns the face of a person. ","Syn":{"Syntax":" face person ","Params":["person: Object"],"Return":" String "},"Examples":["face player\n"],"Additional":["setFace"]},{"Name":"faction","Desc":" Gets unit faction. Factions are defined under CfgFactionClasses. If the given faction is not defined, the command returns empty string. Standard Factions include:\nArma 2:\n\n West: \"USMC\", \"CDF\"\n\n East: \"RU\", \"INS\"\n\n Guer: \"GUE\"\n\n Civ: \"CIV\", \"CIV_RU\"\n\n\nArma 2: Operation Arrowhead: \n\n West: \"BIS_US\", \"BIS_CZ\", \"BIS_GER\"\n\n East: \"BIS_TK\", \"BIS_TK_INS\"\n\n Guer: \"BIS_TK_GUE\", \"BIS_UN\"\n\n Civ: \"BIS_TK_CIV\", \"BIS_CIV_special\"\n\n\nDLC Factions\nArma 2: British Armed Forces: \n\n West: \"BIS_BAF\"\n\n\nArma 2: Private Military Company:\n\n Guer: \"PMC_BAF\"\n\n\nArma 3:\n\n West: \"BLU_F\" (NATO), \"BLU_G_F\" (FIA)\n\n East: \"OPF_F\" (CSAT), \"OPF_G_F\" (FIA)\n\n Guer: \"IND_F\" (AAF), \"IND_G_F\" (FIA)\n\n Civ: \"CIV_F\" (Civilians) ","Syn":{"Syntax":" String = faction unitName ","Params":["unitName: Object"],"Return":" String. See above. "},"Examples":["_faction = faction _object;"],"Additional":["See also needed"]},{"Name":"fadeMusic","Desc":" Changes the music volume smoothly within the given time. ","Syn":{"Syntax":" time fadeMusic volume ","Params":["time: Number in seconds\n\n","volume: Number - music volume range 0 to 1. Maximum volume is 1. Default is 0.5."],"Return":" Nothing "},"Examples":["5 fadeMusic 0"],"Additional":["fadeSound"]},{"Name":"fadeRadio","Desc":" Causes a smooth change in the radio volume. The change duration is given by time, the target volume by volume. The default radio volume is 1.0. ","Syn":{"Syntax":" time fadeRadio volume ","Params":["time: Number in seconds\n\n","volume: Number - radio volume range 0 to 1. Maximum volume is 1. Default is 1."],"Return":" Nothing "},"Examples":["5 fadeRadio 0.1"],"Additional":["See also needed"]},{"Name":"fadeSound","Desc":" Changes the sound volume smoothly within the given time. ","Syn":{"Syntax":" time fadeSound volume ","Params":["time: Number - the time in seconds\n\n","volume: Number - sound volume range 0 to 1. Maximum volume is 1. Default is 1."],"Return":" Nothing "},"Examples":["5 fadeSound 0"],"Additional":["fadeMusic"]},{"Name":"fadeSpeech","Desc":" Cause a smooth change in the master speech volume. The change duration is given by time, the target volume by volume. The default master is 1.0. ","Syn":{"Syntax":" time fadeSpeech volume ","Params":["time: Number\n\n","volume: Number"],"Return":" Nothing "},"Examples":["5 fadeSpeech 0.1;"],"Additional":["See also needed"]},{"Name":"failMission","Desc":" Finish the mission. If the server is set to run persistent mission, failMission will not end the mission when last player gets kicked to the lobby. Use endMission to end the mission.\n\nThe end type can be:\n\n \"CONTINUE\"\n\n \"KILLED\"\n\n \"LOSER\"\n\n \"END1\"\n\n \"END2\"\n\n \"END3\"\n\n \"END4\"\n\n \"END5\"\n\n \"END6\"\n\n\n\nMission saves won't be deleted.\n\n\n\n\n\n \n\n To maintain Arma 3 visual style, it's recommended to use BIS_fnc_endMission instead.\n\n","Syn":{"Syntax":" failMission endtype ","Params":["endtype: String -"],"Return":" Nothing "},"Examples":["failMission \"LOSER\"; "],"Additional":["endMission","forceEnd"]},{"Name":"false","Desc":" Always false. ","Syn":{"Syntax":" false ","Params":null,"Return":" Boolean "},"Examples":["Example needed"],"Additional":["true"]},{"Name":"fillWeaponsFromPool","Desc":" Adds magazines from the campaign pool to the given unit, depending on his weapons. ","Syn":{"Syntax":" fillWeaponsFromPool unitName ","Params":["unitName: Object"],"Return":" Nothing "},"Examples":["fillWeaponsFromPool _soldier"],"Additional":["See also needed"]},{"Name":"find","Desc":" Searches for an array element within array or a string within a string. Returns the 0 based index on success or -1 if not found. Test is cASe-seNsItiVE ","Syn":{"Syntax":" array find x \u003cbr\u003e(Alternate Syntax exists check Read more)","Params":["array: Array - array to search in\n\n","x: Anything - array element to find"],"Return":" Number - 0 based position of the first array element that matches x, -1 if not found "},"Examples":["[\"Apples\",\"Oranges\",\"Pears\"] find \"Oranges\"; //result is 1\n[1,[2],[[3]]] find [[3]]; //result is 2","if (magazines player find \"Strela\" \u003e= 0) then {hint \"You've got Strela!\"};","hint str (\"japa is the man!\" find \"the man!\"); //8"],"Additional":["in Array","set","resize","reverse","select","in","toArray","toString","forEach","count","pushBack","deleteAt","deleteRange"]},{"Name":"findCover","Desc":" Returns the object around where the unit finds cover. The minDist, visibilityPosition and ignoreObject parameters are optional. Command is not functional since Arma 2.\nThis command is part of getHideFrom, findCover, setHideBehind non-functional trio. ","Syn":{"Syntax":" Object = object findCover [position, hidePosition, maxDist, minDist, visibilityPosition, ignoreObject] ","Params":["object: Object\n\n","[position, hidePosition, maxDist, minDist, visibilityPosition, ignoreObject]: Array","position: Array - format Position","hidePosition: Array - format getHideFrom. Position of that which the unit should hide from","maxDist: Number","minDist: Number (Optional)","visibilityPosition: Array - format Position (Optional) used to select cover that unit can see in that direction from","ignoreObject: Object (Optional) Ignore this object in visibility check"],"Return":" Object "},"Examples":["Example needed"],"Additional":["getHideFrom","setHideBehind","isHidden"]},{"Name":"findDisplay","Desc":" Find display by its IDD (which is defined in the description.ext or config).\nIf the specified display can't be found displayNull (\"No display\") is returned, (which can be tested with the isNull command.)\n\nThe primary display uses IDD 46. (eg: findDisplay 46). This will return displayNull on a dedicated server (so be sure to check isDedicated if using this in a waitUntil condition). ","Syn":{"Syntax":" Display = findDisplay idd ","Params":["idd: Number"],"Return":" Display "},"Examples":["_display = findDisplay 1;"],"Additional":["displayCtrl","createDisplay","createDialog","dialog","displayNull","controlNull","isNull"]},{"Name":"findEditorObject","Desc":" Return object that matches the provided reference. ","Syn":{"Syntax":" map findEditorObject value ","Params":["map: Control -\n\n","value: Any -"],"Return":" String "},"Examples":["Example needed"],"Additional":["See also needed"]},{"Name":"findEmptyPosition","Desc":" Searches for an empty position around specified position. The search starts looking for an empty position at a minimum distance of [minDistance] from the [center] and looks as far away as [maxDistance]. If a [vehicleType] parameter is specified, then the search will look for an empty positions that is big enough to hold that vehicle type. If an empty position isn't found, an empty array is returned.\n\nThis command ignores moving objects present within search area. ","Syn":{"Syntax":" center findEmptyPosition [minDistance, maxDistance] or [minDistance, maxDistance, vehicleType] ","Params":["center: Array - Search area center position. Accepts Position2D, Position3D, PositionATL or PositionASL\n\n","[minDistance, maxDistance, vehicleType]: Array","minDistance: Number - Start searching no closer than minDistance from the center","maxDistance: Number - Stop searching no further than maxDistance from the center","vehicleType: String - Class name of a vehicle to accommodate"],"Return":" Array - A suitable empty position in format Position3D or [] if not found "},"Examples":["_position = position player findEmptyPosition [0,100];","_position = _center findEmptyPosition [10,100,\"UH60M_EP1\"];","Check if exact position is empty:\n_position = _center findEmptyPosition [0,0,\"B_Boat_Armed_01_minigun_F\"];"],"Additional":["findEmptyPositionReady","selectBestPlaces","isFlatEmpty"]},{"Name":"findEmptyPositionReady","Desc":" Check if findEmptyPosition can be called without waiting for files. ","Syn":{"Syntax":" center findEmptyPositionReady [radius,maxDistance] ","Params":["center: Array -\n\n","[radius,maxDistance]: Array -"],"Return":" Array "},"Examples":["Example needed"],"Additional":["findEmptyPosition"]},{"Name":"findNearestEnemy","Desc":" Find the nearest enemy to the specified position. Returns a null object if the object's group does not know about any enemies. ","Syn":{"Syntax":" object findNearestEnemy position ","Params":["object: Object\n\n","position: Object or Array"],"Return":" Object "},"Examples":["_myNearestEnemy = (units _myGroup select 0) findNearestEnemy player"],"Additional":["nearestBuilding","nearestObject","nearestObjects","nearObjects","nearestLocation","nearEntities","nearTargets","nearSupplies","nearestLocationWithDubbing","nearObjectsReady","nearRoads"]},{"Name":"finishMissionInit","Desc":" Finish world initialization before mission is launched. ","Syn":{"Syntax":" finishMissionInit ","Params":null,"Return":" Nothing "},"Examples":["Example needed"],"Additional":["startLoadingScreen","endLoadingScreen"]},{"Name":"finite","Desc":" True, if number is finite (not infinite and a valid number) ","Syn":{"Syntax":" Boolean = finite x ","Params":["x: Number"],"Return":" Boolean "},"Examples":["?!finite 10/0 : hint \"Infinite\""],"Additional":["See also needed"]},{"Name":"fire","Desc":" Forces a unit to fire the given weapon.\nNOTE: Just like with forceWeaponFire it is possible to pass remote unit as argument, but this could be unreliable. Considering this command might need to be used in combination with selectWeapon, which takes only local arguments, it would make sense to execute fire command where unit is also local. ","Syn":{"Syntax":" unit fire weaponName \u003cbr\u003e(Alternate Syntax exists check Read more)","Params":["unit: Object - unit that's supposed to fire\n\n","weaponName: String - name of the weapon to be fired"],"Return":" Nothing "},"Examples":["_soldier fire \"M16\";","_soldier fire \"SmokeShellMuzzle\";","_soldier fire [\"SmokeShellMuzzle\",\"SmokeShellMuzzle\",\"SmokeShell\"];","player playActionNow \"PutDown\";\nplayer selectWeapon \"DemoChargeMuzzle\";\nplayer fire [\"DemoChargeMuzzle\", \"DemoChargeMuzzle\", \"DemoCharge_Remote_Mag\"];\nplayer setWeaponReloadingTime [player, \"DemoChargeMuzzle\", 0];"],"Additional":["forceWeaponFire","selectWeapon","fireAtTarget","doFire","commandFire","action [\"UseWeapon\"]","Category:Weapons"]},{"Name":"fireAtTarget","Desc":" Remotely forces a unit to fire the given weapon. ","Syn":{"Syntax":" Script = sourceVehicle fireAtTarget [targetVehicle,weaponClassName] ","Params":["sourceVehicle: Object - source vehicle to fire from\n\n","targetVehicle: Object - target vehicle to fire at","WeaponClassName: String - weapon classname, optional parameter"],"Return":" Script - script handle, which can be used to determine (via scriptDone) when the called script has finished."},"Examples":["_handle = this fireAtTarget [groundtarget1,\"HellfireLauncher\"];","_handle = Igla_AA_pod_TK_EP1 fireAtTarget [_helicopter,currentWeapon Igla_AA_pod_TK_EP1];","_handle = Igla_AA_pod_TK_EP1 fireAtTarget [helicopter];"],"Additional":["fire","forceWeaponFire","doFire","commandFire","aimedAtTarget"]},{"Name":"firstBackpack","Desc":" Returns the first stored backpack.  ","Syn":{"Syntax":" firstBackpack box ","Params":["box: Object"],"Return":" Object "},"Examples":["Example needed"],"Additional":["backpackContainer","unitBackpack","backpack","backpackCargo","getBackpackCargo","backpackItems","addBackpack","addBackpackCargo","addBackpackCargoGlobal","removeBackpack","clearBackpackCargo","clearBackpackCargoGlobal","clearAllItemsFromBackpack","loadBackpack","backpackSpaceFor","canAddItemToBackpack","addItemToBackpack","removeItemFromBackpack","everyBackpack"]},{"Name":"flag","Desc":" Returns the flag the unit is carrying. ","Syn":{"Syntax":" Object = flag unitName ","Params":["unitName: Object"],"Return":" Object -  \nReturns the flag. If the unit carries no flag, objNull is returned. "},"Examples":["_flag = flag _soldier;"],"Additional":["Flag Textures","flagOwner","setFlagOwner","setFlagSide","setFlagTexture"]},{"Name":"flagOwner","Desc":" Returns the owner of a flag. ","Syn":{"Syntax":" Object = flagOwner flag ","Params":["flag: Object"],"Return":" Object -  \nThe person or vehicle that owns the flag is returned. If used on anything else than a flag, the returned value is objNull.\n\nIf the flag is on its pole, the return value is NULL.\n\nIf the flagowner is dead, the return value is the name of the soldier model. "},"Examples":["_person = flagOwner _flagOne;"],"Additional":["Flag Textures","flag","setFlagOwner","setFlagSide","setFlagTexture"]},{"Name":"fleeing","Desc":" Checks if a unit is fleeing. ","Syn":{"Syntax":" Boolean = fleeing unitName ","Params":["unitName: Object"],"Return":" Boolean -  \nReturns true if a unit is fleeing, false if not. Dead or empty units return false. "},"Examples":["? (fleeing _east_unit) : player sideChat \"We have won!\""],"Additional":["allowFleeing"]},{"Name":"floor","Desc":" Returns the next lowest integer in relation to x. ","Syn":{"Syntax":" Number = floor x ","Params":["x: Number"],"Return":" Number "},"Examples":["floor 5.25\nResult is 5","floor -5.25\nResult is -6"],"Additional":["Math Commands","ceil","round"]},{"Name":"flyInHeight","Desc":" Sets the flying altitude for aircraft relatively to the ground surface. Avoid too low altitudes, as helicopters and planes won't evade trees and obstacles on the ground. The default flying altitude is 100 meters. ","Syn":{"Syntax":" aircraft flyInHeight altitude ","Params":["aircraft: Object\n\n","altitude: Number - flying altitude in meters"],"Return":" Nothing "},"Examples":["_helicopter flyInHeight 40"],"Additional":["See also needed"]},{"Name":"fog","Desc":" Return the current fog. ","Syn":{"Syntax":" Number = fog ","Params":null,"Return":" Number "},"Examples":["_foglevel = fog;"],"Additional":["fogParams","fogForecast","setFog","setFog array","nextWeatherChange"]},{"Name":"fogForecast","Desc":" Returns the forecast fog value. A value of 0 means no fog, 1 means maximum fog. ","Syn":{"Syntax":" Number = fogForecast ","Params":null,"Return":" Number "},"Examples":["_level = fogForecast;"],"Additional":["fogParams","fog","setFog","setFog array","nextWeatherChange"]},{"Name":"fogParams","Desc":" Returns actual params for fog. \n\nYou can use this command in combination with setFog_array to sync server fog with clients. ","Syn":{"Syntax":" fogParams ","Params":null,"Return":" Array - [fogValue, fogDecay, fogBase] "},"Examples":["//server\nserver_fog = fogParams;\npublicVariable \"server_fog\";\n//client\n0 setFog server_fog;"],"Additional":["setFog_array","setFog","fog","fogForecast"]},{"Name":"for","Desc":"","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":null,"Additional":null},{"Name":"forceAddUniform","Desc":" Create a new uniform and hard link it into slot (without any restrictions).  ","Syn":{"Syntax":" unit forceAddUniform type ","Params":["unit: Object\n\n","type: String"],"Return":" Nothing "},"Examples":["_unit forceAddUniform \"U_B_CombatUniform_mcam\";\n"],"Additional":["addUniform","isUniformAllowed","removeUniform","uniform"]},{"Name":"forceEnd","Desc":" Enforces mission termination. Can be used in an \"END\" trigger to force end conditions in the editor.","Syn":{"Syntax":" forceEnd ","Params":null,"Return":" Nothing "},"Examples":["if (_TerritoryLost) then {forceEnd}"],"Additional":["failMission","endMission"]},{"Name":"forceMap","Desc":" Displays the map on the screen during a mission. ","Syn":{"Syntax":" forceMap show ","Params":["show: Boolean"],"Return":" Nothing "},"Examples":["forceMap true"],"Additional":["showMap","shownMap","openMap","visibleMap"]},{"Name":"forceRespawn","Desc":" Forces unit to respawn. The effect as if the player pressed RESPAWN button in the game pause menu only there is no \"so and so was killed\" message. ","Syn":{"Syntax":" forceRespawn unit ","Params":["unit: Object"],"Return":" Nothing "},"Examples":["forceRespawn player;\n"],"Additional":["playerRespawnTime","setPlayerRespawnTime"]},{"Name":"forceSpeed","Desc":" Force the speed limit on given object (object will never attempt to move faster than given by forceSpeed). Use negative value to return to default behaviour. Used unit is m/s. ","Syn":{"Syntax":" object forceSpeed speed ","Params":["object: Object\n\n","speed: Number (in m/s)"],"Return":" Nothing "},"Examples":["_helicopter forceSpeed 150"],"Additional":["See also needed"]},{"Name":"forceWalk","Desc":" Makes the unit walk, without possibility to run. Note, you still can sprint ","Syn":{"Syntax":" unit forceWalk value ","Params":["unit: Object - the unit forced to walk\n\n","value: Boolean - true/false"],"Return":" Nothing "},"Examples":["player forceWalk true"],"Additional":["isForcedWalk","isWalking"]},{"Name":"forceWeaponFire","Desc":" The unit will be forced to fire from the given weapon. The weapon will not fire if firemode passed as parameter is not supported by the weapon. Command must be executed where unit is local. ","Syn":{"Syntax":" unit forceWeaponFire [weapon, firemode] ","Params":["unit: Object\n\n","[weapon, firemode]: Array","weapon: String","firemode: String - Common options are \"Single\", \"Burst\", \"FullAuto\". For the full list of a weapon firemodes:\n\nhint str (getArray (configFile \u003e\u003e \"CfgWeapons\" \u003e\u003e currentWeapon player \u003e\u003e \"modes\")); If modes[] param in config for the weapon says {\"this\"}, then the same classname as for the weapon param should be used as firemode param."],"Return":" Nothing "},"Examples":["soldierOne forceWeaponFire [\"arifle_MX_F\", \"Single\"];","player forceWeaponFire [\"hgun_ACPC2_F\", \"hgun_ACPC2_F\"];","_unit forceWeaponFire [\"HandGrenadeMuzzle\",\"HandGrenadeMuzzle\"];\n_unit forceWeaponFire [\"MiniGrenadeMuzzle\",\"MiniGrenadeMuzzle\"];\n_unit forceWeaponFire [\"HandGrenade_Stone\",\"HandGrenade_Stone\"];\n_unit forceWeaponFire [\"SmokeShellMuzzle\",\"SmokeShellMuzzle\"];\n_unit forceWeaponFire [\"ChemlightGreenMuzzle\",\"ChemlightGreenMuzzle\"];\n_unit forceWeaponFire [\"IRGrenade\",\"IRGrenade\"];"],"Additional":["currentWeapon","currentWeaponMode","fire","setWeaponReloadingTime","selectWeapon","doFire","commandFire","fireAtTarget"]},{"Name":"forceWeatherChange","Desc":" Forces saved wanted settings for weather to be actual (BEWARE: Will cause lag). ","Syn":{"Syntax":" forceWeatherChange ","Params":null,"Return":" Nothing "},"Examples":["240 setOvercast 1;\n360 setRain 1;\nforceWeatherChange; comment \"force immediate change overriding smooth transition\";"],"Additional":["fog","fogForecast","setFog","overcast","setOvercast","overcastForecast","nextWeatherChange","rain","setRain","setWind"]},{"Name":"forEach","Desc":" Executes the given command(s) on every item of an array.\n\nThe array items are represented by the magic variable _x. The array indices are represented by _forEachIndex.\n\nIn ArmA2 \u0026 VBS2, the variable _x is always local to the forEach block so it is safe to nest them.\n","Syn":{"Syntax":" script forEach array ","Params":["script: String (only in Operation Flashpoint), Code (since Armed Assault)\n\n","array: Array"],"Return":" Anything - will return the value of last executed statement "},"Examples":["{ _x setDammage 1; } forEach units group player;","This command can also easily be used to execute a single command multiple times without respect to the array items.\n{ player addMagazine \"M16\"; } forEach [1, 2, 3, 4];","You can also use multiple commands in the same block.\n{\n    _x setCaptive true;\n    removeAllWeapons _x;\n    doStop _x;\n} forEach units group this;","To get the index of a forEach loop, use _forEachIndex.\n{systemChat format [\"%1\", _forEachIndex];} forEach [1,2,3];\nWill return: \"0\", \"1\", \"2\" in systemChat messages."],"Additional":["set","resize","pushBack","reverse","select","in","find","toArray","toString","count","deleteAt","deleteRange","Control Structures"]},{"Name":"forEachMember","Desc":" Executes the given command for each member of the team (recursively). ","Syn":{"Syntax":" command forEachMember team ","Params":["command: Code\n\n","team: Team Member"],"Return":" Nothing "},"Examples":["Example needed"],"Additional":["addTeamMember","createTeam","deleteTeam","forEachMemberTeam","removeTeamMember","teamMember","teamName","teams","teamType","forEachMemberAgent"]},{"Name":"forEachMemberAgent","Desc":" Executes the given command for each agent member of the team (recursively). ","Syn":{"Syntax":" command forEachMemberAgent team ","Params":["command: Code\n\n","team: Team Member"],"Return":" Nothing "},"Examples":["Example needed"],"Additional":["agent","agents","createAgent","isAgent","addTeamMember","createTeam","deleteTeam","forEachMemberTeam","removeTeamMember","teamMember","teamName","teams","teamType","forEachMember"]},{"Name":"forEachMemberTeam","Desc":" Executes the given command for each team member of the team (recursively). ","Syn":{"Syntax":" command forEachMemberTeam team ","Params":["command: Code\n\n","team: Team Member"],"Return":" Nothing "},"Examples":["Example needed"],"Additional":["addTeamMember","createTeam","deleteTeam","removeTeamMember","teamMember","teamName","teams","teamType","forEachMember","forEachMemberAgent"]},{"Name":"format","Desc":" Composes a string containing other variables or other variable types.\n\nConverts any variable type to a string.\n\nIf you want to convert a string back to a number, use parseNumber.","Syn":{"Syntax":" String = format [formatString, var1, var2 ...] ","Params":["[formatString, var1, var2 ...]: Array\n\n","formatString: String - a string containing text and/or references to the variables listed below in the array. The references appear in the form of %1, %2 etc.","var1: Any Value - variable referenced by %1","var2: Any Value - variable referenced by %2","......And so on."],"Return":" String -  \nThe full string is returned. "},"Examples":["format [\"Player:%1, player's side:%2\", player, side player];\n\nreturns \"Player:WEST 1-1-A:1 (Username), player's side:WEST\"","player addEventHandler [\"HandleDamage\", {\n\u0009hint format [\"You just sustained %1%2 damage!\", ceil ((_this select 2) * 100), \"%\"];\n}];\n\nhints \"You just sustained 20% damage!\""],"Additional":["formatText"]},{"Name":"formation","Desc":" Returns the current formation of a group. ","Syn":{"Syntax":" String = formation grp","Params":["grp: Object or Group"],"Return":" String -  returns either \"COLUMN\", \"STAG COLUMN\", \"WEDGE\", \"ECH LEFT\", \"ECH RIGHT\", \"VEE\" or \"LINE\" "},"Examples":["formation group player"],"Additional":["formations description","formLeader","setFormation"]},{"Name":"formationDirection","Desc":" Return the direction in degrees of the 'unit' watching in formation. ","Syn":{"Syntax":" Number = formationDirection unitName ","Params":["unitName: Object"],"Return":" Number "},"Examples":["_degrees = FormationDirection _unit"],"Additional":["See also needed"]},{"Name":"formationLeader","Desc":" Return leader of the formation. ","Syn":{"Syntax":" Object = formationLeader unitName","Params":["unitName: Object"],"Return":" Object "},"Examples":["? (formationLeader player != leader player) :\n hint \"Formation leader is not the group leader.\""],"Additional":["formLeader","leader","isFormationLeader","selectLeader"]},{"Name":"formationMembers","Desc":" Return list of units (drivers) in the formation. ","Syn":{"Syntax":" Array = formationMembers person","Params":["person: Object"],"Return":" Array "},"Examples":["_drivers=FormationMembers _person"],"Additional":["See also needed"]},{"Name":"formationPosition","Desc":" Return position of unit in the formation ","Syn":{"Syntax":" Array = formationPosition person ","Params":["person: Object"],"Return":" Array - format Position "},"Examples":["_pos=FormationPosition _person"],"Additional":["See also needed"]},{"Name":"formationTask","Desc":" Return the current task of the unit in the formation.\n \nYou can't use it in ArmA 2, it will always returns \"NOTHING\"","Syn":{"Syntax":" String = formationTask person ","Params":["person: Object"],"Return":" String: (EXCLUDED, MOVE, COVER, LEADER) "},"Examples":["_CurrentTask = FormationTask _person "],"Additional":["setFormationTask"]},{"Name":"formatText","Desc":" Creates a structured text by replacing %1, %2, etc. in format with plain or structured texts given as arguments. ","Syn":{"Syntax":" Structured Text = formatText [format, arg1, arg2, ...] ","Params":["[format, arg1, arg2, ...]: Array\n\n","format: String","arg1, arg2, ...]"],"Return":" Structured Text "},"Examples":["_text = formatText [\"Image: %1\", image \"data\\isniper.paa\"];"],"Additional":["See also needed"]},{"Name":"formLeader","Desc":" Returns the formation leader of a given unit. This is often the same as the group leader, but not always, for example in cases when a unit is ordered to follow another unit. ","Syn":{"Syntax":" Object = formLeader unitName ","Params":["unitName: Object"],"Return":" Object -  \nthe leader of the formation is returned. If used on a dead unit, the returned value is objNull "},"Examples":["? (formLeader player != leader player) :\n hint \"The formation leader is different to the group leader!\"\nreturns X"],"Additional":["formationLeader","leader","isFormationLeader","selectLeader"]},{"Name":"freeLook","Desc":" Returns true if freelook is active.  ","Syn":{"Syntax":" freeLook ","Params":null,"Return":" Boolean "},"Examples":["systemChat (if freeLook then {\"Quit looking around player!\"} else {\"\"});\n"],"Additional":["lookAt","lookAtPos"]},{"Name":"from","Desc":" Continue sequence of for var command. ","Syn":{"Syntax":" for \"_var\" from b ","Params":["for \"_var\": For Type\n\n","b: Number"],"Return":" For Type "},"Examples":["for \"_x\" from 10 to 20 do {..code..}"],"Additional":["Control Structures"]},{"Name":"fromEditor","Desc":" Return if given team was inserted directly from mission editor. ","Syn":{"Syntax":" fromEditor teamMember ","Params":["teamMember: Team Member"],"Return":" Boolean "},"Examples":["_fromEditor = fromEditor _member"],"Additional":["See also needed"]},{"Name":"fuel","Desc":" Checks how much fuel is left in the gas tank of a vehicle. ","Syn":{"Syntax":" fuel vehicle ","Params":["vehicle: Object"],"Return":" Number -  \nThe returned number is in range 0 (empty tank) to 1 (full tank). "},"Examples":["if (fuel vehicle player == 0) then {hint \"The vehicle is out of fuel!\"};"],"Additional":["setFuel","setFuelCargo","getFuelCargo"]},{"Name":"gearSlotData","Desc":" Returns gear slot item name. ","Syn":{"Syntax":" gearSlotData control ","Params":["control: Control -"],"Return":" String "},"Examples":["Open any ammobox and click by any gear slotsprivate \"_dspl\";\ndisableSerialization;\n\nwaitUntil {\n    _dspl = findDisplay 106;\n    ! isNull _dspl;\n};\n\nuiNamespace setVariable [\"/VDMJ/RscDisplayGear/SlotDataEH\", {\n    _self = _this select 0;\n    _weaponName = gearSlotData _self;\n    _conf = configFile \u003e\u003e _confSection \u003e\u003e _weaponName;\n    _name = getText(_conf \u003e\u003e \"displayName\");\n    _desc = getText(_conf \u003e\u003e \"Library\" \u003e\u003e \"libTextDesc\");\n    _image = getText(_conf \u003e\u003e \"picture\");\n    hint parseText format[\n        '\u003ct size=\"1.3\" align=\"center\" shadow=\"true\" shadowColor=\"#000000\"\u003e%1\u003c/t\u003e\u003cbr /\u003e\u003cimg image=\"%2\" size=\"6\" align=\"center\" /\u003e\u003cbr /\u003e%3\u003cbr /\u003e%4',\n        _name, _image, _desc\n    ];\n}];\n\n\nfor \"_i\" from 107 to 145 do {\n    _dspl displayCtrl _i ctrlAddEventHandler [\"ButtonClick\",\n        format [\n            '_confSection = \"%1\"; _this call (uiNamespace getVariable \"/VDMJ/RscDisplayGear/SlotDataEH\");',\n            if( _i \u003e= 109 \u0026\u0026 _i \u003c= 129 ) then { \"CfgMagazines\" } else { \"CfgWeapons\" }\n        ]\n    ];\n};\n"],"Additional":["See also needed"]},{"Name":"getAmmoCargo","Desc":" Returns the amount of ammo resources in the cargo space of a repair vehicle.   ","Syn":{"Syntax":" getAmmoCargo vehicle  ","Params":["vehicle: Object"],"Return":" Number "},"Examples":["value = getAmmoCargo myVehicleName;"],"Additional":["setAmmoCargo"]},{"Name":"getArray","Desc":" Extract array from config entry. ","Syn":{"Syntax":" Array = getArray config ","Params":["config: Config"],"Return":" Array "},"Examples":["_array = getArray (configFile \u003e\u003e \"CfgVehicles\" \u003e\u003e \"Thing\" \u003e\u003e \"threat\")"],"Additional":["configFile","config/name","configName","count","getText","getNumber","inheritsFrom","isArray","isClass","isNumber","isText","select"]},{"Name":"getArtilleryAmmo","Desc":" Get list of all available magazines of artillery units on the list. Command returns only unique magazine types and doesn't contain any information about which unit has which magazine. ","Syn":{"Syntax":" getArtilleryAmmo [unit1, unit2, unit3....] ","Params":["[unit1, unit2, unit3....]: Array\n\n","unit: Object"],"Return":" Array "},"Examples":["if (\"8Rnd_82mm_Mo_Flare_white\" in getArtilleryAmmo [\n\u0009_mortar1,\n\u0009_mortar2,\n\u0009_mortar3, \n\u0009_mortar4\n]) then {\n\u0009hint \"Sir, we have white flares, sir!\";\n};"],"Additional":["getArtilleryETA","commandArtilleryFire","doArtilleryFire","enableEngineArtillery","getArtilleryComputerSettings","shownArtilleryComputer","inRangeOfArtillery"]},{"Name":"getArtilleryComputerSettings","Desc":" Returns settings from artillery computer currently opened by player.  ","Syn":{"Syntax":" getArtilleryComputerSettings ","Params":null,"Return":" Array "},"Examples":["Example needed"],"Additional":["shownArtilleryComputer","enableEngineArtillery","commandArtilleryFire","doArtilleryFire","getArtilleryETA","inRangeOfArtillery","getArtilleryAmmo"]},{"Name":"getArtilleryETA","Desc":" Returns ETA to the target in seconds for given artillery unit based on target position and used magazine. ","Syn":{"Syntax":" unit getArtilleryETA [targetPosition, magazineType]  ","Params":["unit: Object - artillery unit\n\n","targetPosition: Position - position of the target","magazineType: String - type of magazine used"],"Return":" Number "},"Examples":["_mortar getArtilleryETA [getPos _target, getArtilleryAmmo [_mortar] select 0];","_mortar getArtilleryETA [position _target, currentMagazine _mortar];"],"Additional":["getArtilleryAmmo","commandArtilleryFire","doArtilleryFire","enableEngineArtillery","getArtilleryComputerSettings","shownArtilleryComputer","inRangeOfArtillery"]},{"Name":"getAssignedCuratorLogic","Desc":" Returns curator logic to which given player has access. ","Syn":{"Syntax":" getAssignedCuratorLogic player ","Params":["player: Object"],"Return":" Object "},"Examples":["(getAssignedCuratorLogic player) removeCuratorEditableObjects [allDead,true];"],"Additional":["allCurators","getAssignedCuratorUnit"]},{"Name":"getAssignedCuratorUnit","Desc":" Returns unit assigned to curator logic. ","Syn":{"Syntax":" getAssignedCuratorUnit curatorObj ","Params":["curatorObj: Object - Curator module."],"Return":" Object "},"Examples":["_curatorUnit = getAssignedCuratorUnit (allCurators select 0);\n_curatorUnit joinAs [createGroup civilian, 0];"],"Additional":["getAssignedCuratorLogic"]},{"Name":"getBackpackCargo","Desc":"  Returns all backpack types and count from the cargo space ","Syn":{"Syntax":" result = getBackpackCargo object ","Params":["object: Object - object to check"],"Return":" Array of Arrays - Format: [[\"5BackpacksType1\",\"10BackpacksType2\"],[5,10]] "},"Examples":["_content = getBackpackCargo carName;","_content = getBackpackCargo ammoBoxName;"],"Additional":["backpackContainer","firstBackpack","unitBackpack","backpack","backpackCargo","backpackItems","addBackpack","addBackpackCargo","addBackpackCargoGlobal","removeBackpack","clearBackpackCargo","clearBackpackCargoGlobal","clearAllItemsFromBackpack","loadBackpack","backpackSpaceFor","canAddItemToBackpack","addItemToBackpack","removeItemFromBackpack","everyBackpack"]},{"Name":"getBleedingRemaining","Desc":" Returns remaining time of bleeding.  ","Syn":{"Syntax":" getBleedingRemaining unit ","Params":["unit: Object"],"Return":" Number "},"Examples":["Example needed"],"Additional":["isBurning","setBleedingRemaining","isBleeding"]},{"Name":"getBurningValue","Desc":" Returns amount of damage from fire.  ","Syn":{"Syntax":" getBurningValue unit ","Params":["unit: Object"],"Return":" Number "},"Examples":["Example needed"],"Additional":["See also needed"]},{"Name":"getCargoIndex","Desc":" Returns index of the unit in cargo. 0,1,2... or -1 if not in cargo. ","Syn":{"Syntax":" vehicle getCargoIndex unit ","Params":["vehicle: Object\n\n","unit: Object"],"Return":" Number "},"Examples":["player moveInCargo heli;\nhint str (heli getCargoIndex player);"],"Additional":["moveInCargo","assignAsCargoIndex","emptyPositions"]},{"Name":"getCenterOfMass","Desc":" Returns center of mass of a PhysX object. ","Syn":{"Syntax":" getCenterOfMass object ","Params":["object: Object"],"Return":" Array - [x,y,z] offset relative to the model centre "},"Examples":["_com = getCenterOfMass _myCar"],"Additional":["getMass","setCenterOfMass","setMass"]},{"Name":"getChosenCont","Desc":" When Inventory UI (IDD: 602) is opened, this command returns connected container (Get Chosen Container).\n\n\nReturns container object for ammobox, vehicle and some weaponholder when attempting to open backpack of another unit. In all other cases returns objNull.  ","Syn":{"Syntax":" getChosenCont unit ","Params":["Unit: Object"],"Return":" Object "},"Examples":["player addEventHandler [\"InventoryOpened\", {\n\u00090 = _this spawn {\n\u0009\u0009waitUntil {!isNull findDisplay 602};\n\u0009\u0009hint format [\n\u0009\u0009\u0009\"EH Container: %1\\n\\ngetChosenCont: %2\",\n\u0009\u0009\u0009_this select 1,\n\u0009\u0009\u0009getChosenCont (_this select 0)\n\u0009\u0009];\n\u0009};\n}];"],"Additional":["uniformContainer","vestContainer","backpackContainer"]},{"Name":"getClientState","Desc":" Returns client state in network game. Works on both, client and dedicated server. ","Syn":{"Syntax":" getClientState ","Params":null,"Return":" String - Client state. Possible values are:\n\n NONE - no client (or singleplayer)\n\n CREATED - client is create\n\n CONNECTED - client is connected to server, message formats are registered\n\n LOGGED IN - identity is created\n\n MISSION SELECTED - mission is selected\n\n MISSION ASKED - server was asked to send / not send mission\n\n ROLE ASSIGNED - role was assigned (and confirmed)\n\n MISSION RECEIVED - mission received\n\n GAME LOADED - island loaded, vehicles received\n\n BRIEFING SHOWN - briefing was displayed\n\n BRIEFING READ - ready to play mission\n\n GAME FINISHED - game was finished\n\n DEBRIEFING READ - debriefing read, ready to continue with next mission\n\n\n\n"},"Examples":["_state = getClientState;"],"Additional":["getPlayerUID"]},{"Name":"getConnectedUAV","Desc":" Returns UAV if unit has connection to some UAV.  ","Syn":{"Syntax":" getConnectedUAV unit ","Params":["unit: Object"],"Return":" Object "},"Examples":["Example needed"],"Additional":["showUAVFeed","shownUAVFeed","allUnitsUAV","UAVControl","connectTerminalToUAV","isUAVConnected"]},{"Name":"getDammage","Desc":"Returns the object damage in the range from 0 to 1.   ","Syn":{"Syntax":" Number = getDammage object ","Params":["object: Object"],"Return":" Number "},"Examples":["_damage= getDammage player "],"Additional":["damage","setDamage","setDammage"]},{"Name":"getDescription","Desc":" Returns the string representation of unit as an four slots array.  ","Syn":{"Syntax":" getDescription unit ","Params":["unit: Object"],"Return":" Array - [unit, uniform, vest, backpack] "},"Examples":["Example needed"],"Additional":["See also needed"]},{"Name":"getDir","Desc":" Returns the unit heading in the range from 0 to 360. ","Syn":{"Syntax":" Number = getDir object ","Params":["object: Object"],"Return":" Number "},"Examples":["_degrees = getDir player  "],"Additional":["getDirVisual","direction"]},{"Name":"getDirVisual","Desc":" Returns object's heading in the range from 0 to 360 in render time scope. ","Syn":{"Syntax":" getDirVisual object ","Params":["object: Object"],"Return":" Number "},"Examples":["_dir = getDirVisual player;"],"Additional":["getDir","direction"]},{"Name":"getDLCs","Desc":" Returns array of appIDs of DLCs. Use filter param to get specific type of DLCs: \n0 - all\n1 - owned\n2 - not owned","Syn":{"Syntax":" getDLCs filter ","Params":["filter: Number"],"Return":" Array - array of numbers "},"Examples":["_ownedDLCs = getDLCs 1;","Is the Karts DLC owned by this client?\nhintSilent str (288520 in (getDLCs 1));"],"Additional":["getObjectDLCs"]},{"Name":"getEditorCamera","Desc":" Fetches a reference to the mission editor camera. ","Syn":{"Syntax":" getEditorCamera map ","Params":["map: Control -"],"Return":" Object "},"Examples":["Example needed"],"Additional":["See also needed"]},{"Name":"getEditorMode","Desc":" Returns the current mode of the editor. ","Syn":{"Syntax":" getEditorMode map ","Params":["map: Control -"],"Return":" String "},"Examples":["Example needed"],"Additional":["See also needed"]},{"Name":"getEditorObjectScope","Desc":" Returns the editor object scope of the specified editor object. ","Syn":{"Syntax":" map getEditorObjectScope object ","Params":["map: Control -\n\n","object: String -"],"Return":" String "},"Examples":["Example needed"],"Additional":["See also needed"]},{"Name":"getElevationOffset","Desc":" Returns the map elevation offset from [map]/config.cpp.\n\nReturns 0 if there's no elevationOffset defined in the config of the current world. ","Syn":{"Syntax":"getElevationOffset","Params":null,"Return":" Number - elevation offset of the map "},"Examples":["_offset = getElevationOffset;"],"Additional":["See also needed"]},{"Name":"getFatigue","Desc":" Returns fatigue of given unit.  ","Syn":{"Syntax":" getFatigue unit ","Params":["unit: Object"],"Return":" Number "},"Examples":[" value = getFatigue player;\n"," if (getFatigue player \u003c 0.5) Then { player sideChat \"I'm good to go!\" };\n"],"Additional":["setFatigue","enableFatigue"]},{"Name":"getFriend","Desc":" Returns if sides are friendly or hostile. For a value smaller than 0.6 it results in being enemy, otherwise it's friendly.  ","Syn":{"Syntax":" side1 getFriend side2 ","Params":["side1: Side\n\n","side2: Side"],"Return":" Number: Decimal value between 0.0 to 1.0 "},"Examples":["value = west getFriend east","isEnemy = ((side _killer) getFriend (side _victim) \u003c 0.6)"],"Additional":["setFriend"]},{"Name":"getFSMVariable","Desc":" Return the value of variable in the variable space of given FSM. The FSM handle is the number returned by the execFSM command. ","Syn":{"Syntax":" FSM handle getFSMVariable name ","Params":["FSM handle: Number -\n\n","name: String -"],"Return":" Any "},"Examples":["Example needed"],"Additional":["FSM","commandFSM","completedFSM","doFSM","execFSM","setFSMVariable"]},{"Name":"getFuelCargo","Desc":" Returns the fuel amount (between 0 and 1) in the cargo space of a refuelling vehicle.   ","Syn":{"Syntax":" getFuelCargo vehicle  ","Params":["vehicle: Object"],"Return":" Number "},"Examples":["value = getFuelCargo myVehicleName;"],"Additional":["setFuelCargo"]},{"Name":"getGroupIcon","Desc":" Get group icon properties. ","Syn":{"Syntax":" group getGroupIcon ID ","Params":["group: Group -\n\n","ID: Number -"],"Return":" Array "},"Examples":["_grpIconId = _group getVariable \"BIS_MARTA_ICON_TYPE\";\n_grpIcon = _group getGroupIcon _grpIconId;"],"Additional":["addGroupIcon","clearGroupIcons","getGroupIconParams","groupIconSelectable","groupIconsVisible","onGroupIconClick","removeGroupIcon","setGroupIcon","setGroupIconParams","setGroupIconsSelectable","setGroupIconsVisible"]},{"Name":"getGroupIconParams","Desc":" Returns group icons params. [color,text,scale,visible] ","Syn":{"Syntax":" getGroupIconParams group ","Params":["group: Group -"],"Return":" Array "},"Examples":["_icon = _this getVariable \"icon\";\n//[color,text,scale,visible]\n_params = getGroupIconParams _icon;\n_color         = _params select 0;\n_text         = _params select 1;\n_scale         = _params select 2;\n_visible     = _params select 3;"],"Additional":["addGroupIcon","clearGroupIcons","getGroupIcon","groupIconSelectable","groupIconsVisible","onGroupIconClick","removeGroupIcon","setGroupIcon","setGroupIconParams","setGroupIconsSelectable","setGroupIconsVisible"]},{"Name":"getGroupIcons","Desc":" Returns all group icons. [id,icon,[offsetx,offsety],[..],..] ","Syn":{"Syntax":" getGroupIcons group ","Params":["group: Group -"],"Return":" Array "},"Examples":["Example needed"],"Additional":["See also needed"]},{"Name":"getHideFrom","Desc":" Returns the Position where object believes the enemy to be, presumably by extrapolating the expected postion based on the last known position and speed of the enemy. A returned position of [0,0,0] implies that object does not knowAbout enemy. If enemy is null it is some position in front of the object or enemy position.\nThis command is part of getHideFrom, findCover, setHideBehind non-functional trio.  ","Syn":{"Syntax":" Array = object getHideFrom enemy ","Params":["object: Object\n\n","enemy: Object"],"Return":" Array - format getHideFrom - The array represents some kind of position, however Z coordinate is raised, possibly for  futher use in findCover and setHideBehind commands. "},"Examples":["Example needed"],"Additional":["findCover","setHideBehind","isHidden"]},{"Name":"getHitPointDamage","Desc":" Return current level of damage for a specific Hit Point (specified by its config class). If you need to get damage of a selection instead of hit point, use getHit.\n\n 0: no damage\n\n 1: full damage ","Syn":{"Syntax":" vehicle getHitPointDamage hitPointName","Params":["vehicle : Object - vehicle to be queried\n\n","hitPointName: String - name of the Hit Point class"],"Return":" Number "},"Examples":["(vehicle player) getHitPointDamage \"hitEngine\";"],"Additional":["setHitPointDamage","setHit","getHit","setDamage","damage"]},{"Name":"getItemCargo","Desc":" Returns all items names and count from ammo box (or any general weapon holder container).  ","Syn":{"Syntax":" getItemCargo box ","Params":["box: Object"],"Return":" Array of Arrays - Format: [[\"5ItemsType1\",\"10ItemsType2\"],[5,10]] "},"Examples":["hint str getItemCargo cursorTarget;"],"Additional":["itemCargo","addItemCargo","addItemCargoGlobal","clearItemCargo","clearItemCargoGlobal"]},{"Name":"getMagazineCargo","Desc":"  Returns all magazines types and count from the cargo space ","Syn":{"Syntax":" result = getMagazineCargo object ","Params":["object: Object - object to check"],"Return":" Array of arrays. [[\"5MagsType1\",\"10MagsType2\"],[5,10]]"},"Examples":["_content = getMagazineCargo carName;","_content = getMagazineCargo ammoBoxName;","hint str getMagazineCargo unitBackpack cursorTarget;"],"Additional":["magazineCargo","addMagazineCargo","addMagazineCargoGlobal","clearMagazineCargo","clearMagazineCargoGlobal"]},{"Name":"getMarkerColor","Desc":" Returns the color of a given map marker. ","Syn":{"Syntax":" String = getMarkerColor markerName ","Params":["markerName: String - marker name"],"Return":" String -  \nThe returned color is one of \"Default\", \"ColorBlack\", \"ColorRed\", \"ColorRedAlpha\", \"ColorGreen\", \"ColorGreenAlpha\", \"ColorBlue\", \"ColorYellow\" and \"ColorWhite\" "},"Examples":["\"MarkerOne\" setMarkerColor \"ColorBlack\"\n\n_color = getMarkerColor \"MarkerOne\"\nreturns \"ColorBlack\""],"Additional":["setMarkerColor"]},{"Name":"getMarkerPos","Desc":" Returns the position of a given marker. [x,y,z]\n\nArgument 3 (height above ground) is always zero.\n\nIf a non-existing marker is referenced the values returned are [0,0,0].\n","Syn":{"Syntax":" Array = getMarkerPos markerName ","Params":["markerName: String"],"Return":" Array - (format Position3D) "},"Examples":["\"MarkerOne\" setMarkerPos [200,100]\n\n_pos = getMarkerPos \"MarkerOne\"\nreturns [200,100,0]"],"Additional":["setMarkerPos"]},{"Name":"getMarkerSize","Desc":" Returns the size of a given marker. ","Syn":{"Syntax":" Array = getMarkerSize markerName ","Params":["markerName: String"],"Return":" Array -  \nThe returned array contains two values: [a,b] where a is the size in the markers x-axis, b the size in its y-axis (in meters). "},"Examples":["\"MarkerOne\" setMarkerSize [100,200]\n\n_size = getMarkerSize \"MarkerOne\"\nreturns [100,200]"],"Additional":["setMarkerSize","setMarkerBrush","setMarkerColor","setMarkerDir","setMarkerPos","setMarkerShape","createMarker","setMarkerText","setMarkerType","setMarkerAlpha"]},{"Name":"getMarkerType","Desc":" Returns the type of a given marker. See cfgMarkers for a list of standard markers. ","Syn":{"Syntax":"String =  getMarkerType markerName ","Params":["markerName: String"],"Return":" String. See cfgMarkers.\n\nIf the marker does not exist, the returned type is an empty string, ie \"\""},"Examples":["\"MarkerOne\" setMarkerType \"Destroy\"\n\n_type = getMarkerType \"MarkerOne\"\nreturns \"Destroy\""],"Additional":["cfgMarkers","markerType","setMarkerType","setMarkerTypeLocal"]},{"Name":"getMass","Desc":" Returns mass of a PhysX object. ","Syn":{"Syntax":" getMass object ","Params":["object: Object"],"Return":" Number "},"Examples":["_mass = getMass _myCar"],"Additional":["getCenterOfMass","setCenterOfMass","setMass"]},{"Name":"getNumber","Desc":" Extract number from config entry. ","Syn":{"Syntax":" Number = getNumber config ","Params":["config: Config"],"Return":" Number "},"Examples":["_value = getNumber (configFile \u003e\u003e \"CfgVehicles\" \u003e\u003e \"Thing\" \u003e\u003e \"maxSpeed\");"],"Additional":["configFile","config/name","configName","count","getArray","getText","inheritsFrom","isArray","isClass","isNumber","isText","select"]},{"Name":"getObjectArgument","Desc":" Return name of object argument in mission editor. ","Syn":{"Syntax":" map getObjectArgument [object, argument] ","Params":["map: Control\n\n","object: Object","argument: String"],"Return":" String "},"Examples":["\n// returns string \"[1009.0351, 1319.4928]\"\n(findDisplay 128 displayCtrl 51) getObjectArgument [\"_unit_1\", \"POSITION\"]\n\n// returns array [1009.0351, 1319.4928]\n(findDisplay 128 displayCtrl 51) evalObjectArgument [\"_unit_1\", \"POSITION\"]\n\n"],"Additional":["See also needed"]},{"Name":"getObjectChildren","Desc":" Return a list of all the children of the specified object. ","Syn":{"Syntax":" map getObjectChildren object ","Params":["map: Control -\n\n","object: String -"],"Return":" Array "},"Examples":["Example needed"],"Additional":["See also needed"]},{"Name":"getObjectDLCs","Desc":" Returns a list of all DLCs objects the unit is currently using. ","Syn":{"Syntax":" getObjectDLCs unit ","Params":["Unit: Object"],"Return":" Array "},"Examples":["_objects = getObjectDLCs player;"],"Additional":["getDLCs"]},{"Name":"getObjectProxy","Desc":" Return the proxy object associated with the given editor object. ","Syn":{"Syntax":" map getObjectProxy object ","Params":["map: Control -\n\n","object: String -"],"Return":" Object "},"Examples":["\n// it returns the object 'B 1-1-A:1 (Sean Johnson)'\n(findDisplay 128 displayCtrl 51) getObjectProxy \"_unit_1\""],"Additional":["setObjectProxy"]},{"Name":"getOxygenRemaining","Desc":" Returns amount of remaining oxygen.  ","Syn":{"Syntax":" getOxygenRemaining unit ","Params":["unit: Object"],"Return":" Number "},"Examples":["_oxygen = getOxygenRemaining player;\n"],"Additional":["setOxygenRemaining"]},{"Name":"getPlayerUID","Desc":"  Return an uniqueID of the given unit as string if it's player and empty value if it's AI. The uniqueID may be up to 100 characters long and may contain numbers, uppercase letters and underscores (the value can be used to construct a valid variable name by appending to another valid variable name).\n\nNote: while for ArmA 2 or ArmA 2: Operation Arrowhead until version 1.60 the result always contains a number, it should be always handled as an opaque string. Converting it to a Number can cause precision problems, as Number cannot accurately represent integers above 16777216 (2^24). Moreover, game versions since ArmA 2: Operation Arrowhead 1.61 provide a non-numeric value as a result.","Syn":{"Syntax":" getPlayerUID unit ","Params":["unit: Object"],"Return":" String "},"Examples":["_uid = getPlayerUID player;"],"Additional":["getPlayerUIDOld"]},{"Name":"getPos","Desc":" Returns the object position in format Position. Z value is height over the surface underneath. ","Syn":{"Syntax":" Array = getPos object ","Params":["object: Object; since VBS2 1.24: Location"],"Return":" Array - format Position "},"Examples":["hintSilent str getPos player;","getPos vs. other methods (over sea)\ndiag_log getPos ship;            // [2412.01, 6036.33, -0.839965]\ndiag_log getPosATL ship;          // [2412.01, 6036.33, 19.4266]\ndiag_log getPosASL ship;          // [2412.01, 6036.33, -0.920066]\ndiag_log getPosASLW ship;         // [2412.01, 6036.33, -0.865981]\ndiag_log visiblePosition ship;    // [2412.02, 6036.33, -0.837952]\ndiag_log visiblePositionASL ship; // [2412.02, 6036.33, -0.91798]\ndiag_log position ship;           // [2412.01, 6036.33, -0.839965]","getPos vs. other methods (over land)\ndiag_log getPos car;             // [2508.64, 5681.47, 0.0609589]\ndiag_log getPosATL car;           // [2508.64, 5681.47, 0.0356369]\ndiag_log getPosASL car;           // [2508.64, 5681.47, 71.718]\ndiag_log getPosASLW car;          // [2508.64, 5681.47, 71.718]\ndiag_log visiblePosition car;     // [2508.64, 5681.47, 0.0609512]\ndiag_log visiblePositionASL car;  // [2508.64, 5681.47, 71.718]\ndiag_log position car;            // [2508.64, 5681.47, 0.0609589]"],"Additional":["getPosVisual","setPos","position","getPosATL","getPosASL","getPosASLW","visiblePosition","visiblePositionASL","getMarkerPos"]},{"Name":"getPosASL","Desc":" Returns the object position height above sea level. ","Syn":{"Syntax":" Array = getPosASL object ","Params":["object: Object"],"Return":" Array - format PositionASL "},"Examples":["_AslPos = getPosASL player;","hint format [\"position above sea level: %1\", (getPosASL player) select 2];"],"Additional":["getPosASLVisual","setPosASL","setPosASL2","position","getPos","getPosATL","getPosASLW","visiblePosition","visiblePositionASL","getTerrainHeightASL"]},{"Name":"getPosASLW","Desc":" Returns the object position height above sea surface (waves included).  ","Syn":{"Syntax":" getPosASLW obj ","Params":["obj: Object"],"Return":" Array - PositionASLW "},"Examples":["_pos = getPosASLW _diver;\n"],"Additional":["setPosASLW","position","getPos","getPosATL","getPosASL","visiblePosition","visiblePositionASL"]},{"Name":"getPosATL","Desc":" Returns the position of an object relative to the terrain. ","Syn":{"Syntax":" getPosATL object ","Params":["object: Object"],"Return":" Array - format PositionATL "},"Examples":["_objPosition = getPosATL player"],"Additional":["getPosATLVisual","setPosATL","position","getPos","getPosASL","getPosASLW","visiblePosition","visiblePositionASL"]},{"Name":"getPosWorld","Desc":" Returns PositionASL of the model centre [0,0,0] of an object, rather than transformed boundingCenter or LandContact vertices. ","Syn":{"Syntax":"getPosWorld object ","Params":["object: Object;"],"Return":" Array - format PositionASL "},"Examples":["_obj setPosWorld getPosWorld _obj;","ATLToASL (_groundObj modelToWorld [0,0,0]) isEqualTo getPosWorld _groundObj; //true","Wave height under a boat:_h = ((boat modelToWorld [0,0,0]) vectorDiff getPosWorld boat) select 2;"],"Additional":["setPosWorld","position","getPosATL","getPosASL","getPosASLW","visiblePosition","visiblePositionASL","getMarkerPos","modelToWorld"]},{"Name":"getRepairCargo","Desc":" Returns the amount of repair resources from empty (0) to full (1) in the cargo space of a repair vehicle.   ","Syn":{"Syntax":" getRepairCargo vehicle  ","Params":["vehicle: Object"],"Return":" Number "},"Examples":["value = getRepairCargo vehicleName;"],"Additional":["setRepairCargo"]},{"Name":"getResolution","Desc":" Returns an array containing all information about resolution.\n\nThe returned Array is as follow: [width, height, 2D viewport width, 2D viewport height, aspect ratio, UI scale]\n\nNote: aspect ratio and UI scale are returned as coefficients and not 16:9 for example.","Syn":{"Syntax":" getResolution ","Params":null,"Return":" Array "},"Examples":["_res = getResolution; //some single monitor setup\n[\n\u00091360,\u0009\u0009//width\n\u0009768,\u0009\u0009//height\n\u0009867,\u0009\u0009//2D viewport width\n\u0009653,\u0009\u0009//2D viewport height\n\u00091.77778,\u0009//aspect ratio\n\u00090.85\u0009\u0009//UI scale\n]","_res = getResolution;  //dedicated server\n[\n\u0009160,\u0009\u0009//width\n\u0009120,\u0009\u0009//height\n\u0009136,\u0009\u0009//2D viewport width\n\u0009102,\u0009\u0009//2D viewport height\n\u00091.33333,\u0009//aspect ratio\n\u00090.85\u0009\u0009//UI scale\n]","_res = getResolution; //some triple monitor setup\n[\n\u00095760,\u0009\u0009//width\n\u00091080,\u0009\u0009//height\n\u0009792,\u0009\u0009//2D viewport width\n\u0009594,\u0009\u0009//2D viewport height\n\u00095.33333,\u0009//aspect ratio\n\u00090.55\u0009\u0009//UI scale\n]"],"Additional":["worldToScreen","screenToWorld"]},{"Name":"getShadowDistance","Desc":" Gets the shadows rendering distance. ","Syn":{"Syntax":" getShadowDistance ","Params":null,"Return":"  Number "},"Examples":["_value = getShadowDistance;"],"Additional":["See also needed"]},{"Name":"getSpeed","Desc":" Get the speed for the given speed mode.\n\nSpeedMode can be:\n\n\"AUTO\"\n\n\"SLOW\"\n\n\"NORMAL\"\n\n\"FAST\" ","Syn":{"Syntax":" Number = object getSpeed speedMode ","Params":["object: Object\n\n","speedMode: String"],"Return":" Number "},"Examples":["Example needed"],"Additional":["See also needed"]},{"Name":"getTerrainHeightASL","Desc":" Returns the terrain height above the sea for the given position. ","Syn":{"Syntax":" getTerrainHeightASL position ","Params":["position: Position2D or Position3D"],"Return":" Number "},"Examples":[" _height = getTerrainHeightASL (position player); "," _height = getTerrainHeightASL [5213,3245]; "],"Additional":["setPosASL","getPosASL","getPosATL","ASLToATL","ATLToASL"]},{"Name":"getText","Desc":" Extract text from config entry.  ","Syn":{"Syntax":" String = getText config","Params":["config: Config"],"Return":" String "},"Examples":["_text = getText (configFile \u003e\u003e \"CfgVehicles\" \u003e\u003e \"Thing\" \u003e\u003e \"icon\");"],"Additional":["configFile","config/name","configName","count","getArray","getNumber","inheritsFrom","isArray","isClass","isNumber","isText","select"]},{"Name":"getVariable","Desc":" Return the value of variable in the variable space of given object or location.\n\n\nAll available data types combinations:\n\n Namespace getVariable String\n\n Namespace getVariable Array (since 1.60)\n\n Control getVariable String\n\n Object getVariable String\n\n Object getVariable Array\n\n Group getVariable String\n\n Group getVariable Array\n\n Team_Member getVariable String\n\n Team_Member getVariable Array\n\n Task getVariable String\n\n Location getVariable String","Syn":{"Syntax":" object getVariable name \u003cbr\u003e(Alternate Syntax exists check Read more)","Params":["object: Control, Group, Location, Namespace, Object, Task or Team Member\n\n","name: String - Variable name that was defined in setVariable (Case sensitive)"],"Return":" Any Value Returns Nothing if the variable doesn't exist. Returns Anything if the object is undefined. "},"Examples":["_thePublicVariable = _myTruck getVariable \"myPublicVariable\";","_aLocalVariable = _myTruck getVariable [\"myLocalVariable\", [\"Not set\", _var]] select 1;","for \"_i\" from 0 to 5 do {\n    _car = missionNamespace getVariable (\"car\" + str _i);\n    _car setDamage 0;\n};\nSets damage of car0, car1, ..., car5 to 0."],"Additional":["setVariable"]},{"Name":"getWeaponCargo","Desc":"  Returns all weapons types and count from the cargo space ","Syn":{"Syntax":" result = getWeaponCargo object ","Params":["object: Object - object to check"],"Return":" Nested Array in format [all_types_array, all_counts_array]. Eg: [[\"a\", \"b\"], [3, 2]] "},"Examples":["_content = getWeaponCargo carName;","_content = getWeaponCargo ammoBoxName;\nSample result returns:\n[[\"arifle_Katiba_F\",\"launch_B_Titan_short_F\"],[2,1]]"],"Additional":["weaponCargo","addWeaponCargo","addWeaponCargoGlobal","clearWeaponCargo","clearWeaponCargoGlobal"]},{"Name":"getWPPos","Desc":" Returns the position of a selected waypoint of a given group. Waypoints include only those which were placed in the mission editor. ","Syn":{"Syntax":" Array = getWPPos [group, index] ","Params":["[group, index]: Array\n\n","group: Group - the group/unit, of which you want to select a waypoint","index: Number - 0 equals the starting position of the group.\nThe number used in this and other waypoint commands is one more than the one displayed in the waypoint window in the editor. (i.e. if the editor labeled a WP \"0:MOVE\" the you would have to use getWPPos [grp,1] to access this particular WP"],"Return":" Array - format Position3D. \nThe returned position equals [0,0,0], if the selected waypoint doesn't exist. "},"Examples":["[_group1,1] setWPPos [200,600,0];_pos = getWPPos [_group1,1];\n\nreturns [200,600,0]"],"Additional":["setWPPos"]},{"Name":"glanceAt","Desc":" Control what the unit is glancing at (target or Position).\n\nHow frequently the unit is glancing there depends on behaviour. ","Syn":{"Syntax":" unit(s) glanceAt position ","Params":["units: Object or Array\n\n","position: Object or Array"],"Return":" Nothing "},"Examples":["_someSoldier glanceAt _otherSoldier","_otherSoldier glanceAt markerPos \"markerOne\""],"Additional":["See also needed"]},{"Name":"globalChat","Desc":" Make a unit send a text message over the global radio channel. Does not need to have assigned \"itemRadio\" to see or transmit the messages. ","Syn":{"Syntax":" unit globalChat chatText ","Params":["unit: Object\n\n","chatText: String - the message that should be sent"],"Return":" Nothing "},"Examples":["_soldierOne globalChat \"Show this text\""],"Additional":["sideChat","groupChat","vehicleChat"]},{"Name":"globalRadio","Desc":" Make a unit send a message over the global radio channel. The message is defined in the description.ext of the mission and may contain text and sound. ","Syn":{"Syntax":" unit globalRadio radioName ","Params":["unit: Object\n\n","radioName: String - the name of the message class in the description.ext"],"Return":" Nothing "},"Examples":["_soldierOne globalRadio \"messageOne\""],"Additional":["sideRadio","groupRadio","vehicleRadio"]},{"Name":"goggles","Desc":" Returns name of currently used goggles (not NVGoggles).  ","Syn":{"Syntax":" goggles unit ","Params":["unit: Object"],"Return":" String "},"Examples":["_goggles = goggles assaultDiver; //G_Diving\n","_goggles = goggles reconTeamLeader; //G_Shades_Black\n"],"Additional":["removeGoggles","addGoggles","hmd","headgear","binocular"]},{"Name":"goto","Desc":" In SQS scripts only: Go to given label.\n\nString argument is used here.\nBe sure to use double quotes around label name in goto. Define the label with #. Note that Labels are not case sensitive and that labels are searched for from the top of the script, so multiple occurrences of a label will only result in the top most one ever being found.","Syn":{"Syntax":" goto label ","Params":["label: String"],"Return":" Nothing "},"Examples":["Example needed"],"Additional":["See also needed"]},{"Name":"group","Desc":" Returns the group a unit is assigned to. ","Syn":{"Syntax":" group object ","Params":["object: Object"],"Return":" Group -  \nFor dead units, the returned group equals grpNull. "},"Examples":["_playerGrp = group player"],"Additional":["local","join","leader","units","allGroups","groupID"]},{"Name":"groupChat","Desc":" Make a unit send a text message over the group radio channel. Must have assigned \"itemRadio\" to see or transmit the messages. ","Syn":{"Syntax":" unit groupChat chatText ","Params":["unit: Object\n\n","chatText: String - the message that should be sent"],"Return":" Nothing "},"Examples":["_soldierOne groupChat \"Show this text\""],"Additional":["globalChat","sideChat","vehicleChat"]},{"Name":"groupFromNetId","Desc":" Get group with given unique ID.  ","Syn":{"Syntax":" groupFromNetId id ","Params":["id: String"],"Return":" Group "},"Examples":["Example needed"],"Additional":["See also needed"]},{"Name":"groupIconSelectable","Desc":" Return if groups icon raises onClick and onOver events. ","Syn":{"Syntax":" groupIconSelectable ","Params":null,"Return":" Boolean "},"Examples":["Example needed"],"Additional":["addGroupIcon","clearGroupIcons","getGroupIcon","getGroupIconParams","groupIconsVisible","onGroupIconClick","removeGroupIcon","setGroupIcon","setGroupIconParams","setGroupIconsSelectable","setGroupIconsVisible"]},{"Name":"groupIconsVisible","Desc":" Return group icons are visible. ","Syn":{"Syntax":" groupIconsVisible ","Params":null,"Return":" Array "},"Examples":["// HC bar active\nif (isNil \"BIS_HC_visible\") then {BIS_HC_visible = groupIconsVisible};\nsetGroupIconsVisible [true,true];"],"Additional":["addGroupIcon","clearGroupIcons","getGroupIcon","getGroupIconParams","groupIconSelectable","onGroupIconClick","removeGroupIcon","setGroupIcon","setGroupIconParams","setGroupIconsSelectable","setGroupIconsVisible"]},{"Name":"groupID","Desc":" Returns group name.  ","Syn":{"Syntax":" groupID group ","Params":["group: Group"],"Return":" String "},"Examples":["_name = groupID (group player);\n"],"Additional":["setGroupId","group"]},{"Name":"groupRadio","Desc":" Make a unit send a message over the group radio channel. The message is defined in the description.ext of the mission and may contain text and sound. ","Syn":{"Syntax":" unit groupRadio radioName ","Params":["unit: Object\n\n","radioName: String - the name of the message class in the description.ext"],"Return":" Nothing "},"Examples":["_soldierOne groupRadio \"messageOne\""],"Additional":["globalRadio","sideRadio","vehicleRadio"]},{"Name":"groupSelectedUnits","Desc":" Returns selected units in source group. ","Syn":{"Syntax":" groupSelectedUnits unit ","Params":["unit: Object -"],"Return":" Array "},"Examples":["_selectedUnits = groupSelectedUnits player;"],"Additional":["groupSelectUnit"]},{"Name":"groupSelectUnit","Desc":" Select unit from unit's group. ","Syn":{"Syntax":" unitName groupSelectUnit [unit, booleanValue] ","Params":["unitName: Object - desc\n\n","[unit, booleanValue]: Array","unit: Object - desc","booleanValue: Boolean - desc"],"Return":" Nothing "},"Examples":["{//after leaving menu deselect all units (command menu is not opened -\u003e no selection)\n    player groupSelectUnit [_x, false];\n} forEach (groupSelectedUnits player);"],"Additional":["groupSelectedUnits"]},{"Name":"grpNull","Desc":" A non-existing Group. This value is not equal to anything, including itself.  ","Syn":{"Syntax":" Group = grpNull ","Params":null,"Return":" Group "},"Examples":[" _group = grpNull "],"Additional":["See also needed"]},{"Name":"gunner","Desc":" Returns the gunner of a vehicle. ","Syn":{"Syntax":" Object = gunner vehicle ","Params":["vehicle: Object"],"Return":" Object -  \nThe person sitting in the gunner place is returned. If vehicle is not a vehicle but a person, the person is returned. "},"Examples":["(gunner _tank1) action [\"getout\",_tank1]"],"Additional":["commander","driver","crew"]},{"Name":"gusts","Desc":" Return the current gusts value. Scale is 0 to 1. ","Syn":{"Syntax":" gusts ","Params":null,"Return":" Number "},"Examples":["_gustsval = gusts;\n"],"Additional":["setGusts","windStr","wind"]},{"Name":"halt","Desc":" Stops the program into a debugger. In retail version using halt results in error. ","Syn":{"Syntax":" halt ","Params":null,"Return":" Nothing "},"Examples":["? _DbugWanted :halt "],"Additional":["See also needed"]},{"Name":"handgunItems","Desc":" Returns array with all items assigned to the handgun. This command is used for infantry weapons only. ","Syn":{"Syntax":" handgunItems unit ","Params":["unit: Object"],"Return":" Array "},"Examples":["handgunItems player; \n/*\n[\n\u0009\"muzzle_snds_L\",\u0009//silencer\n\u0009\"\",\u0009\u0009\u0009//laser\n\u0009\"\"\u0009\u0009\u0009//optics\n]\n*/\n"],"Additional":["addHandgunItem","removeHandgunItem","removeAllHandgunItems","weaponsItems","primaryWeaponItems","secondaryWeaponItems"]},{"Name":"handgunMagazine","Desc":" Returns either single element array, containing class name of currently loaded in the handgun magazine, or an empty array if unit has no handgun or handgun is not loaded. This command is used for infantry weapons only. ","Syn":{"Syntax":" handgunMagazine unit ","Params":["unit: Object"],"Return":" Array "},"Examples":["hint handgunMagazine player; //[\"16Rnd_9x21_Mag\"]\n","_array = handgunMagazine player;\nif (count _array \u003e 0) then {\n\u0009hint (\"Handgun is loaded with \" + (_array select 0) + \"!\");\n} else {\n\u0009if (handgunWeapon player != \"\") then {\n\u0009\u0009hint \"Handgun is not loaded!\";\n\u0009} else {\n\u0009\u0009hint \"Player doesn't have a handgun!\";\n\u0009};\n};\n"],"Additional":["handgunWeapon","handgunItems","addHandgunItem","removeHandgunItem","removeAllHandgunItems","primaryWeaponMagazine","secondaryWeaponMagazine"]},{"Name":"handgunWeapon","Desc":" Returns the name of a unit's handgun (an empty string if there is none).  ","Syn":{"Syntax":" handgunWeapon unit ","Params":["unit: Object"],"Return":" String "},"Examples":["hint handgunWeapon player; //\"hgun_P07_F\"\n"],"Additional":["handgunMagazine","handgunItems","addHandgunItem","removeHandgunItem","removeAllHandgunItems","primaryWeapon","secondaryWeapon","currentWeapon","weapons"]},{"Name":"handsHit","Desc":" Checks if a soldier's hands are hit, which results in inaccurate aiming. ","Syn":{"Syntax":" Number = handsHit unitName ","Params":["unitName: Object"],"Return":" Number -  \nIf the hands aren't damaged, the returned value is 0. If the hands are hit or the unit is dead, the returned value is 1. "},"Examples":["? (handsHit player == 1) : player globalChat \"Ouch! Don't shoot at my hands dammit!\""],"Additional":["damage"]},{"Name":"hasInterface","Desc":" Returns true if the computer has an interface (a real player). False for a dedicated server or for a headless client. ","Syn":{"Syntax":" hasInterface ","Params":null,"Return":" Boolean "},"Examples":["headless = !(hasInterface || isDedicated);","_isHC = !hasInterface \u0026\u0026 !isDedicated;"],"Additional":["isDedicated","isServer"]},{"Name":"hasWeapon","Desc":" Checks if a unit has the given weapon. ","Syn":{"Syntax":" Boolean = unitName hasWeapon weaponName ","Params":["unitName: Object\n\n","weaponName: String - the name of the weapon to check for."],"Return":" Boolean -  \nReturns true if the unit has the weapon, false if not. "},"Examples":["?!(player hasWeapon \"M16\") : player addWeapon \"M16\""],"Additional":["weapons"]},{"Name":"hcAllGroups","Desc":" Returns selected groups in high command. ","Syn":{"Syntax":" hcAllGroups unit ","Params":["unit: Object -"],"Return":" Array "},"Examples":["Example needed"],"Additional":["High Command","hcGroupParams","hcLeader","hcRemoveAllGroups","hcRemoveGroup","hcSelected","hcSelectGroup","hcSetGroup","hcShowBar","hcShownBar","onHCGroupSelectionChanged"]},{"Name":"hcGroupParams","Desc":" Returns parameters describing group in high command bar.\n\nReturn value is [string, float[4]] ","Syn":{"Syntax":" unit hcGroupParams group ","Params":["unit: Object -\n\n","group: Group -"],"Return":" Array "},"Examples":["Example needed"],"Additional":["High Command","hcAllGroups","hcLeader","hcRemoveAllGroups","hcRemoveGroup","hcSelected","hcSelectGroup","hcSetGroup","hcShowBar","hcShownBar","onHCGroupSelectionChanged"]},{"Name":"hcLeader","Desc":" Returns group's high command commander. ","Syn":{"Syntax":" hcLeader group ","Params":["group: Group -"],"Return":" Object "},"Examples":["_leader = hcLeader groupName;"],"Additional":["High Command","hcAllGroups","hcGroupParams","hcRemoveAllGroups","hcRemoveGroup","hcSelected","hcSelectGroup","hcSetGroup","hcShowBar","hcShownBar","onHCGroupSelectionChanged"]},{"Name":"hcRemoveAllGroups","Desc":" Remove all groups from unit's high command bar. ","Syn":{"Syntax":" hcRemoveAllGroups unit ","Params":["unit: Object -"],"Return":" Nothing "},"Examples":["Example needed"],"Additional":["High Command","hcAllGroups","hcGroupParams","hcLeader","hcRemoveGroup","hcSelected","hcSelectGroup","hcSetGroup","hcShowBar","hcShownBar","onHCGroupSelectionChanged"]},{"Name":"hcRemoveGroup","Desc":" Removes group from unit's high command bar. ","Syn":{"Syntax":" unit hcRemoveGroup group ","Params":["unit: Object -\n\n","group: Group -"],"Return":" Nothing "},"Examples":["Example needed"],"Additional":["High Command","hcAllGroups","hcGroupParams","hcLeader","hcRemoveAllGroups","hcSelected","hcSelectGroup","hcSetGroup","hcShowBar","hcShownBar","onHCGroupSelectionChanged"]},{"Name":"hcSelected","Desc":" Returns selected groups in high command. ","Syn":{"Syntax":" hcSelected unit ","Params":["unit: Object -"],"Return":" Array "},"Examples":["array = hcSelected unit;"],"Additional":["High Command","hcAllGroups","hcGroupParams","hcLeader","hcRemoveAllGroups","hcRemoveGroup","hcSelectGroup","hcSetGroup","hcShowBar","hcShownBar","onHCGroupSelectionChanged"]},{"Name":"hcSelectGroup","Desc":" Select given group in high command bar. ","Syn":{"Syntax":" unit hcSelectGroup array ","Params":["unit: Object -\n\n","array: Array -"],"Return":" Nothing "},"Examples":["Example needed"],"Additional":["High Command","hcAllGroups","hcGroupParams","hcLeader","hcRemoveAllGroups","hcRemoveGroup","hcSelected","hcSetGroup","hcShowBar","hcShownBar","onHCGroupSelectionChanged"]},{"Name":"hcSetGroup","Desc":" Add group to unit's high command bar.\n\nArray parameters are group, group-name and team (teammain, teamred, teamgreen, teamblue, teamyellow).\n\nGroup is the only necessary parameter. ","Syn":{"Syntax":" unit hcSetGroup array ","Params":["unit: Object -\n\n","array: Array -"],"Return":" Nothing "},"Examples":["unit hcSetGroup [group, \"HQ\", teamred];","player hcSetGroup [group];"],"Additional":["High Command","hcAllGroups","hcGroupParams","hcLeader","hcRemoveAllGroups","hcRemoveGroup","hcSelected","hcSelectGroup","hcShowBar","hcShownBar","onHCGroupSelectionChanged"]},{"Name":"hcShowBar","Desc":" Shows or hides high command bar.\n\nThere must be some groups under HC command to show HC bar. ","Syn":{"Syntax":" hcShowBar bool ","Params":["bool: Boolean"],"Return":" Nothing "},"Examples":["hcShowBar true;","hcShowBar false;"],"Additional":["High Command","hcAllGroups","hcGroupParams","hcLeader","hcRemoveAllGroups","hcRemoveGroup","hcSelected","hcSelectGroup","hcSetGroup","hcShownBar","onHCGroupSelectionChanged"]},{"Name":"hcShownBar","Desc":" Return true if the high command bar is shown/active. ","Syn":{"Syntax":" hcShownBar ","Params":null,"Return":" Boolean "},"Examples":["if (hcShownBar) then {hint \"HC bar is active\";};"],"Additional":["High Command","hcAllGroups","hcGroupParams","hcLeader","hcRemoveAllGroups","hcRemoveGroup","hcSelected","hcSelectGroup","hcSetGroup","hcShowBar","onHCGroupSelectionChanged"]},{"Name":"headgear","Desc":" Returns headgear of unit.  ","Syn":{"Syntax":" headgear unit ","Params":["unit: Object"],"Return":" String "},"Examples":["hint headgear player; //H_HelmetB"],"Additional":["addHeadgear","removeHeadgear","goggles","hmd"]},{"Name":"hideBody","Desc":" Hides the body of the given person. ","Syn":{"Syntax":" hideBody person ","Params":["person: Object"],"Return":" Nothing "},"Examples":["hideBody player"],"Additional":["See also needed"]},{"Name":"hideObject","Desc":" Hide entity. Can be used on soldiers and vehicles, also on static objects. ","Syn":{"Syntax":" hideObject object \u003cbr\u003e(Alternate Syntax exists check Read more)","Params":["object: Object"],"Return":" Nothing "},"Examples":["hideObject unitName; ","objectName hideObject true; "],"Additional":["hideObjectGlobal"]},{"Name":"hideObjectGlobal","Desc":" MP command. Hides object on all connected clients as well as JIP. Call on the server only. Can be used on all objects with class names, i.e. (typeOf object != \"\"). In SP use hideObject","Syn":{"Syntax":" hideObjectGlobal object \u003cbr\u003e(Alternate Syntax exists check Read more)","Params":["object: Object - object to hide"],"Return":" Nothing "},"Examples":["hideObjectGlobal nearestBuilding [2500,2500,0];","objectname hideObjectGlobal true;"],"Additional":["hideObject"]},{"Name":"hint","Desc":" Outputs a multi-line hint message in the left upper corner of the screen (in the right upper corner in Arma). This version of hint is supposed to play a sound when hint is shown, but this varies between games and versions. Use hintSilent for soundless hint.\n\nThe effect of this command is local, i.e. the hint will only show on the computer command was executed.\n\n","Syn":{"Syntax":" hint text ","Params":["text: String or Structured Text - the message to write on the screen may consist of any characters. \\n indicates a line break."],"Return":" Nothing "},"Examples":["hint \"Press W to move forward. \\nPress S to move backwards.\"\noutputs the following message:\n\nPress W to move forward.\nPress S to move backwards.\nKnown Problems: Avoid hint messages that exceed the screen, as this may lead to crashes."],"Additional":["hintC","hintCadet","hintC array","hintC structuredText","hintC text","hintSilent"]},{"Name":"hintC","Desc":" Works the same way as hint, except the text is also displayed in the middle of the screen.\n\nThe game is paused until the player presses \"Continue\". ","Syn":{"Syntax":" hintC text ","Params":["text: String"],"Return":" Nothing  "},"Examples":["hintC \"Press W to move forward\"; ","Same as the above in Arma3 but without second hint displayed:hintC \"Press W to move forward\";\nhintC_EH = findDisplay 57 displayAddEventHandler [\"unload\", {\n\u00090 = _this spawn {\n\u0009\u0009_this select 0 displayRemoveEventHandler [\"unload\", hintC_EH];\n\u0009\u0009hintSilent \"\";\n\u0009};\n}];\n\n "],"Additional":["hint","hintCadet","hintC array","hintC structuredText","hintC text","hintSilent"]},{"Name":"hintC_array","Desc":" Creates a hint dialog with the given title and text. Texts can be plain or structured. ","Syn":{"Syntax":" title hintC [text1, text2, ...] \n\n","Params":["title: String:\n\n","[text1, text2, ...]: Array of plain or structured texts. A single text String also works."],"Return":" Nothing "},"Examples":["\"Instructions\" hintC [\n\u0009\"Press W to move forward.\",\n\u0009\"Press S to move backwards.\",\n\u0009\"Use the mouse to turn right or left.\",\n\u0009\"Press V for weapon sights.\"\n];","Same as the above in Arma3 but without second hint displayed: \"Instructions\" hintC [\n\u0009\"Press W to move forward.\",\n\u0009\"Press S to move backwards.\",\n\u0009\"Use the mouse to turn right or left.\",\n\u0009\"Press V for weapon sights.\"\n];\nhintC_arr_EH = findDisplay 72 displayAddEventHandler [\"unload\", {\n\u00090 = _this spawn {\n\u0009\u0009_this select 0 displayRemoveEventHandler [\"unload\", hintC_arr_EH];\n\u0009\u0009hintSilent \"\";\n\u0009};\n}]; \n\n "],"Additional":["hint","hintC","hintCadet","hintC structuredText","hintC text","hintSilent"]},{"Name":"hintC_structuredText","Desc":" Creates a hint dialog with the given title and text.\n\nNote: Not working properly. ","Syn":{"Syntax":" title hintC structuredText ","Params":["title: String\n\n","structuredText: Structured Text"],"Return":" Nothing "},"Examples":["_separator1 = parseText \"\u003cbr /\u003e------------------------\u003cbr /\u003e\"; \n_image = \"\\ca\\ui\\textures\\aus_flag.paa\"; \n_txt = composeText [ image _image,\"Heading Text\",_separator1,\"Content\"]; \nhintC _txt; \n"],"Additional":["hint","hintC","hintCadet","hintC array","hintC text","hintSilent","Structured Text"]},{"Name":"hintCadet","Desc":" Shows a text hint only when in cadetMode.\n\nThe text can contain several lines. \\n is used to indicate the end of a line. ","Syn":{"Syntax":" hintCadet text ","Params":["text: String"],"Return":" Nothing "},"Examples":["hintCadet \"Press W to move forward\";"],"Additional":["hint","hintC","hintC array","hintC structuredText","hintC text","hintSilent","cadetMode"]},{"Name":"hintSilent","Desc":" Same as hint, but without a sound. ","Syn":{"Syntax":" hintSilent text ","Params":["text: String or Structured Text"],"Return":" Nothing "},"Examples":["hintSilent \"You texte comes here !\""],"Additional":["hint","hintC","hintCadet","hintC array","hintC structuredText","hintC text"]},{"Name":"hmd","Desc":" Returns class name of currently used Head Mounted Display.  ","Syn":{"Syntax":" hmd unit ","Params":["unit: Object"],"Return":" String "},"Examples":["_nvgs = hmd player; //NVGoggles"],"Additional":["headgear","goggles","binocular"]},{"Name":"hostMission","Desc":" Host the mp mission described by config class. Should be called as reaction to some UI action in some dialog.\n\nFor example you can start a MP scenario from a button. It creates a host and takes you to the lobby with the scenario loaded.\n\nYou need to provide the display which is active when the hostMission command is called. ","Syn":{"Syntax":" hostMission [Config, Display]  ","Params":["Config: Config\n\n","Config: Display"],"Return":" Nothing "},"Examples":["hostMission [configMissionName, display];","hostMission [configFile/\"CfgMissions\"/\"MPMissions\"/_scenarioClassName, _currentlyActiveDisplay];","Launch host mission dialog in Arma 3 from a client on dedicated serverhostMission [\n\u0009configFile \u003e\u003e \"CfgMissions\" \u003e\u003e \"MPmissions\" \u003e\u003e \"MP_COOP_m01\",\n\u0009findDisplay 46\n];"],"Additional":["playScriptedMission","playMission"]},{"Name":"htmlLoad","Desc":" Load HTML from file to given control. File path is relative to current mission dir or an absolute path (with drive letter etc.).  ","Syn":{"Syntax":" control htmlLoad filename ","Params":["control: Control\n\n","filename: String"],"Return":" Nothing "},"Examples":["_control htmlLoad \"briefing.html\";"],"Additional":["ctrlHTMLLoaded","loadFile","preprocessFile","preprocessFileLineNumbers"]},{"Name":"HUDMovementLevels","Desc":" Returns movement borders for HUD [min speed, max speed, min alt, max alt, min dir, max dir, position[x,y,z] or target] ","Syn":{"Syntax":" HUDMovementLevels ","Params":null,"Return":"  Array "},"Examples":["HUDMovementLevels;"],"Additional":["See also needed"]},{"Name":"humidity","Desc":" Returns the current humidity value. 0 is no humidity and 1 is 100% humidity. Humidity value quickly changes from 0 to 1 when rain starts, then slowly changes from 1 to 0 when rain stops. ","Syn":{"Syntax":" humidity ","Params":null,"Return":" Number "},"Examples":["currentHumidity = humidity;\n","skipTime -24;\n86400 setOvercast 1;\nskipTime 24;\n[] spawn {\n\u000910 setRain 1;\n\u0009sleep 10;\n\u000910 setRain 0;\n};\nonEachFrame {\n\u0009hintSilent str [round (rain * 10) / 10, round (humidity * 10) / 10];\n};\n"],"Additional":["simulSetHumidity","setOvercast","setRain","rain","overcast","fog","wind","waves"]},{"Name":"if","Desc":" The standard if, then, else construct available in many languages. This syntax however has alternate forms in the manner of an Array.\n\n if (condition) then { code } else { code }\n\n if (condition) then [ { code }, { code } ]\n\n\nResult of the Code executed is returned as the result to this command (which may be Nothing}. ","Syn":{"Syntax":" Anything = if (condition) then { Code } else { Code } \u003cbr\u003e(Alternate Syntax exists check Read more)","Params":["condition: Boolean expression. If it evaluates as 'true', the 'then' clause is executed.  Otherwise, the 'else' clause (if present) is executed."],"Return":" If Type - Predicate which will execute 1st or 2nd option when used. This predicate is used in then or exitWith commands. "},"Examples":["_retVal = if (1 \u003e 0) then { \"It's true\" } else { \"It's false\" };\nhint str _retVal","_val = if (true) then [ { \"true\" }, { \"false\" } ];\nhint _val;"],"Additional":["else","exitWith","then","Control Structures"]},{"Name":"image","Desc":" Creates a structured text containing the given image.  ","Syn":{"Syntax":" Structured Text = image filename ","Params":["filename: String"],"Return":" Structured Text "},"Examples":["_txt1 = image \"data\\isniper.paa\";"],"Additional":["parseText","text","composeText"]},{"Name":"importAllGroups","Desc":" Imports all groups into the RTE. ","Syn":{"Syntax":" importAllGroups map ","Params":["map: Control -"],"Return":" Nothing "},"Examples":["Example needed"],"Additional":["See also needed"]},{"Name":"importance","Desc":" Returns a location's importance value.","Syn":{"Syntax":" importance location ","Params":["location: Location"],"Return":" Number "},"Examples":["_locationImportance = importance myLocation"],"Additional":["setImportance"]},{"Name":"in","Desc":"","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":null,"Additional":null},{"Name":"incapacitatedState","Desc":" Returns the incapacitated state of the given unit. ","Syn":{"Syntax":" incapacitatedState person ","Params":["person: Object"],"Return":" String "},"Examples":["_result = incapacitatedState player;"],"Additional":["See also needed"]},{"Name":"independent","Desc":" Pre-defined variable for the independent side.\n Alias for resistance.  ","Syn":{"Syntax":" independent ","Params":null,"Return":" Side "},"Examples":["SQF:if ((side _unit) == independent) then {\n    hint \"This is a independent unit!\";\n};"],"Additional":["side","civilian","blufor","east","opfor","resistance","west"]},{"Name":"inflame","Desc":" Control fireplace burning. Set inflame to true (on) or false (off). ","Syn":{"Syntax":" fireplace inflame burn ","Params":["fireplace: Object\n\n","burn: Boolean"],"Return":" Nothing "},"Examples":["_fireplaceOne inflame true"],"Additional":["inflamed"]},{"Name":"inflamed","Desc":" Check if fireplace is inflamed (burning) or not. ","Syn":{"Syntax":" Boolean = inflamed fireplace ","Params":["fireplace: Object"],"Return":" Boolean "},"Examples":["_IsAlight = inflamed _fireplaceOne"],"Additional":["inflame"]},{"Name":"inGameUISetEventHandler","Desc":" Sets given event handler of in-game UI. ","Syn":{"Syntax":" inGameUISetEventHandler [handler name, function] ","Params":["[handler name, function]: Array"],"Return":" Nothing "},"Examples":["Example needed"],"Additional":["See also needed"]},{"Name":"inheritsFrom","Desc":" Returns base entry of config entry.  ","Syn":{"Syntax":" Config = inheritsFrom config ","Params":["config: Config"],"Return":" Config "},"Examples":["_base = inheritsFrom (configFile \u003e\u003e \"CfgVehicles\" \u003e\u003e \"Car\"); Result is \"LandVehicle\""],"Additional":["configFile","config/name","configName","count","getArray","getText","getNumber","isArray","isClass","isNumber","isText","select"]},{"Name":"initAmbientLife","Desc":" Initialize the ambient life. ","Syn":{"Syntax":" initAmbientLife ","Params":null,"Return":" Nothing "},"Examples":["Example needed"],"Additional":["See also needed"]},{"Name":"inputAction","Desc":" Return the state of input devices mapped to given input action.\n\nFor Arma 3 inputActions see: inputAction/actions.\n\nFor Arma 3 inputActions bindings see: inputAction/actions/bindings.\n\nFor earlier Arma editions  see Category:Key Actions.  ","Syn":{"Syntax":" inputAction name ","Params":["name: String - name of the action"],"Return":" Number "},"Examples":["inputAction \"leanLeft\" Returns 1 if the button mapped to \"leanLeft\" is pressed currently else 0.","[] spawn {\n\u0009waitUntil {inputAction \"reloadMagazine\" \u003e 0};  \n\u0009hint \"Reload Key Pressed\";\n};"],"Additional":["actionKeys","actionKeysImages","actionKeysNames"]},{"Name":"inRangeOfArtillery","Desc":" Returns true if all given units are able to fire at given position with given magazineType.  ","Syn":{"Syntax":" pos inRangeOfArtillery [[unit], magazineType] ","Params":["pos: Position\n\n","[[unit], magazineType]: Array","[unit]: Array - Array of units.","unit: Object","magazineType: String"],"Return":" Boolean "},"Examples":["_isInRange = getMarkerPos \"myTarget\" inRangeOfArtillery [[myArty], \"32Rnd_155mm_Mo_shells\"]\n"],"Additional":["getArtilleryAmmo","commandArtilleryFire","doArtilleryFire","enableEngineArtillery","getArtilleryComputerSettings","shownArtilleryComputer","getArtilleryETA"]},{"Name":"insertEditorObject","Desc":" Insert an object to the editor and assign arguments. Create script is,not called. Returns the ID of the new EditorObject. Subtype class is,optional.  ","Syn":{"Syntax":" map insertEditorObject [type,value,[name1,value1,...],subtype class] ","Params":["map: Control -\n\n","[name1,value1,...],subtype class]: Array -"],"Return":" String "},"Examples":["Example needed"],"Additional":["See also needed"]},{"Name":"intersect","Desc":" Find named selections in object which is in specified lod intersected by given section of a line. \nReturn value is in the form of [selection, number]. Multiple returned arrays are nested within a single array, and no intersection will return an empty array.\n\"LodName\" is one of: \"FIRE\", \"VIEW\", \"GEOM\", \"IFIRE\"","Syn":{"Syntax":" Array = [object, lodName] intersect [begin, end] ","Params":["[object, lodName]: Array\n\n","object: Object","lodName: String","[begin, end]: Array","begin: Array - format Position3D","end: Array - format Position3D"],"Return":" Array "},"Examples":["[_tank, \"VIEW\"] intersect [[1500, 1500, 2], [1550, 1500, 2]]"],"Additional":["terrainIntersect","terrainIntersectASL","lineIntersects","lineIntersectsWith","lineIntersectsObjs"]},{"Name":"isAbleToBreathe","Desc":" Returns whether the unit is diving.  ","Syn":{"Syntax":" isAbleToBreathe unit ","Params":["unit: Object"],"Return":" Boolean "},"Examples":["Example needed"],"Additional":["See also needed"]},{"Name":"isAgent","Desc":" Check if team member is an agent. ","Syn":{"Syntax":" isAgent teamMember ","Params":["teamMember: Team Member"],"Return":" Boolean "},"Examples":["Example needed"],"Additional":["agent","agents","createAgent","forEachMemberAgent"]},{"Name":"isArray","Desc":" Check if config entry represents array.  ","Syn":{"Syntax":" Boolean =  isArray config ","Params":["config: Config"],"Return":" Boolean  "},"Examples":[" _ok = isArray (configFile \u003e\u003e \"CfgVehicles\")\n\nResult is false"],"Additional":["configFile","config/name","configName","count","getArray","getText","getNumber","inheritsFrom","isClass","isNumber","isText","select"]},{"Name":"isAutoHoverOn","Desc":" Return true if vehicle has enabled auto hover. (always returns false if the vehicle can't set auto hover) ","Syn":{"Syntax":" isAutoHoverOn vehicle ","Params":["vehicle: Object"],"Return":" Boolean "},"Examples":[" status = isAutoHoverOn vehicle player;"],"Additional":["See also needed"]},{"Name":"isAutonomous","Desc":" Returns true if UAV is in autonomous mode. ","Syn":{"Syntax":" isAutonomous uav ","Params":["uav: Object"],"Return":" Boolean "},"Examples":["bool = isAutonomous uav;"],"Additional":["setAutonomous"]},{"Name":"isBleeding","Desc":" Returns whether the unit is bleeding.  ","Syn":{"Syntax":" isBleeding unit ","Params":["unit: Object"],"Return":" Boolean "},"Examples":["if (isBleeding player) then { player groupChat \"I'm bleeding!!\"; }"],"Additional":["getBleedingRemaining","isBurning","setBleedingRemaining"]},{"Name":"isBurning","Desc":" Returns whether the unit is burning.  ","Syn":{"Syntax":" isBurning unit ","Params":["unit: Object"],"Return":" Boolean "},"Examples":["Example needed"],"Additional":["getBleedingRemaining","setBleedingRemaining","isBleeding"]},{"Name":"isClass","Desc":" Check if config entry represents config class.  ","Syn":{"Syntax":" Boolean = isClass config ","Params":["config: Config"],"Return":" Boolean "},"Examples":["_ok = isClass (configFile \u003e\u003e \"CfgVehicles\"); Result is true."],"Additional":["configFile","config/name","configName","count","getArray","getText","getNumber","inheritsFrom","isArray","isNumber","isText","select"]},{"Name":"isCopilotEnabled","Desc":" Returns true if copilots actions are enabled. \n\n","Syn":{"Syntax":" isCopilotEnabled vehicle ","Params":["vehicle: Object"],"Return":" Boolean "},"Examples":["if (!isCopilotEnabled myHeli) then {\n    myHeli enableCopilot true;\n};\n"],"Additional":["enableCopilot"]},{"Name":"isDedicated","Desc":" Return true if the machine (executing the command) is a dedicated server. ","Syn":{"Syntax":" isDedicated ","Params":null,"Return":" Boolean "},"Examples":["if (isDedicated) then {hint \"Dedicated Server on the run !\";};"],"Additional":["isServer","hasInterface"]},{"Name":"isEngineOn","Desc":" Returns true if engine is on, false if it is off. ","Syn":{"Syntax":" Boolean = isEngineOn vehicle ","Params":["vehicle: Object"],"Return":" Boolean "},"Examples":["_OnOff = isEngineOn _carOne"],"Additional":["See also needed"]},{"Name":"isEqualTo","Desc":" Performs strict comparison between var1 and var2 and returns true if equal otherwise false. ","Syn":{"Syntax":" var1 isEqualTo var2 ","Params":["var1: Anything\n\n","var2: Anything"],"Return":" Boolean "},"Examples":["_arr1 = [1,[2,[3]]];\n_arr2 = [1,[2,[3]]];\nif (_arr1 isEqualTo _arr2) then {hint \"Arrays match!\"}"],"Additional":["Operators","in","find","set","resize","switch"]},{"Name":"isFlashlightOn","Desc":" Returns true if there is a linked and enabled flashlight on a given weapon.  ","Syn":{"Syntax":" unit isFlashlightOn weapon ","Params":["unit: Object\n\n","weapon: String"],"Return":" Boolean "},"Examples":["Example needed"],"Additional":["See also needed"]},{"Name":"isFlatEmpty","Desc":" Check if given area is flat and empty. ","Syn":{"Syntax":" position isFlatEmpty [float minDistance,float precizePos,float maxGradient,float gradientRadius,float onWater,bool onShore,object skipobj] ","Params":["position: Array -\n\n","[float minDistance,float precizePos,float maxGradient,float gradientRadius,float onWater,bool onShore,object skipobj]: Array -"],"Return":" Array "},"Examples":["_isFlat = (position _preview) isflatempty [\n\u0009\u0009(sizeof typeof _preview) / 2,\u0009//--- Minimal distance from another object\n\u0009\u00090,\u0009\u0009\u0009\u0009//--- If 0, just check position. If \u003e0, select new one\n\u0009\u00090.7,\u0009\u0009\u0009\u0009//--- Max gradient\n\u0009\u0009(sizeof typeof _preview),\u0009//--- Gradient area\n\u0009\u00090,\u0009\u0009\u0009\u0009//--- 0 for restricted water, 2 for required water,\n\u0009\u0009false,\u0009\u0009\u0009\u0009//--- True if some water can be in 25m radius\n\u0009\u0009_preview\u0009\u0009\u0009//--- Ignored object\n\u0009];"],"Additional":["selectBestPlaces","findEmptyPosition"]},{"Name":"isForcedWalk","Desc":" Returns true if player is forced to walk. ","Syn":{"Syntax":" isForcedWalk unitName ","Params":["unitName : Object"],"Return":" Boolean "},"Examples":[" _bool = isForcedWalk player; "],"Additional":["See also needed"]},{"Name":"isFormationLeader","Desc":" Returns true if the specified unit is subgroup leader. ","Syn":{"Syntax":" isLeader = isFormationLeader unit ","Params":["unit: Object - Unit being checked."],"Return":" isLeader: Boolean - True if subgroup leader. "},"Examples":["_isLeader = isFormationLeader player"],"Additional":["formationLeader","formLeader","leader","selectLeader"]},{"Name":"isHidden","Desc":" Return whether the person is hidden (reached the hiding position). ","Syn":{"Syntax":" Boolean = isHidden person ","Params":["person: Object"],"Return":" Boolean "},"Examples":["Example needed"],"Additional":["getHideFrom","setHideBehind","findCover"]},{"Name":"isInRemainsCollector","Desc":" Checks if unit or vehicle is queued for disposal after death. ","Syn":{"Syntax":" isInRemainsCollector remain ","Params":["remain: Object - vehicle or unit"],"Return":" Boolean "},"Examples":["if (isInRemainsCollector unit1) then {hint \"unit1 is queued for disposal\"};"],"Additional":["addToRemainsCollector","removeFromRemainsCollector"]},{"Name":"isInstructorFigureEnabled","Desc":" True if instructor figure is enabled in Game Options. ","Syn":{"Syntax":" isInstructorFigureEnabled ","Params":null,"Return":" Boolean "},"Examples":["Example needed"],"Additional":["See also needed"]},{"Name":"isIRLaserOn","Desc":" Returns true if there is a linked and enabled IR on the given weapon.  ","Syn":{"Syntax":" unit isIRLaserOn weapon ","Params":["unit: Object\n\n","weapon: String"],"Return":" Boolean "},"Examples":["player isIRLaserOn currentWeapon player;"],"Additional":["isLightOn","isCollisionLightOn","setPilotLight","setCollisionLight"]},{"Name":"isKeyActive","Desc":" Checks whether the given key is active in the current user profile.\n\nSee keys, keysLimit and doneKeys in the description.ext file of the missions. ","Syn":{"Syntax":" isKeyActive keyName ","Params":["keyName: String"],"Return":" Boolean "},"Examples":["_ok = isKeyActive \"Mission04Key\""],"Additional":["activateKey","deActivateKey"]},{"Name":"isKindOf","Desc":" Checks whether the object is (a subtype) of the given type. ","Syn":{"Syntax":" Boolean = object isKindOf typeName \u003cbr\u003e(Alternate Syntax exists check Read more)","Params":["object: Object\n\n","typeName: String"],"Return":" Boolean "},"Examples":["vehicle player isKindOf \"Tank\";","\"BMP2\" isKindOf \"Tank\";"],"Additional":["countType","typeOf","inheritsFrom"," Arma 2 CfgVehicles"]},{"Name":"isLocalized","Desc":" Checks whether given string name is localized.  ","Syn":{"Syntax":" isLocalized stringName ","Params":["stringName: String"],"Return":" Boolean "},"Examples":["if (isLocalized \"STR_DN_SNAKE\") then {\n\u0009hint localize \"STR_DN_SNAKE\";\n} else {\n\u0009hint \"STR_DN_SNAKE\";\n\u0009diag_log \"ToDo: STR_DN_SNAKE is not localized\";\n};"],"Additional":["localize","WFSideText","Stringtable.csv File Format"]},{"Name":"isManualFire","Desc":" Returns true if manual fire is on.\n\nAlways returns false for a soldier. ","Syn":{"Syntax":" isManualFire vehicleName ","Params":["vehicleName: Object"],"Return":" Boolean "},"Examples":[" _bool = isManualFire vehicle player; "],"Additional":["See also needed"]},{"Name":"isMarkedForCollection","Desc":" Checks whether the object is marked for weapons collection. ","Syn":{"Syntax":"  Boolean = isMarkedForCollection object ","Params":["object: Object"],"Return":" Boolean "},"Examples":["_marked = isMarkedForCollection _truck"],"Additional":["See also needed"]},{"Name":"isMultiplayer","Desc":" Return true if multiPlayer. ","Syn":{"Syntax":" isMultiplayer ","Params":null,"Return":" Boolean "},"Examples":["if (isMultiplayer) then {\n\u0009//...block\n}"],"Additional":["isDedicated","isServer"]},{"Name":"isNil","Desc":" Tests whether the variable defined by the String argument is undefined, or whether an expression result passed as Code is undefined.\nThe command returns true if the variable or the expression result is undefined (i.e. the expression result is Void), and false in all other cases. ","Syn":{"Syntax":" isnil variable ","Params":["variable: String or Code"],"Return":" Boolean "},"Examples":["if (isNil \"_pokus\") then {\n    _pokus = 0;\n};"],"Additional":["nil","Variables"]},{"Name":"isNull","Desc":"   Checks whether the tested item is Null.\nWhich null type the item has to be equal to depends on the type of game entity tested:\n\n Objects -\u003e objNull\n\n Controls -\u003e controlNull\n\n Displays -\u003e displayNull\n\n Groups -\u003e grpNull\n\n Locations -\u003e locationNull (since ARMA 2)\n\n Tasks -\u003e taskNull (since ARMA 2)\n\n Scripts -\u003e scriptNull (since Arma 3 1.29.127075)\n\n\n\nNote: A test via == does not work, because, for example, objNull is not equal to anything, not even to itself. Use isEqualTo. ","Syn":{"Syntax":" isNull entity ","Params":["entity: Object, Control, Display, Group (or Location, Task since ARMA 2 (or Script since Arma 3 1.29.127075))"],"Return":" Boolean "},"Examples":["if (isNull obj) then {hint \"doesn't exist\";};"],"Additional":["controlNull","displayNull","grpNull","locationNull","objNull","taskNull","teamMemberNull","scriptNull"]},{"Name":"isNumber","Desc":" Check if config entry represents number.  ","Syn":{"Syntax":" Boolean = isNumber config ","Params":["config: Config"],"Return":" Boolean "},"Examples":[" _ok = isNumber (configFile \u003e\u003e \"CfgVehicles\")\n\nResult is false"],"Additional":["configFile","config/name","configName","count","getArray","getText","getNumber","inheritsFrom","isArray","isClass","isText","select"]},{"Name":"isOnRoad","Desc":" Checks if given object or position is on road. ","Syn":{"Syntax":" isOnRoad object \u003cbr\u003e(Alternate Syntax exists check Read more)","Params":["object: Object"],"Return":" Boolean "},"Examples":["_objOnRoad = isOnRoad player;","_posOnRoad = isOnRoad getPosATL player;"],"Additional":["surfaceIsWater"]},{"Name":"isPipEnabled","Desc":" Returns true if PiP is enabled.  ","Syn":{"Syntax":" isPipEnabled ","Params":null,"Return":" Boolean "},"Examples":["Example needed"],"Additional":["See also needed"]},{"Name":"isPlayer","Desc":" Check if given person is a human player.  ","Syn":{"Syntax":" isPlayer person ","Params":["person: Object"],"Return":" Boolean "},"Examples":["if (isPlayer _Soldier1) then {\n    _Soldier1 setDamage 1;\n};","_playerCount = {isPlayer _x} count playableUnits;"],"Additional":["player","playableSlotsNumber","playableUnits","playersNumber"]},{"Name":"isRealTime","Desc":" Returns true if the mission editor is operating in real time mode. ","Syn":{"Syntax":" isRealTime map ","Params":["map: Control -"],"Return":" Boolean "},"Examples":["_isRealTime = isRealTime _map"],"Additional":["See also needed"]},{"Name":"isServer","Desc":" Returns true if the machine is either a server in a multiplayer game or if it is running a singleplayer game. ","Syn":{"Syntax":" Boolean = isServer ","Params":null,"Return":" Boolean "},"Examples":["if (!isServer) exitWith {}"],"Additional":["isDedicated"]},{"Name":"isShowing3DIcons","Desc":" Returns true if the editor is set to draw 3D icons. ","Syn":{"Syntax":" isShowing3DIcons map ","Params":["map: Control -"],"Return":" Boolean "},"Examples":["Example needed"],"Additional":["See also needed"]},{"Name":"isSteamMission","Desc":" Returns true if mission is started from the steam.  ","Syn":{"Syntax":" isSteamMission ","Params":null,"Return":" Boolean "},"Examples":["Example needed"],"Additional":["markAsFinishedOnSteam"]},{"Name":"isStreamFriendlyUIEnabled","Desc":" True if stream friendly UI is enabled in Game Options.  ","Syn":{"Syntax":" isStreamFriendlyUIEnabled ","Params":null,"Return":" Boolean "},"Examples":["Example needed"],"Additional":["See also needed"]},{"Name":"isText","Desc":" Check if config entry represents text.  ","Syn":{"Syntax":" Boolean = isText config ","Params":["config: Config"],"Return":" Boolean "},"Examples":[" _ok = isText (configFile \u003e\u003e \"CfgVehicles\") \n\nResult is false"],"Additional":["configFile","config/name","configName","count","getArray","getText","getNumber","inheritsFrom","isArray","isClass","isNumber","select"]},{"Name":"isTouchingGround","Desc":" Returns true if object is touching the ground.  ","Syn":{"Syntax":" isTouchingGround object ","Params":["object: Object"],"Return":" Boolean "},"Examples":["if (isTouchingGround player) then {hint \"Terraferma!\";};\n"],"Additional":["underwater"]},{"Name":"isTutHintsEnabled","Desc":" True if tutorial hints are enabled in Game Options.  ","Syn":{"Syntax":" isTutHintsEnabled ","Params":null,"Return":" Boolean "},"Examples":["Example needed"],"Additional":["See also needed"]},{"Name":"isUAVConnectable","Desc":" Returns true if UAV is connectable by AV terminal(s). ","Syn":{"Syntax":" object isUAVConnectable [uav, checkAllItems] ","Params":["object: Object\n\n","[uav, checkAllItems]: Array","uav: Object or Array","checkAllItems: Boolean - True for check of all items in unit's inventory, false for check of items assigned to proper slot only."],"Return":" Boolean "},"Examples":["connectable = unit isUAVConnectable [uav,true];"],"Additional":["enableUAVConnectability","disableUAVConnectability"]},{"Name":"isUAVConnected","Desc":" Returns true if UAV is connected to some terminal.  ","Syn":{"Syntax":" isUAVConnected uav ","Params":["uav: Object"],"Return":" Boolean "},"Examples":["bool = isUAVConnected cursorTarget;"],"Additional":["showUAVFeed","shownUAVFeed","allUnitsUAV","getConnectedUAV","UAVControl","connectTerminalToUAV"]},{"Name":"isUniformAllowed","Desc":" Check whether given uniform can be dressed by target soldier.  ","Syn":{"Syntax":" unit isUniformAllowed type ","Params":["unit: Object\n\n","type: String"],"Return":" Boolean "},"Examples":["_canUse = _unit isUniformAllowed \"U_B_CombatUniform_mcam\";\n"],"Additional":["addUniform","forceAddUniform","removeUniform","uniform"]},{"Name":"isWalking","Desc":" Returns true if walk is toggled. ","Syn":{"Syntax":" isWalking unitName  ","Params":["unitName: Object"],"Return":" Boolean "},"Examples":["_bool = isWalking player; "],"Additional":["See also needed"]},{"Name":"itemCargo","Desc":" Get array with items from ammo box (or any general weapon holder container).  ","Syn":{"Syntax":" itemCargo box ","Params":["box: Object"],"Return":" Array - Format: [\"ItemType1\",\"ItemType1\",\"ItemType2\"...] "},"Examples":["hint str itemCargo vestContainer player;"],"Additional":["getItemCargo","addItemCargo","addItemCargoGlobal","clearItemCargo","clearItemCargoGlobal"]},{"Name":"items","Desc":" Returns an array of names of all special items of a vehicle or a soldier. ","Syn":{"Syntax":" items unit ","Params":["unit: Object"],"Return":" Array "},"Examples":["_itemsplayer = items player; ","player sideChat format [\"%1\", items player ];"],"Additional":["assignedItems","primaryWeaponItems","secondaryWeaponItems"]},{"Name":"itemsWithMagazines","Desc":" Returns combined array including all unit's items and all unit's magazines. Loaded magazines such as currentMagazine, primaryWeaponMagazine, secondaryWeaponMagazine, handgunMagazine as well as assignedItems are excluded. ","Syn":{"Syntax":" itemsWithMagazines unit ","Params":["unit: Object"],"Return":" Array "},"Examples":["itemsWithMagazines player\n//is essentially the same as\nitems player + magazines player\n\n[\n\u0009\"FirstAidKit\",\u0009\u0009\u0009//item\n\u0009\"30Rnd_65x39_caseless_mag\",\u0009//magazine\n\u0009\"16Rnd_9x21_Mag\",\u0009\u0009//magazine\n\u0009\"Chemlight_green\",\u0009\u0009//magazine\n\u0009\"HandGrenade\",\u0009\u0009\u0009//magazine\n\u0009\"ToolKit\",\u0009\u0009\u0009//item\n\u0009\"MineDetector\"\u0009\u0009\u0009//item\n]"],"Additional":["removeAllItemsWithMagazines"]},{"Name":"join","Desc":" Join all units in the array to given group. \n\nMaximum number of group members is:\n\n OFP: 12\n\n Arma: ?\n\n Arma 2: ?\n\n Arma 3: \"unlimited\" (3000+)\n\n VBS 2: \"unlimited\" (260+)\n\n\n\nTo have a group member leave a group, join him with the grpNull group (e.g. [guy1] join grpNull) ","Syn":{"Syntax":" unitArray join group ","Params":["unitArray: Array\n\n","group: Group or Object"],"Return":" Nothing "},"Examples":["[_unitOne, _unitTwo] join player;","[_unitOne, _unitTwo] join (group player);"],"Additional":["joinAs","joinAsSilent","joinSilent","group","leader"]},{"Name":"joinAs","Desc":" Joins the unit to the given group, if position id is available, this one is used.  ","Syn":{"Syntax":" unit joinAs [group, id] ","Params":["unit: Object\n\n","[group, id]: Array","group: Group","id: Number"],"Return":" Nothing "},"Examples":["player joinAs [_group, 4]"],"Additional":["join","joinAsSilent","joinSilent","group"]},{"Name":"joinAsSilent","Desc":" Joins the unit to the given group, if position id is available, this one is used. Avoid any radio communication related to joining. ","Syn":{"Syntax":" unit joinAsSilent [group, id] ","Params":["unit: Object\n\n","[group, id]: Array","group: Group","id: Number"],"Return":" Nothing "},"Examples":["player joinAsSilent [_group, 4]"],"Additional":["join","joinAs","joinSilent"]},{"Name":"joinSilent","Desc":" Join all units in the array to given group silently (without radio message). ","Syn":{"Syntax":" unitArray joinSilent group ","Params":["unitArray: Array of Objects\n\n","group: Object or Group"],"Return":" Nothing "},"Examples":["[_unitOne, _unitTwo] joinSilent (group player);","[_unitOne, _unitTwo] joinSilent player;"],"Additional":["join","joinAs","joinAsSilent","group","leader"]},{"Name":"kbAddDatabase","Desc":" Register knowledge base database to given person.","Syn":{"Syntax":" Boolean = person kbAddDatabase filename ","Params":["person: Object\n\n","filename: String"],"Return":" Boolean "},"Examples":["_unit kbAddDatabase \"chat.txt\""],"Additional":["See also needed"]},{"Name":"kbAddDatabaseTargets","Desc":" Register target list knowledge base database to given person.","Syn":{"Syntax":" Boolean = person kbAddDatabaseTargets filename ","Params":["person: Object\n\n","filename: String"],"Return":" Boolean "},"Examples":["_unit kbAddDatabase \"chat.txt\""],"Additional":["See also needed"]},{"Name":"kbAddTopic","Desc":" Register conversation topic to given person.","Syn":{"Syntax":" person kbAddTopic [TopicName, filename.bikb, (filename.fsm, (event_handler))] ","Params":["person: Object\n\n","[TopicName, filename.bikb, (filename.fsm, (event_handler))]: Array","TopicName: String -","filename.bikb: String - Must exist. bikb file name.","filename.fsm: String - Optional. Can be empty string. fsm file name","event_handler: Code or String - Optional. New to Arma2.\n\nThe event handler receives parameters:\n\n_sentenceId: the sentence as defined in the .bikb file\n\n_topic: TopicName registered via kbAddTopic\n\n_this: the person that was talked to (receiver)\n\n_from: the person that talked to the receiver and triggered the script"],"Return":" Nothing "},"Examples":["player kbAddtopic[\"myTest\", \"myTest.bikb\", \"myTest.fsm\", {call compile preprocessFileLineNumbers \"myTest.sqf\"}];"],"Additional":["kbRemoveTopic","kbHasTopic","kbTell","FSM"]},{"Name":"kbHasTopic","Desc":" Check if conversation topic was registered to given person.","Syn":{"Syntax":" Boolean = person kbHasTopic TopicName","Params":["person: Object\n\n","TopicName: String"],"Return":" Boolean "},"Examples":["Example needed"],"Additional":["See also needed"]},{"Name":"kbReact","Desc":" Pass a non-verbal communication to the receiver.  ","Syn":{"Syntax":" person kbReact [receiver,topic,sentence id,[argument name,argument value,argument text,argument speech],...] ","Params":["person:  -\n\n","[receiver,topic,sentence id,[argument name,argument value,argument text,argument speech],...]: Array -"],"Return":" Nothing "},"Examples":["Example needed"],"Additional":["See also needed"]},{"Name":"kbRemoveTopic","Desc":" Unregister conversation topic from given person.","Syn":{"Syntax":" person kbRemoveTopic TopicName","Params":["person: Object\n\n","TopicName: String"],"Return":" Nothing "},"Examples":["Example needed"],"Additional":["See also needed"]},{"Name":"kbTell","Desc":" Make the person tell to the receiver the sentence. ","Syn":{"Syntax":" person kbTell [receiver, TopicName, SentenceClass, [argument name, argument value, argument text, argument speech], ...{,forceRadio}] ","Params":["person: Object\n\n","[receiver, TopicName, SentenceClass, [argument name, argument value, argument text, argument speech], ...{,forceRadio}]: Array","receiver: Object","TopicName, SentenceClass, argument name: Strings","argument value: Code","argument text: String","argument speech is an array of Strings, where each string is an already defined word in configs.","forceRadio (optional): Boolean true/false to force use of radio, Number 1-10 to force use of custom radio channel, or String name of radio channel to use 'GLOBAL', 'SIDE', 'GROUP', 'VEHICLE', 'DIRECT', 'COMMAND'"],"Return":" Nothing "},"Examples":["Example needed"],"Additional":["kbAddTopic","kbHasTopic","kbRemoveTopic"]},{"Name":"kbWasSaid","Desc":" Check if given item was said by person to someone.  ","Syn":{"Syntax":" person kbWasSaid [receiver,topic,sentence id,max. age] ","Params":["person: Person - who said the item\n\n","[receiver,topic,sentence id,max. age]: Array","receiver: Person - receiver of the sentence","topic: String - name of the topic used in kbAddTopic","max. age: Number - time in seconds. kbWasSaid will check whether the sentence was said in last max. age seconds"],"Return":" Boolean "},"Examples":["myPlayer kbWasSaid [myReceiver, \"myTopic\", \"mySentenceID\", 3];"],"Additional":["See also needed"]},{"Name":"keyImage","Desc":" Returns a structured text, containing an image or name (if no image is found) of the button, on the keyboard, mouse or joystick, with the given code. ","Syn":{"Syntax":"Structured Text =  keyImage dikcode ","Params":["dikCode: Number"],"Return":" Structured Text "},"Examples":["_name = keyImage 28 .... result is \"Enter\""],"Additional":["DIK KeyCodes"]},{"Name":"keyName","Desc":" Returns the name of a button (on the keyboard, mouse or joystick) with the given code. ","Syn":{"Syntax":" String = keyName dikCode ","Params":["dikCode: Number"],"Return":" String "},"Examples":["_name = keyName 28 .... result is \"Enter\""],"Additional":["DIK KeyCodes"]},{"Name":"knowsAbout","Desc":" Check if (and by how much) unit knows about target. If unit is vehicle, vehicle commander is considered. ","Syn":{"Syntax":" Number = unit knowsAbout target ","Params":["unit: Object, Group or Side\n\n","target: Object"],"Return":" Number (from 0 to 4) "},"Examples":["_kv = _soldierOne knowsAbout _jeepOne;","_kv = (side player) knowsAbout _target;"],"Additional":["nearTargets","reveal"]},{"Name":"land","Desc":" Force helicopter landing. Landing mode may be: \n\n\n \"LAND\" (complete stop)\n\n \"GET IN\" (hovering very low, for another unit to get in)\n\n \"GET OUT\" (hovering low,for another unit to get out)\n\n \"NONE\" (cancel a landing) Available since ArmA 2 57463 build.\n\n\n","Syn":{"Syntax":" helicopter land mode ","Params":["helicopter: Object\n\n","mode: String"],"Return":" Nothing "},"Examples":["_cobraOne land \"LAND\""],"Additional":["landAt"]},{"Name":"landAt","Desc":" Order an AI airplane to land at a given airport. ID is the number to identify which airport on the island you want. ","Syn":{"Syntax":" plane landAt id ","Params":["plane: Object\n\n","id: Number"],"Return":" Nothing "},"Examples":["_plane1 landAt 1"],"Additional":["land"]},{"Name":"landResult","Desc":" Return the result of helicopter landing position searching (performed, after land command). The value can be \"Found\" (position found),\"NotFound\" (position not found), \"NotReady\" (position searching is,still in progress) or empty string when wrong argument given.  ","Syn":{"Syntax":" landResult helicopter ","Params":["helicopter: Object -"],"Return":" String "},"Examples":["Example needed"],"Additional":["land"]},{"Name":"language","Desc":" Returns current game language.  ","Syn":{"Syntax":" language ","Params":null,"Return":" String "},"Examples":["Example needed"],"Additional":["See also needed"]},{"Name":"laserTarget","Desc":" Returns target created by given unit (gunner in vehicle or on foot). ","Syn":{"Syntax":" laserTarget unitName","Params":["unitName: Object"],"Return":" Object "},"Examples":["_target = laserTarget gunner heli; ","_designatedPos = position laserTarget player; "],"Additional":["cursorTarget"]},{"Name":"lbAdd","Desc":" Adds an item with the given text to the listbox or combobox with id idc of the topmost user dialog.\n\nIt returns the index of the newly added item. ","Syn":{"Syntax":" Number = lbAdd [idc, text] \u003cbr\u003e(Alternate Syntax exists check Read more)","Params":["[idc, text]: Array\n\n","idc: Number of control","text: String"],"Return":" Number "},"Examples":["_index = lbAdd [101, \"First item\"];","_index = _control lbAdd \"First item\";"],"Additional":["lbClear","lbColor","lbCurSel","lbData","lbDelete","lbIsSelected","lbPicture","lbSelection","lbSetColor","lbSetCurSel","lbSetData","lbSetPicture","lbSetSelected","lbSetTooltip","lbSetValue","lbSize","lbSort","lbSortByValue","lbText","lbValue"]},{"Name":"lbClear","Desc":" Clear all items in listbox or combobox with id idc of topmost user dialog. ","Syn":{"Syntax":" lbClear idc \u003cbr\u003e(Alternate Syntax exists check Read more)","Params":["idc: Number"],"Return":" Nothing "},"Examples":["lbClear 101;","lbClear _ctrl;"],"Additional":["lbAdd","lbColor","lbCurSel","lbData","lbDelete","lbIsSelected","lbPicture","lbSelection","lbSetColor","lbSetCurSel","lbSetData","lbSetPicture","lbSetSelected","lbSetTooltip","lbSetValue","lbSize","lbSort","lbSortByValue","lbText","lbValue"]},{"Name":"lbColor","Desc":" Returns the text color of the item with the given index of the listbox or combobox with id idc of the topmost user dialog.\n\nThe color is returned in format Color. ","Syn":{"Syntax":"lbColor [idc, index] \u003cbr\u003e(Alternate Syntax exists check Read more)","Params":["[idc, index]: Array\n\n","idc: Number of control","index: Number"],"Return":" Array - format Color "},"Examples":["_colour = lbColor [101, 0];","_color = _control lbColor 0;"],"Additional":["lbAdd","lbClear","lbCurSel","lbData","lbDelete","lbIsSelected","lbPicture","lbSelection","lbSetColor","lbSetCurSel","lbSetData","lbSetPicture","lbSetSelected","lbSetTooltip","lbSetValue","lbSize","lbSort","lbSortByValue","lbText","lbValue"]},{"Name":"lbCurSel","Desc":" Returns the index of the selected item of the listbox or combobox with id idc of the topmost user dialog. ","Syn":{"Syntax":" Number = lbCurSel idc \u003cbr\u003e(Alternate Syntax exists check Read more)","Params":["idc: Number"],"Return":" Number "},"Examples":["_index = lbCurSel 101;","lbCurSel _ctrl;"],"Additional":["lbAdd","lbClear","lbColor","lbData","lbDelete","lbIsSelected","lbPicture","lbSelection","lbSetColor","lbSetCurSel","lbSetData","lbSetPicture","lbSetSelected","lbSetTooltip","lbSetValue","lbSize","lbSort","lbSortByValue","lbText","lbValue"]},{"Name":"lbData","Desc":" Returns the additional text (invisible) in an item with the given index of the listbox or combobox with id idc of the topmost user dialog. ","Syn":{"Syntax":" String = lbData [idc, index] \u003cbr\u003e(Alternate Syntax exists check Read more)","Params":["[idc, index]: Array\n\n","idc: Number of control","index: Number"],"Return":" String "},"Examples":["_data = lbData [101, 0];","_data = _control lbData 0;"],"Additional":["lbAdd","lbClear","lbColor","lbCurSel","lbDelete","lbIsSelected","lbPicture","lbSelection","lbSetColor","lbSetCurSel","lbSetData","lbSetPicture","lbSetSelected","lbSetTooltip","lbSetValue","lbSize","lbSort","lbSortByValue","lbText","lbValue"]},{"Name":"lbDelete","Desc":" Removes the item with the given index from the listbox or combobox with id idc of the topmost user dialog. ","Syn":{"Syntax":" lbDelete [idc, index] \u003cbr\u003e(Alternate Syntax exists check Read more)","Params":["[idc, index]: Array\n\n","idc: Number of control","index: Number"],"Return":" Nothing "},"Examples":["lbDelete [101, 0];","_control lbDelete 0;"],"Additional":["lbAdd","lbClear","lbColor","lbCurSel","lbData","lbIsSelected","lbPicture","lbSelection","lbSetColor","lbSetCurSel","lbSetData","lbSetPicture","lbSetSelected","lbSetTooltip","lbSetValue","lbSize","lbSort","lbSortByValue","lbText","lbValue"]},{"Name":"lbIsSelected","Desc":" Check whether given row of the given listbox is selected. ","Syn":{"Syntax":" Boolean = control lbIsSelected index ","Params":["control: Control\n\n","index: Number"],"Return":" Boolean "},"Examples":["_selected = _control lbIsSelected 0;"],"Additional":["lbAdd","lbClear","lbColor","lbCurSel","lbData","lbDelete","lbPicture","lbSelection","lbSetColor","lbSetCurSel","lbSetData","lbSetPicture","lbSetSelected","lbSetTooltip","lbSetValue","lbSize","lbSort","lbSortByValue","lbText","lbValue"]},{"Name":"lbPicture","Desc":" Returns the picture name of the item with the given index of the listbox or combobox with id idc of the topmost user dialog. ","Syn":{"Syntax":" lbPicture [idc, index] \u003cbr\u003e(Alternate Syntax exists check Read more)","Params":["[idc, index]: Array\n\n","idc: Number of control","index: Number"],"Return":" String "},"Examples":["_picture = lbPicture [101, 0];","_picture = _control lbPicture 0;"],"Additional":["lbAdd","lbClear","lbColor","lbCurSel","lbData","lbDelete","lbIsSelected","lbSelection","lbSetColor","lbSetCurSel","lbSetData","lbSetPicture","lbSetSelected","lbSetTooltip","lbSetValue","lbSize","lbSort","lbSortByValue","lbText","lbValue"]},{"Name":"lbSelection","Desc":" Returns the array of selected rows indices in the given listbox.\n\n\n\n\n \n\n  Use lbCurSel instead.\n ","Syn":{"Syntax":" Array = lbSelection control ","Params":["control: Control"],"Return":" Array "},"Examples":["_indices = lbSelection _control;"],"Additional":["lbAdd","lbClear","lbColor","lbCurSel","lbData","lbDelete","lbIsSelected","lbPicture","lbSetColor","lbSetCurSel","lbSetData","lbSetPicture","lbSetSelected","lbSetTooltip","lbSetValue","lbSize","lbSort","lbSortByValue","lbText","lbValue"]},{"Name":"lbSetColor","Desc":" Sets the color of the item with the given index of the listbox or combobox with id idc of the topmost user dialog to color.\n\nColour is in format Color. ","Syn":{"Syntax":" lbSetColor  [idc, index, color] \u003cbr\u003e(Alternate Syntax exists check Read more)","Params":["[idc, index, color]: Array\n\n","idc: Number of control","index: Number","color: Color"],"Return":" Nothing "},"Examples":["lbSetColor [101, 0, [0, 1, 0, 0.5]];","_control lbSetColor [0, [0, 1, 0, 0.5]];"],"Additional":["lbAdd","lbClear","lbColor","lbCurSel","lbData","lbDelete","lbIsSelected","lbPicture","lbSelection","lbSetCurSel","lbSetData","lbSetPicture","lbSetSelected","lbSetTooltip","lbSetValue","lbSize","lbSort","lbSortByValue","lbText","lbValue"]},{"Name":"lbSetCurSel","Desc":" Selects the item with the given index of the listbox or combobox with id idc of the topmost user dialog. ","Syn":{"Syntax":" lbSetCurSel [idc, index] \u003cbr\u003e(Alternate Syntax exists check Read more)","Params":["[idc, index]: Array\n\n","idc: Number of control","index: Number"],"Return":" Nothing "},"Examples":["lbSetCurSel [101, 0];","_control lbSetCurSel 0;"],"Additional":["lbAdd","lbClear","lbColor","lbCurSel","lbData","lbDelete","lbIsSelected","lbPicture","lbSelection","lbSetColor","lbSetData","lbSetPicture","lbSetSelected","lbSetTooltip","lbSetValue","lbSize","lbSort","lbSortByValue","lbText","lbValue"]},{"Name":"lbSetData","Desc":" Sets the additional text (invisible) in the item with the given index of the listbox or combobox with id idc of the topmost user dialog to the given data.  ","Syn":{"Syntax":" lbSetData [idc, index, data] \u003cbr\u003e(Alternate Syntax exists check Read more)","Params":["[idc, index, data]: Array\n\n","idc: Number of control","index: Number","data: String"],"Return":" Nothing "},"Examples":["lbSetData [101, 1, \"#1\"];","_control lbSetData [1, \"#1\"];"],"Additional":["lbAdd","lbClear","lbColor","lbCurSel","lbData","lbDelete","lbIsSelected","lbPicture","lbSelection","lbSetColor","lbSetCurSel","lbSetPicture","lbSetSelected","lbSetTooltip","lbSetValue","lbSize","lbSort","lbSortByValue","lbText","lbValue"]},{"Name":"lbSetPicture","Desc":" Sets the picture in the item with the given index of the listbox or combobox with id idc of the topmost user dialog.\n\nName is the picture name.\n\nThe picture is searched for in the mission directory, the dtaExt subdirectory of the campaign directory and the dtaExt directory and the data bank (or directory). ","Syn":{"Syntax":" lbSetPicture [idc, index, name] \u003cbr\u003e(Alternate Syntax exists check Read more)","Params":["[idc, index, name]: Array\n\n","idc: Number of control","index: Number","name: String"],"Return":" Nothing "},"Examples":["lbSetPicture [101, 0, \"iskoda\"];","_control lbSetPicture [0, \"iskoda\"];"],"Additional":["lbAdd","lbClear","lbColor","lbCurSel","lbData","lbDelete","lbIsSelected","lbPicture","lbSelection","lbSetColor","lbSetCurSel","lbSetData","lbSetSelected","lbSetTooltip","lbSetValue","lbSize","lbSort","lbSortByValue","lbText","lbValue"]},{"Name":"lbSetSelected","Desc":" Set the selection state of the given row of the given listbox. Listbox must support multiple selection. \n\n\n\n\n \n\n  lbSetSelected was obsoleted, Use lbSetCurSel instead.\n","Syn":{"Syntax":" control lbSetSelected [index, selected] ","Params":["control: Control\n\n","[index, selected]: Array","index: Number","selected: Boolean"],"Return":" Nothing "},"Examples":["_control lbSetSelected [0, true];"],"Additional":["lbAdd","lbClear","lbColor","lbCurSel","lbData","lbDelete","lbIsSelected","lbPicture","lbSelection","lbSetColor","lbSetCurSel","lbSetData","lbSetPicture","lbSetTooltip","lbSetValue","lbSize","lbSort","lbSortByValue","lbText","lbValue"]},{"Name":"lbSetTooltip","Desc":" Sets tooltip for item with given index of the listbox or combobox with id idc of the topmost user dialog to the given data.  ","Syn":{"Syntax":" lbSetTooltip [idc, index, tooltip] \u003cbr\u003e(Alternate Syntax exists check Read more)","Params":["[idc, index, tooltip]: Array\n\n","idc: Number","index: Number","tooltip: String"],"Return":" Nothing "},"Examples":["lbSetTooltip [101, 1, \"tooltip\"];","_control lbSetTooltip [0, \"another tooltip\"];"],"Additional":["lbAdd","lbClear","lbColor","lbCurSel","lbData","lbDelete","lbIsSelected","lbPicture","lbSelection","lbSetColor","lbSetCurSel","lbSetData","lbSetPicture","lbSetSelected","lbSetValue","lbSize","lbSort","lbSortByValue","lbText","lbValue"]},{"Name":"lbSetValue","Desc":" Sets the additional integer value in the item with the given index of the listbox or combobox with id idc of the topmost user dialog to the given value. ","Syn":{"Syntax":" lbSetValue [idc, index, value] \u003cbr\u003e(Alternate Syntax exists check Read more)","Params":["[idc, index, value]: Array\n\n","idc: Number of control","index: Number","value: Number"],"Return":" Nothing "},"Examples":["lbSetValue [101, 0, 1];","_control lbSetValue [0, 1];"],"Additional":["lbAdd","lbClear","lbColor","lbCurSel","lbData","lbDelete","lbIsSelected","lbPicture","lbSelection","lbSetColor","lbSetCurSel","lbSetData","lbSetPicture","lbSetSelected","lbSetTooltip","lbSize","lbSort","lbSortByValue","lbText","lbValue"]},{"Name":"lbSize","Desc":" Return number of items of listbox or combobox with id idc of topmost user dialog. ","Syn":{"Syntax":" lbSize idc \u003cbr\u003e(Alternate Syntax exists check Read more)","Params":["idc: Number"],"Return":" Number "},"Examples":["_size = lbSize 101;","_size = lbSize _control;"],"Additional":["lbAdd","lbClear","lbColor","lbCurSel","lbData","lbDelete","lbIsSelected","lbPicture","lbSelection","lbSetColor","lbSetCurSel","lbSetData","lbSetPicture","lbSetSelected","lbSetTooltip","lbSetValue","lbSort","lbSortByValue","lbText","lbValue"]},{"Name":"lbSort","Desc":" Sorts listbox entries alphabetically ascending by their text. \nAlternative syntax (available since ARMA 3  v1.18) allows descending sorting as well.\nOrder could be:\n\n \"ASC\"\n\n \"DESC\"\n\n\n","Syn":{"Syntax":" lbSort control \u003cbr\u003e(Alternate Syntax exists check Read more)","Params":["control: Control"],"Return":" Nothing "},"Examples":["lbSort _myControl;","lbSort [_myControl, \"DESC\"];"],"Additional":["lbAdd","lbClear","lbColor","lbCurSel","lbData","lbDelete","lbIsSelected","lbPicture","lbSelection","lbSetColor","lbSetCurSel","lbSetData","lbSetPicture","lbSetSelected","lbSetTooltip","lbSetValue","lbSize","lbSortByValue","lbText","lbValue"]},{"Name":"lbSortByValue","Desc":" Sorts the Listbox Entries by their assigned Values.\n\nThe Entries getting listed by their Negativity (most negative Value on Top).\n\nAlso note that this Command will mix up the Entries randomly if multiple Entries have the same Value. ","Syn":{"Syntax":" lbSortByValue control ","Params":["control: Given Control"],"Return":" Nothing "},"Examples":["lbSortByValue _control;"],"Additional":["lbAdd","lbClear","lbColor","lbCurSel","lbData","lbDelete","lbIsSelected","lbPicture","lbSelection","lbSetColor","lbSetCurSel","lbSetData","lbSetPicture","lbSetSelected","lbSetTooltip","lbSetValue","lbSize","lbSort","lbText","lbValue"]},{"Name":"lbText","Desc":" Returns the shown text in the item with the given index of the listbox or combobox with id idc of the topmost user dialog. ","Syn":{"Syntax":" lbText [idc, index] \u003cbr\u003e(Alternate Syntax exists check Read more)","Params":["[idc, index]: Array\n\n","idc: Number of control","index: Number"],"Return":" String "},"Examples":["_text = lbText [101, 0];","_text = _control lbText 0;"],"Additional":["lbAdd","lbClear","lbColor","lbCurSel","lbData","lbDelete","lbIsSelected","lbPicture","lbSelection","lbSetColor","lbSetCurSel","lbSetData","lbSetPicture","lbSetSelected","lbSetTooltip","lbSetValue","lbSize","lbSort","lbSortByValue","lbValue"]},{"Name":"lbValue","Desc":" Returns the additional integer value in the item with the given index of the listbox or combobox with id idc of the topmost user dialog. ","Syn":{"Syntax":"lbValue [idc, index] \u003cbr\u003e(Alternate Syntax exists check Read more)","Params":["[idc, index]: Array\n\n","idc: Number of control","index: Number"],"Return":" Number "},"Examples":["_value = lbValue [101, 0];","_value = _control lbValue 0;"],"Additional":["lbAdd","lbClear","lbColor","lbCurSel","lbData","lbDelete","lbIsSelected","lbPicture","lbSelection","lbSetColor","lbSetCurSel","lbSetData","lbSetPicture","lbSetSelected","lbSetTooltip","lbSetValue","lbSize","lbSort","lbSortByValue","lbText"]},{"Name":"leader","Desc":"Returns the group leader for the given unit or group. For dead units, objNull is returned.  ","Syn":{"Syntax":" Object = leader unitName ","Params":["unitName: Object or Group"],"Return":" Object "},"Examples":["leader group player == leader player ","_GroupLeader = leader (group (vehicle player)) ","_UnitLeader = leader player "],"Additional":["formationLeader","formLeader","isFormationLeader","selectLeader"]},{"Name":"leaveVehicle","Desc":" Ceases the using of the vehicle by either a unit or a group. It unassigns them from the vehicle.  ","Syn":{"Syntax":" group leaveVehicle vehicle ","Params":["group: Object or Group\n\n","vehicle: Object"],"Return":" Nothing "},"Examples":["_unit leaveVehicle _vehicle","_grp leaveVehicle _vehicle"],"Additional":["addVehicle","assignAsCargo","assignAsCommander","assignAsDriver","assignAsGunner","assignedVehicle","unassignVehicle","doGetOut","commandGetOut"]},{"Name":"libraryCredits","Desc":" Returns the credits for the libraries used by the game. ","Syn":{"Syntax":" libraryCredits ","Params":null,"Return":" Array - [array1, array2, (..), arrayN] all under the form [libraryName, credits]\n"},"Examples":["hint str libraryCredits;   // as in Arma2 OA 1.62.95208\n/*\n[\n\u0009[\n\u0009\u0009\"Botan\",\n\u0009\u0009\"1999-2012 Jack Lloyd, 2001 Peter J Jones, 2004-2007 Justin Karneges, 2004 Vaclav Ovsik, 2005 Matthew Gregan, 2005-2006 Matt Johnston, 2006 Luca Piccarreta, 2007 Yves Jerschow, 2007-2008 FlexSecure GmbH, 2007-2008 Technische Universitat Darmstadt, 2007-2008 Falko Strenzke, 2007-2008 Martin Doering, 2007 Manuel Hartl, 2007 Christoph Ludwig, 2007 Patrick Sona, 2010 Olivier de Gaalon\"\n\u0009],\n\u0009[\n\u0009\u0009\"rapidjson\",\n\u0009\u0009\"2011 Milo Yip\"\n\u0009],\n\u0009[\n\u0009\u0009\"libcurl\",\n\u0009\u0009\"Copyright (c) 1996 - 2012, Daniel Stenberg\"\n\u0009],\n\u0009[\n\u0009\u0009\"GameSpy\",\n\u0009\u0009\"2009 GameSpy Industries, Inc.\"\n\u0009],\n\u0009[\n\u0009\u0009\"Theora\",\n\u0009\u0009\"2002-2009 by the Xiph.Org Foundation http://www.xiph.org/\"\n\u0009],\n\u0009[\n\u0009\u0009\"OggVorbis\",\n\u0009\u0009\"1994-2002 by the Xiph.Org Foundation http://www.xiph.org/\"\n\u0009],\n\u0009[\n\u0009\u0009\"Intel JPEG Library\",\n\u0009\u0009\"1998 Intel Corporation\"\n\u0009],\n\u0009[\n\u0009\u0009\"Matrix Template Library\",\n\u0009\u0009\"2001-2005 The Trustees of Indiana University\"\n\u0009],\n\u0009[\n\u0009\u0009\"Matrix Template Library\",\n\u0009\u0009\"1998-2001 University of Notre Dame\"\n\u0009],\n\u0009[\n\u0009\u0009\"Speex\",\n\u0009\u0009\"2002-2006 Jean-Marc Valin\"\n\u0009],\n\u0009[\n\u0009\u0009\"LZO Professional\",\n\u0009\u0009\"1996-2011 Markus Franz Xaver Johannes Oberhumer\"\n\u0009],\n\u0009[\n\u0009\u0009\"NVIDIA FXAA by TIMOTHY LOTTES\",\n\u0009\u0009\"2010, 2011 NVIDIA CORPORATION\"\n\u0009],\n\u0009[\n\u0009\u0009\"Jimenez's MLAA\",\n\u0009\u0009\"2012 2011 by Jorge Jimenez, Belen Masia, Jose I. Echevarria, Fernando Navarro and Diego Gutierrez\"\n\u0009]\n]\n*/"],"Additional":["libraryDisclaimers"]},{"Name":"libraryDisclaimers","Desc":" Returns the library disclaimers. ","Syn":{"Syntax":" libraryDisclaimers ","Params":null,"Return":" Array - [array1] - only has one element at the moment, but this number might grow\n"},"Examples":["hint str libraryDisclaimers;   // as in Arma2 OA 1.62.95208\n\n[\"THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\"]"],"Additional":["libraryCredits"]},{"Name":"lifeState","Desc":" Returns the life state of the given unit.\n\nCan be one of:\n\n\"ALIVE\"\n\n\"UNCONSCIOUS\"\n\n\"DEAD\"\n\n\n\nSince Arma 3 Alpha it can be one of:\n\n\"HEALTHY\"\n\n\"INJURED\"\n\n\"DEAD\"\n\n\nlifeState seems to change to \"INJURED\" when damage unit \u003e= 0.1 ","Syn":{"Syntax":" lifeState unit ","Params":["unit: Object"],"Return":" String "},"Examples":["_ls = lifeState loon;"],"Additional":["setUnconscious"]},{"Name":"lightAttachObject","Desc":" Attach light to given object at given position on object. ","Syn":{"Syntax":" light lightAttachObject [object, position] ","Params":["light: Object\n\n","[object, position]: Array","object: Object","position: Array - format Position"],"Return":" Nothing "},"Examples":["myLight lightAttachObject [myVehicle, [-0.5,-0.25,1]];"],"Additional":["setLightAmbient","setLightBrightness","lightDetachObject","setLightColor","setLightIntensity","setLightAttenuation","setLightUseFlare","setLightFlareSize","setLightFlareMaxDistance","setLightDayLight","attachObject","attachTo","attachedObjects","attachedTo","waypointAttachVehicle","waypointAttachedVehicle","triggerAttachVehicle","attachedObject"]},{"Name":"lightDetachObject","Desc":" Detach light from object. ","Syn":{"Syntax":" lightDetachObject light ","Params":["light: Object"],"Return":" Nothing "},"Examples":["LightDetachObject _light"],"Additional":["setLightAmbient","setLightBrightness","lightAttachObject","setLightColor","setLightIntensity","setLightAttenuation","setLightUseFlare","setLightFlareSize","setLightFlareMaxDistance","setLightDayLight"]},{"Name":"lightIsOn","Desc":" Check if lampost is on (shining). For working with CfgNonAIVehicles class \"StreetLamp\" only. Possible values are: \n\n \"ON\"\n\n \"OFF\"\n\n \"AUTO\" (auto is only on during the night).\n\n \"ERROR\"\n\n\n\n","Syn":{"Syntax":" lightIsOn lamppost ","Params":["lamppost: Object"],"Return":" String "},"Examples":["?lightIsOn nearestObject [player, \"StreetLamp\"] == \"ON\" :hint \"nightime\"","_it = lightIsOn object 159582","if (count allMissionObjects \"StreetLamp\" == 0) then {\n\u0009hint \"Objects compatible with 'lightIsOn' are not found.\";\n} else {\n\u0009hint \"'lightIsOn' compatible objects are found!\";\n};"],"Additional":["switchLight"]},{"Name":"lightnings","Desc":" Return the current lightnings value.  ","Syn":{"Syntax":" lightnings ","Params":null,"Return":" Number "},"Examples":["Get the current lightnings value:_lightningsVal = lightnings;"],"Additional":["setLightnings"]},{"Name":"limitSpeed","Desc":" Limit speed of given vehicle or person to given value (in km/h). ","Syn":{"Syntax":" objectName limitSpeed speed ","Params":["objectName: Object\n\n","speed: Number"],"Return":" Nothing "},"Examples":["// Adjust \"speedLimit\" variable to change limited speed. (A3 1.24 we don't need loop for a continus effect, limitSpeed alone is enough.)\n_this setVariable [\"speedLimit\", 200];\n_nul = _this spawn {\n\u0009while {canMove _this} do {\n\u0009\u0009_this limitSpeed (_this getVariable \"speedLimit\");\n\u0009\u0009sleep 0.1;\n\u0009};\n};","[\"SpeedObserver\",\"onEachFrame\",{hintSilent format [\"%1\",speed vehicle MyVehicle]},[]] call BIS_fnc_addStackedEventHandler;\nsleep 10;\nMyVehicle limitSpeed 5; //Watch the effect of this command.\n"],"Additional":["speed"]},{"Name":"linearConversion","Desc":" Converts value in interval [min, max] to newMin + a * (max - min) / (newMax - newMin), potentially clamps the final value.  ","Syn":{"Syntax":" linearConversion [min, max, value, newMin, newMax, clamp] ","Params":["[min, max, value, newMin, newMax, clamp]: Array\n\n","min: Number","max: Number","value: Number","newMin: Number","newMax: Number","clamp (optional): Boolean (Default is false)"],"Return":" Number "},"Examples":["linearConversion [4, 8, 5, 0, 1, false];"],"Additional":["See also needed"]},{"Name":"lineBreak","Desc":" Creates a structured text containing a line break. ","Syn":{"Syntax":" lineBreak ","Params":null,"Return":" Structured Text "},"Examples":["_txt = composeText [\"First line\", lineBreak, \"Second line\"];"],"Additional":["composeText","parseText","Structured Text","text"]},{"Name":"lineIntersects","Desc":" Checks for object intersection with a virtual line between two positions. Returns true if intersects with an object. ","Syn":{"Syntax":" lineIntersects [begPos, endPos, objIgnore1, objIgnore2] ","Params":["begPos: PositionASL\n\n","endPos: PositionASL","objIgnore1: (optional) Object - object to ignore. When testing intersection from an object/unit/vehicle, pass that object here to prevent intersection inside of the object.","objIgnore2: (optional) Object - another object to ignore. When testing intersection of a line between two objects, pass the second object here to prevent interesection inside of it being reported"],"Return":" Boolean - true if intersection "},"Examples":["lineIntersects [eyePos player, aimPos chopper, player, chopper]"],"Additional":["intersect","terrainIntersect","terrainIntersectASL","lineIntersectsWith","lineIntersectsObjs"]},{"Name":"lineIntersectsObjs","Desc":" Returns list of objects intersected by given line from begPos to endPos. ","Syn":{"Syntax":" lineIntersectsObjs [begPos, endPos, withObj, ignoreObj, sortByDistance, flags] ","Params":["begPos: PositionASL - virtual line start\n\n","endPos: PositionASL - virtual line end","withObj: Object","ignoreObj: Object","sortByDistance: Boolean - true: furthest object first, closest object last; false: unsorted","flags: Number:\n1 - CF_ONLY_WATER \n2 - CF_NEAREST_CONTACT \n4 - CF_ONLY_STATIC \n8 - CF_ONLY_DYNAMIC \n16 - CF_FIRST_CONTACT \n32 - CF_ALL_OBJECTS (Usable only with CF_FIRST_CONTACT and it will check one contact per object)\nFlags can be combined: 2 + 4 = 6 - CF_NEAREST_OBJECT + CF_ONLY_STATIC"],"Return":" Array of Objects - intersecting objects "},"Examples":["Example needed"],"Additional":["lineIntersectsWith","terrainIntersect","terrainIntersectASL","lineIntersects","intersect"]},{"Name":"lineIntersectsWith","Desc":" Returns objects intersecting with the virtual line from begPos to endPos. By default resulting array of intersecting objects is unsorted. To sort by distance set sortByDistance param to true. ","Syn":{"Syntax":" lineIntersectsWith [begPos, endPos, objIgnore1, objIgnore2, sortByDistance] ","Params":["begPos: PositionASL - virtual line start\n\n","endPos: PositionASL - virtual line end","objIgnore1: (optional) Object - object to ignore. When testing intersection from an object/unit/vehicle, pass that object here to prevent intersection inside of the object.","objIgnore2: (optional) Object - another object to ignore. When testing intersection of a line between two objects, pass the second object here to prevent intersection inside of it being reported","sortByDistance: (optional) Boolean - true: Sort by distance =\u003e furthermost object first, closest object last; false: unsorted"],"Return":" Array - intersecting objects "},"Examples":["_objects = lineIntersectsWith [eyePos player, ATLtoASL screenToWorld [0.5,0.5]];","Sort by distance: _objects = lineIntersectsWith [eyePos player, ATLtoASL screenToWorld [0.5,0.5], objNull, objNull, true];","Ignore objects: _objects = lineIntersectsWith [eyePos player, aimPos chopper, player, chopper];"],"Additional":["lineIntersectsObjs","intersect","terrainIntersect","terrainIntersectASL","lineIntersects"]},{"Name":"linkItem","Desc":" Create and assign item to the correct slot. If there is an item in the targeted slot, it gets replaced. ","Syn":{"Syntax":" unit linkItem item ","Params":["unit: Object\n\n","item: String"],"Return":" Nothing "},"Examples":["bluforUnit linkItem \"NVGoggles\";\nopforUnit linkItem \"NVGoggles_OPFOR\";\nindependentUnit linkItem \"NVGoggles_INDEP\";"],"Additional":["unlinkItem","addItem","assignItem","removeItem","unassignItem","assignedItems","removeAllAssignedItems"]},{"Name":"list","Desc":" List of units that would activate given Trigger.\n\nIt returns nothing before the simulation started, i.e. in (undelayed) init.sqf files. Returns a pointer to the trigger's list after the simulation started.Since this is just a reference this means that the value in your local variable will change as the content of the trigger area changes. To permanently copy the returned list to a different variable, use _mylist = +(list triggerOne).\n\nThe second example can be used inside the trigger (in that case, no need to name your trigger).\n\nThe list returned for trigger of type \"Not present\" is the same as that returned for type \"present\". \n\nNOTE: While the command can query any trigger, local or remote, the result will be only for the trigger condition set on the local client. See createTrigger for more info. ","Syn":{"Syntax":"Array =  list trigger ","Params":["trigger: Object"],"Return":" Array or Nothing "},"Examples":["_tlist = list _triggerOne; ","hint format [\"%1\", thislist]; "],"Additional":["setTriggerActivation","createTrigger"]},{"Name":"listObjects","Desc":" Return the list of all objects of given type. ","Syn":{"Syntax":" map listObjects type ","Params":["map: Control -\n\n","type: String -"],"Return":" Array "},"Examples":["Example needed"],"Additional":["See also needed"]},{"Name":"ln","Desc":" Natural logarithm of x. ","Syn":{"Syntax":"Number =  ln x ","Params":["x: Number"],"Return":" Number "},"Examples":["_nlog = ln 10 \n\nResult is 2.302"],"Additional":["Math Commands"]},{"Name":"lnbAddArray","Desc":" Adds list of rows of strings. ","Syn":{"Syntax":" lnbAddArray [IDC(Number or Control),[[[text,text],[value,..],[data,..]],[[text,text],[value,..],[data,..]],]] ","Params":["[IDC(Number or Control),[[[text,text],[value,..],[data,..]],[[text,text],[value,..],[data,..]],]]: Array"],"Return":" index (Number) "},"Examples":["lnbAddArray [102,[[[\"#1\"],[1],[\"#1\"]]]];"],"Additional":["lnbAddColumn","lnbAddRow","lnbClear","lnbColor","lnbCurSelRow","lnbData","lnbDeleteColumn","lnbDeleteRow","lnbGetColumnsPosition","lnbPicture","lnbSetColor","lnbSetColumnsPos","lnbSetCurSelRow","lnbSetData","lnbSetPicture","lnbSetText","lnbSetValue","lnbSize","lnbText","lnbValue"]},{"Name":"lnbAddColumn","Desc":" Adds an column at given position. It returns the index of the newly added column. ","Syn":{"Syntax":" _ctrl lnbAddColumn position \u003cbr\u003e(Alternate Syntax exists check Read more)","Params":["_ctrl: Control\n\n","position: Number"],"Return":" Number or nil "},"Examples":["_ctrl lnbAddColumn 0.8;","lnbAddColumn [105,0.8];"],"Additional":["lnbAddArray","lnbAddRow","lnbClear","lnbColor","lnbCurSelRow","lnbData","lnbDeleteColumn","lnbDeleteRow","lnbGetColumnsPosition","lnbPicture","lnbSetColor","lnbSetColumnsPos","lnbSetCurSelRow","lnbSetData","lnbSetPicture","lnbSetText","lnbSetValue","lnbSize","lnbText","lnbValue"]},{"Name":"lnbAddRow","Desc":" Adds an row of strings. ","Syn":{"Syntax":" lnbAddRow [IDC,[ String ]] \u003cbr\u003e(Alternate Syntax exists check Read more)","Params":["IDC: Number\n\n","[ String,String... ]: Array of String"],"Return":" Row index (Number) "},"Examples":["lnbAddRow [1,[\"ROW1\",\"ROW2\"]];","_ctrl lnbAddRow [\"ROW1\",\"ROW2\"];"],"Additional":["lnbAddArray","lnbAddColumn","lnbClear","lnbColor","lnbCurSelRow","lnbData","lnbDeleteColumn","lnbDeleteRow","lnbGetColumnsPosition","lnbPicture","lnbSetColor","lnbSetColumnsPos","lnbSetCurSelRow","lnbSetData","lnbSetPicture","lnbSetText","lnbSetValue","lnbSize","lnbText","lnbValue"]},{"Name":"lnbClear","Desc":" Clears all items in the given listbox or combobox. ","Syn":{"Syntax":" lnbClear idc(Number) \u003cbr\u003e(Alternate Syntax exists check Read more)","Params":["idc: Number"],"Return":" Nothing "},"Examples":["lnbClear _ctrl;"],"Additional":["lnbAddArray","lnbAddColumn","lnbAddRow","lnbColor","lnbCurSelRow","lnbData","lnbDeleteColumn","lnbDeleteRow","lnbGetColumnsPosition","lnbPicture","lnbSetColor","lnbSetColumnsPos","lnbSetCurSelRow","lnbSetData","lnbSetPicture","lnbSetText","lnbSetValue","lnbSize","lnbText","lnbValue"]},{"Name":"lnbColor","Desc":" Returns the text color of the item with the given position of the 2D listbox. The color is returned in format Color. ","Syn":{"Syntax":" lnbColor [idc(Number),[row(Number),column(Number)] ] \u003cbr\u003e(Alternate Syntax exists check Read more)","Params":["[idc(Number),[row(Number),column(Number)] ]: Array"],"Return":" Array "},"Examples":["_ctrl lnbColor [0,0];"],"Additional":["lnbAddArray","lnbAddColumn","lnbAddRow","lnbClear","lnbCurSelRow","lnbData","lnbDeleteColumn","lnbDeleteRow","lnbGetColumnsPosition","lnbPicture","lnbSetColor","lnbSetColumnsPos","lnbSetCurSelRow","lnbSetData","lnbSetPicture","lnbSetText","lnbSetValue","lnbSize","lnbText","lnbValue"]},{"Name":"lnbCurSelRow","Desc":" Returns the index of the selected row id 2D listbox. ","Syn":{"Syntax":" lnbCurSelRow idc(Number) \u003cbr\u003e(Alternate Syntax exists check Read more)","Params":["idc: Number"],"Return":" Number "},"Examples":["lnbCurSelRow _ctrl;"],"Additional":["lnbAddArray","lnbAddColumn","lnbAddRow","lnbClear","lnbColor","lnbData","lnbDeleteColumn","lnbDeleteRow","lnbGetColumnsPosition","lnbPicture","lnbSetColor","lnbSetColumnsPos","lnbSetCurSelRow","lnbSetData","lnbSetPicture","lnbSetText","lnbSetValue","lnbSize","lnbText","lnbValue"]},{"Name":"lnbData","Desc":" Returns the additional text (invisible) in an item with the given position of the 2D listbox. ","Syn":{"Syntax":" lnbData [idc(Number) or Control,[row(Number),column(Number)] ] \u003cbr\u003e(Alternate Syntax exists check Read more)","Params":["[idc(Number) or Control,[row(Number),column(Number)] ]: Array"],"Return":" String "},"Examples":["_ctrl lnbData [ lnbCurSelRow _ctrl,0]; //\"#1\""],"Additional":["lnbAddArray","lnbAddColumn","lnbAddRow","lnbClear","lnbColor","lnbCurSelRow","lnbDeleteColumn","lnbDeleteRow","lnbGetColumnsPosition","lnbPicture","lnbSetColor","lnbSetColumnsPos","lnbSetCurSelRow","lnbSetData","lnbSetPicture","lnbSetText","lnbSetValue","lnbSize","lnbText","lnbValue"]},{"Name":"lnbDeleteColumn","Desc":" Removes column with given index. ","Syn":{"Syntax":" lnbDeleteColumn [idc,index] \u003cbr\u003e(Alternate Syntax exists check Read more)","Params":["[idc,index]: Array"],"Return":" Nothing "},"Examples":["_ctrl lnbDeleteColumn 1;"],"Additional":["lnbAddArray","lnbAddColumn","lnbAddRow","lnbClear","lnbColor","lnbCurSelRow","lnbData","lnbDeleteRow","lnbGetColumnsPosition","lnbPicture","lnbSetColor","lnbSetColumnsPos","lnbSetCurSelRow","lnbSetData","lnbSetPicture","lnbSetText","lnbSetValue","lnbSize","lnbText","lnbValue"]},{"Name":"lnbDeleteRow","Desc":" Removes row with the given index from the given listbox or combobox. ","Syn":{"Syntax":" _ctrl lnbDeleteRow row ","Params":["_ctrl: Control\n\n","row: Number"],"Return":" Nothing "},"Examples":["_ctrl lnbDeleteRow 1;"],"Additional":["lnbAddArray","lnbAddColumn","lnbAddRow","lnbClear","lnbColor","lnbCurSelRow","lnbData","lnbDeleteColumn","lnbGetColumnsPosition","lnbPicture","lnbSetColor","lnbSetColumnsPos","lnbSetCurSelRow","lnbSetData","lnbSetPicture","lnbSetText","lnbSetValue","lnbSize","lnbText","lnbValue"]},{"Name":"lnbGetColumnsPosition","Desc":" Returns the index of the selected item of the given listbox or combobox (Range from 0 to 1). ","Syn":{"Syntax":" lnbGetColumnsPosition _ctrl ","Params":["_ctrl: Control"],"Return":" Array "},"Examples":["(lnbGetColumnsPosition _ctrl) call BIS_fnc_parseNumber //0.4;"],"Additional":["lnbAddArray","lnbAddColumn","lnbAddRow","lnbClear","lnbColor","lnbCurSelRow","lnbData","lnbDeleteColumn","lnbDeleteRow","lnbPicture","lnbSetColor","lnbSetColumnsPos","lnbSetCurSelRow","lnbSetData","lnbSetPicture","lnbSetText","lnbSetValue","lnbSize","lnbText","lnbValue"]},{"Name":"lnbPicture","Desc":" Returns the picture name or path of the item with the given position of the 2D listbox. ","Syn":{"Syntax":" lnbPicture [idc, [row, column]] \u003cbr\u003e(Alternate Syntax exists check Read more)","Params":["[idc, [row, column]]: Array\n\n","IDC: Identifier Number of Control","Row: Index Number of Row","Column: Index Number of Column"],"Return":" String "},"Examples":["lnbPicture [200, [1, 1]];","_control lnbPicture [1, 1]; //\"a3\\ui_f\\data\\gui\\cfg\\ranks\\corporal_gs.paa\""],"Additional":["lnbAddArray","lnbAddColumn","lnbAddRow","lnbClear","lnbColor","lnbCurSelRow","lnbData","lnbDeleteColumn","lnbDeleteRow","lnbGetColumnsPosition","lnbSetColor","lnbSetColumnsPos","lnbSetCurSelRow","lnbSetData","lnbSetPicture","lnbSetText","lnbSetValue","lnbSize","lnbText","lnbValue"]},{"Name":"lnbSetColor","Desc":" Sets the color of the item with the given position of the 2D listbox. Color is in format Color. ","Syn":{"Syntax":" lnbSetColor [idc,[row,column],color] \u003cbr\u003e(Alternate Syntax exists check Read more)","Params":["[idc,[row,column],color]: Array"],"Return":" Nothing "},"Examples":["_ctrl lnbSetColor [ [0,0], [1,0,0,1] ];"],"Additional":["lnbAddArray","lnbAddColumn","lnbAddRow","lnbClear","lnbColor","lnbCurSelRow","lnbData","lnbDeleteColumn","lnbDeleteRow","lnbGetColumnsPosition","lnbPicture","lnbSetColumnsPos","lnbSetCurSelRow","lnbSetData","lnbSetPicture","lnbSetText","lnbSetValue","lnbSize","lnbText","lnbValue"]},{"Name":"lnbSetColumnsPos","Desc":" Sets the additional text (invisible) in the item with the given position of the 2D listbox. ","Syn":{"Syntax":" lnbSetColumnsPos [idc(Number) or Control,[row(Number),column(Number)],data(Anything)] ","Params":["[idc(Number) or Control,[row(Number),column(Number)],data(Anything)]: Array"],"Return":" Nothing "},"Examples":["lnbSetColumnsPos [101, [0,1], \"#1\"];"],"Additional":["lnbAddArray","lnbAddColumn","lnbAddRow","lnbClear","lnbColor","lnbCurSelRow","lnbData","lnbDeleteColumn","lnbDeleteRow","lnbGetColumnsPosition","lnbPicture","lnbSetColor","lnbSetCurSelRow","lnbSetData","lnbSetPicture","lnbSetText","lnbSetValue","lnbSize","lnbText","lnbValue"]},{"Name":"lnbSetCurSelRow","Desc":" Selects the row with the given index of the 2D listbox. ","Syn":{"Syntax":" lnbSetCurSelRow [idc (Number),index (Number)] ","Params":["[ Number, Number ]: Array"],"Return":" Nothing "},"Examples":["disableSerialization;\n_ctrl = (findDisplay 300) displayCtrl 304;\n_ctrl lnbSetCurSelRow 1;"],"Additional":["lnbAddArray","lnbAddColumn","lnbAddRow","lnbClear","lnbColor","lnbCurSelRow","lnbData","lnbDeleteColumn","lnbDeleteRow","lnbGetColumnsPosition","lnbPicture","lnbSetColor","lnbSetColumnsPos","lnbSetData","lnbSetPicture","lnbSetText","lnbSetValue","lnbSize","lnbText","lnbValue"]},{"Name":"lnbSetData","Desc":" Sets the additional text (invisible) in the item with the given position of the 2D listbox. ","Syn":{"Syntax":" lnbSetData [idc(Number) or Control,[row(Number),column(Number)],data(Anything)] \u003cbr\u003e(Alternate Syntax exists check Read more)","Params":["[idc(Number) or Control,[row(Number),column(Number)],data(Anything)]: Array"],"Return":" Nothing "},"Examples":["_ctrl lnbSetData [ [0,0],\"#1\"];"],"Additional":["lnbAddArray","lnbAddColumn","lnbAddRow","lnbClear","lnbColor","lnbCurSelRow","lnbData","lnbDeleteColumn","lnbDeleteRow","lnbGetColumnsPosition","lnbPicture","lnbSetColor","lnbSetColumnsPos","lnbSetCurSelRow","lnbSetPicture","lnbSetText","lnbSetValue","lnbSize","lnbText","lnbValue"]},{"Name":"lnbSetPicture","Desc":" \n\nSets the picture in the item with the given position of the 2D listbox.\n\nName is the picture name.\n\nThe picture is searched in the mission, directory, the dtaExt subdirectory of the campaign directory, and the dtaExt directory and the data bank (or directory). ","Syn":{"Syntax":" lnbSetPicture [IDC(Number), [Row(Number), Column(Number) ], PicturePathOrPictureName(String)] \u003cbr\u003e(Alternate Syntax exists check Read more)","Params":["[ Number, [ Number, Number ], String ]: Array"],"Return":" Nothing "},"Examples":["lnbSetPicture [1, [0, 0], \"Picture\"];","_ctrl lnbSetPicture [ [0, 0], \"\\A3\\Ui_f\\data\\GUI\\Cfg\\Ranks\\lieutenant_gs.paa\"];"],"Additional":["lnbAddArray","lnbAddColumn","lnbAddRow","lnbClear","lnbColor","lnbCurSelRow","lnbData","lnbDeleteColumn","lnbDeleteRow","lnbGetColumnsPosition","lnbPicture","lnbSetColor","lnbSetColumnsPos","lnbSetCurSelRow","lnbSetData","lnbSetText","lnbSetValue","lnbSize","lnbText","lnbValue"]},{"Name":"lnbSetText","Desc":" Sets the additional text (invisible) in the item with the given position of the 2D listbox. ","Syn":{"Syntax":" lnbSetText [idc,[row,column],data] \u003cbr\u003e(Alternate Syntax exists check Read more)","Params":["[idc,[row,column],data]: Array"],"Return":" Nothing "},"Examples":["lnbSetText [101, [0,1], \"#1\"];","_ctrl lnbSetText [ [0,1], \"#1\"];"],"Additional":["lnbAddArray","lnbAddColumn","lnbAddRow","lnbClear","lnbColor","lnbCurSelRow","lnbData","lnbDeleteColumn","lnbDeleteRow","lnbGetColumnsPosition","lnbPicture","lnbSetColor","lnbSetColumnsPos","lnbSetCurSelRow","lnbSetData","lnbSetPicture","lnbSetValue","lnbSize","lnbText","lnbValue"]},{"Name":"lnbSetValue","Desc":" Sets the additional integer value in the item with the position index of the 2D listbox. ","Syn":{"Syntax":" lnbSetValue [idc,[row,column],value] \u003cbr\u003e(Alternate Syntax exists check Read more)","Params":["[idc,[row,column],value]: Array"],"Return":" Nothing "},"Examples":["_ctrl lnbSetValue [ [0,0],1];"],"Additional":["lnbAddArray","lnbAddColumn","lnbAddRow","lnbClear","lnbColor","lnbCurSelRow","lnbData","lnbDeleteColumn","lnbDeleteRow","lnbGetColumnsPosition","lnbPicture","lnbSetColor","lnbSetColumnsPos","lnbSetCurSelRow","lnbSetData","lnbSetPicture","lnbSetText","lnbSize","lnbText","lnbValue"]},{"Name":"lnbSize","Desc":" Returns size of 2D listbox or combobox as [rows, columns]. ","Syn":{"Syntax":" lnbSize _ctrl ","Params":["_ctrl: Control"],"Return":" [rows, columns]: Array "},"Examples":["lnbSize _ctrl;//[8,2]"],"Additional":["lnbAddArray","lnbAddColumn","lnbAddRow","lnbClear","lnbColor","lnbCurSelRow","lnbData","lnbDeleteColumn","lnbDeleteRow","lnbGetColumnsPosition","lnbPicture","lnbSetColor","lnbSetColumnsPos","lnbSetCurSelRow","lnbSetData","lnbSetPicture","lnbSetText","lnbSetValue","lnbText","lnbValue"]},{"Name":"lnbText","Desc":" Returns the shown text in the item with the given position of the given 2D listbox. ","Syn":{"Syntax":" control lnbText [row,column] ","Params":["control: Control\n\n","[row,column]: Array"],"Return":" String "},"Examples":["_ctrl lnbText [0,0];"],"Additional":["lnbAddArray","lnbAddColumn","lnbAddRow","lnbClear","lnbColor","lnbCurSelRow","lnbData","lnbDeleteColumn","lnbDeleteRow","lnbGetColumnsPosition","lnbPicture","lnbSetColor","lnbSetColumnsPos","lnbSetCurSelRow","lnbSetData","lnbSetPicture","lnbSetText","lnbSetValue","lnbSize","lnbValue"]},{"Name":"lnbValue","Desc":" Returns the additional integer value in the item with the given position of the 2D listbox. ","Syn":{"Syntax":" lnbValue [idc(Number),[row(Number),column(Number)] \u003cbr\u003e(Alternate Syntax exists check Read more)","Params":["[idc(Number),[row(Number),column(Number)]: Array"],"Return":" Number "},"Examples":["_ctrl lnbValue [0,0];//1, default is 0 if value is String set by lnbSetValue"],"Additional":["lnbAddArray","lnbAddColumn","lnbAddRow","lnbClear","lnbColor","lnbCurSelRow","lnbData","lnbDeleteColumn","lnbDeleteRow","lnbGetColumnsPosition","lnbPicture","lnbSetColor","lnbSetColumnsPos","lnbSetCurSelRow","lnbSetData","lnbSetPicture","lnbSetText","lnbSetValue","lnbSize","lnbText"]},{"Name":"load","Desc":" Returns current sum of mass from items stored in all unit's containers.  ","Syn":{"Syntax":" load unit ","Params":["unit: Object"],"Return":" Number "},"Examples":["Example needed"],"Additional":["See also needed"]},{"Name":"loadAbs","Desc":" Returns current sum of mass from items stored in all unit's containers, linked items and weapons.  ","Syn":{"Syntax":" loadAbs unit ","Params":["unit: Object"],"Return":" Number "},"Examples":["Example needed"],"Additional":["See also needed"]},{"Name":"loadBackpack","Desc":" Returns current sum of mass from items stored in a backpack.  ","Syn":{"Syntax":" loadBackpack unit ","Params":["unit: Object"],"Return":" Number "},"Examples":["Example needed"],"Additional":["backpackContainer","firstBackpack","unitBackpack","backpack","backpackCargo","getBackpackCargo","backpackItems","addBackpack","addBackpackCargo","addBackpackCargoGlobal","removeBackpack","clearBackpackCargo","clearBackpackCargoGlobal","clearAllItemsFromBackpack","backpackSpaceFor","canAddItemToBackpack","addItemToBackpack","removeItemFromBackpack","everyBackpack"]},{"Name":"loadFile","Desc":" Return content of given filename. ","Syn":{"Syntax":" String = loadFile filename ","Params":["filename: String"],"Return":" String "},"Examples":["_contents = loadFile \"myFunction.sqf\""],"Additional":["preprocessFileLineNumbers","preprocessFile"]},{"Name":"loadGame","Desc":" Load a game from the autosave. If failed, restart the mission. ","Syn":{"Syntax":" loadGame ","Params":null,"Return":" Nothing "},"Examples":["loadGame;"],"Additional":["enableSaving","saveGame","savingEnabled"]},{"Name":"loadIdentity","Desc":" Loads person's identity from Objects.sav file in campaign directory (from entry name). ","Syn":{"Syntax":" person loadIdentity name ","Params":["person: Object\n\n","name: String"],"Return":" Boolean "},"Examples":["_ok = player loadIdentity \"playerIdentity\""],"Additional":["See also needed"]},{"Name":"loadMagazine","Desc":" Initiates the loading action on given weapon of the turret. So the new magazine is not available instantly, yet according to the reloadTime.\n\nThe turret has to be manned. One can also change the magazine if its respective weapon is not selected. ","Syn":{"Syntax":" vehicle loadMagazine [turretPath, weaponName, magazineName]","Params":["vehicle: Object\n\n","turretPath: Array","weaponName: String","magazineName: String"],"Return":" Nothing "},"Examples":["vehicle player loadMagazine [[0],\"m256\",\"20Rnd_120mmHE_M1A2\"];"],"Additional":["weaponState","setWeaponReloadingTime","SwitchMagazine","weapons","magazines"]},{"Name":"loadOverlay","Desc":" Creates the load overlay dialog for the specified type of overlay. ","Syn":{"Syntax":" map loadOverlay config ","Params":["map: Control -\n\n","config: Config -"],"Return":" Nothing "},"Examples":["Example needed"],"Additional":["See also needed"]},{"Name":"loadStatus","Desc":" Loads object's properties from Objects.sav file in campaign directory (from entry name). ","Syn":{"Syntax":" Boolean = Object loadStatus \"EntryName\"","Params":["Object\n\n","EntryName: String"],"Return":" Boolean "},"Examples":["_ok= [[player]] '''loadStatus''' \"playerState\""],"Additional":["saveStatus"]},{"Name":"loadUniform","Desc":" Returns current sum of mass from items stored in a uniform.  ","Syn":{"Syntax":" loadUniform unit ","Params":["unit: Object"],"Return":" Number "},"Examples":["Example needed"],"Additional":["See also needed"]},{"Name":"loadVest","Desc":" Returns current sum of mass from items stored in a vest.  ","Syn":{"Syntax":" loadVest unit ","Params":["unit: Object"],"Return":" Number "},"Examples":["Example needed"],"Additional":["See also needed"]},{"Name":"local","Desc":" Check if given unit is local on the computer in Multiplayer games (see Locality in Multiplayer for general concepts).\n\nThis can be used when some activation fields or scripts need to be performed only on one computer. In Singleplayer all objects are local. \n\nNote: Map created objects (those placed in Visitor) are local everywhere. ","Syn":{"Syntax":" local object ","Params":["object: Object or Group (since Arma 3 v1.31.127204)"],"Return":" Boolean "},"Examples":["SQS:?!local _unitName : hint \"remote\"","SQF:if (!local _unitName) then {\n    hint \"remote\";\n};","_isLocalGroup = local group _unit;"],"Additional":["Local Event Handler","owner","setOwner"]},{"Name":"localize","Desc":" Used to internationalise text messages. A string is returned from Stringtable.csv (or stringtable.xml) which corresponds to the stringName. ","Syn":{"Syntax":" localize stringName ","Params":["stringName: String"],"Return":" String - text found in corresponding entry in stringtable file "},"Examples":["hint localize \"STR_WEST\"; // -\u003e \"BLUFOR\" (in Arma2)","hint format [\"Go %1\", localize \"STR_Q_NORTH\"]; // -\u003e \"Go North\"","hint format [localize \"STR_ACTION_DROP_WEAPON\", localize \"STR_SN_RIFLE\"]; // -\u003e \"Drop Rifle\"\n// STR_ACTION_DROP_WEAPON contains \"Drop %1\", STR_SN_RIFLE contains \"Rifle\""],"Additional":["isLocalized","WFSideText","parseText","Stringtable.csv File Format"]},{"Name":"locationNull","Desc":" A non-existing location. This value is not equal to anything, including itself. ","Syn":{"Syntax":" locationNull ","Params":null,"Return":" Location "},"Examples":["Example needed"],"Additional":["See also needed"]},{"Name":"locationPosition","Desc":" Returns the position of a location. If the location is attached to an object, that object's position is returned. ","Syn":{"Syntax":" locationPosition location ","Params":["location: Location"],"Return":" Array - format Position "},"Examples":["_locationPos = locationPosition myLocation;","_location = nearestLocation [getPos player, \"nameCity\"];\n_locationPos = locationPosition _location;"],"Additional":["setPosition","createLocation","nearestLocation","nearestLocations","position"]},{"Name":"lock","Desc":" Lock vehicle (disable mounting / dismounting) for player. ","Syn":{"Syntax":" vehicleName lock lock","Params":["vehicleName: Object\n\n","lock: Boolean"],"Return":" Nothing "},"Examples":["_jeepOne lock true"],"Additional":["locked"]},{"Name":"lockCameraTo","Desc":" Lock/Unlock stabilized camera (in vanilla used currently only for UAVs) to target. ","Syn":{"Syntax":" vehicle lockCameraTo [object,turretPath]","Params":["vehicle: Object\n\n","[object,turretPath]: Array","object: Object or Position - use objNull for unlocking","turretPath: Array"],"Return":" Nothing "},"Examples":["uav lockCameraTo [vehicle,[0,0]];"],"Additional":["See also needed"]},{"Name":"lockCargo","Desc":" Lock the all cargo positions of the vehicle. This command must be executed where vehicle is local.","Syn":{"Syntax":" vehicle lockCargo lock or vehicle lockCargo [index, lock]  ","Params":["vehicle: Object -\n\n","lock: Boolean -","index: Number"],"Return":" Nothing "},"Examples":["vehicleName lockCargo true;","vehicleName lockCargo [0, true];"],"Additional":["lockedCargo","lockDriver","lockTurret"]},{"Name":"lockDriver","Desc":" Lock the driver position of the vehicle. This command must be executed where vehicle is local. ","Syn":{"Syntax":" vehicle lockDriver lock ","Params":["vehicle: Object -\n\n","lock: Boolean -"],"Return":" Nothing "},"Examples":["vehicleName lockDriver true;"],"Additional":["lockedDriver","lockCargo","lockTurret"]},{"Name":"locked","Desc":" Check if vehicle is locked for Persons. If it is locked, Persons cannot mount / dismount without order. ","Syn":{"Syntax":" Boolean = locked vehicle ","Params":["vehicle: Object"],"Return":" Nothing "},"Examples":["_it = locked _jeepOne"],"Additional":["lock"]},{"Name":"lockedCargo","Desc":" Check whether cargo position of the vehicle is locked. ","Syn":{"Syntax":" vehicle lockedCargo cargo index ","Params":["vehicle: Object -\n\n","cargo index: Number -"],"Return":" Boolean "},"Examples":["_result = vehicleName lockedCargo 0;"],"Additional":["lockCargo"]},{"Name":"lockedDriver","Desc":" Check whether driver position of the vehicle turret is locked. ","Syn":{"Syntax":" lockedDriver vehicle ","Params":["vehicle: Object -"],"Return":" Boolean "},"Examples":["Example needed"],"Additional":["See also needed"]},{"Name":"lockedTurret","Desc":" Check whether gunner position of the vehicle turret is locked. ","Syn":{"Syntax":" vehicle lockedTurret turret path ","Params":["vehicle: Object -\n\n","turret path: Array -"],"Return":" Boolean "},"Examples":["Example needed"],"Additional":["lockTurret","moveInTurret","turretUnit"]},{"Name":"lockTurret","Desc":" Lock the gunner position of the vehicle turret. This command must be executed where vehicle is local. ","Syn":{"Syntax":" vehicle lockTurret [turret path,lock] ","Params":["vehicle: Object -\n\n","[turret path,lock]: Array -"],"Return":" Nothing "},"Examples":["vehicleName lockTurret [[0,0], true];","vehicle player lockTurret [[0],true];"],"Additional":["lockedTurret","lockCargo","lockDriver","assignedVehicleRole","turretUnit","moveInTurret"]},{"Name":"lockWP","Desc":" Disable switching to next waypoint (current waypoint will never complete while lockwp is used). Sometimes used during cut-scenes. ","Syn":{"Syntax":" groupName lockWP lock ","Params":["groupName: Object or Group\n\n","lock: Boolean"],"Return":" Nothing "},"Examples":["_groupOne lockWP true;","_Soldier lockWP true;","_MyTank lockWP false;"],"Additional":["See also needed"]},{"Name":"log","Desc":" Base-10 logarithm of x. ","Syn":{"Syntax":" Number = log x ","Params":["x: Number"],"Return":" Number "},"Examples":["_log = log 10; // 1"],"Additional":["Math Commands","Logarithm"]},{"Name":"logEntities","Desc":" Creates a log file containing the list of all game entities in scene. \nFile is created in the same directory as .rpt file. ","Syn":{"Syntax":"logEntities ","Params":null,"Return":" Nothing "},"Examples":["logEntities;"],"Additional":["entities","nearEntities","diag_log","diag_fps","diag_fpsmin","diag_frameno","diag_tickTime"]},{"Name":"lookAt","Desc":" Control what the unit(s) is/are looking at (target or position). ","Syn":{"Syntax":" unit(s) lookAt position ","Params":["unit(s): Object or Array\n\n","position: Object or Array"],"Return":" Nothing "},"Examples":[" _someSoldier lookAt _otherSoldier "," [_someSoldier, _otherSoldier] lookAt markerPos \"markerOne\" "],"Additional":["commandWatch","doWatch"]},{"Name":"lookAtPos","Desc":" Center the map on,and point the camera at,the position. ","Syn":{"Syntax":" map lookAtPos position ","Params":["map: Control -\n\n","position: Array -"],"Return":" Nothing "},"Examples":["Example needed"],"Additional":["freeLook"]},{"Name":"magazineCargo","Desc":" Get array with magazines from ammo box (or any general weapon holder container).  ","Syn":{"Syntax":" magazineCargo box ","Params":["box: Object"],"Return":" Array - Format: [\"MagType1\",\"MagType1\",\"MagType2\"...] "},"Examples":["hint str magazineCargo uniformContainer cursorTarget;"],"Additional":["getMagazineCargo","addMagazineCargo","addMagazineCargoGlobal","clearMagazineCargo","clearMagazineCargoGlobal"]},{"Name":"magazines","Desc":" Returns array of type names of all vehicle's magazines.\n\nWhen applied to a unit (soldier), the command behaves differently and will omit magazines already loaded into unit's weapons. Use currentMagazine to get this information for a currently loaded magazine. ","Syn":{"Syntax":" magazines vehicle","Params":["vehicle: Object - unit or vehicle"],"Return":" Array "},"Examples":["_mags = magazines player"],"Additional":["currentMagazine","magazinesTurret","magazinesDetail","magazinesAmmo","magazinesAmmoFull","ammo","weapons"]},{"Name":"magazinesAmmo","Desc":" Returns array of arrays of all vehicle's magazines and their ammo count. When applied to a unit (soldier), the command behaves differently and will omit magazines already loaded into unit's weapons. Use magazinesAmmoFull to return all magazines.\n\nOutput format:\n\n[[magazine1],[magazine2],[magazine3]...[magazineN]]\n\nMagazine format:\n\n0: Magazine class name\n\n1: Magazine current ammo count ","Syn":{"Syntax":" magazinesAmmo vehicle ","Params":["vehicle: Object - unit or vehicle."],"Return":" Array "},"Examples":["_magazinesAmmo = magazinesAmmo player;\n/*\n[\n\u0009[\"30Rnd_65x39_caseless_mag\",30],\n\u0009[\"30Rnd_65x39_caseless_mag\",30],\n\u0009[\"16Rnd_9x21_Mag\",16],\n\u0009[\"SmokeShellGreen\",1],\n\u0009[\"Chemlight_green\",1],\n\u0009[\"HandGrenade\",1]\n]\n*/","_magazinesAmmo = magazinesAmmo Mi_48;\n/*\n[\n\u0009[\"250Rnd_30mm_APDS_shells\",250],\n\u0009[\"250Rnd_30mm_HE_shells\",250],\n\u0009[\"8Rnd_LG_scalpel\",8],\n\u0009[\"38Rnd_80mm_rockets\",38]\n]\n*/"],"Additional":["magazinesAmmoFull","magazinesAmmoCargo","magazinesDetail","magazines","magazinesTurret"]},{"Name":"magazinesAmmoCargo","Desc":"Returns an array of subarrays with the type names and ammo left of all the vehicle's cargo or container magazines. ","Syn":{"Syntax":" magazinesAmmoCargo vehicle ","Params":["vehicle: Object"],"Return":" Array "},"Examples":["magazinesAmmoCargo vehicle player;","magazinesAmmoCargo uniformContainer player;\n[\n\u0009[\"30Rnd_65x39_caseless_mag\",30],\n\u0009[\"30Rnd_65x39_caseless_mag\",30],\n\u0009[\"Chemlight_green\",1]\n]"],"Additional":["magazinesAmmo","magazinesAmmoFull"]},{"Name":"magazinesAmmoFull","Desc":" Returns array of arrays of all vehicle's magazines with extended information about them.\n\n\nOutput format:\n[[magazine1],[magazine2],[magazine3]...[magazineN]]\n\nMagazine format:\n0: Magazine class name\n1: Magazine current ammo count\n2: Magazine state (true - loaded, false - not loaded)\n3: Magazine type (-1 - n/a, 0 - grenade, 1 - primary weapon mag, 2 - handgun mag, 4 - secondary weapon mag, 65536 - vehicle mag)\n4: Magazine location (\"Vest\", \"Uniform\", \"Backpack\", \"\") or corresponding currentMuzzle ","Syn":{"Syntax":" magazinesAmmoFull vehicle ","Params":["vehicle: Object - unit or vehicle."],"Return":" Array "},"Examples":["_magazinesAmmoFull = magazinesAmmoFull player;\n/*\n[\n\u0009[\"30Rnd_65x39_caseless_mag\",30,false,-1,\"Uniform\"],\n\u0009[\"30Rnd_65x39_caseless_mag\",30,false,-1,\"Vest\"],\n\u0009[\"16Rnd_9x21_Mag\",16,false,-1,\"Vest\"],\n\u0009[\"SmokeShellGreen\",1,true,0,\"SmokeShellGreenMuzzle\"],\n\u0009[\"Chemlight_green\",1,true,0,\"ChemlightGreenMuzzle\"],\n\u0009[\"HandGrenade\",1,true,0,\"HandGrenadeMuzzle\"],\n\u0009[\"30Rnd_65x39_caseless_mag\",30,true,1,\"arifle_MX_ACO_pointer_F\"],\n\u0009[\"16Rnd_9x21_Mag\",16,true,2,\"hgun_P07_F\"]\n]\n*/","_magazinesAmmoFull = magazinesAmmoFull Mi_48;\n/*\n[\n\u0009[\"250Rnd_30mm_APDS_shells\",250,false,-1,\"\"],\n\u0009[\"250Rnd_30mm_HE_shells\",250,true,65536,\"gatling_30mm\"],\n\u0009[\"8Rnd_LG_scalpel\",8,true,65536,\"missiles_SCALPEL\"],\n\u0009[\"38Rnd_80mm_rockets\",38,true,65536,\"rockets_Skyfire\"]\n]\n*/"],"Additional":["magazinesAmmo","magazinesAmmoCargo","magazinesDetail","magazines","magazinesTurret"]},{"Name":"magazinesDetail","Desc":" Returns an array of strings with description of all vehicle's magazines, their ammo count (current/default) and their ids. \n\nWhen applied to a unit (soldier), the command behaves differently and will omit magazines already loaded into unit's weapons. Use currentMagazineDetail to get this information for a currently loaded magazine. ","Syn":{"Syntax":" magazinesDetail vehicle ","Params":["vehicle: Object - unit or vehicle"],"Return":" Array "},"Examples":["_magazinesDetail = magazinesDetail player;\n/*\n[\n\u0009\"6.5mm 30Rnd STANAG Mag(30/30)[id:3]\",\n\u0009\"6.5mm 30Rnd STANAG Mag(30/30)[id:9]\",\n\u0009\"9mm 16Rnd Mag(16/16)[id:12]\",\n\u0009\"Smoke Grenade (Green)(1/1)[id:14]\",\n\u0009\"Chemlight (Green)(1/1)[id:16]\",\n\u0009\"RGO Frag Grenade(1/1)[id:18]\"\n]\n*/","_magazinesDetail = magazinesDetail Mi_48;\n/*\n[\n\u0009\"30mm APDS shells(250/250)[id:20]\",\n\u0009\"30mm HE Shells(250/250)[id:21]\",\n\u0009\"Scalpel E2(8/8)[id:22]\",\n\u0009\"Skyfire(38/38)[id:23]\"\n]\n*/"],"Additional":["currentMagazineDetail","magazines","magazinesTurret","magazinesAmmo","magazinesAmmoFull"]},{"Name":"magazinesDetailBackpack","Desc":" Returns an array with the type names of all the unit's backpack magazines. ","Syn":{"Syntax":" magazinesDetailBackpack unit ","Params":["unit: Object"],"Return":" Array "},"Examples":["magazinesDetailBackpack player\n"],"Additional":["See also needed"]},{"Name":"magazinesDetailUniform","Desc":" Returns an array with the type names of all the unit's uniform magazines. ","Syn":{"Syntax":" magazinesDetailUniform unit ","Params":["unit: Object"],"Return":" Array "},"Examples":["magazinesDetailUniform player\n"],"Additional":["See also needed"]},{"Name":"magazinesDetailVest","Desc":" Returns an array with the type names of all the unit's vest magazines. ","Syn":{"Syntax":" magazinesDetailVest unit ","Params":["unit: Object"],"Return":" Array "},"Examples":["magazinesDetailVest player\n"],"Additional":["See also needed"]},{"Name":"magazinesTurret","Desc":" Returns all magazines of given turret. Use turret path [-1] for driver's turret. ","Syn":{"Syntax":" vehicle magazinesTurret turretPath","Params":["vehicle: Object\n\n","turretPath: Array"],"Return":" Array of Strings "},"Examples":["_mags = vehicle player magazinesTurret [0, 0];","_mags = _tank magazinesTurret [0];"],"Additional":["addMagazineTurret","removeMagazinesTurret","removeMagazineTurret","weaponsTurret","magazines","magazinesDetail","magazinesAmmo","magazinesAmmoFull","addWeaponTurret","removeWeaponTurret","turretLocal"]},{"Name":"mapAnimAdd","Desc":" Add next frame to map animation. ","Syn":{"Syntax":" mapAnimAdd [time, zoom, position] ","Params":["[time, zoom, position]: Array\n\n","time: Number","zoom: Number","position: Array or Object - formats: Position2D, Position3D, Object"],"Return":" Nothing "},"Examples":["mapAnimAdd [1, 0.1, markerPos \"anim1\"];\nmapAnimCommit;","mapAnimAdd [3, 0.01, player];\nmapAnimCommit;"],"Additional":["mapAnimClear","mapAnimCommit","mapAnimDone","ctrlMapAnimAdd","ctrlMapAnimClear","ctrlMapAnimCommit","ctrlMapAnimDone"]},{"Name":"mapAnimClear","Desc":" Clear map animation. ","Syn":{"Syntax":" mapAnimClear ","Params":null,"Return":" Nothing "},"Examples":["Example needed"],"Additional":["mapAnimAdd","mapAnimCommit","mapAnimDone","ctrlMapAnimAdd","ctrlMapAnimClear","ctrlMapAnimCommit","ctrlMapAnimDone"]},{"Name":"mapAnimCommit","Desc":" Play map animation. ","Syn":{"Syntax":" mapAnimCommit ","Params":null,"Return":" Nothing "},"Examples":["Example needed"],"Additional":["mapAnimAdd","mapAnimClear","mapAnimDone","ctrlMapAnimAdd","ctrlMapAnimClear","ctrlMapAnimCommit","ctrlMapAnimDone"]},{"Name":"mapAnimDone","Desc":" Check if map animation is finished. ","Syn":{"Syntax":" Boolean = mapAnimDone ","Params":null,"Return":" Boolean "},"Examples":["Example needed"],"Additional":["mapAnimAdd","mapAnimClear","mapAnimCommit","ctrlMapAnimAdd","ctrlMapAnimClear","ctrlMapAnimCommit","ctrlMapAnimDone"]},{"Name":"mapCenterOnCamera","Desc":" Enable/disable continuous centering the map on the camera position. ","Syn":{"Syntax":" control mapCenterOnCamera enable ","Params":["control: Control -\n\n","enable: Boolean -"],"Return":" Nothing "},"Examples":["//--- Minimap update\n((uiNamespace getVariable \"BIS_UAV_DISPLAY\") displayCtrl 112410) mapCenterOnCamera true;"],"Additional":["See also needed"]},{"Name":"mapGridPosition","Desc":" Returns the map grid position of an object or position. The format is determined by the Grid format specified in the CfgWorlds for the current world. Eg: \"024577\" or \"De82\" or similar. ","Syn":{"Syntax":" mapGridPosition param ","Params":["param: Object or Position - determines reference position"],"Return":" String - grid position "},"Examples":["_gridPos = mapGridPosition player","_gridPos = mapGridPosition getPos player"],"Additional":["See also needed"]},{"Name":"markAsFinishedOnSteam","Desc":" Marks current mission as finished on steam. Returns true if Steam query is successfully started or false otherwise.  ","Syn":{"Syntax":" markAsFinishedOnSteam ","Params":null,"Return":" Boolean "},"Examples":["Example needed"],"Additional":["isSteamMission"]},{"Name":"markerAlpha","Desc":" Gets the marker alpha. See setMarkerAlpha. ","Syn":{"Syntax":" markerAlpha markerName ","Params":["markerName: String -"],"Return":" Number "},"Examples":["Example needed"],"Additional":["setMarkerAlpha","setMarkerAlphaLocal"]},{"Name":"markerBrush","Desc":" Gets the marker brush. See setMarkerBrush.","Syn":{"Syntax":" markerBrush name ","Params":["name: String -"],"Return":" String "},"Examples":["if (markerBrush \"Marker1\" == \"Solid\") then {hint \"Marker1 is solid!\"}"],"Additional":["setMarkerBrush","setMarkerBrushLocal"]},{"Name":"markerColor","Desc":" Get marker colour. See setMarkerColor. Note: This function is identical to getMarkerColor. ","Syn":{"Syntax":" String = markerColor markerName ","Params":["markerName: String"],"Return":" String "},"Examples":["if (markerColor \"Marker1\" == \"ColorRed\") then {hint \"Marker1 is red!\"}"],"Additional":["setMarkerColor","setMarkerColorLocal"]},{"Name":"markerDir","Desc":" Get marker direction. ","Syn":{"Syntax":" Number = markerDir markerName ","Params":["markerName: String"],"Return":" Number "},"Examples":["_mPos = markerDir \"markerOne\""],"Additional":["setMarkerDir","setMarkerDirLocal"]},{"Name":"markerPos","Desc":" Get marker Position. Note: This function is identical to getMarkerPos. ","Syn":{"Syntax":" Array = markerPos markerName ","Params":["markerName: String"],"Return":" Array - format Position "},"Examples":["_mPos = markerPos \"markerOne\";"],"Additional":["setMarkerPos","setMarkerPosLocal"]},{"Name":"markerShape","Desc":" Gets the marker shape. See setMarkerShape for a list of strings that can be returned. ","Syn":{"Syntax":" markerShape name ","Params":["name: String -"],"Return":" String "},"Examples":["if (markerShape \"Marker1\" == \"RECTANGLE\") then {hint \"Marker1 is a rectangle!\"}"],"Additional":["setMarkerShape","setMarkerShapeLocal"]},{"Name":"markerSize","Desc":" Get marker size. Note: This function is identical to getMarkerSize. ","Syn":{"Syntax":" Array = markerSize markerName ","Params":["markerName: String"],"Return":" Array "},"Examples":["_mSize = markerSize \"Marker1\";"],"Additional":["setMarkerSize","setMarkerSizeLocal"]},{"Name":"markerText","Desc":" Get marker text. ","Syn":{"Syntax":" String = markerText markerName ","Params":["markerName: String"],"Return":" String "},"Examples":["hint format [\"Marker Text: %1\",markerText \"Marker1\"];"],"Additional":["setMarkerText","setMarkerTextLocal"]},{"Name":"markerType","Desc":" Get type of marker. Note: This function is identical to getMarkerType. See cfgMarkers for a list of standard markers. ","Syn":{"Syntax":" String = markerType markerName ","Params":["markerName: String"],"Return":" String. See cfgMarkers. "},"Examples":["if (markerType \"Marker1\" == \"Empty\") then {hint \"Marker1 is not an icon!\"}"],"Additional":["cfgMarkers","setMarkerType","setMarkerTypeLocal"]},{"Name":"max","Desc":" The greater of a,b ","Syn":{"Syntax":" Number = a max b ","Params":["a: Number\n\n","b: Number"],"Return":" Number "},"Examples":["3 max 2\n\nResult is 3"],"Additional":["Math Commands","min","ceil","floor"]},{"Name":"members","Desc":" Return a list of members in given team. ","Syn":{"Syntax":" members team ","Params":["team: Team Member"],"Return":" Array "},"Examples":["_members = members _team"],"Additional":["See also needed"]},{"Name":"min","Desc":" The smaller of a,b ","Syn":{"Syntax":" a min b ","Params":["a: Number\n\n","b: Number"],"Return":" Number "},"Examples":["3 min 2\nResult is 2"],"Additional":["Math Commands","max"]},{"Name":"mineActive","Desc":" Checks if the given mine is active.  ","Syn":{"Syntax":" mineActive obj ","Params":["obj: Object"],"Return":" Boolean "},"Examples":["if (mineActive _mine) then {hint \"BOOM!\"}; "],"Additional":["allMines","detectedMines","mineDetectedBy","createMine","revealMine"]},{"Name":"mineDetectedBy","Desc":"Returns true if mine has been detected by a given side ","Syn":{"Syntax":" mine mineDetectedBy side ","Params":null,"Return":" Boolean "},"Examples":["(allMines select 0) mineDetectedBy west;"],"Additional":["allMines","detectedMines","createMine","mineActive","revealMine"]},{"Name":"missionConfigFile","Desc":" Return root of mission description.ext entries hierarchy. ","Syn":{"Syntax":"Config = missionConfigFile ","Params":null,"Return":" Config "},"Examples":["for \"_i\" from (0) to ((count paramsArray) - 1) do {\n    missionNamespace setVariable [configName ((missionConfigFile/\"Params\") select _i), paramsArray select _i];\n};","To define custom values in description.ext:\nclass myMissionConfig\n{\n    class mySetup\n    {\n        myNumber = 3;\n        myArray[] = { 1, 2, 3 };\n        myText = \"LOL\";\n    };\n};\n\nTo read defined custom values from a script:\n_myNumber = getNumber (missionConfigFile \u003e\u003e \"myMissionConfig\" \u003e\u003e \"mySetup\" \u003e\u003e \"myNumber\");\n_myArray = getArray (missionConfigFile \u003e\u003e \"myMissionConfig\" \u003e\u003e \"mySetup\" \u003e\u003e \"myArray\");\n_myText = getText (missionConfigFile \u003e\u003e \"myMissionConfig\" \u003e\u003e \"mySetup\" \u003e\u003e \"myText\");","To get file path with description.ext to play sound via playSound3D:\n_filePath = [(str missionConfigFile), 0, -15] call BIS_fnc_trimString;"],"Additional":["configClasses","configFile","campaignConfigFile","config/name","config \u003e\u003e name","configName","count","getArray","getText","getNumber","inheritsFrom","isArray","isClass","isNumber","isText","select"]},{"Name":"missionName","Desc":" Return currently loaded mission file (path to mission.pbo, relative to game exe).","Syn":{"Syntax":" String = missionName ","Params":null,"Return":" String "},"Examples":["Example needed"],"Additional":["See also needed"]},{"Name":"missionNamespace","Desc":" Return the global namespace attached to mission. ","Syn":{"Syntax":" missionNamespace ","Params":null,"Return":" Namespace "},"Examples":["missionNamespace setVariable [\"YourString\",3];//Same as: YourString = 3;\n_yourString = missionNamespace getVariable \"YourString\";"],"Additional":["Forward Compatibility","uiNamespace","parsingNamespace","profileNamespace","with"]},{"Name":"missionStart","Desc":" Return when mission started in format [year, month, day, hour, minute, second].\n\nWorks only in multiplayer, in singleplayer all values are equal to zero → [0,0,0,0,0,0]","Syn":{"Syntax":" Array = missionStart ","Params":null,"Return":" Array "},"Examples":["Example needed"],"Additional":["See also needed"]},{"Name":"mod","Desc":" Remainder of a divided by b.  ","Syn":{"Syntax":" Number = a mod b ","Params":["a: Number\n\n","b: Number"],"Return":" Number "},"Examples":["_rem = 3 mod 2;\nResult is 1"],"Additional":["Math Commands","Operators"]},{"Name":"modelToWorld","Desc":" Converts position from object model space to world space. ","Syn":{"Syntax":" Array = object modelToWorld modelPos ","Params":["object: Object\n\n","modelPos: Array - [x,y,z] offset relative to the model centre"],"Return":" Array - world position in format Position "},"Examples":["_aboveAndBehindPlayer = player modelToWorld [0,-1,3];"],"Additional":["modelToWorldVisual","worldToModel","selectionPosition"]},{"Name":"modelToWorldVisual","Desc":" Converts position from object model space to world space in render time scope. ","Syn":{"Syntax":" object modelToWorldVisual modelPos ","Params":["object: Object\n\n","modelPos: Array - [x,y,z] offset relative to the model centre"],"Return":" Array - world position in format Position "},"Examples":["_aboveAndBehindPlayer = player modelToWorldVisual [0,-1,3];"],"Additional":["modelToWorld","worldToModelVisual","worldToModel","selectionPosition"]},{"Name":"moonIntensity","Desc":" Returns the intensity of the moon's brightness. ","Syn":{"Syntax":" Number = moonIntensity ","Params":null,"Return":" Number "},"Examples":["_intensity = moonIntensity;"],"Additional":["sunOrMoon"]},{"Name":"morale","Desc":" Checks a current morale level of the unit (-1..+1). ","Syn":{"Syntax":" morale unit ","Params":["unit:  -"],"Return":" Number "},"Examples":["morale leader player,,result is 0.5"],"Additional":["See also needed"]},{"Name":"move","Desc":" Creates a move waypoint on the given position (format Position or Position2D) and makes it the currently active group waypoint. ","Syn":{"Syntax":" group move position ","Params":["group: Object or Group\n\n","position: Array - format Position"],"Return":" Nothing "},"Examples":["_groupOne move position player;"],"Additional":["doMove","addWaypoint"]},{"Name":"moveInAny","Desc":" Moves unit to the first available seat in a vehicle. The order of priorities is the same order used in squad command when you order subordinates to get in vehicle to any position and is the same order used in Zeus when you drag units to a vehicle. Seat assignment seems to use the following priority logic: \ndriver (moveInDriver) -\u003e commander turret (moveInCommander) -\u003e gunner turret (moveInGunner) -\u003e remaining turrets (moveInTurret) -\u003e cargo (moveInCargo).\nNOTE: This command will move player into the locked vehicle or seat just as well. ","Syn":{"Syntax":" unit moveInAny vehicle ","Params":["unit: Object\n\n","vehicle: Object"],"Return":" Nothing (Boolean since 1.27.126890 – whether the command moved the unit or not) "},"Examples":["player moveInAny tank;"],"Additional":["moveInDriver","moveInCommander","moveInGunner","moveInTurret","moveInCargo"]},{"Name":"moveInCargo","Desc":" Move soldier into vehicle cargo position (Immediate, no animation). ","Syn":{"Syntax":" unitName moveInCargo vehicle \u003cbr\u003e(Alternate Syntax exists check Read more)","Params":["unitName: Object\n\n","vehicle: Object"],"Return":" Nothing "},"Examples":["_soldierOne moveInCargo _jeepOne;","_soldierOne moveInCargo [_jeepOne, 1];"],"Additional":["moveInCommander","moveInDriver","moveInGunner","moveInTurret","assignAsCargo","assignAsCommander","assignAsDriver","assignAsGunner","getCargoIndex"]},{"Name":"moveInCommander","Desc":" Move soldier into vehicle commander position (Immediate, no animation). ","Syn":{"Syntax":" unitName moveInCommander vehicle ","Params":["unitName: Object\n\n","vehicle: Object"],"Return":" Nothing "},"Examples":["_soldierOne moveInCommander _tankOne "],"Additional":["moveInCargo","moveInDriver","moveInGunner","moveInTurret","assignAsCargo","assignAsCommander","assignAsDriver","assignAsGunner"]},{"Name":"moveInDriver","Desc":" Move soldier into vehicle driver position (Immediate, no animation). ","Syn":{"Syntax":" unitName moveInDriver vehicle ","Params":["unitName: Object\n\n","vehicle: Object"],"Return":" Nothing "},"Examples":["_soldierOne moveInDriver _tankOne "],"Additional":["moveInCargo","moveInCommander","moveInGunner","moveInTurret","assignAsCargo","assignAsCommander","assignAsDriver","assignAsGunner"]},{"Name":"moveInGunner","Desc":" Move soldier into vehicle gunner position (Immediate, no animation). ","Syn":{"Syntax":" unitName moveInGunner vehicle ","Params":["unitName: Object\n\n","vehicle: Object"],"Return":" Nothing "},"Examples":["soldierOne moveInGunner tankOne "],"Additional":["moveInCargo","moveInCommander","moveInDriver","moveInTurret","assignAsCargo","assignAsCommander","assignAsDriver","assignAsGunner"]},{"Name":"moveInTurret","Desc":" Moves the soldier into the vehicle's turret. (Immediately, without animation). turret path is an array of positions inside a turret, or positions inside a turret of a turret.\n\n[0] means first turret.\n[0,0] means first turret of first turret.\n[0,1] means second turret of first turret.\n[1] means second turret.\n[1,0] means first turret of the second turret.\n[2,0] means first turret of third turret.\nAnd so on ... ","Syn":{"Syntax":" unitName moveInTurret [vehicle, turret path] ","Params":["unitName: Object\n\n","[vehicle, turret path]: Array","vehicle: Object","turret path: Array - see Description."],"Return":" Nothing "},"Examples":["_soldierOne moveInTurret [_tank, [0, 0]] "],"Additional":["GetInTurret","assignAsTurret","moveInCargo","moveInCommander","moveInDriver","moveInGunner","assignAsCargo","assignAsCommander","assignAsDriver","assignAsGunner"]},{"Name":"moveObjectToEnd","Desc":" Shifts an editor object to the end of the objects array. This means,that the object will be drawn last (after all other objects).  ","Syn":{"Syntax":" map moveObjectToEnd object ","Params":["map: Control -\n\n","object: String -"],"Return":" Nothing "},"Examples":["Example needed"],"Additional":["See also needed"]},{"Name":"moveOut","Desc":" Moves the soldier out of vehicle. (Immediately,without animation). ","Syn":{"Syntax":" moveOut soldier ","Params":["soldier: Object -"],"Return":" Nothing "},"Examples":["if ((lifeState _x) == \"UNCONSCIOUS\") then {moveOut _x;};} forEach (crew cursorTarget);"],"Additional":["action","setPos","setPosATL","setPosASL"]},{"Name":"moveTime","Desc":" Returns the current time of the most important RTM animation currently being played on the soldier. ","Syn":{"Syntax":" moveTime soldier ","Params":["soldier:  -"],"Return":" Number "},"Examples":["moveTime player"],"Additional":["See also needed"]},{"Name":"moveTo","Desc":" Low level command to person to move to given position. ","Syn":{"Syntax":" person moveTo position ","Params":["person: Object\n\n","position: Array"],"Return":" Nothing "},"Examples":["Example needed"],"Additional":["doMove","commandMove","setDestination","move","moveToCompleted","moveToFailed","addWaypoint","fn_vbs_doMoveEx"]},{"Name":"moveToCompleted","Desc":" Check if latest low level moveTo command is finished. ","Syn":{"Syntax":"Boolean = moveToCompleted person ","Params":["person: Object"],"Return":" Boolean "},"Examples":["Example needed"],"Additional":["moveTo","moveToFailed"]},{"Name":"moveToFailed","Desc":" Check if latest low level moveTo command failed. ","Syn":{"Syntax":" Boolean = moveToFailed person ","Params":["person: Object"],"Return":" Boolean "},"Examples":["Example needed"],"Additional":["moveTo","moveToCompleted"]},{"Name":"musicVolume","Desc":" Checks the current music volume (set by fadeMusic) ","Syn":{"Syntax":" Number = musicVolume ","Params":null,"Return":" Number "},"Examples":["Example needed"],"Additional":["See also needed"]},{"Name":"name","Desc":" The name given to a unit using the setIdentity instruction or selected randomly by the game engine if setIdentity has not been used on the unit. If used on vehicle, name of first crew member (in order commander, driver, gunner). If used on an object, \"Error: No unit\" is being returned. \n\nNOTE: In Arma 3 setName can be used on a person to set name. However in multiplayer name always returns profileName. ","Syn":{"Syntax":" String = name object ","Params":["object: Object or Location"],"Return":" String "},"Examples":["_name = name vehicle player"],"Additional":["profileName","setName"]},{"Name":"name_location","Desc":" Returns the location's name. ","Syn":{"Syntax":" name location ","Params":["location: Location"],"Return":" String "},"Examples":["_locationName = name myLocation"],"Additional":["setName"]},{"Name":"nameSound","Desc":" Returns the nameSound of a person. ","Syn":{"Syntax":" nameSound person ","Params":["person: Object"],"Return":" String "},"Examples":["nameSound player\n"],"Additional":["setNameSound"]},{"Name":"nearEntities","Desc":" Find entities in the circle with given radius. If typeName(s) is (are) given, only entities of given type (or its subtype) are listed.\n\nThis command returns only alive entities. If you need to return dead entities as well use entities command. ","Syn":{"Syntax":" position nearEntities radius \u003cbr\u003e(Alternate Syntax exists check Read more)","Params":["position: Object or Array (format Position) - center of the circle\n\n","radius: Number - radius of the circle"],"Return":" Array of Objects"},"Examples":["_list = player nearEntities 20;\n_list = (position player) nearEntities 50;\n_list = player nearEntities [\"Man\", 1000];\n_list = (position player) nearEntities [\"LaserTarget\", 3000];\n_list = player nearEntities [[\"Car\", \"Motorcycle\", \"Tank\"], 50];\n_list = (position player) nearEntities [[\"Man\", \"Air\", \"Car\", \"Motorcycle\", \"Tank\"], 200];\n"],"Additional":["findNearestEnemy","nearestBuilding","nearestObject","nearestObjects","nearObjects","nearestLocation","nearTargets","nearSupplies","nearestLocationWithDubbing","nearObjectsReady","nearRoads"]},{"Name":"nearestBuilding","Desc":" Finds the nearest building to a given object or position. A \"building\" is defined as an object that is of class \"House\" and contains a path LOD. ","Syn":{"Syntax":" nearestBuilding object \u003cbr\u003e(Alternate Syntax exists check Read more)","Params":["object: Object"],"Return":" Object "},"Examples":["_nBuilding = nearestBuilding player;","_nBuilding = nearestBuilding position player;"],"Additional":["buildingPos","nearestObject","nearestObjects","nearObjects","nearestLocation","nearEntities","nearTargets","nearSupplies","nearestLocationWithDubbing","nearObjectsReady","nearRoads"]},{"Name":"nearestLocation","Desc":" Return the closest location of specified class to a given position.Checked range is unlimited (i.e. covers the whole map). ","Syn":{"Syntax":" Location = nearestLocation [position, locationClass] ","Params":["[position, locationClass]: Array\n\n","position: Array","locationClass: String of a location class name."],"Return":" Location "},"Examples":["_nearestCity = nearestLocation [ getPos player, \"nameCity\"];"],"Additional":["findNearestEnemy","nearestBuilding","nearestObject","nearestObjects","nearObjects","nearEntities","nearTargets","nearSupplies","nearestLocationWithDubbing","nearObjectsReady","nearRoads","ArmA_2:_CfgLocationTypes","locationPosition","nearestLocations","createLocation"]},{"Name":"nearestLocations","Desc":" Returns an array of locations of chosen type(s) within the given radius of the given position, sorted from nearest to farthest. ","Syn":{"Syntax":" Array = nearestLocations [position, [locationType,...], radius] ","Params":["[position, [locationType,...], radius]: Array\n\n","position: Array - format Position","[locationType,...]: Array An array of location type name strings","radius: Number The maximum distance from the given position that returned locations may be, in meters."],"Return":" Array of locations "},"Examples":["_nearbyLocations = nearestLocations [ position player, [\"RockArea\",\"VegetationFir\"], 100];"],"Additional":["createLocation","nearestLocation","locationPosition","nearestLocationWithDubbing"]},{"Name":"nearestLocationWithDubbing","Desc":" Find the nearest location (to the given position) having it speech non-empty. ","Syn":{"Syntax":" nearestLocationWithDubbing position ","Params":["position: Array -"],"Return":" Location "},"Examples":["Example needed"],"Additional":["findNearestEnemy","nearestBuilding","nearestObject","nearestObjects","nearObjects","nearestLocation","nearEntities","nearTargets","nearSupplies","nearObjectsReady","nearRoads"]},{"Name":"nearestObject","Desc":" Nearest object of given type to given position within a range of 50 meters. If object ID passed as an argument (as in example 2) the search range is unlimited.\n\nIf class types are used in the filter, then in Arma any object derived from the type is found as well. In OFP, only objects with exactly the type given are found.","Syn":{"Syntax":" nearestObject filter \u003cbr\u003e(Alternate Syntax exists check Read more)","Params":["filter: Array - Can be one of the following:\n[x,y,z]: Any objects near position\n[[x,y,z], \"type\"]: Objects of class \"type\" near position [x,y,z]\n[object, \"type\"]: Objects of class \"type\" near position of \"object\""],"Return":" Object - Found object, or objNull if nothing in range. "},"Examples":["_nObject = nearestObject [2345,6789];\n_nObject = nearestObject [player, \"StreetLamp\"];\n","Return the object with ID 123456:_nObject = [0,0,0] nearestObject 123456; ","_nObject = getPos player nearestObject \"StreetLamp\"; ","Return the nearest object with (typeOf _nObject == \"#XXXX\") -\u003e #mark, #slop, etc. Unlimited search range:_nObject = _position nearestObject -1; \nReturn the nearest object with (typeOf _nObject != \"\"). Search range is 50m:\n_nObject = nearestObject _position; "],"Additional":["nearestObjects","nearObjectsReady","nearObjects","objectFromNetId","nearEntities","entities","object"]},{"Name":"nearestObjects","Desc":" Returns a list of nearest objects of the given types to the given position or object, within the specified distance.\n\nposition can use the format:\n\n[[x,y,z], [\"ClassName\",...], radius]\n\nor\n\n[object, [\"ClassName\",...], radius]\n\n\nTo use it without any ClassName filter:\n\n[object or position, [], radius].\n\n\nA list of ClassName types (Tanks eg) can be found in CfgVehicles\n\nIf more than one object is found they will be ordered according to their distance (i.e. the closest one will be first in the array).\n","Syn":{"Syntax":" objects = nearestObjects [position, types, radius];\n\n","Params":["position: Array or Object - Where to find objects, center position.\n\n","types: Array - List of class name of the objects to search for.","radius: Number - Range from center position to search for objects."],"Return":" Array "},"Examples":["nearestObjects [player, [\"Car\",\"Tank\"], 200];","nearestObjects [player, [\"house\"], 200];","nearestObjects [[2716,2949,0], [\"Car\",\"Truck\"], 100];","Return every object in 50 metres radius around player:nearestObjects [player, [], 50]"],"Additional":["findNearestEnemy","nearestBuilding","nearestObject","nearObjects","nearestLocation","nearEntities","nearTargets","nearSupplies","nearestLocationWithDubbing","nearObjectsReady","nearRoads"]},{"Name":"nearObjects","Desc":" Find objects in the circle with given radius.\nIf typeName is given, only objects of given type (or its subtype) are listed.\nThe first object in the returned array is not necessarily the closest one (like it is in nearestObjects for example). ","Syn":{"Syntax":" position nearObjects radius or [typeName, radius]\n\n","Params":["position: Array - format Position\n\n","[typeName, radius]: Array","typeName: String","radius: Number"],"Return":" Array "},"Examples":["_list = position player nearObjects 50","_list= [_xpos,_ypos] nearObjects [\"House\",20]"],"Additional":["findNearestEnemy","nearestBuilding","nearestObject","nearestObjects","nearestLocation","nearEntities","nearTargets","nearSupplies","nearestLocationWithDubbing","nearObjectsReady","nearRoads"]},{"Name":"nearObjectsReady","Desc":" Check whether all data are loaded to nearObjects will return in reasonable time. ","Syn":{"Syntax":" position nearObjectsReady radius ","Params":["position: Object or Array -\n\n","radius: Number -"],"Return":" Boolean "},"Examples":["_twnpos nearObjectsReady 500;//from ALICE"],"Additional":["findNearestEnemy","nearestBuilding","nearestObject","nearestObjects","nearObjects","nearestLocation","nearEntities","nearTargets","nearSupplies","nearestLocationWithDubbing","nearRoads"]},{"Name":"nearRoads","Desc":" Find the road segments within the circle of given radius. ","Syn":{"Syntax":" pos nearRoads radius ","Params":["pos: Object or Array - format Position, center of search radius\n\n","radius: Number - search radius in meters"],"Return":" Array of Objects - road segments within radius"},"Examples":["_list = player nearRoads 50;","_list = (position _unit) nearRoads 50;","_list = [1800,5700] nearRoads 50;"],"Additional":["isOnRoad","roadsConnectedTo","findNearestEnemy","nearestBuilding","nearestObject","nearestObjects","nearObjects","nearestLocation","nearEntities","nearTargets","nearSupplies","nearestLocationWithDubbing","nearObjectsReady"]},{"Name":"nearSupplies","Desc":" Find supplies (weapon holders, ammo crates, fuel feeds, other units) in the sphere with given radius. ","Syn":{"Syntax":" origin nearSupplies radius ","Params":["origin: Object or Position. In case of position, z is taken into consideration when search is conducted by radius\n\n","radius: Number"],"Return":" Array - array of Objects "},"Examples":["_list = player nearSupplies 50;"],"Additional":["findNearestEnemy","nearestBuilding","nearestObject","nearestObjects","nearObjects","nearestLocation","nearEntities","nearTargets","nearestLocationWithDubbing","nearObjectsReady","nearRoads"]},{"Name":"nearTargets","Desc":" Returns a list of targets within the defined range.\n\"Targets\" are not restricted to enemy units. ","Syn":{"Syntax":" Array = unit nearTargets range ","Params":["unit: Object\n\n","range: Number"],"Return":" Nested Array, consisting of:\n\n0: Position (perceived, includes judgment and memory errors),\n\n1: Type (perceived, gives only what was recognized),\n\n2: Side (perceived side),\n\n3: Subjective Cost (positive for enemies, more positive for more important or more dangerous \n\n\nenemies),\n\n4: Object (object type, can be used to get more information if needed)\n\n5: (since build 5209:) position accuracy (assumed accuracy of the perceived position)\n\n\n\nfor each recognized target"},"Examples":["player nearTargets 100;could return something like this: \n[[[2555.33,2535.33,1.32708],\"SoldierEB\",EAST,214222,EAST 1-1-A:1],[[2550.39,2482.5,1.32696],\"SoldierWB\",WEST,0,WEST 1-1-A:2]]"],"Additional":["reveal","knowsAbout","findNearestEnemy","nearestBuilding","nearestObject","nearestObjects","nearObjects","nearestLocation","nearEntities","nearSupplies","nearestLocationWithDubbing","nearObjectsReady","nearRoads"]},{"Name":"needReload","Desc":" Return how much vehicle wants to reload its weapons. ","Syn":{"Syntax":" Number =  needReload vehicle ","Params":["vehicle: Object"],"Return":" Number Range: 0-1, 0: full mag, 1: empty mag  "},"Examples":["_seriousness = needReload _vehicle;","if (needReload player == 1) then {reload player};"],"Additional":["reload","reloadEnabled"]},{"Name":"netId","Desc":" Unique ID of object or group.  ","Syn":{"Syntax":" netId var ","Params":["var: Object or Group"],"Return":" String "},"Examples":["Example needed"],"Additional":["objectFromNetId"]},{"Name":"netObjNull","Desc":" A non existing object. This value is not equal to anything, including itself ","Syn":{"Syntax":" myNetObject = netObjNull","Params":["myNetObject: Object"],"Return":"  Object   "},"Examples":["myNetObject == netObjNull // Returns false"],"Additional":["See also needed"]},{"Name":"newOverlay","Desc":" Creates the new overlay dialog for the specified type of overlay. ","Syn":{"Syntax":" map newOverlay config ","Params":["map: Control -\n\n","config: Config -"],"Return":" Nothing "},"Examples":["Example needed"],"Additional":["See also needed"]},{"Name":"nextMenuItemIndex","Desc":" Returns the next available menu item index. ","Syn":{"Syntax":" nextMenuItemIndex map ","Params":["map: Control -"],"Return":" Number "},"Examples":["Example needed"],"Additional":["See also needed"]},{"Name":"nextWeatherChange","Desc":" Return the remaining time (in seconds) over which the current weather change will occur.\n\nWhen a weather change finishes, the game engine will automatically generate a new random weather change over a realistic time period (minimum of 90 minutes). ","Syn":{"Syntax":" Number = nextWeatherChange ","Params":null,"Return":" Number "},"Examples":["_seconds = nextWeatherChange;"],"Additional":["fog","fogForecast","setFog","overcast","setOvercast","overcastForecast","forceWeatherChange"]},{"Name":"nil","Desc":" Nil value. This value can be used to undefine existing variables. ","Syn":{"Syntax":" nil ","Params":null,"Return":" Void "},"Examples":["variableToDestroy = nil;"],"Additional":["isNil","Variables"]},{"Name":"nMenuItems","Desc":" Returns the total number of user-added menu items belonging to the given menu. ","Syn":{"Syntax":" map nMenuItems menu index ","Params":["map: Control -\n\n","menu index:  -"],"Return":" Number "},"Examples":["Example needed"],"Additional":["See also needed"]},{"Name":"not","Desc":" not a.\n\nExactly the same as ! a ","Syn":{"Syntax":" Boolean = not a  ","Params":["a: Number"],"Return":" Boolean "},"Examples":["not false \n\nResult is true."],"Additional":["Operators"]},{"Name":"numberToDate","Desc":" Convert float number to a date. ","Syn":{"Syntax":" numberToDate [year,time] ","Params":["[year,time]: Array -"],"Return":" Array "},"Examples":["_date = numberToDate [2008,0.5324]; //[2008,7,13,7,49]"],"Additional":["dateToNumber","getNumber","isNumber","parseNumber","playersNumber"]},{"Name":"objectCurators","Desc":" Returns array with all curators which can edit given object. ","Syn":{"Syntax":" objectCurators obj ","Params":["obj: Object"],"Return":" Array "},"Examples":["Example needed"],"Additional":["addCuratorEditableObjects","curatorRegisteredObjects","removeCuratorEditableObjects"]},{"Name":"objectFromNetId","Desc":" Get object with given unique ID.  ","Syn":{"Syntax":" objectFromNetId id ","Params":["id: String"],"Return":" Object "},"Examples":["Example needed"],"Additional":["netId"]},{"Name":"objNull","Desc":" A non-existing Object. This value is not equal to anything, including itself. ","Syn":{"Syntax":" Object = objNull ","Params":null,"Return":" Object "},"Examples":["Example needed"],"Additional":["grpNull","locationNull","taskNull","controlNull","displayNull","isNull"]},{"Name":"objStatus","Desc":" Sets the status of an objective that was defined in briefing.html.\n\nStatus may be one of:\n\n \"ACTIVE\"\n\n \"FAILED\"\n\n \"DONE\"\n\n \"HIDDEN\"\n\n\n\nTo refer to an objective that is named \"OBJ_1\", for example, use only the index number in this command (i.e. \"1\" objStatus \"HIDDEN\").\n","Syn":{"Syntax":" objectivenumber objStatus status ","Params":["objectivenumber: String\n\n","status: String"],"Return":" Nothing "},"Examples":["\"1\" objStatus \"DONE\" \nMarks the objective named \"OBJ_1\" as completed."],"Additional":["See also needed"]},{"Name":"onBriefingGroup","Desc":" Select a sound declared in the Description.ext of the mission to be played the first time the Group tab is selected in the briefing. ","Syn":{"Syntax":" onBriefingGroup soundName ","Params":["soundName: String"],"Return":" Nothing "},"Examples":["onBriefingGroup \"GroupVoiceOver\""],"Additional":["CfgSounds"]},{"Name":"onBriefingNotes","Desc":" Select a sound declared in the Description.ext of the mission to be played the first time the Notes tab is selected in the briefing. ","Syn":{"Syntax":" onBriefingNotes soundName ","Params":["soundName: String"],"Return":" Nothing "},"Examples":["onBriefingNotes \"NotesVoiceOver\";"],"Additional":["CfgSounds"]},{"Name":"onBriefingPlan","Desc":" Select a sound declared in the Description.ext of the mission to be played the first time the Plan tab is selected in the briefing. ","Syn":{"Syntax":" onBriefingPlan soundName ","Params":["soundName: String"],"Return":" Nothing "},"Examples":["onBriefingPlan \"PlanVoiceOver\""],"Additional":["CfgSounds"]},{"Name":"onBriefingTeamSwitch","Desc":"Select a sound declared in the Description.ext of the mission to be played the first time the TeamSwitch tab is selected in the briefing. ","Syn":{"Syntax":" onBriefingTeamSwitch soundName ","Params":["soundName: String"],"Return":" Nothing "},"Examples":["onBriefingTeamSwitch \"TeamSwitchVoiceOver\""],"Additional":["Team_Switch","enableTeamSwitch","onTeamSwitch","teamSwitch","teamSwitchEnabled","CfgSounds"]},{"Name":"onCommandModeChanged","Desc":" Defines an action performed when command mode change. Command receives,_isHighCommand bool ","Syn":{"Syntax":" onCommandModeChanged command ","Params":["command:  -"],"Return":" Nothing "},"Examples":["//ca\\modules\\HC\\data\\scripts\\HC_GUI.sqf\nhttp://pastebin.jonasscholz.de/1641"],"Additional":["See also needed"]},{"Name":"onDoubleClick","Desc":" Defines an action performed when the user double clicks on the map. Command receives:,_pos array position,_units array selected units,_shift,_alt bool key state,  ","Syn":{"Syntax":" map onDoubleClick command ","Params":["map: Control -\n\n","command: String -"],"Return":" Nothing "},"Examples":["Example needed"],"Additional":["onMapSingleClick"]},{"Name":"onEachFrame","Desc":" Statement is run every frame. \n\n\n\n \n\n In order to keep compatability between official and community content the functions BIS_fnc_addStackedEventHandler and BIS_fnc_removeStackedEventHandler should be used instead.\n ","Syn":{"Syntax":" onEachFrame statement ","Params":["statement: Code"],"Return":" Nothing "},"Examples":["onEachFrame { hintSilent str position player; }; //Hints position every frame","Private variables defined outside of onEachFrame scope are not inherited:\n_myvar = \"bob\";\nmyvar = \"bill\";\nonEachFrame {\n\u0009hintSilent str [_myvar, myvar] \n};\n//Result: [any,\"bill\"]","Only one onEachFrame loop can exist at any time:\nonEachFrame {\n\u0009player sideChat \"first\";\n};\nonEachFrame {\n\u0009player sideChat \"second\";\n};\n//Result: \"second\",\"second\",\"second\"...\"second\"\n\nNote how \"first\" never gets shown even though it precedes \"second\". This is because script thread is executing within the same frame and first onEachFrame is overwritten before it has a chance to execute its statement.","Script suspension is not permitted within onEachFrame scope:\nonEachFrame {\n\u0009sleep 1\n};\n//ERROR!!!"],"Additional":["See also needed"]},{"Name":"onGroupIconClick","Desc":" Defines an action performed when palyer clicked on group marker (3D or in a map) ","Syn":{"Syntax":" onGroupIconClick command ","Params":["command: String or Code - script"],"Return":" Nothing "},"Examples":["onGroupIconClick\n{\n    scriptname \"HC: onGroupIconClick\";\n\n    //--- HC mod inactive - EXIT\n    if !(hcshownbar) exitWith {};\n\n    _is3D = _this select 0;\n    _group = _this select 1;\n    _wpID = _this select 2;\n    _button = _this select 3;\n    _posx = _this select 4;\n    _posy = _this select 5;\n    _shift = _this select 6;\n    _ctrl = _this select 7;\n    _alt = _this select 8;\n    _logic = player getvariable \"BIS_HC_scope\";\n}"],"Additional":["addGroupIcon","clearGroupIcons","getGroupIcon","getGroupIconParams","groupIconSelectable","groupIconsVisible","removeGroupIcon","setGroupIcon","setGroupIconParams","setGroupIconsSelectable","setGroupIconsVisible","onGroupIconOverEnter","onGroupIconOverLeave"]},{"Name":"onGroupIconOverEnter","Desc":" Defines an action performed when player moves his cursor over group marker (3D or in a map) ","Syn":{"Syntax":" onGroupIconOverEnter command ","Params":["command:  -"],"Return":" Nothing "},"Examples":["onGroupIconOverEnter\n{\n    // Passed values for _this are:\n    _is3D = _this select 0;\n    _group = _this select 1;\n    _wpID = _this select 2;\n    _button = _this select 3;\n    _posx = _this select 4;\n    _posy = _this select 5;\n    _shift = _this select 6;\n    _ctrl = _this select 7;\n    _alt = _this select 8;\n\n    _message = format [\"____ Info ____\"];\n    {_message=_message + format [\"\\n %1\",_x]} foreach _this;\n    hint _message;\n\n}"],"Additional":["See also needed"]},{"Name":"onGroupIconOverLeave","Desc":" Defines an action performed when palyer clicked on group marker (3D or in a map) ","Syn":{"Syntax":" onGroupIconOverLeave command ","Params":["command:  -"],"Return":" Nothing "},"Examples":["Example needed"],"Additional":["See also needed"]},{"Name":"onHCGroupSelectionChanged","Desc":" Defines an action performed when high command group selection has been changed.\n\nCommand receives 2 variables:\n\n_group: Group - last selected/deselected group\n\n_isSelected: Boolean - new selection state of the specific group\n\n\n\nThe code is executed on every hc group selection change until it is\n\n removed via onHCGroupSelectionChanged \"\"; or onHCGroupSelectionChanged {};\n\n or replaced by onHCGroupSelectionChanged \"SomeOtherCommand(s)\"; or onHCGroupSelectionChanged {SomeOtherCommand(s)};\n\n\n\n ","Syn":{"Syntax":" onHCGroupSelectionChanged command ","Params":["command: String or Code"],"Return":" Nothing "},"Examples":["onHCGroupSelectionChanged {\n  if (_isSelected) then {\n    hint format [\"Group %1 has been selected.\", _group];\n  } else {\n    hint format [\"Group %1 has been deselected.\", _group];\n  };\n};","onHCGroupSelectionChanged \"player globalChat 'HC group selection has been changed.';\";"],"Additional":["High Command","hcAllGroups","hcGroupParams","hcLeader","hcRemoveAllGroups","hcRemoveGroup","hcSelected","hcSelectGroup","hcSetGroup","hcShowBar","hcShownBar"]},{"Name":"onMapSingleClick","Desc":" Define action performed when user clicks in map by executing command string.\n\nthe string receives 5 (localised in scope) variables:\n\n\n _this: Anything - Params passed to onMapSingleClick\n\n _pos: Array - Clicked position\n\n _units: Array - Units which were selected (via function keys) before opening the map (may be non-functional in Arma)\n\n _shift: Boolean - Whether \u003cShift\u003e was pressed when clicking on the map\n\n _alt: Boolean - Whether \u003cAlt\u003e was pressed when clicking on the map\n\n\n\nIn Arma 3 the code should return true only if you wish to override default engine handling of the mouse click on map (see example #4) For older games, when click is processed, code should ultimately return true back to the engine. If false is returned, default processing by the game engine is done. Return value of any other type (including Nothing) is an error. In such case default processing by the game engine is done, and error message may be displayed.\n\nThe code is executed on every click, until the Command is \n\nremoved via onMapSingleClick \"\", or\n\nreplaced by onMapSingleClick \"SomeOtherCommand(s)\"\n\n\n\n\n\n\n\n \n\n In order to keep compatability between official and community content the functions BIS_fnc_addStackedEventHandler and BIS_fnc_removeStackedEventHandler should be used instead.\n\n","Syn":{"Syntax":" params onMapSingleClick command ","Params":["params: Anything\n\n","command: String or Code"],"Return":" Nothing "},"Examples":["onMapSingleClick \"'SoldierWB' createUnit [_pos, group player]; true\";\nArmA: Creates a soldier unit at the position clicked.","onMapSingleClick \"grp1 move _pos; onMapSingleClick ''; true\";\nArmA: Orders \"grp1\" to move to position clicked. Disables further map-click actions.","onMapSingleClick \"'SoldierWB' createUnit [_pos, group player]; true\";\nOFP: In OFP single quotes cannot be used for string definition, so two double-quotes have to be used instead.","//The following code will disable Shift+click waypoint marker creation\nonMapSingleClick {_shift};","//Pass params to onMapSingleClick code\nplayer onMapSingleClick {hint (\"Hello \" + name _this)}; //Hello KK"],"Additional":["onGroupIconClick","onDoubleClick"]},{"Name":"onPlayerConnected","Desc":" This statement is launched whenever a player is connected to a MP session.  \nVariables _id and _name are set, in theory _id being the session id number as seen in #userlist. \nNote that as of 1.08, this command only accepts a code-string rather than code delimited by braces.\nNote as of ArmA 2 version 1.02 this function also returns the variable _uid which denotes uniqueID of player.\nAs of version Arma2 1.04, _id will return a number in float format, something like 1.4253e+10. \n_id is the Unique DirectPlay ID of player, and there are some conversions between DirectPlay floats and Arma Engine numbers.\nIn Arma 3 _uid is the same as Steam ID and _name is profileName.\n\n\n\n\n \n\n In order to keep compatability between official and community content the functions BIS_fnc_addStackedEventHandler and BIS_fnc_removeStackedEventHandler should be used instead.\n\n","Syn":{"Syntax":" onPlayerConnected statement ","Params":["statement: String or Code"],"Return":" Nothing "},"Examples":["onPlayerConnected \"[_id, _name] execVM \"\"PlayerConnected.sqf\"\"\";","onPlayerConnected {diag_log [_id, _uid, _name]};"],"Additional":["onPlayerDisconnected"]},{"Name":"onPlayerDisconnected","Desc":" This statement is launched whenever a player is disconnected from a MP session. \nVariables _id and _name are set. \nNote that as of 1.08, this command only accepts a code-string rather than code delimited by braces. \nNote as of ArmA 2 version 1.02 this function returns also variable _uid with uniqueID of player.\n\n\n\n\n \n\n In order to keep compatability between official and community content the functions BIS_fnc_addStackedEventHandler and BIS_fnc_removeStackedEventHandler should be used instead.\n\n","Syn":{"Syntax":" onPlayerDisconnected statement ","Params":["statement: String or Code"],"Return":" Nothing "},"Examples":["onPlayerDisconnected \"endMission \"\"END1\"\";\";","onPlayerDisconnected {diag_log [_id, _uid, _name]};"],"Additional":["onPlayerConnected"]},{"Name":"onPreloadFinished","Desc":" Defines an action performed after the preload screen finished. \n\n\n\n\n \n\n In order to keep compatability between official and community content the functions BIS_fnc_addStackedEventHandler and BIS_fnc_removeStackedEventHandler should be used instead.\n\n","Syn":{"Syntax":" onPreloadFinished command ","Params":["command: String or Code"],"Return":" Nothing "},"Examples":["onPreloadFinished 'TAG_ReceivingScreenDone = true;';","//removes the event immediately after the first run again\nonPreloadFinished {TAG_ReceivingScreenDone = true; onPreloadFinished {};};"],"Additional":["onPreloadStarted"]},{"Name":"onPreloadStarted","Desc":" Defines an action performed just before the preload screen started. \n\n\n\n\n \n\n In order to keep compatability between official and community content the functions BIS_fnc_addStackedEventHandler and BIS_fnc_removeStackedEventHandler should be used instead.\n\n","Syn":{"Syntax":" onPreloadStarted command ","Params":["command: String or Code"],"Return":" Nothing "},"Examples":["onPreloadStarted {diag_log \"preload started\";};"],"Additional":["onPreloadFinished"]},{"Name":"onShowNewObject","Desc":" Defines an action performed when the user right clicks on the map and,selects New Object. Set to empty for default behavior. Command receives:,_pos array position,  ","Syn":{"Syntax":" map onShowNewObject command ","Params":["map: Control -\n\n","command: String -"],"Return":" Any "},"Examples":["Example needed"],"Additional":["See also needed"]},{"Name":"onTeamSwitch","Desc":" Defines an action performed when the team switch is finished. Command receives: _from object previous unit, _to object current unit. ","Syn":{"Syntax":" onTeamSwitch command ","Params":["command:  -"],"Return":" Nothing "},"Examples":["onTeamSwitch {[_from, _to] execVM \"myTeamSwitchScript.sqf\";}"],"Additional":["Team_Switch","enableTeamSwitch","onBriefingTeamSwitch","teamSwitch","teamSwitchEnabled"]},{"Name":"openCuratorInterface","Desc":" Force opens curator interface. ","Syn":{"Syntax":" openCuratorInterface ","Params":null,"Return":" Nothing "},"Examples":["Open interface: openCuratorInterface;","Close interface: findDisplay 312 closeDisplay 2;","Detect if user used \"Zeus\" key to open curator interface in the absence of event handler for it: findDisplay 46 displayAddEventHandler [\"KeyDown\", {\n\u0009if (inputAction \"CuratorInterface\" \u003e 0) then {\n\u0009\u0009hint \"Curator interface is open\";\n\u0009};\n\u0009false\n}];"],"Additional":["Curator"]},{"Name":"openMap","Desc":" Show player's map. If forced, cannot be closed. ","Syn":{"Syntax":" openMap show \u003cbr\u003e(Alternate Syntax exists check Read more)","Params":["show: Boolean"],"Return":" Boolean "},"Examples":[" openMap true "," openMap [true, true] "],"Additional":["forceMap","visibleMap"]},{"Name":"openYoutubeVideo","Desc":" Opens Steam overlay with given YT video. Video URL is the end part of the YT URL, starting with watch?v=.... If the user has Steam overlay disabled, the command will display appropriate message to the user and return false. ","Syn":{"Syntax":" openYoutubeVideo youTubeUrl ","Params":["youTubeUrl: String"],"Return":" Boolean "},"Examples":["//Open http://www.youtube.com/watch?v=UBIAbm7Rt78\n_isOpened = openYoutubeVideo \"watch?v=UBIAbm7Rt78\";"],"Additional":["openDSInterface","openMap"]},{"Name":"opfor","Desc":" Pre-defined variable for the opfor side.\n Alias for east. ","Syn":{"Syntax":" opfor ","Params":null,"Return":" Side "},"Examples":[" if (side player == opfor) then {\n    hint \"OPFOR\";\n};\n"],"Additional":["side","civilian","blufor","east","independent","resistance","west"]},{"Name":"or","Desc":" Returns true only if one or both conditions are true. In case of the alternative syntax, lazy evaluation is used (if left operand is true, evaluation of the right side is skipped completely).\n\nIdentical to: a  ||  b ","Syn":{"Syntax":" Boolean = a or b \u003cbr\u003e(Alternate Syntax exists check Read more)","Params":["a: Boolean - Test condition or variable that returns Boolean.\n\n","b: Boolean - Test condition or variable that returns Boolean."],"Return":" Boolean "},"Examples":["if ((OBJ1) or (_enemycount == 0)) then {hint \"you win !\"}","if ((count _array == 0) or {(_array select 0) != player}) then {hint \"It works! Without lazy evaluation it would throw an error if array was empty.\"}"],"Additional":["a  b","and","Operators"]},{"Name":"orderGetIn","Desc":" Force all units in the array to get in or out of their assigned vehicles. Units must be assigned to a vehicle before this command will do anything. ","Syn":{"Syntax":" unitArray orderGetIn order ","Params":["unitArray: Array\n\n","order: Boolean"],"Return":" Nothing "},"Examples":["[_unitOne, _unitTwo] orderGetIn true ","[_unitOne, _unitTwo] orderGetIn false "],"Additional":["allowGetIn","assignAsCargo","assignAsCommander","assignAsDriver","assignAsGunner"]},{"Name":"overcast","Desc":" Return the current overcast level. Zero is clear skies, one is maximum cloud cover. ","Syn":{"Syntax":" Number = overcast ","Params":null,"Return":" Number "},"Examples":[" _cloudLevel = overcast "],"Additional":["overcastForecast","setOvercast","nextWeatherChange"]},{"Name":"overcastForecast","Desc":" Return the overcast forecast. ","Syn":{"Syntax":" Number = overcastForecast ","Params":null,"Return":" Number "},"Examples":["Example needed"],"Additional":["See also needed"]},{"Name":"owner","Desc":" On server machine,return the ID of the client where the object is local. Otherwise return 0. ","Syn":{"Syntax":" owner object ","Params":["object: Object -"],"Return":" Number "},"Examples":["_clientID = owner _someobject;"],"Additional":["publicVariableClient","setOwner"]},{"Name":"parseNumber","Desc":" Parses the string, interpreting its content as a floating point number.\nThe command first discards as many whitespace characters as necessary until the first non-whitespace character is found. Then, starting from this character, takes as many characters as possible that are valid following a syntax resembling that of floating point literals, and interprets them as a numerical value. The rest of the string after the last valid character is ignored and has no effect on the behavior of this command.\nIf the first sequence of non-whitespace characters in string does not form a valid floating-point number, or if no such sequence exists because either string is empty or contains only whitespace characters, no conversion is performed and the command returns 0. ","Syn":{"Syntax":" parseNumber string ","Params":["string: String"],"Return":" Number "},"Examples":["_number = parseNumber \"0.125\";","_number = parseNumber \"2 abc\";//2"],"Additional":["BIS_fnc_parseNumber"]},{"Name":"parseText","Desc":" Creates a structured text by parsing the given XML description. Do not use parseText when displaying a localized text from stringtable.xml (see notes below). ","Syn":{"Syntax":" Structured Text = parseText text ","Params":["text: String"],"Return":" Structured Text "},"Examples":["_Stxt = parseText \"First line\u003cimg image='data\\isniper.paa'/\u003e\u003cbr/\u003eSecond line\";","hintSilent parseText format[\"\u003ct size='1.25' font='Zeppelin33' color='#ff0000'\u003e%1 lives remaining.\u003c/t\u003e\", 12];","_clickableLink = parseText \"\u003ca href='http://arma3.com'\u003eA3\u003c/a\u003e\";"],"Additional":["Structured Text","composeText","text","localize","ctrlSetStructuredText"]},{"Name":"parsingNamespace","Desc":" Return the global namespace attached to config parser. ","Syn":{"Syntax":" parsingNamespace ","Params":null,"Return":" Namespace "},"Examples":["parsingNamespace setVariable [\"var1\",101.23124];\n_profVar1 = parsingNamespace getVariable \"var1\";"],"Additional":["Forward Compatibility","uiNamespace","profileNamespace","missionNamespace","with"]},{"Name":"particlesQuality","Desc":" Return current settings for particles quality.  ","Syn":{"Syntax":" particlesQuality ","Params":null,"Return":" Number "},"Examples":["Example needed"],"Additional":["setParticleCircle","setParticleParams","setParticleRandom","ParticleTemplates","setParticleClass","setParticleFire"]},{"Name":"pi","Desc":" pi (180 degrees converted to Radians). ","Syn":{"Syntax":" Number = pi ","Params":null,"Return":" Number "},"Examples":["_radians = 2*pi\n\nResult is 6.2830"],"Additional":["Math Commands"]},{"Name":"pickWeaponPool","Desc":" Transfer weapons and magazines from cargo of object into weapon pool (used in campaign to transfer weapons into next mission). ","Syn":{"Syntax":" pickWeaponPool object","Params":["object: Object"],"Return":" Nothing "},"Examples":["Example needed"],"Additional":["See also needed"]},{"Name":"pitch","Desc":" Returns the pitch of a persons voice. ","Syn":{"Syntax":" pitch person ","Params":["person: Object"],"Return":" Number "},"Examples":["pitch player\n"],"Additional":["setPitch"]},{"Name":"playableSlotsNumber","Desc":" Returns the number of available slots in mission per side (both empty and taken). In singleplayer mission, it returns number of playable units per side. ","Syn":{"Syntax":" playableSlotsNumber side ","Params":["side: Side"],"Return":" Number "},"Examples":["_maxBluforPlayers = playableSlotsNumber blufor;"],"Additional":["playableUnits","switchableUnits"]},{"Name":"playableUnits","Desc":" Return a list of playable units (occupied by both AI or players) in a multiplayer game. ","Syn":{"Syntax":" playableUnits ","Params":null,"Return":" Array "},"Examples":["Example needed"],"Additional":["allCurators","allGroups","allDead","switchableUnits","vehicles","allUnitsUAV","allDeadMen"]},{"Name":"playAction","Desc":" When used on a person, a smooth transition to the given action will be initiated.\n\nFor Arma 3 actions see: playAction/actions.\n\n","Syn":{"Syntax":" soldier playAction action ","Params":["soldier: Object -\n\n","action: String -"],"Return":" Nothing "},"Examples":["soldierOne playAction \"SitDown\""],"Additional":["playActionNow","playMove","playMoveNow","switchMove","playGesture"]},{"Name":"playActionNow","Desc":" When used on a person, a smooth transition to the given action will be initiated, but all previous playAction are discarded.\n\nFor Arma 3 actions see: playAction/actions. \n\n","Syn":{"Syntax":" soldier playActionNow action ","Params":["soldier: Object -\n\n","action: String -"],"Return":" Nothing "},"Examples":["soldierOne playActionNow \"SitDown\";","rabbitTwo playActionNow \"WalkF\";"],"Additional":["playAction","playMove","playMoveNow","switchMove","playGesture"]},{"Name":"player","Desc":" Person controlled by player.\n\nIn MP this value is different on each computer.\n\nIn Intros and Outros this isn't set by default and must be assigned. ","Syn":{"Syntax":" Object = player ","Params":null,"Return":" Object "},"Examples":["player addRating 500;"],"Additional":["See also needed"]},{"Name":"playerRespawnTime","Desc":" Return the player remaining time to respawn.  ","Syn":{"Syntax":" Number =  playerRespawnTime ","Params":null,"Return":" Number "},"Examples":["WaitUntil {playerRespawnTime \u003c= 0}"],"Additional":["setPlayerRespawnTime"]},{"Name":"playerSide","Desc":" Returns the player's side. This is valid even when the player controlled person is dead (a difference from side player). ","Syn":{"Syntax":" playerSide ","Params":null,"Return":" Side "},"Examples":["if (side man1 == playerSide) then {\n    hint \"man1 is on your side!\";\n};"],"Additional":["Side","side","west","east","resistance","civilian","sideLogic","sideFriendly","sideEnemy","sideUnknown","side location","Side relations"]},{"Name":"playersNumber","Desc":" Return count of players playing on given side. Works only in multiplayer, in singleplayer always returns 0.\n\nReturns number of playable slots taken by a side, not actual number of players of the side present in the mission. As a result, players who claimed a slot in the lobby but didn't start the mission yet are counted in as well. ","Syn":{"Syntax":" Number =  playersNumber side ","Params":["side: Side"],"Return":" Number "},"Examples":["_west = playersNumber west;\n_east = playersNumber east;\n_civ = playersNumber civilian;\nhint format [ \"West:%1 East:%2, Civ:%3\", _west, _east, _civ];"],"Additional":["See also needed"]},{"Name":"playGesture","Desc":" When used on a person,a smooth transition to the given move will be initiated. Command doesn't seem to be functional ","Syn":{"Syntax":" soldier playGesture moveName ","Params":["soldier: Object\n\n","moveName: String"],"Return":" Nothing "},"Examples":["soldierOne playGesture \"Wave\""],"Additional":["playMove","playMoveNow","playAction","playActionNow","switchMove"]},{"Name":"playMission","Desc":" The mission is launched (from the main menu). Both campaign and mission are given as their directory name. If the campaign is empty, a single mission is launched. If skipBriefing is true, the intro and briefing are skipped. ","Syn":{"Syntax":" playMission [campaign, mission] or [campaign, mission, skipBriefing] ","Params":["[campaign, mission] or [campaign, mission, skipBriefing]: Array\n\n","campaign: String","mission: String","skipBriefing: Boolean - Optional"],"Return":" Nothing "},"Examples":["playMission [\"XOutrage\",\"x05Negotiator.Noe\"]"],"Additional":["hostMission","playScriptedMission"]},{"Name":"playMove","Desc":" When used on person, smooth transition to given move will be done.\n\nList of moves in ArmA 2List of moves in Armed AssaultList of moves in Operation Flashpoint: Resistance ","Syn":{"Syntax":" unitName playMove moveName ","Params":["unitName: Object\n\n","moveName: String"],"Return":" Nothing "},"Examples":["soldierOne playMove \"Stand\" "],"Additional":["playMoveNow","switchMove","playAction","playActionNow","playGesture"]},{"Name":"playMoveNow","Desc":" When used on a person,a smooth transition to the given move will be initiated, but all previous playMove are discarded. \n\nList of moves in ArmA 2List of moves in Armed AssaultList of moves in Operation Flashpoint: Resistance","Syn":{"Syntax":" soldier playMoveNow moveName ","Params":["soldier: Object -\n\n","moveName: String -"],"Return":" Nothing "},"Examples":["player playMoveNow \"AmovPercMevaSlowWrflDf\""],"Additional":["playMove","switchMove","playAction","playActionNow","playGesture"]},{"Name":"playMusic","Desc":" Plays music defined in CfgMusic. To stop the music execute playMusic \"\" or give the start time which is beyond the music duration playMusic [\"SomeMusic\", 1000];  ","Syn":{"Syntax":" playMusic name \u003cbr\u003e(Alternate Syntax exists check Read more)","Params":["name : String - music class"],"Return":"Nothing  "},"Examples":["playMusic \"RadioAmbient1\";","playMusic [\"RadioAmbient3\", 3]; //start from 00:00:03","Play from 00:00:01 to 00:00:050 = [] spawn {\n\u0009playMusic [\"RadioAmbient5\", 1];\n\u0009sleep 4;\n\u0009playMusic \"\";\n};"],"Additional":["playSound","say","createSoundSource","addMusicEventHandler"]},{"Name":"playScriptedMission","Desc":" Load the given world,launch an empty mission and execute the given,expression. Config (optional) can reference to the config entry,replacing description.ext for this mission.  ","Syn":{"Syntax":" playScriptedMission [world,expression,config] ","Params":["[world,expression,config]: Array -"],"Return":" Nothing "},"Examples":["playScriptedMission\n[\n\u0009\"desert_e\",\n\u0009{\n\u0009\u0009private[\"_handle\"];\n\u0009\u0009_handle = execVM \"\\ca\\missions_e\\data\\scenes\\credits1\\init.sqf\";\n\u0009},\n\u0009configFile/\"CfgMissions\"/\"Cutscenes\"/\"Credits\"\n];\n"],"Additional":["hostMission","playMission"]},{"Name":"playSound","Desc":" selects Sound from CfgSounds declared in the Description.ext file.  ","Syn":{"Syntax":" playSound soundName \u003cbr\u003e(Alternate Syntax exists check Read more)","Params":["soundName: String"],"Return":" Nothing "},"Examples":["playSound \"soundname\""],"Additional":["playSound3D","sideRadio","say","playMusic","say2D","say3D","createSoundSource"]},{"Name":"playSound3D","Desc":" Plays positional sound with given filename on every computer on network. At least 2 parameters must be specified.  ","Syn":{"Syntax":" playSound3D [filename, sound source, isInside, sound position, volume, sound pitch, distance] ","Params":["[filename, sound source, isInside, sound position, volume, sound pitch, distance]: Array\n\n","filename: String","sound source: Object - the object emitting the sound. If \"sound position\" is specified this param is ignored","isInside: Boolean (optional) Default: false","sound position: PositionASL (optional) - position for sound emitter, will override \"sound source\" position. Default: [0,0,0]","volume: Number (optional) Default: 1","sound pitch: Number (optional) - 1: Normal, 0.5: Darth Vader, 2: Chipmunks, etc. Default: 1","distance: Number (optional) - How far is sound audible (0 = no max distance) Default: 0."],"Return":" Nothing "},"Examples":["playSound3D [\"A3\\Sounds_F\\sfx\\blip1.wav\", player]","playSound3D [\"A3\\Sounds_F\\sfx\\blip1.wav\", player, false, getPosASL player, 1, 1, 0]","Sound file extension must be specified even if a config entry has none:\nplaySound3D [\"A3\\Sounds_F\\sfx\\alarm_independent\", player]; //no sound\nplaySound3D [\"A3\\Sounds_F\\sfx\\alarm_independent.wss\", player]; //alarm"],"Additional":["say3D","playSound","say2D","say","setRandomLip"]},{"Name":"position","Desc":" Synonym for getPos. ","Syn":{"Syntax":" Array = position object ","Params":["object: Object; since VBS2 1.24: Location"],"Return":" Array - format Position "},"Examples":["_Pos = position player"],"Additional":["position location","getPos","getPosATL","getPosASL","getPosASLW","visiblePosition","getPosVisual","visiblePositionASL"]},{"Name":"positionCameraToWorld","Desc":"Transforms position from camera coordinate space to world coordinate space. \nCamera axes are relative to camera orientation. x axis goes from left of the camera to right of the camera, z axis goes from underneath the camera to above the camera and y axis goes from back of the camera to where the camera is looking. ","Syn":{"Syntax":" worldPos = positionCameraToWorld cameraPos ","Params":["cameraPos: Array - Relative camera position, format [x, z, y] \n\nNOTE: y and z are swapped around, different from your usual model space coordinates format"],"Return":" worldPos: Array - Camera world position, format Position "},"Examples":["_worldPos = positionCameraToWorld _cameraPos;","Example demonstrating reversed y and z:player setDir 0; //assuming player is looking forward\nhint str [positionCameraToWorld [0,0,0], positionCameraToWorld [0,0,1]];\n//[[2481.35,5671.21,1.51395],[2481.35,5672.21,1.46955]]\n"],"Additional":["modelToWorld"]},{"Name":"posScreenToWorld","Desc":" Convert screen coordinates in map to world coordinates. ","Syn":{"Syntax":" map posScreenToWorld [x, y] ","Params":["map : Control\n\n","[x, y]: Array - format Position2D"],"Return":" Array (Position2D Format) "},"Examples":["_WorldCoord = _Control posScreenToWorld _ScreenCoord","_WorldCoord = _Control posScreenToWorld [_x,_y]"],"Additional":["ctrlMapScreenToWorld","ctrlMapWorldToScreen","posWorldToScreen"]},{"Name":"posWorldToScreen","Desc":" Convert world coordinates to screen coordinates in map. ","Syn":{"Syntax":" map posWorldToScreen position ","Params":["map : Control\n\n","position : Array - format Position2D"],"Return":" Array (Position2D Format) "},"Examples":["Example needed"],"Additional":["See also needed"]},{"Name":"ppEffectAdjust","Desc":" Set post process effect parameters ","Syn":{"Syntax":" effect ppEffectAdjust settings ","Params":["effect: String or Number - where string is effect name or number is ppEffect handle.\n\n","settings: Array"],"Return":" Nothing "},"Examples":["\"colorCorrections\" ppEffectAdjust [1, 1, -0.01, [0.0, 0.0, 0.0, 0.0], [1.5, 1, 1.2, 0.6],  [0.199, 0.587, 0.114, 0.20]];"],"Additional":["Post process effects","ppEffectForceInNVG","ppEffectEnable","ppEffectDestroy","ppEffectCreate","ppEffectCommitted","ppEffectCommit"]},{"Name":"ppEffectCommit","Desc":" Commit post process effect in given time. ","Syn":{"Syntax":" effect ppEffectCommit duration ","Params":["effect: String or Number - where string is effect name or number is ppEffect handle.\n\n","duration: Number"],"Return":" Nothing "},"Examples":["\"colorCorrection\" ppEffectCommit 3;"],"Additional":["Post process effects","ppEffectForceInNVG","ppEffectEnable","ppEffectDestroy","ppEffectCreate","ppEffectCommitted","ppEffectAdjust"]},{"Name":"ppEffectCommitted","Desc":" Check whether given post process effect is committed ","Syn":{"Syntax":" ppEffectCommitted effect ","Params":["effect: String"],"Return":" Boolean "},"Examples":["if (ppEffectCommitted \"colorCorrection\") then {hint \"alteration done !\";};"],"Additional":["Post process effects","ppEffectForceInNVG","ppEffectEnable","ppEffectDestroy","ppEffectCreate","ppEffectCommit","ppEffectAdjust"]},{"Name":"ppEffectCreate","Desc":" Create Post process effects specified by effect name and priority.\n\nSee class CfgOpticsEffect for examples using:\n\n \"radialBlur\"\n\n \"chromAberration\"\n\n \"wetDistortion\"\n\n \"colorCorrections\"\n\n \"dynamicBlur\"\n\n \"filmGrain\"\n\n \"colorInversion\"\n\n\n\n","Syn":{"Syntax":" ppEffectCreate effect ","Params":["effect: [name, priority]\n\n","name: String - name of effect type.","priority: Number - unique priority"],"Return":" Number - handle "},"Examples":["_ppGrain = ppEffectCreate [\"filmGrain\", 2005];"],"Additional":["Post process effects","ppEffectForceInNVG","ppEffectEnable","ppEffectDestroy","ppEffectCommit","ppEffectCommitted","ppEffectAdjust"]},{"Name":"ppEffectDestroy","Desc":" Destroy Post process effects given by handle. ","Syn":{"Syntax":" ppEffectDestroy effect ","Params":["effect: Array or Number -"],"Return":" Nothing "},"Examples":["ppEffectDestroy _hndl;","ppEffectDestroy [_hndl0, _hndl1, _hndl2];"],"Additional":["Post process effects","ppEffectForceInNVG","ppEffectEnable","ppEffectCreate","ppEffectCommit","ppEffectCommitted","ppEffectAdjust"]},{"Name":"ppEffectEnable","Desc":" Enable / disable Post process effects ","Syn":{"Syntax":" effect ppEffectEnable enable ","Params":["effect: String or Number - where string is effect name or number is ppEffect handle.\n\n","enable: Boolean"],"Return":" Nothing "},"Examples":["\"colorCorrections\" ppEffectEnable true;"],"Additional":["Post process effects","ppEffectForceInNVG","ppEffectDestroy","ppEffectCreate","ppEffectCommit","ppEffectCommitted","ppEffectAdjust"]},{"Name":"ppEffectForceInNVG","Desc":" Forces use of Post process effects in NVG.  ","Syn":{"Syntax":" number ppEffectForceInNVG bool ","Params":["number: Number\n\n","bool: Boolean"],"Return":" Nothing "},"Examples":["Example needed"],"Additional":["Post process effects","ppEffectEnable","ppEffectDestroy","ppEffectCreate","ppEffectCommit","ppEffectCommitted","ppEffectAdjust"]},{"Name":"precision","Desc":" Return the precision of the given entity. ","Syn":{"Syntax":" Number = precision entity ","Params":["entity: Object"],"Return":" Number "},"Examples":["if (((position _this) distance _dangerPos) \u003c= (precision _this)) then {...};//used in formationCDanger.fsm"],"Additional":["See also needed"]},{"Name":"preloadCamera","Desc":" Preload all textures and models around given Position to avoid visual artifacts after camera is moved.\n\nShould be used before any abrupt camera change/cut.\n\nReturns true once all data is ready. ","Syn":{"Syntax":" Boolean = preloadCamera position","Params":null,"Return":" Boolean "},"Examples":["waitUntil {preloadCamera markerPos \"cam_location_2\"};"],"Additional":["camPreload","camPreloaded"]},{"Name":"preloadObject","Desc":" Preload all textures, materials and proxies needed to render given object. Object can be determined either by config class name (CfgVehicles), or by Unit. \n\nReturns true once all data is loaded and ready. ","Syn":{"Syntax":"\nBoolean = distance preloadObject object ","Params":["distance: Number\n\n","object: Object or String"],"Return":" Boolean "},"Examples":["spawn {waitUntil {10 preloadObject \"SoldierW\"}}","spawn {waitUntil {10 preloadObject leader player}}"],"Additional":["See also needed"]},{"Name":"preloadSound","Desc":" Makes sure that a sound can start playing without any delay once it is needed. \nNote:Not implemented yet - currently does nothing. ","Syn":{"Syntax":" Boolean = preloadSound soundName ","Params":["soundName: String"],"Return":" Boolean "},"Examples":["Example needed"],"Additional":["See also needed"]},{"Name":"preloadTitleObj","Desc":" Object title -  Preload data the object can be defined in the Description.ext file. ","Syn":{"Syntax":"Boolean = preloadTitleObj [name, type, speed] or [name, type] ","Params":["[name, type, speed] or [name, type]: Array\n\n","name: String defined in Description.ext for the mission","type: String \"PLAIN\" e.g.","speed: Optional, and ignored"],"Return":" Boolean "},"Examples":["_ok=preloadTitleObj [\"BISLogo\",\"plain\"]"],"Additional":["See also needed"]},{"Name":"preloadTitleRsc","Desc":" Resource title - Preload data.\n\nThe resource can be defined in the Description.ext file. ","Syn":{"Syntax":"Boolean = preloadTitleRsc [name, type, speed] or [name, type] ","Params":["[name, type, speed] or [name, type]: Array\n\n","name: String defined in Description.ext for the mission","type: String \"PLAIN\" e.g.","speed: Optional and ignored"],"Return":" Boolean "},"Examples":["_ok=preloadTitleRsc [\"BIS\", \"PLAIN\"]"],"Additional":["See also needed"]},{"Name":"preprocessFile","Desc":" Reads and processes the content of the specified file. Preprocessor is C-like, supports comments using // or /* and */ and macros defined with #define.Due to the hard-drive access this command executes (and the lack of caching) this command should not be used in time-critical script loops. ","Syn":{"Syntax":" String = preprocessFile fileName ","Params":["fileName: String"],"Return":" String "},"Examples":["_content = preprocessFile \"myFunction.sqf\";"],"Additional":["preprocessFileLineNumbers","loadFile","Function","SQF syntax","call","spawn","execVM","PreProcessor Commands"]},{"Name":"preprocessFileLineNumbers","Desc":" Returns the preprocessed content of the given file. The preprocessor is C-like, it supports comments using // or /* and */ and macros defined with #define. ","Syn":{"Syntax":" String = preprocessFileLineNumbers fileName ","Params":["fileName: String"],"Return":" String "},"Examples":["_string = preprocessFileLineNumbers \"myFunction.sqf\" \n\nResult is \"if a\u003eb then {a} else {b}\""],"Additional":["preprocessFile","loadFile","Function","SQF syntax","call","spawn","execVM","PreProcessor Commands"]},{"Name":"primaryWeapon","Desc":" Returns name of unit's primary weapon (empty string if none). ","Syn":{"Syntax":" String = primaryWeapon unit ","Params":["unit: Object"],"Return":" String "},"Examples":["_pWeap = primaryWeapon player;","hint primaryWeapon player; //\"arifle_MX_ACO_pointer_F\""],"Additional":["primaryWeaponMagazine","primaryWeaponItems","addPrimaryWeaponItem","removePrimaryWeaponItem","removeAllPrimaryWeaponItems","secondaryWeapon","handgunWeapon","currentWeapon","weapons"]},{"Name":"primaryWeaponItems","Desc":" Returns array with all items assigned to the primary weapon. This command is used for infantry weapons only. ","Syn":{"Syntax":" primaryWeaponItems unit ","Params":["unit: Object"],"Return":" Array "},"Examples":["primaryWeaponItems player; \n/*\n[\n\u0009\"muzzle_snds_H\",\u0009//silencer\n\u0009\"acc_pointer_IR\",\u0009//laser\n\u0009\"optic_Aco\"\u0009\u0009//optics\n]\n*/\n"],"Additional":["addPrimaryWeaponItem","removePrimaryWeaponItem","removeAllPrimaryWeaponItems","weaponsItems","handgunItems","secondaryWeaponItems"]},{"Name":"primaryWeaponMagazine","Desc":" Returns either single element array, containing class name of currently loaded in the primary weapon magazine, or an empty array if unit has no primary weapon or primary weapon is not loaded. This command is used for infantry weapons only.  ","Syn":{"Syntax":" primaryWeaponMagazine unit ","Params":["unit: Object"],"Return":" Array "},"Examples":["hint primaryWeaponMagazine player; //[\"30Rnd_65x39_caseless_mag\"]\n","_array = primaryWeaponMagazine player;\nif (count _array \u003e 0) then {\n\u0009hint (\"Primary weapon is loaded with \" + (_array select 0) + \"!\");\n} else {\n\u0009if (primaryWeapon player != \"\") then {\n\u0009\u0009hint \"Primary weapon is not loaded!\";\n\u0009} else {\n\u0009\u0009hint \"Player doesn't have a primary weapon!\";\n\u0009};\n};\n"],"Additional":["primaryWeapon","primaryWeaponItems","addPrimaryWeaponItem","removePrimaryWeaponItem","removeAllPrimaryWeaponItems","handgunMagazine","secondaryWeaponMagazine"]},{"Name":"priority","Desc":" Return the priority of the task. ","Syn":{"Syntax":" priority task ","Params":["task: Task"],"Return":" Number "},"Examples":["_prioTsk01 = priority task01"],"Additional":["createSimpleTask","simpleTasks"]},{"Name":"private","Desc":" Sets a variable to the innermost scope. The variable has to be local. ","Syn":{"Syntax":" private variableName \u003cbr\u003e(Alternate Syntax exists check Read more)","Params":["variableName: String"],"Return":" Nothing "},"Examples":["private \"_varname\";","private [\"_varname1\", \"_varname2\"];"],"Additional":["Scope"]},{"Name":"processDiaryLink","Desc":" Open the diary screen on the record specified by link.  ","Syn":{"Syntax":" processDiaryLink link ","Params":["link:  -"],"Return":" Nothing "},"Examples":["Example needed"],"Additional":["createDiaryLink","createDiaryRecord","createDiarySubject","diarySubjectExists"]},{"Name":"productVersion","Desc":" Returns the product's friendly name, identifier and version. ","Syn":{"Syntax":" productVersion ","Params":null,"Return":" Array - [friendlyName, productID, version, releaseNumber]\n\n String - friendlyName\n\n String - productID\n\n Number - version\n\n Number - releaseNumber\n\n\n"},"Examples":["hint str productVersion;   // would return [\"Arma 2 OA\", \"arma2oa\", 162, 95208] on Arma 2 OA 1.62.95208"],"Additional":["supportInfo"]},{"Name":"profileName","Desc":" Returns profile name.  ","Syn":{"Syntax":" profileName ","Params":null,"Return":" String "},"Examples":["_myProfileName = profileName;\n"],"Additional":["See also needed"]},{"Name":"profileNamespace","Desc":" Return the global namespace attached to the active user profile.\n\nUse setVariable and getVariable to save and load data to this Namespace. A variable can be deleted by setting its value to nil. \n\nThe variables are stored next to the user profile in a file named myUsername.vars.TakeOnHProfile (e.g. in the My Documents\\Take On Helicopters folder). ","Syn":{"Syntax":" profileNamespace","Params":null,"Return":" Namespace "},"Examples":["_namespace = profileNamespace;","profileNamespace setVariable [\"var_kills\",10000];\n_playerKills = profileNamespace getVariable \"var_kills\";"],"Additional":["saveProfileNamespace","uiNamespace","parsingNamespace","missionNamespace"]},{"Name":"progressLoadingScreen","Desc":" If loading screen is show,set progress bar to the given value (from interval [0,1]) ","Syn":{"Syntax":" progressLoadingScreen progress ","Params":["progress: Number -"],"Return":" Nothing "},"Examples":["startLoadingScreen [\"Loading My Mission\"];//Batch of codeprogressLoadingScreen 0.5;//Batch of codeendLoadingScreen;"],"Additional":["startLoadingScreen","endLoadingScreen"]},{"Name":"progressPosition","Desc":" Returns the current position in the progress bar. ","Syn":{"Syntax":" progressPosition control ","Params":["control:  -"],"Return":" Number "},"Examples":["_pos = progressPosition _control"],"Additional":["See also needed"]},{"Name":"progressSetPosition","Desc":" Sets progress position of the progress bar (DialogControls-ProgressBar) ","Syn":{"Syntax":" control progressSetPosition pos ","Params":["control: Control - progress bar control\n\n","pos: Number - 0: no progress; 1: full progress"],"Return":" Nothing "},"Examples":["_control progressSetPosition 0.5","with uiNamespace do {\n\u0009bar = findDisplay 46 ctrlCreate [\"RscProgress\", -1]; \n\u0009bar ctrlSetPosition [0,0,1,0.01]; \n\u0009bar ctrlCommit 0;\n\u0009bar progressSetPosition 0.75; \n};"],"Additional":["progressPosition","sliderSetPosition"]},{"Name":"publicVariable","Desc":" Broadcast missionNamespace variable and its value to all computers. If the variable is undefined or nil no broadcast happens.\n\nOnly type Number is supported in version 1.33 and before.\n\nFollowing Types are supported since version 1.34: \n\n Number\n\n Boolean\n\n Object\n\n Group\n\n\nFollowing Types are supported since version ArmA v1.00: \n\n String\n\n\nSince version ArmA v1.09:\nAny value can be transferred, including\n\n Array \n\n Code\n\n\nThe only limitation is you cannot transfer references to entities which are local, like scripts, displays, or local objects. Team Member is also not supported.\n\n\n\n\n\n \n\n In Arma 3 it is possible to broadcast nil value\n\n","Syn":{"Syntax":" publicVariable varName ","Params":["varName: String"],"Return":" Nothing "},"Examples":["publicVariable \"CTFscoreOne\" "],"Additional":["MP editing guide","addPublicVariableEventHandler","publicVariableClient","publicVariableServer"]},{"Name":"publicVariableClient","Desc":" Send the variable value to the client computer - same limitations regarding variable type as publicVariable.\n\nThe Client ID is the temporary ID given to a connected client for that session. You can find out this ID with the owner command (using it on a player's character, for example, will give you that players client ID).\n\n\n\n\n\n \n\n In Arma 3 it is possible to broadcast nil value\n ","Syn":{"Syntax":" clientID publicVariableClient varName ","Params":["clientID: Number\n\n","varName: String"],"Return":" Nothing "},"Examples":["3 publicVariableClient \"CTFscoreOne\";"],"Additional":["owner","publicVariable","publicVariableServer","addPublicVariableEventHandler"]},{"Name":"publicVariableServer","Desc":" Send the variable value to the server - same limitations regarding variable type as publicVariable. \n\n\n\n\n \n\n In Arma 3 it is possible to broadcast nil value\n","Syn":{"Syntax":" publicVariableServer varName ","Params":["varName: String"],"Return":" Nothing "},"Examples":["publicVariableServer \"CTFscoreOne\";"],"Additional":["publicVariable","publicVariableClient","addPublicVariableEventHandler"]},{"Name":"pushBack","Desc":" Insert an element to the back of the given array. This command modifies the original array. ","Syn":{"Syntax":" array pushBack element","Params":["array: Array\n\n","element: Anything"],"Return":" Nothing (as of Arma 3 v1.29.127022, the return is Number - index of inserted element)"},"Examples":["_arr = [1,2,3];\n_arr pushBack 4;\nhint str _arr; //[1,2,3,4]","_arr = [1,[2,4],3];\n(_arr select 1) pushBack [5,6];\n_arr //[1,[2,4,[5,6]],3]"],"Additional":["set","resize","reverse","count","find","in","forEach","deleteAt","deleteRange","BIS_fnc_arrayPushStack","BIS_fnc_arrayPush"]},{"Name":"putWeaponPool","Desc":" Transfer weapons and magazines from weapon pool into cargo of object obj. Used in campaign to transfer weapons into next mission. ","Syn":{"Syntax":" putWeaponPool object ","Params":["object: Object"],"Return":" Nothing "},"Examples":["Example needed"],"Additional":["See also needed"]},{"Name":"queryItemsPool","Desc":" Returns the number of items of type in the weapon pool (used in campaigns to transfer weapons to the next mission). ","Syn":{"Syntax":" queryItemsPool name ","Params":["name: String"],"Return":" Number "},"Examples":["Example needed"],"Additional":["See also needed"]},{"Name":"queryMagazinePool","Desc":" Return number of magazines of type name in magazine pool (used in campaign to transfer magazines into next mission). ","Syn":{"Syntax":" Number = queryMagazinePool name ","Params":["name: String"],"Return":" Number "},"Examples":["_num = queryMagazinePool \"M16\";"],"Additional":["addMagazineGlobal","addMagazine","addMagazine_array","addMagazines","addMagazineCargo","addMagazineCargoGlobal","addMagazineTurret","addWeaponPool","clearMagazinePool","addMagazineAmmoCargo"]},{"Name":"queryWeaponPool","Desc":" Return number of weapons of type name in weapon pool (used in campaign to transfer weapons into next mission). ","Syn":{"Syntax":"  Number = queryWeaponPool name ","Params":["name: String"],"Return":" Number "},"Examples":["_num=queryWeaponPool \"M16\""],"Additional":["See also needed"]},{"Name":"rad","Desc":" Convert x from Degrees to Radians. 360 degrees is equal to 2 multiplied with pi. ","Syn":{"Syntax":" Number = rad x ","Params":["x: Number"],"Return":" Number "},"Examples":["_radians = rad 180  \nResult is 3.1415 (eg pi"],"Additional":["Math Commands"]},{"Name":"radioChannelAdd","Desc":" Add the units to the custom radio channel. ","Syn":{"Syntax":" index radioChannelAdd units","Params":["index: Number - custom radio channel index\n\n","index: Array - list of characters"],"Return":" Nothing "},"Examples":["2 radioChannelAdd [player, myCharacter1];"],"Additional":["radioChannelCreate","radioChannelRemove","radioChannelSetCallSign","radioChannelSetLabel"]},{"Name":"radioChannelCreate","Desc":" Create a custom radio channel with the given color, label, call sign and registered characters. The index returned can be used to manipulate the created channel later. \n\nThere are 10 slots for custom radio channels. The command will find an unused index in this range and create it when found. ","Syn":{"Syntax":" radioChannelCreate [color, label, callSign, characters]","Params":["color: Array - RGBA color values\n\n","label: String - label","callSign: String - call sign","characters: Array - list of registered characters"],"Return":" Number "},"Examples":["_index = radioChannelCreate [[0.96, 0.34, 0.13, 0.8], \"Q-dance Radio\", \"%UNIT_NAME\", [player]];"],"Additional":["radioChannelAdd","radioChannelRemove","radioChannelSetCallSign","radioChannelSetLabel","customChat","customRadio"]},{"Name":"radioChannelRemove","Desc":" Remove the characters from the custom radio channel. ","Syn":{"Syntax":" index radioChannelRemove characters","Params":["index : Number - custom radio channel index\n\n","characters : Array - list of characters"],"Return":" Nothing "},"Examples":["3 radioChannelRemove [myCharacter1, myCharacter2];"],"Additional":["radioChannelAdd","radioChannelCreate","radioChannelSetCallSign","radioChannelSetLabel"]},{"Name":"radioChannelSetCallSign","Desc":" Set the custom radio channel's call sign. \n\nAvailable special parameters:\n\n $KEY (reference to a localized text)\n\n %CHANNEL_LABEL\n\n %UNIT_SIDE\n\n %UNIT_NAME\n\n %UNIT_RANK\n\n %UNIT_ID\n\n %UNIT_REF\n\n %UNIT_GRP_NAME\n\n %UNIT_GRP_LEADER\n\n %UNIT_VEH_NAME\n\n %UNIT_VEH_POSITION ","Syn":{"Syntax":" index radioChannelSetCallSign callSign","Params":["index : Number - custom radio channel index\n\n","callSign : String - custom call sign"],"Return":" Nothing "},"Examples":["4 radioChannelSetCallSign \"%UNIT_NAME\";"],"Additional":["radioChannelAdd","radioChannelCreate","radioChannelRemove","radioChannelSetLabel"]},{"Name":"radioChannelSetLabel","Desc":" Set the custom radio channel's label. ","Syn":{"Syntax":" index radioChannelSetLabel label","Params":["index : Number - custom radio channel index\n\n","label : String - label"],"Return":" Nothing "},"Examples":["5 radioChannelSetLabel \"Q-dance Radio\";"],"Additional":["radioChannelAdd","radioChannelCreate","radioChannelRemove","radioChannelSetCallSign"]},{"Name":"radioVolume","Desc":" Checks the current radio volume (set by fadeRadio). ","Syn":{"Syntax":" Number = radioVolume ","Params":null,"Return":" Number "},"Examples":["_volume = radioVolume;"],"Additional":["See also needed"]},{"Name":"rain","Desc":" Return the current rain density. ","Syn":{"Syntax":" Number = rain ","Params":null,"Return":" Number "},"Examples":["_RainLevel=rain"],"Additional":["setRain"]},{"Name":"rainbow","Desc":" Returns the current rainbow intensity.  ","Syn":{"Syntax":" rainbow ","Params":null,"Return":" Number "},"Examples":["Example needed"],"Additional":["setRainbow"]},{"Name":"random","Desc":" Random real (floating point) value from 0 (inclusive) to x (not inclusive). ","Syn":{"Syntax":" Number = random x ","Params":["x: Number"],"Return":" Number "},"Examples":["_rNumber = random 1;","_rNumber = random -10;","To select random value from an array:\n_array = [\"apples\", \"pears\", \"bananas\", \"M16\"];\n_random = _array select floor random count _array;"],"Additional":["Math Commands"]},{"Name":"rank","Desc":" Return the rank of the given unit. \nRank can be one of the following:\n\n\"PRIVATE\"\n\n\"CORPORAL\"\n\n\"SERGEANT\"\n\n\"LIEUTENANT\"\n\n\"CAPTAIN\"\n\n\"MAJOR\"\n\n\"COLONEL\" ","Syn":{"Syntax":" String = rank unitName ","Params":["unitName: Object"],"Return":" String "},"Examples":["_rank=Rank _TankOne"],"Additional":["Rating Values","rating","addRating","setUnitRank"]},{"Name":"rankId","Desc":" Return the rank of the given unit for comparison.\n\nValue may be :\n\n0 - Private\n\n1 - Corporal\n\n2 - Sergeant\n\n3 - Lieutenant\n\n4 - Captain\n\n5 - Major\n\n6 - Colonel ","Syn":{"Syntax":" rankId unit ","Params":["unit: Object"],"Return":" Number "},"Examples":["_myIdRank = rankId player;"],"Additional":["rank"]},{"Name":"rating","Desc":" Check unit rating. Rating is increased for killing enemies, decreased for killing friendlies (see Rating Values). Can be changed via addRating by the mission designer. \n\nThe rating of the player is displayed as the \"score\" at the end of the mission. Via Description.ext one can define how many points it takes to get a perfect score, as well as the number of stars.","Syn":{"Syntax":" Number = rating unitName","Params":["unitName: Object"],"Return":" Number "},"Examples":["_score = rating player "],"Additional":["Side relations","Rating Values","addRating","rank","setUnitRank"]},{"Name":"rectangular","Desc":" Checks if a location is rectangular (returns true) or elliptical (returns false).","Syn":{"Syntax":" rectangular location ","Params":["location: Location"],"Return":" Boolean "},"Examples":[" _isRect = rectangular myLocation"],"Additional":["setRectangular"]},{"Name":"registeredTasks","Desc":" List all registered task types. ","Syn":{"Syntax":" registeredTasks member ","Params":["member: Team Member"],"Return":"Array of Strings "},"Examples":["tasklist = registeredTasks teamMember player;","_rabbit = createAgent [\"Rabbit_F\", position player,[], 0, \"None\"];\nhint str registeredTasks teamMember _rabbit;\nHint shows [\"Animal Main Task\"] in Arma 3."],"Additional":["registerTask"]},{"Name":"registerTask","Desc":" Register a new task type. Parameters are defined in the given config class (subclass of CfgTasks).  ","Syn":{"Syntax":" teamMember registerTask entry name ","Params":null,"Return":" "},"Examples":["Example needed"],"Additional":["See also needed"]},{"Name":"reload","Desc":" Reload all weapons ","Syn":{"Syntax":" reload unitName ","Params":["unitName: Object"],"Return":" Nothing "},"Examples":["if (needReload player == 1) then {reload player};"],"Additional":["reloadEnabled","needReload"]},{"Name":"reloadEnabled","Desc":" Check whether magazine is reloaded whenever emptied. ","Syn":{"Syntax":" Boolean =  reloadEnabled unitName","Params":["unitName: Object"],"Return":" Boolean "},"Examples":["Example needed"],"Additional":["reload","needReload"]},{"Name":"remoteControl","Desc":" Switch on remote control of the unit. ","Syn":{"Syntax":" who remoteControl whom ","Params":["who: Object -\n\n","whom: Object -"],"Return":" Nothing "},"Examples":["player remoteControl driver UAV;\ndriver UAV switchCamera \"Internal\"; //switchCamera required "],"Additional":["See also needed"]},{"Name":"removeAction","Desc":" Removes user added action with given id index. This only removes actions added with the addAction command. You cannot remove default game actions, such as reload.\n\nThis command has local effect. The action will only be removed on the computer that executes the command. ","Syn":{"Syntax":" unit removeAction index ","Params":["unit: Object - unit, vehicle or static object\n\n","index: Number - action id returned by addAction"],"Return":" Nothing "},"Examples":["player removeAction 0;"],"Additional":["addAction","removeAllActions","setUserActionText"]},{"Name":"removeAllActions","Desc":" Removes all unit's user added actions.  ","Syn":{"Syntax":" removeAllActions unit ","Params":["unit: Object - unit, vehicle or static object"],"Return":" Nothing "},"Examples":["removeAllActions player;"],"Additional":["addAction","removeAction","setUserActionText"]},{"Name":"removeAllAssignedItems","Desc":" Unassigns and deletes all linked items from inventory (map, compass, headgear, goggles etc.).  ","Syn":{"Syntax":" removeAllAssignedItems unit ","Params":["unit: Object"],"Return":" Nothing "},"Examples":["removeAllAssignedItems player;"],"Additional":["assignedItems","linkItem","unlinkItem","assignItem","unassignItem","addItem","removeItem","removeAllContainers"]},{"Name":"removeAllContainers","Desc":" Removes all containers from the unit.  ","Syn":{"Syntax":" removeAllContainers unit ","Params":["unit: Object"],"Return":" Nothing "},"Examples":["removeAllContainers player;"],"Additional":["removeAllAssignedItems","removeGoggles","removeHeadgear","removeItem","removeItems","removeUniform","removeVest"]},{"Name":"removeAllCuratorAddons","Desc":" Restrict access to all addons for given curator. ","Syn":{"Syntax":" removeAllCuratorAddons curatorObj ","Params":["curatorObj: Object - Curator module."],"Return":" Nothing "},"Examples":["removeAllCuratorAddons myCurator;"],"Additional":["Curator","addCuratorAddons","removeCuratorAddons","curatorAddons"]},{"Name":"removeAllCuratorCameraAreas","Desc":" Delete all curator camera areas. ","Syn":{"Syntax":" removeAllCuratorCameraAreas curatorObj ","Params":["curatorObj: Object - Curator module."],"Return":" Nothing "},"Examples":["removeAllCuratorCameraAreas myCurator;"],"Additional":["Curator","addCuratorCameraArea","removeCuratorCameraArea","curatorCameraArea"]},{"Name":"removeAllCuratorEditingAreas","Desc":" Delete all curator edit areas. ","Syn":{"Syntax":" removeAllCuratorEditingAreas curatorObj ","Params":["curatorObj: Object - Curator module."],"Return":" Nothing "},"Examples":["removeAllCuratorEditingAreas myCurator;"],"Additional":["Curator","addCuratorEditingArea","removeCuratorEditingArea","curatorEditingArea"]},{"Name":"removeAllEventHandlers","Desc":" Removes all event handlers of given type that were added by addEventHandler. Since VBS2 v1.24 can be applied on individual weapon rounds. ","Syn":{"Syntax":" objectName removeAllEventHandlers handlerType ","Params":["handlerType: String. See Event Handlers for list"],"Return":" Nothing "},"Examples":["player removeAllEventHandlers \"killed\";"],"Additional":["EventHandlers list","removeEventHandler","addEventHandler"]},{"Name":"removeAllHandgunItems","Desc":" Removes all items from weapon except magazine.  ","Syn":{"Syntax":" removeAllHandgunItems unit ","Params":["unit: Object"],"Return":" Nothing "},"Examples":["Example needed"],"Additional":["addHandgunItem","removeHandgunItem"]},{"Name":"removeAllItems","Desc":" Removes all special items from the unit. ","Syn":{"Syntax":" removeAllItems unit ","Params":["unit: Object -"],"Return":" Nothing "},"Examples":["removeAllItems unitName;"],"Additional":["removeAllWeapons","removeMagazines"]},{"Name":"removeAllItemsWithMagazines","Desc":" Removes all itemsWithMagazines from the uniform, vest and backpack. ","Syn":{"Syntax":" removeAllItemsWithMagazines unit ","Params":["unit: Object"],"Return":" Nothing "},"Examples":["removeAllItemsWithMagazines player;"],"Additional":["itemsWithMagazines"]},{"Name":"removeAllMissionEventHandlers","Desc":" Removes all mission event handlers of the given type which were added by addMissionEventHandler.  ","Syn":{"Syntax":" removeAllMissionEventHandlers type ","Params":["type: String"],"Return":" Nothing "},"Examples":["removeAllMissionEventHandlers \"Loaded\";\n"],"Additional":["removeMissionEventHandler","addMissionEventHandler"]},{"Name":"removeAllMPEventHandlers","Desc":" Removes all MP event handlers of the given type which were added by addMPEventHandler. Command needs to be executed only on one PC for MP event handler to be removed globally. ","Syn":{"Syntax":" objectName removeAllMPEventHandlers \"event\" ","Params":["objectName: Object\n\n","event: String"],"Return":" Nothing "},"Examples":[" player removeAllMPEventHandlers \"mpkilled\"; "],"Additional":["EventHandlers list","addMPEventHandler","removeMPEventHandler"]},{"Name":"removeAllMusicEventHandlers","Desc":" Removes all music track event handlers of given type.  ","Syn":{"Syntax":" removeAllMusicEventHandlers type ","Params":["type: String - \"MusicStart\" or \"MusicStop\""],"Return":" Nothing "},"Examples":["removeAllMusicEventHandlers \"MusicStart\"","removeAllMusicEventHandlers \"MusicStop\""],"Additional":["addMusicEventHandler","setMusicEventHandler","removeMusicEventHandler","playMusic"]},{"Name":"removeAllPrimaryWeaponItems","Desc":" Removes all items from weapon except magazine.  ","Syn":{"Syntax":" removeAllPrimaryWeaponItems unit ","Params":["unit: Object"],"Return":" Nothing "},"Examples":["Example needed"],"Additional":["addPrimaryWeaponItem","removePrimaryWeaponItem"]},{"Name":"removeAllWeapons","Desc":" Remove all weapons and magazines of the unit. \n\nOn vehicles only ammo is removed \n\nDoes not remove map, compass, radio. Use \n unitname removeweapon \"itemmap\"\nfor that purpose.\n","Syn":{"Syntax":" removeAllWeapons unitName","Params":["unitName: Object"],"Return":" Nothing "},"Examples":["removeAllWeapons player"],"Additional":["removeWeapon","setVehicleAmmo","clearWeaponCargo","clearMagazineCargo","removeAllItems","removeBackpack"]},{"Name":"removeBackpack","Desc":" Removes unit's backpack ","Syn":{"Syntax":" removeBackpack unit","Params":["unit: Object"],"Return":" Nothing "},"Examples":["removeBackpack this;","removeBackpack mySoldierDude;"],"Additional":["removeBackpackGlobal","backpackContainer","firstBackpack","unitBackpack","backpack","backpackCargo","getBackpackCargo","backpackItems","addBackpack","addBackpackCargo","addBackpackCargoGlobal","clearBackpackCargo","clearBackpackCargoGlobal","clearAllItemsFromBackpack","loadBackpack","backpackSpaceFor","canAddItemToBackpack","addItemToBackpack","removeItemFromBackpack","everyBackpack"]},{"Name":"removeCuratorAddons","Desc":" Restrict curator use of given addons. ","Syn":{"Syntax":" curatorObj removeCuratorAddons addons ","Params":["curatorObj: Object - Curator module.\n\n","addons: Array"],"Return":" Nothing "},"Examples":["curatorModule removeCuratorAddons [addon1,addon2]"],"Additional":["Curator","addCuratorAddons","removeAllCuratorAddons","curatorAddons"]},{"Name":"removeCuratorCameraArea","Desc":" Removes curator camera area. ","Syn":{"Syntax":" curatorObj removeCuratorCameraArea cameraAreaID ","Params":["curatorObj: Object - Curator module.\n\n","cameraAreaID: Number"],"Return":" Nothing "},"Examples":["myCurator removeCuratorCameraArea 3;"],"Additional":["Curator","addCuratorCameraArea","removeAllCuratorCameraAreas","curatorCameraArea"]},{"Name":"removeCuratorEditableObjects","Desc":" Unregister objects which can be edited by a curator. ","Syn":{"Syntax":" curatorObj removeCuratorEditableObjects [[objects],removeCrew] ","Params":["curatorObj: Object - Curator module.\n\n","objects: Array","removeCrew: Boolean"],"Return":" Nothing "},"Examples":["curatorModule removeCuratorEditableObjects [[cursorTarget],true]"],"Additional":["Curator","addCuratorEditableObjects","curatorEditableObjects"]},{"Name":"removeCuratorEditingArea","Desc":" Removes editing area for given curator. ","Syn":{"Syntax":" curatorObj removeCuratorEditingArea editAreaID ","Params":["curatorObj: Object - Curator module.\n\n","editAreaID: Number"],"Return":" Nothing "},"Examples":["myCurator removeCuratorEditingArea 3;"],"Additional":["Curator","addCuratorEditingArea","removeAllCuratorEditingAreas","curatorEditingArea"]},{"Name":"removeDrawIcon","Desc":" Removes an icon for an editor object. ","Syn":{"Syntax":" map removeDrawIcon [object,string identifier] ","Params":["map: Control -\n\n","[object,string identifier]: Array -"],"Return":" Nothing "},"Examples":["Example needed"],"Additional":["See also needed"]},{"Name":"removeDrawLinks","Desc":" Remove all drawn links for the given editor object for the given editor,object type. Pass an empty string as param type to remove all draw,links for an object.  ","Syn":{"Syntax":" map removeDrawLinks [from,param type] ","Params":["map: Control -\n\n","[from,param type]: Array -"],"Return":" Nothing "},"Examples":["Example needed"],"Additional":["See also needed"]},{"Name":"removeEventHandler","Desc":" Removes event handler added by addEventHandler. \n\nWhen any handler is removed, all handler indices higher than the deleted one should be decremented. ","Syn":{"Syntax":" objectName removeEventHandler [type, index]","Params":["objectName: Object\n\n","[type, index]: Array","type: String","index: Number. Value returned from addEventHandler"],"Return":" Nothing "},"Examples":["player removeEventHandler [\"killed\", 0]"],"Additional":["EventHandlers list","removeAllEventHandlers","addEventHandler"]},{"Name":"removeFromRemainsCollector","Desc":" Removes vehicles/units from disposal manager, added earlier with addToRemainsCollector ","Syn":{"Syntax":" removeFromRemainsCollector remains ","Params":["remains: Array - array of vehicles/units"],"Return":" Nothing "},"Examples":["removeFromRemainsCollector [unit1, unit2, vehicle1];"],"Additional":["addToRemainsCollector","isInRemainsCollector"]},{"Name":"removeGoggles","Desc":" Removes goggles from unit (diver goggles for example). This command does not remove NVGoggles. Use unassignItem and removeItem or just unlinkItem for latter. ","Syn":{"Syntax":" removeGoggles unit ","Params":["unit: Object"],"Return":" Nothing "},"Examples":[" removeGoggles assaultDiver;\n"],"Additional":["goggles","addGoggles"]},{"Name":"removeGroupIcon","Desc":" Remove icon with given ID from group. ","Syn":{"Syntax":" group removeGroupIcon icon ID ","Params":["group: Group -\n\n","icon ID: Number -"],"Return":" Nothing "},"Examples":["_target removeGroupIcon (_target getvariable \"hc_attackicon\");"],"Additional":["addGroupIcon","clearGroupIcons","getGroupIcon","getGroupIconParams","groupIconSelectable","groupIconsVisible","onGroupIconClick","setGroupIcon","setGroupIconParams","setGroupIconsSelectable","setGroupIconsVisible"]},{"Name":"removeHandgunItem","Desc":" Removes given item from the weapon cargo space.  ","Syn":{"Syntax":" unit removeHandgunItem item ","Params":["unit: Object\n\n","item: String - Config class"],"Return":" Nothing "},"Examples":["Example needed"],"Additional":["addHandgunItem","removeAllHandgunItems"]},{"Name":"removeHeadgear","Desc":" Removes headgear from a unit. If unit has no headgear command quietly fails. ","Syn":{"Syntax":" removeHeadgear unit ","Params":["unit: Object"],"Return":" Nothing "},"Examples":["removeHeadgear player;"],"Additional":["headgear","addHeadgear"]},{"Name":"removeItem","Desc":" Removes item from the inventory.  ","Syn":{"Syntax":" unit removeItem item ","Params":["unit: Object\n\n","item: String"],"Return":" Nothing "},"Examples":["bluforUnit unassignItem \"NVGoggles\";\nbluforUnit removeItem \"NVGoggles\";\nopforUnit unassignItem \"NVGoggles_OPFOR\";\nopforUnit removeItem \"NVGoggles_OPFOR\";\nindependentUnit unassignItem \"NVGoggles_INDEP\";\nindependentUnit removeItem \"NVGoggles_INDEP\";"],"Additional":["removeItems","unassignItem","addItem","assignItem","assignedItems","linkItem","unlinkItem","removeAllAssignedItems"]},{"Name":"removeItemFromBackpack","Desc":" Removes item from soldier's backpack. ","Syn":{"Syntax":" unit removeItemFromBackpack item ","Params":["unit: Object\n\n","item: String"],"Return":" Nothing "},"Examples":["Example needed"],"Additional":["backpackContainer","firstBackpack","unitBackpack","backpack","backpackCargo","getBackpackCargo","backpackItems","addBackpack","addBackpackCargo","addBackpackCargoGlobal","removeBackpack","clearBackpackCargo","clearBackpackCargoGlobal","clearAllItemsFromBackpack","loadBackpack","backpackSpaceFor","canAddItemToBackpack","addItemToBackpack","everyBackpack"]},{"Name":"removeItemFromUniform","Desc":" Removes item from soldier's uniform. Can be used with magazines and weapons too. ","Syn":{"Syntax":" unit removeItemFromUniform item ","Params":["unit: Object\n\n","item: String"],"Return":" Nothing "},"Examples":["Example needed"],"Additional":["addItemToUniform"]},{"Name":"removeItemFromVest","Desc":" Removes item from soldier's vest. ","Syn":{"Syntax":" unit removeItemFromVest item ","Params":["unit: Object\n\n","item: String"],"Return":" Nothing "},"Examples":["Example needed"],"Additional":["addItemToVest"]},{"Name":"removeItems","Desc":" Removes all items with given template from the inventory.  ","Syn":{"Syntax":" unit removeItems item ","Params":["unit: Object\n\n","item: String"],"Return":" Nothing "},"Examples":["player removeItems \"FirstAidKit\";\n"],"Additional":["removeItem","removeAllAssignedItems","unassignItem","assignItem","assignedItems","addItem","linkItem","unlinkItem"]},{"Name":"removeMagazine","Desc":" Remove magazine from the unit. \nNote: You may create invalid combinations with this function. When doing so, application behaviour is undefined. ","Syn":{"Syntax":" unitName removeMagazine magazineName ","Params":["unitName: Object\n\n","magazineName: String - see weapons)"],"Return":" Nothing "},"Examples":["player removeMagazine \"M16\""],"Additional":["removeMagazines","removeWeapon","removeMagazinesTurret","removeMagazineTurret","setVehicleAmmo"]},{"Name":"removeMagazineGlobal","Desc":" Removes the magazine from the unit.  ","Syn":{"Syntax":" unit removeMagazineGlobal magazineName ","Params":["unit: Object\n\n","magazineName: String"],"Return":" Nothing "},"Examples":["player removeMagazineGlobal \"30Rnd_65x39_caseless_mag\";"],"Additional":["removeMagazine","removeMagazines"]},{"Name":"removeMagazines","Desc":" Remove all magazines of given type from the unit.\nNote: You may create invalid combinations with this function. When doing so, application behaviour is undefined. ","Syn":{"Syntax":" unitName removeMagazines magazineName ","Params":["unitName: Object\n\n","magazineName: String"],"Return":" Nothing "},"Examples":["player removeMagazines \"M16\";"],"Additional":["magazines","removeMagazine","removeWeapon","removeMagazinesTurret","removeMagazineTurret","setVehicleAmmo"]},{"Name":"removeMagazinesTurret","Desc":" Removes all magazines of the given type from the unit. Use turret path [-1] for driver's turret. \n\nNote: you may create invalid combinations by using this function. When doing so, application behaviour is undefined. ","Syn":{"Syntax":" vehicle removeMagazinesTurret [magazineName, turretPath]","Params":["vehicle: Object\n\n","[weaponName, turretPath]: Array","magazineName: String","turretPath: Array"],"Return":" Nothing "},"Examples":["vehicle player removeMagazinesTurret [\"60rnd_cmflaremagazine\",[-1]]","_tank removeMagazinesTurret [\"20Rnd_120mmSABOT_M1A2\",[0]]"],"Additional":["addMagazineTurret","magazinesTurret","removeMagazineTurret","weaponsTurret","addWeaponTurret","removeWeaponTurret","turretLocal"]},{"Name":"removeMagazineTurret","Desc":" Removes the magazine from the turret. Use turret path [-1] for driver's turret.\n\nNote: you may create invalid combinations by using this function. When doing so, application behaviour is undefined. ","Syn":{"Syntax":" vehicle removeMagazineTurret [magazineName, turretPath]","Params":["vehicle: Object\n\n","[weaponName, turretPath]: Array","magazineName: String","turretPath: Array"],"Return":" Nothing "},"Examples":["vehicle player removeMagazineTurret [\"60rnd_cmflaremagazine\",[-1]]","_tank removeMagazineTurret [\"20Rnd_120mmSABOT_M1A2\",[0]]"],"Additional":["addMagazineTurret","magazinesTurret","removeMagazinesTurret","weaponsTurret","addWeaponTurret","removeWeaponTurret","turretLocal"]},{"Name":"removeMenuItem","Desc":" Removes a previously added menu item. ","Syn":{"Syntax":" map removeMenuItem index of menu item to delete ","Params":["map: Control -\n\n","index of menu item to delete: Number -"],"Return":" Nothing "},"Examples":["Example needed"],"Additional":["See also needed"]},{"Name":"removeMissionEventHandler","Desc":" Removes mission event handler added by addMissionEventHandler.\nWhen any handler is removed, all handler indices higher that the deleted one should be decremented. ","Syn":{"Syntax":" removeMissionEventHandler [type, index] ","Params":["type: String\n\n","index: Number - Index is returned by addMissionEventHandler."],"Return":" Nothing "},"Examples":["\nfor \"_i\" from 0 to 4 do {\n missionNamespace setVariable [ format [\"handler%1\",_i],addMissionEventHandler [\"Loaded\",\"hint \"\"_i\"\";\"]];\n};\nremoveMissionEventHandler [\"Loaded\",handler2]; //Remove the third index under type \"Loaded\""],"Additional":["addMissionEventHandler","removeAllMissionEventHandlers"]},{"Name":"removeMPEventHandler","Desc":" Removes MP event handler added by addMPEventHandler. Format of handler is [type,index]. Index is returned by addMPEventHandler. When any handler is removed, all handler indices highter than the deleted one should decremented ","Syn":{"Syntax":" unitName removeMPEventHandler [\"event\", index] ","Params":["unitName: Object\n\n","event: String","index: Number"],"Return":" Nothing "},"Examples":["player removeMPEventHandler [\"killed\", 0]; "],"Additional":["EventHandlers list","addMPEventHandler","removeAllMPEventHandlers"]},{"Name":"removeMusicEventHandler","Desc":" Removes specified music track event handler.  ","Syn":{"Syntax":" removeMusicEventHandler [type, id] ","Params":["[type, id]: Array\n\n","type: String - \"MusicStart\" or \"MusicStop\"","id: Number - event handler id"],"Return":" Nothing "},"Examples":["removeMusicEventHandler [\"MusicStart\", 12];","removeMusicEventHandler [\"MusicStop\", 12];","\nhnd_stop = addMusicEventHandler [\"MusicStop\",{}];\nremoveMusicEventHandler [\"MusicStop\",hnd_stop];\n"],"Additional":["addMusicEventHandler","setMusicEventHandler","removeAllMusicEventHandlers","playMusic"]},{"Name":"removePrimaryWeaponItem","Desc":" Removes given item from the weapon cargo space.  ","Syn":{"Syntax":" unit removePrimaryWeaponItem item ","Params":["unit: Object\n\n","item: String"],"Return":" Nothing "},"Examples":["Example needed"],"Additional":["addPrimaryWeaponItem","removeAllPrimaryWeaponItems"]},{"Name":"removeSimpleTask","Desc":" Remove a simple task from the list of simple tasks. ","Syn":{"Syntax":" person removeSimpleTask task ","Params":["person: Object\n\n","task: Task"],"Return":" Nothing "},"Examples":["player removeSimpleTask _tskKillSpongebob"],"Additional":["Tasks","createSimpleTask","setSimpleTaskDescription","setSimpleTaskDestination","setTaskState","setTaskResult","taskState"]},{"Name":"removeSwitchableUnit","Desc":" Remove a unit from the list of units available for Team Switch. ","Syn":{"Syntax":" removeSwitchableUnit  unitName ","Params":["unitName: Object"],"Return":" Nothing "},"Examples":["Example needed"],"Additional":["Team_Switch"]},{"Name":"removeTeamMember","Desc":" Remove given member from given team. Effect is local, unless both member and team are local to PC on which command is executed, then effect is global. ","Syn":{"Syntax":" team removeTeamMember member ","Params":["team: Team Member\n\n","member: Team Member"],"Return":" Nothing "},"Examples":["_team removeTeamMember _teamMember;"],"Additional":["addTeamMember","createTeam","deleteTeam","forEachMemberTeam","teamMember","teamMemberNull","teamName","teams","teamType"]},{"Name":"removeUniform","Desc":" Removes uniform from unit.  ","Syn":{"Syntax":" removeUniform unit ","Params":["unit: Object"],"Return":" Nothing "},"Examples":["removeUniform player;\n"],"Additional":["addUniform","forceAddUniform","isUniformAllowed","uniform"]},{"Name":"removeVest","Desc":" Removes vest from unit.  ","Syn":{"Syntax":" removeVest unit ","Params":["unit: Object"],"Return":" Nothing "},"Examples":["removeVest player;\n"],"Additional":["addVest","vest"]},{"Name":"removeWeapon","Desc":" Remove weapon from a unit. The unit must be local to the computer where command is executed. For a global version of this command see removeWeaponGlobal.\n\nNote: It is possible to create invalid combinations with this command (ie, attempting to remove a weapon that a unit does not possess). When doing so, application behaviour is undefined. ","Syn":{"Syntax":" unit removeWeapon weapon ","Params":["unit: Object - unit or vehicle\n\n","weapon: String - weapon class name"],"Return":" Nothing "},"Examples":["player removeWeapon \"BAF_L85A2_RIS_SUSAT\";","An_2 removeWeapon \"M240_veh\";"],"Additional":["removeWeaponGlobal","addWeapon","removeAllWeapons"]},{"Name":"removeWeaponGlobal","Desc":" Remove a weapon from a unit. An attempt to remove a weapon, which is not in unit's possession, is simply ignored. ","Syn":{"Syntax":" unit removeWeaponGlobal weapon ","Params":["unit: Object - unit or vehicle\n\n","weapon: String - weapon class name"],"Return":" Nothing "},"Examples":["{\n\u0009_x removeWeaponGlobal \"Laserdesignator\";\n} forEach allUnits;","{\n\u0009if (typeOf _x == \"O_Heli_Attack_02_black_F\") then {\n\u0009\u0009_x removeWeaponGlobal \"rockets_Skyfire\";\n\u0009};\n} forEach vehicles;"],"Additional":["addWeaponGlobal","removeWeapon","removeMagazine","removeMagazineGlobal","removeAllWeapons"]},{"Name":"requiredVersion","Desc":" Check if version of application is available. If the current version is older than the required one, a warning message is shown and false is returned. \n\nVersion of format Major.Minor, e.g. 1.30","Syn":{"Syntax":" Boolean =  requiredVersion version ","Params":["version: String"],"Return":" Boolean "},"Examples":["if !(requiredVersion \"1.09\") exitWith {};"],"Additional":["See also needed"]},{"Name":"resetCamShake","Desc":" Stops any ongoing camera shake effects. Does not prevent new effects from being created. To disallow new effects altogether, enableCamShake should be used. ","Syn":{"Syntax":" resetCamShake","Params":null,"Return":" Nothing "},"Examples":["resetCamShake; "],"Additional":["enableCamShake","addCamShake","setCamShakeDefParams","setCamShakeParams"]},{"Name":"resetSubgroupDirection","Desc":" Resets direction of subgroup.  ","Syn":{"Syntax":" resetSubgroupDirection unit ","Params":["unit: Object - Subgroup member."],"Return":" Nothing "},"Examples":["Example needed"],"Additional":["See also needed"]},{"Name":"resistance","Desc":" Resistance side. \nWhen used in a format statement (hint format[\"%1\",resistance]), the string returned is \"GUER\".","Syn":{"Syntax":" resistance ","Params":null,"Return":" Side "},"Examples":["SQS:?((side _unit) == resistance) : hint \"This is a resistance unit!\"","SQF:if ((side _unit) == resistance) then {\n    hint \"This is a resistance unit!\";\n};"],"Additional":["side","west","east","civilian"]},{"Name":"resize","Desc":" Change array size. Can be used to add or remove elements from an array. ","Syn":{"Syntax":" arrayName resize count ","Params":["arrayName: Array\n\n","count: Number"],"Return":" Nothing "},"Examples":["_arrayOne resize 2"],"Additional":["Array","set","reverse","select","in","find","toArray","toString","forEach","count","pushBack","deleteAt","deleteRange"]},{"Name":"resources","Desc":" Returns the resources of a team member. Results are local to the PC on which command was executed. ","Syn":{"Syntax":" resources member ","Params":["member: Team Member -"],"Return":" Array "},"Examples":["Example needed"],"Additional":["addResources","deleteResources"]},{"Name":"respawnVehicle","Desc":" Set vehicle as respawnable in MP games.  ","Syn":{"Syntax":" vehicleName respawnVehicle [delay = -1, count = 0] ","Params":["vehicleName: Object\n\n","[delay = -1, count = 0]: Array","delay: Number. Default -1 (use respawnDelay from Description.ext)","count: Number. Default 0 (unlimited respawns)"],"Return":" Nothing "},"Examples":["_car respawnVehicle [5.0, 3];\n'car' will respawn at the predefined marker for the side after 5 seconds. The unit will respawn 3 times.","_car respawnVehicle [30];\n'car' will respawn at the predefined marker for the side after 30 seconds. The unit will respawn an unlimited number of times."],"Additional":["See also needed"]},{"Name":"restartEditorCamera","Desc":" Restarts the mission editor camera (if it was deleted by a script,for example). ","Syn":{"Syntax":" restartEditorCamera map ","Params":["map: Control"],"Return":" Nothing "},"Examples":["Example needed"],"Additional":["See also needed"]},{"Name":"reveal","Desc":" Reveals a unit to a group or another unit. \n\nThe knowledge value will be set to the highest level any unit of the revealing side has about the revealed unit. If the revealing side has no knowledge about the revealed unit, the value will be set to 1.\n\nSince ARMA 2 OA 1.60 the alternative syntax is available. Values greater than or equal 1.5 reveal the side of the unit, too.\n\nThe knowledge level can only be increased, not decreased by this command.  ","Syn":{"Syntax":" groupName reveal unitName \u003cbr\u003e(Alternate Syntax exists check Read more)","Params":["groupName: Object or Group  which receives revealing information\n\n","unitName: Object  which is revealed"],"Return":" Nothing "},"Examples":["_soldierOne reveal _soldierTwo; //soldierOne received information about soldierTwo","player reveal cursorTarget; //player receives information about the object below its cursor","_soldierOne reveal [_soldierTwo, 1.5];"],"Additional":["nearTargets","knowsAbout"]},{"Name":"revealMine","Desc":" Sets given mine as known to the side. (Knowledge about a mine is always shared across all units in a side.) ","Syn":{"Syntax":" side revealMine mine ","Params":["side: Side\n\n","mine: Object"],"Return":" Nothing "},"Examples":["west revealMine _mine;"],"Additional":["allMines","detectedMines","mineDetectedBy","createMine","mineActive"]},{"Name":"reverse","Desc":" Reverses given array by reference (modifies the original array, just like resize). ","Syn":{"Syntax":" reverse array ","Params":["array: Array"],"Return":" Nothing "},"Examples":["_arr = [1,2,3];\nreverse _arr;\nhint str _arr; //[3,2,1]","_wordArr = toArray \"gateman\";\nreverse _wordArr;\nhint toString _wordArr; //nametag"],"Additional":["set","resize","select","in","find","toArray","toString","forEach","count","pushBack"]},{"Name":"reversedMouseY","Desc":" Return if mouse vertical axe is inverted. ","Syn":{"Syntax":" reversedMouseY ","Params":null,"Return":" Boolean "},"Examples":["Example needed"],"Additional":["See also needed"]},{"Name":"roadsConnectedTo","Desc":" Find the road segments connected to the given road segment.  ","Syn":{"Syntax":" roadsConnectedTo roadSegment ","Params":["roadSegment: Object - road segment"],"Return":" Array of Objects - connected road segments"},"Examples":["_road = (player nearRoads 50) select 0;\n_connectedRoads = roadsConnectedTo _road;"],"Additional":["nearRoads"]},{"Name":"round","Desc":" Rounds up or down to the closest integer.  ","Syn":{"Syntax":" Number = round x ","Params":["x: Number"],"Return":" Number "},"Examples":["_val= round 5.25, result is 5","_val= round 5.55, result is 6"],"Additional":["Math Commands","ceil","floor"]},{"Name":"runInitScript","Desc":" Launch init.sqs or init.sqf scripts. ","Syn":{"Syntax":" runInitScript ","Params":null,"Return":" Nothing "},"Examples":["Example needed"],"Additional":["See also needed"]},{"Name":"safeZoneH","Desc":" Returns ratio of height of Safezone UI relative to the Absolute UI. See SafeZone ","Syn":{"Syntax":" SafeZoneH ","Params":null,"Return":" Number "},"Examples":[" _szH = safeZoneH;//returns a float value \u003e= 1.0 "],"Additional":["SafeZone","SafeZoneX","SafeZoneY","SafeZoneW"]},{"Name":"safeZoneW","Desc":" Returns ratio of width of Safezone UI relative to the Absolute UI. See SafeZone ","Syn":{"Syntax":" safeZoneW ","Params":null,"Return":" Number "},"Examples":[" _szW = safeZoneW; "],"Additional":["SafeZone","safeZoneX","safeZoneY","safeZoneH","safeZoneXAbs","safeZoneWAbs"]},{"Name":"safeZoneWAbs","Desc":" Returns SafeZone width (of all monitors, in case there's more than one) ","Syn":{"Syntax":" safeZoneWAbs ","Params":null,"Return":" Number "},"Examples":[" _szW = safeZoneWAbs; "],"Additional":["SafeZone","safeZoneH","safeZoneX","safeZoneY","safeZoneW"]},{"Name":"safeZoneX","Desc":" see SafeZone ","Syn":{"Syntax":" SafeZoneX ","Params":null,"Return":" Number "},"Examples":[" _szX = safeZoneX; //returns a float value \u003c 0.0 "],"Additional":["SafeZone","safeZoneY","safeZoneW","safeZoneH","safeZoneXAbs"]},{"Name":"safeZoneXAbs","Desc":" Returns SafeZone left border (of all monitors, in case there's more than one) ","Syn":{"Syntax":" safeZoneXAbs ","Params":null,"Return":" Number "},"Examples":[" _szX = safeZoneXAbs; "],"Additional":["SafeZone","safeZoneH","safeZoneX","safeZoneY","safeZoneW"]},{"Name":"safeZoneY","Desc":" see SafeZone ","Syn":{"Syntax":" SafeZoneY ","Params":null,"Return":" Number "},"Examples":[" _szY = safeZoneY; //returns a float value \u003c 0.0 "],"Additional":["SafeZone","SafeZoneX","SafeZoneW","SafeZoneH"]},{"Name":"saveGame","Desc":" Autosave game (used for Retry). ","Syn":{"Syntax":" saveGame ","Params":null,"Return":" Nothing "},"Examples":["saveGame;"],"Additional":["enableSaving","loadGame","savingEnabled"]},{"Name":"saveIdentity","Desc":" Saves person's identity to Objects.sav file in campaign directory as entry name. ","Syn":{"Syntax":" unitName saveIdentity name ","Params":["unitName: Object\n\n","name: String"],"Return":" Boolean "},"Examples":["player saveIdentity \"playerid\""],"Additional":["loadIdentity"]},{"Name":"saveJoysticks","Desc":" Saves joysticks key mappings into the joysticks.cfg file. Engine add these joysticks to the Joystick Scheme mapping dialog in options controls section.  ","Syn":{"Syntax":" saveJoysticks ","Params":null,"Return":" Nothing "},"Examples":["Example needed"],"Additional":["See also needed"]},{"Name":"saveOverlay","Desc":" Save the current overlay. ","Syn":{"Syntax":" saveOverlay map ","Params":["map: Control -"],"Return":" Nothing "},"Examples":["saveOverlay _map"],"Additional":["See also needed"]},{"Name":"saveProfileNamespace","Desc":" Saves the variables stored in profileNamespace to the persistent active user profile. \n\n\n Warning: this is a file operation, which makes it expensive! It is not recommended to do this at a high frequency in a loop for example. It is however also recommended not to change a large amount of variables and wait long before saving, because certain game crashes may cause a loss of data. \n\n\n\n\n Warning: saving a lot of data can quickly increase the size of the profile variables file, so keep an eye on this.\n\n\n\n\n Warning: TKOH's Heliport status (used in the Career mode for example) is stored in this file, so be mindful of working with this technology to avoid losing data and progress. ","Syn":{"Syntax":" saveProfileNamespace","Params":null,"Return":" Nothing "},"Examples":["saveProfileNamespace;"],"Additional":["profileNamespace"]},{"Name":"saveStatus","Desc":" Saves object's properties to Objects.sav file in campaign directory as entry name. ","Syn":{"Syntax":" object saveStatus name ","Params":["object: Object\n\n","name: String"],"Return":" Boolean "},"Examples":["player saveStatus \"playerstate\""],"Additional":["loadStatus"]},{"Name":"saveVar","Desc":" Save variable value into the campaign space. This variable is available to all following missions in the campaign. ","Syn":{"Syntax":" saveVar varname ","Params":["varname: String"],"Return":" Nothing "},"Examples":["saveVar \"varOne\""],"Additional":["See also needed"]},{"Name":"savingEnabled","Desc":" Check if saving the game is enabled. ","Syn":{"Syntax":" savingEnabled ","Params":null,"Return":" Boolean "},"Examples":["if (savingEnabled) then {\n  hint \"Saving is enabled!\";\n};"],"Additional":["enableSaving","loadGame","saveGame"]},{"Name":"say","Desc":" Unit will say given sound.\n\nWhen the Unit is a Person, it will also perform corresponding lipsync effect provided an appropriate .lip file has been created for this sound.\n\nA unit that has been killed or does not exist will not say anything.\n\nCompare this with playSound which will always play a sound at the location of the player.\n\nIf the camera is not within given range, title is not shown and the sound will not be heard.\n\nSound is defined in CfgSound of the Description.ext. ","Syn":{"Syntax":" unit say [sound, maxTitlesDistance,speed]","Params":["unit: Object\n\n","[sound, maxTitlesDistance,speed]: Array","sound: String classname. Defined in Description.ext","maxTitlesDistance: Number","speed: Number. Optional"],"Return":" Nothing "},"Examples":["(units player select 1) say [\"whisper1\",5];","Arma 3:player say \"scuba_breath\";"],"Additional":["say3D","say2D","playSound","createSoundSource"]},{"Name":"say2D","Desc":" Same as say only sound is mono. ","Syn":{"Syntax":"\n\nunit say2D speechName\n\n[unit, target] say2D speechName\n\n\n","Params":["unit: Object -\n\n","target: Object","speechName: String"],"Return":" Nothing "},"Examples":["Example needed"],"Additional":["say","say3D","playSound","createSoundSource"]},{"Name":"say3D","Desc":" Unit or object will say given sound in 3D Space.\n\nThis allows broadcasting of positional music or sound from a source, without having to script a fade sound or music command.\n\nCompare this with say2D which will always play a sound at the location of the player after he has been in the vicinity of a broadcasting sound.\n\nSound is defined in CfgSound of the Description.ext. ","Syn":{"Syntax":" unit say3D sound \u003cbr\u003e(Alternate Syntax exists check Read more)","Params":["unit: Object -\n\n","sound: String - classname. Defined in Description.ext"],"Return":" Nothing "},"Examples":[" helicopter1 say3D \"Fortunateson\""],"Additional":["say","say2D","playSound","createSoundSource"]},{"Name":"scopeName","Desc":" Defines name of current scope. Name is visible in debugger, and name is also used as reference in some commands. Scope name can be defined only once per scope. ","Syn":{"Syntax":" scopeName name ","Params":["name: String"],"Return":" Nothing "},"Examples":["Example needed"],"Additional":["breakOut","breakTo"]},{"Name":"score","Desc":" Returns the person's score in MP. ","Syn":{"Syntax":" score unit ","Params":["unit: Object"],"Return":" Number "},"Examples":["_pScore = score player;"],"Additional":["addScore","addScoreSide","scoreSide"]},{"Name":"scoreSide","Desc":" Returns score for the given side. ","Syn":{"Syntax":" scoreSide side ","Params":["side: Side"],"Return":" Number "},"Examples":["_number = scoreSide west; "],"Additional":["addScoreSide","addScore","score"]},{"Name":"screenToWorld","Desc":" Returns the position on landscape (in world coordinates) corresponding to the given point on screen (in UI coordinates). ","Syn":{"Syntax":" screenToWorld screen ","Params":["screen: Array - Screen position [x,y] (see SafeZone for more info)"],"Return":" Array - World position on surface [x,y,0] "},"Examples":["_wPos = screenToWorld [0.5,0.5];"],"Additional":["SafeZone","worldToScreen"]},{"Name":"scriptDone","Desc":" Check if a script is finished running using the Script_(Handle) returned by execVM or spawn. ","Syn":{"Syntax":" scriptDone handle ","Params":["handle: Script_(Handle) returned by spawn or execVM"],"Return":" Boolean "},"Examples":["SQS Syntax:@scriptDone _Handle","SQF Syntax:script_handler = [parameters] execVM \"scriptname.sqf\";\nwaitUntil { scriptDone script_handler };"],"Additional":["execVM","spawn","terminate","scriptNull"]},{"Name":"scriptName","Desc":" Assign a user friendly name to the VM script this command is executed from.\n\nOnce name is assigned, it cannot be changed. ","Syn":{"Syntax":" scriptName name ","Params":["name: String -"],"Return":" Nothing "},"Examples":["scriptName \"leetScript.sqf\";","scriptName format [\"%1ARTY\\data\\scripts\\ARTY_sadarmDeploy.sqf (_this: %1)\",_this];"],"Additional":["See also needed"]},{"Name":"scudState","Desc":" Current state of given Scud launcher. Following states are recognized: \n\n\n0 - No activity  \n\n1 - Launch preparation, \n\n2 - Launch prepared\n\n3 - Ignition  \n\n4 - Launched.\n\n\n","Syn":{"Syntax":" Number =  scudState scudName ","Params":["scudName: Object"],"Return":" Number "},"Examples":["if ((scudState _scud) == 3) exitWith \n{ \n  player sideChat \"SCUD Launch status: Missile Ignition\";\n};"],"Additional":["See also needed"]},{"Name":"secondaryWeapon","Desc":" Returns name of a unit's secondary weapon (empty string if none). ","Syn":{"Syntax":" secondaryWeapon unit ","Params":["unit: Object"],"Return":" String "},"Examples":["_sWeap = secondaryWeapon player;","hint secondaryWeapon player; //\"launch_NLAW_F\""],"Additional":["secondaryWeaponMagazine","secondaryWeaponItems","addSecondaryWeaponItem","primaryWeapon","handgunWeapon","currentWeapon","weapons"]},{"Name":"secondaryWeaponItems","Desc":" Returns array with all items assigned to the secondary weapon. This command is used for infantry weapons only.  ","Syn":{"Syntax":" secondaryWeaponItems unit ","Params":["unit: Object"],"Return":" Array "},"Examples":["secondaryWeaponItems player; //[\"\",\"\",\"\"]\n"],"Additional":["addSecondaryWeaponItem","weaponsItems","primaryWeaponItems","handgunItems"]},{"Name":"secondaryWeaponMagazine","Desc":" Returns either single element array, containing class name of currently loaded in the secondary weapon magazine, or an empty array if unit has no secondary weapon or secondary weapon is not loaded. This command is used for infantry weapons only. ","Syn":{"Syntax":" secondaryWeaponMagazine unit ","Params":["unit: Object"],"Return":" Array "},"Examples":["hint secondaryWeaponMagazine player; //[\"NLAW_F\"]\n","_array = secondaryWeaponMagazine player;\nif (count _array \u003e 0) then {\n\u0009hint (\"Secondary weapon is loaded with \" + (_array select 0) + \"!\");\n} else {\n\u0009if (secondaryWeapon player != \"\") then {\n\u0009\u0009hint \"Secondary weapon is not loaded!\";\n\u0009} else {\n\u0009\u0009hint \"Player doesn't have a secondary weapon!\";\n\u0009};\n};\n"],"Additional":["secondaryWeapon","secondaryWeaponItems","addSecondaryWeaponItem","primaryWeaponMagazine","handgunMagazine"]},{"Name":"select","Desc":" Selects an element from an array, config entry from Config or substring from a string or a range from an array.","Syn":{"Syntax":" array  select index \u003cbr\u003e(Alternate Syntax exists check Read more)","Params":["array : Array\n\n","index: Number - Index 0 denotes the first element, 1 the second, etc. If index has decimal places it gets rounded down for fractions less than or equal .5, otherwise it gets rounded up."],"Return":" Anything "},"Examples":["[1,2,3,4] select 2; //result is 3\nposition player select 2; //result is Z coordinate of player position","[\"\", currentWeapon player] select alive player; //if dead \"\" is selected","(configFile \u003e\u003e \"cfgVehicles\" \u003e\u003e typeOf vehicle player \u003e\u003e \"Turrets\") select 0 \u003e\u003e \"gunnerAction\";","hint str (\"japa is the man!\" select [8]); //the man!\nhint str (\"japa is the man!\" select [0,7]); //japa is","hint str ([1,2,3,4,5,6] select [1,4]); //[2,3,4,5]"],"Additional":["set","resize","reverse","in","find","toArray","toString","forEach","count","deleteAt","deleteRange"]},{"Name":"selectBestPlaces","Desc":" Find the places with the maximum value of _expression in the given area. Places can be on water. ","Syn":{"Syntax":" selectBestPlaces [_position, _radius, _expression, _precision, _sourcesCount] ","Params":["[_position, _radius, _expression, _precision, _sourcesCount]: Array -"],"Return":" Array - Format is [[position: Position2D, expressionResult: Number], ...] "},"Examples":["myPlaces = selectBestPlaces [position player, 50, \"meadow + 2*hills\", 1, 5];"],"Additional":["Ambient Parameters","findEmptyPosition","isFlatEmpty"]},{"Name":"selectDiarySubject","Desc":" Select the subject page in a log.  ","Syn":{"Syntax":" person selectDiarySubject subject ","Params":["person:  -\n\n","Object,subject:  -"],"Return":" Nothing "},"Examples":["Example needed"],"Additional":["See also needed"]},{"Name":"selectedEditorObjects","Desc":" Returns a list of currently selected editor objects. ","Syn":{"Syntax":" selectedEditorObjects map ","Params":["map: Control -"],"Return":" Array "},"Examples":["_selObjects = selectedEditorObjects _map  \nResult can be: [\"_vehicle_0\",\"_vehicle_9\",\"_vehicle_11\"]"],"Additional":["clearSelected (VBS2)"]},{"Name":"selectEditorObject","Desc":" Select an editor object. Does not un-select previously selected objects. ","Syn":{"Syntax":" map selectEditorObject object ","Params":["map: Control -\n\n","object: String -"],"Return":" Any "},"Examples":["Example needed"],"Additional":["See also needed"]},{"Name":"selectionPosition","Desc":" Search for selection in the object model (first in the memory level, then in geometry LODs).\n\nReturns position in model space. In A1 it returns the initial position of the selection, in A2/3 position of the selection (e.g. when it is animated) in render time scope. If a selection does not exist [0,0,0] is returned. ","Syn":{"Syntax":" object selectionPosition selectionName ","Params":["object: Object\n\n","selectionName: String"],"Return":" Array - [x,y,z] relative position in model space "},"Examples":["_inModelPosition = player selectionPosition \"head_hit\";","_inModelPosition = player selectionPosition \"pelvis\";","_inModelPosition = player selectionPosition \"head\";","_inModelPosition = player selectionPosition \"camera\";"],"Additional":["modelToWorld"]},{"Name":"selectLeader","Desc":" Select a group's leader. ","Syn":{"Syntax":" groupName selectLeader unitName ","Params":["groupName: Group\n\n","unitName: Object"],"Return":" Nothing "},"Examples":["group player selectLeader player"],"Additional":["formationLeader","formLeader","leader","isFormationLeader"]},{"Name":"selectNoPlayer","Desc":" Switch player to no unit. ","Syn":{"Syntax":" selectNoPlayer ","Params":null,"Return":" Nothing "},"Examples":["Single player:\nselectNoPlayer;\nhint str player; //\u003cNULL-object\u003e\nRough multiplayer emulation:\n_noPlayer = createGroup sideLogic createUnit [\n\u0009\"Logic\",\n\u0009[0,0,1000],\n\u0009[],\n\u00090,\n\u0009\"NONE\"\n];\nselectPlayer _noPlayer;\nhint str player; //L Charlie 4-3:1 (KK)"],"Additional":["selectPlayer"]},{"Name":"selectPlayer","Desc":" Switch player to given person. Switching to a Null-Object works, but provides a view which you cannot manipulate (neither move nor rotate) with regular input.\n\nThis command has significant effects on locality. See notes beneath.","Syn":{"Syntax":" selectPlayer unitName ","Params":["unitName: Object"],"Return":" Nothing "},"Examples":["selectPlayer _aPerson"],"Additional":["selectNoPlayer","Team_Switch","switchCamera"]},{"Name":"selectWeapon","Desc":" Selects the given weapon.\n\nNote: For weapons that have more than one muzzle, you have to input the muzzlename and not the weaponName.\n\nThe only weapons that have muzzleNames seem to be rifles with grenade launchers, handgrenades, smokeshells and satchels.\n\nIn all other cases the weaponName must be used.\nFortunately, in OFP, in most cases, both names are the same. But check.\n\nIn ArmA the weaponNames and muzzleNames are different.\n\nFor muzzle names see cfgWeapons. \n\nNOTE: The unit must be local to the PC on which command is executed. ","Syn":{"Syntax":" unitName selectWeapon muzzleName ","Params":["unitName: Object\n\n","muzzleName: String"],"Return":" Nothing "},"Examples":["_soldier1 selectWeapon \"LAWLauncher\";","player selectWeapon \"M203Muzzle\";"],"Additional":["fire","forceWeaponFire","primaryWeapon","handgunWeapon","secondaryWeapon","weapons","action SwitchWeapon","action SwitchMagazine"]},{"Name":"selectWeaponTurret","Desc":" Selects the given weapon on specified turret. Use turret path [-1] for driver's turret. ","Syn":{"Syntax":" vehicle selectWeaponTurret [weapon, turret path] ","Params":["vehicle: Object\n\n","[weapon, turret path]: Array","weapon: String","turret path: Array"],"Return":" Nothing "},"Examples":["MBT_Kuma selectWeaponTurret [\"LMG_coax\",[0]];"],"Additional":["removeWeaponTurret","turretLocal","addMagazineTurret","magazinesTurret","removeMagazinesTurret","removeMagazineTurret","weaponsTurret","currentMagazineDetailTurret","currentMagazineTurret","currentWeaponTurret","addWeaponTurret"]},{"Name":"sendAUMessage","Desc":" Send the command to the list of clients.  ","Syn":{"Syntax":" sendAUMessage [clientList, command] ","Params":["[clientList, command]: Array\n\n","clientList: Array","command: String"],"Return":" Nothing "},"Examples":["sendAUMessage [[dpnid1, dpnid2], \"ConnectTo: 192.168.1.66\"]"],"Additional":["sendUDPMessage"]},{"Name":"sendSimpleCommand","Desc":" Sends a simple command to the vehicle's driver / gunner.\nGunner commands\n\n FIRE\n\n CEASE FIRE\n\n MANUAL FIRE\n\n CANCEL MANUAL FIRE\n\n KEY FIRE\n\n\nDriver commands\n\n FORWARD\n\n STOP\n\n BACK\n\n FAST\n\n KEY FAST\n\n SLOW\n\n KEY SLOW\n\n LEFT\n\n RIGHT\n\n KEY UP\n\n KEY DOWN\n\n\n","Syn":{"Syntax":" vehicleName sendSimpleCommand command ","Params":["vehicleName: Object\n\n","command: String"],"Return":" Nothing "},"Examples":["vehicle player sendSimpleCommand \"STOP\";"],"Additional":["enableSentences"]},{"Name":"sendTask","Desc":" Create a new AI task (subtask of parentTask). Type is name of registered task type. ","Syn":{"Syntax":" sender sendTask [receiver,[type] or [type,parentTask],priority,name1,value1,name2,value2,...] ","Params":["sender:  -\n\n","[type] or [type,parentTask],priority,name1,value1,name2,value2,...]: Array -"],"Return":" Task "},"Examples":["Example needed"],"Additional":["See also needed"]},{"Name":"sendTaskResult","Desc":" Send a result of the task to the task sender. ","Syn":{"Syntax":" task sendTaskResult [state,result,sentence] ","Params":["task: Task -\n\n","[state,result,sentence]: Array -"],"Return":" Nothing "},"Examples":["Example needed"],"Additional":["See also needed"]},{"Name":"sendUDPMessage","Desc":" Send message to given address using UDP protocol. Returns false if the message has not been delivered \n\nNote: Not implemented (see talk page for more info).","Syn":{"Syntax":" sendUDPMessage [ip, port, message]","Params":["ip: String\n\n","port:","message: String"],"Return":" Boolean "},"Examples":["_bool = sendUDPMessage [\"192.168.0.1\", 2302, \"Here goes you message...\"]; "],"Additional":["sendAUMessage"]},{"Name":"serverCommand","Desc":" Executes an admin command on the server. If used in singleplayer or in multiplayer, but without required privileges (player using the computer where command is executed is not an admin) nothing happens. This can be detected beforehand using serverCommandAvailable.  ","Syn":{"Syntax":" serverCommand command ","Params":["command : String"],"Return":" Nothing "},"Examples":[" serverCommand \"#logout\" "],"Additional":["serverCommandAvailable"]},{"Name":"serverCommandAvailable","Desc":" Returns true if the admin command can be performed on the machine, false if not. Used in connection with serverCommand. ","Syn":{"Syntax":" Boolean = serverCommandAvailable command ","Params":["command: String"],"Return":" Boolean "},"Examples":[" _can = serverCommandAvailable \"#kick\" "],"Additional":["serverCommand"]},{"Name":"serverTime","Desc":" Server time synchronized to clients. Returns always 0 in Singleplayer.\nNote that in ArmA2 1.05 Final, this command only returns the time since the Server was actually started.\n\nNOTE: serverTime is available to both server and clients and shows the same value when synced. The only time it is not synced is on the server, right after server restart and only for the first 300 seconds. Client side serverTime is synced from the start. serverTime is also different from server time and server diag_tickTime ","Syn":{"Syntax":" serverTime ","Params":null,"Return":" Number "},"Examples":["hint format[\"Connected on Server since Serverstart : %1\", serverTime - time]"],"Additional":["time","diag_tickTime"]},{"Name":"set","Desc":" Changes the element at the given (zero-based) index of the array.\nIf the element does not exist, resize index+1 is called to create it. ","Syn":{"Syntax":" array set [index, value] ","Params":["array: Array\n\n","[index, value]: Array","index: Number","value: Anything"],"Return":" Nothing "},"Examples":["_arrayOne set [0, \"Hello\"];","_arrayTwo set [count _arrayTwo, \"Bye\"];\nappends \"Bye\" as last element to _arrayTwo","_arrayThree set [(count _arrayThree) - 1, 23];\nreplaces the last element of _arrayTwo with 23"],"Additional":["Array","plus a","valuea plus valueb","a - b","resize","reverse","select","in","find","toArray","toString","forEach","count","pushBack","deleteAt","deleteRange"]},{"Name":"setAccTime","Desc":" Set time acceleration coefficient. May be also used to slow time in cutscenes. This command does NOT work in multiplayer. accFactor is clamped to [1/128; 4]. ","Syn":{"Syntax":" setAccTime accFactor\n\n","Params":["accFactor: Number"],"Return":" Nothing "},"Examples":["setAccTime 0.1"],"Additional":["accTime","setTimeMultiplier","timeMultiplier"]},{"Name":"setAirportSide","Desc":" Set owning side of the airport. ID is the number to identify which airport on the island you want to check. ","Syn":{"Syntax":" id setAirportSide side ","Params":["id: Number\n\n","side: Side"],"Return":" Nothing "},"Examples":["0 setAirportSide east"],"Additional":["airportSide","landAt"]},{"Name":"setAmmo","Desc":" Sets custom ammo count in the currently loaded magazine of the specified weapon. The unit must be local to the computer where command is executed. ","Syn":{"Syntax":" unit setAmmo [weapon, count] ","Params":["unit: Object - Gunner or vehicle.\n\n","[weapon, count]: Array","weapon: String","count: Number"],"Return":" Nothing "},"Examples":["Set player's handgun magazine ammo count to 10 rounds:\nplayer setAmmo [handgunWeapon player, 10];","Set player's current weapon magazine ammo count to 1 round:\nplayer setAmmo [currentWeapon player, 1];","If player is a gunner in a vehicle, set current weapon magazine ammo count to 5 rounds:\nif (local vehicle player) then {\n\u0009vehicle player setAmmo [currentWeapon vehicle player, 5];\n} else {\n\u0009hint \"Vehicle must be local to this machine for 'setAmmo' to work\";\n};","If you try to set more ammo than the magazine can hold, it will be clipped at default magazine capacity:\nplayer setAmmo [primaryWeapon player, 1000000]; //full mag with default ammo count\n"],"Additional":["ammo","setFuel","setHit"]},{"Name":"setAmmoCargo","Desc":" Set amount of ammo resources in cargo space of a rearm vehicle. Ammo resource is used to resupply vehicles that take ammo. Soldiers use individual magazines instead. Amount: 1 is full cargo.\n\nThe actual quantity to work with is determined by the model's class in CfgVehicles  ","Syn":{"Syntax":" vehicleName setAmmoCargo ammoCargo ","Params":["vehicleName: Object\n\n","ammoCargo: Number"],"Return":" Nothing "},"Examples":[" _ammoTruck1 setAmmoCargo 0.5; "],"Additional":["getAmmoCargo","setFuelCargo","setRepairCargo"]},{"Name":"setAperture","Desc":" Sets custom camera aperture (-1 to do it automatically). ","Syn":{"Syntax":" setAperture aperture ","Params":["aperture: Number"],"Return":" Nothing "},"Examples":["setAperture 0.3"],"Additional":["setApertureNew"]},{"Name":"setApertureNew","Desc":" Sets custom camera aperture ([-1] to do it automatically).  ","Syn":{"Syntax":" setApertureNew [min, std, max, stdLum] ","Params":["[min, std, max, stdLum]: Array\n\n","min: Number","std: Number","max: Number","stdLum: Number"],"Return":" Nothing "},"Examples":["Example needed"],"Additional":["setAperture"]},{"Name":"setArmoryPoints","Desc":" Store the given amount of armory points.  ","Syn":{"Syntax":" setArmoryPoints points ","Params":["points: Number (Integer)"],"Return":" Nothing "},"Examples":["setArmoryPoints (armoryPoints + 20);"],"Additional":["armoryPoints"]},{"Name":"setAttributes","Desc":" Returns a structured text created by the given structured or plain text by setting attributes to the given values. ","Syn":{"Syntax":" text setAttributes [name1, value1, name2, value2, ...] ","Params":["text: String\n\n","[name1, value1, name2, value2, ...]: Array"],"Return":" Structured Text "},"Examples":["txt = img setAttributes [\"image\", \"data\\iSoldier.paa\"]"],"Additional":["See also needed"]},{"Name":"setAutonomous","Desc":" Sets UAV autonomous mode. ","Syn":{"Syntax":" uav setAutonomous bool ","Params":["uav: Object\n\n","bool: Boolean"],"Return":" Nothing "},"Examples":["uav setAutonomous true;"],"Additional":["isAutonomous"]},{"Name":"setBehaviour","Desc":" Set group/unit behaviour mode. Behaviour is one of: \n\n\n\"CARELESS\"\n\n\"SAFE\"\n\n\"AWARE\"\n\n\"COMBAT\"\n\n\"STEALTH\". \n\n\nSee this page for details of the effect of this command on AI units.\n","Syn":{"Syntax":" groupName setBehaviour behaviour ","Params":["groupName: Object or Group\n\n","behaviour: String"],"Return":" Nothing "},"Examples":["_group1 setBehaviour \"SAFE\""],"Additional":["behaviour description","AIBehaviour","behaviour","setWaypointBehaviour","combatMode","setCombatMode","skill","setSkill array","CfgAISkill"]},{"Name":"setBleedingRemaining","Desc":" Sets bleeding time remaining.  ","Syn":{"Syntax":" unit setBleedingRemaining time ","Params":["unit: Object\n\n","time: Number"],"Return":" Nothing "},"Examples":["Example needed"],"Additional":["getBleedingRemaining","isBurning","isBleeding"]},{"Name":"setCameraInterest","Desc":" Set camera interest for given entity. Camera interest is by default 0. Any unit which is speaking has its camera interest raised to 50. Camera interest is used to focus camera to control depth of field in cutscenes. Combination of camera interest, unit position of the screen, unit movement, unit type, and some other properties is used to determine which unit to focus at. Higher camera interest increases the chance of the unit being focused.","Syn":{"Syntax":" entity setCameraInterest interest ","Params":["entity: Object\n\n","interest: Number"],"Return":" Nothing "},"Examples":["_soldier setCameraInterest 50;"],"Additional":["cameraInterest"]},{"Name":"setCamShakeDefParams","Desc":" Sets camera shake default params, the default camshake when, for example, you freelook at your character shooting a 12.7mm sniper rifle or firing tank cannon. Would also work in 1st person. ","Syn":{"Syntax":" setCamShakeDefParams [power, duration, frequency, minSpeed, minMass, caliberCoefHit, vehicleCoef] ","Params":["power: Number\n\n","duration: Number","frequency: Number","minSpeed: Number","minMass: Number","caliberCoefHit: Number","vehicleCoef: Number"],"Return":" Nothing "},"Examples":["setCamShakeDefParams [1, 2, 3, 4, 5, .5, .5];","setCamShakeDefParams [100, 10, 10, 4, 5, 1, 1];"],"Additional":["enableCamShake","addCamShake","setCamShakeParams","resetCamShake"]},{"Name":"setCamShakeParams","Desc":" Set camera shake parameters. \nWill not have any effect until shake is started via addCamShake. ","Syn":{"Syntax":" setCamShakeParams  [posCoef, vertCoef, horzCoef, bankCoef, interpolation] ","Params":["posCoef: Number - Strength of positional movement (how far the whole position can change in X,Y\u0026Z), should not be bigger than .1, or the camera might move into, or behind, the player\n\n","vertCoef: Number - Strength of vertical camera pan (up/down), practical range: 0-10","horzCoef: Number - Strength of horizontal camera pan (left/right), practical range: 0-10","bankCoef: Number - Strength of camera tilt/bank, practical range: 0-20","interpolation: Boolean - If true, then transitions in the different shaking directions will be smoother"],"Return":" Nothing "},"Examples":["setCamShakeParams [0.1, 1, 1, 1, true]; "],"Additional":["setCamShakeDefParams","addCamShake","enableCamShake","resetCamShake"]},{"Name":"setCamUseTi","Desc":" Activate camera thermal vision. ","Syn":{"Syntax":" Bool setCamUseTi mode index ","Params":["Bool: Boolean\n\n","mode index: Number"],"Return":" Nothing "},"Examples":["true setCamUseTi 1; "],"Additional":["See also needed"]},{"Name":"setCaptive","Desc":" Mark a unit as captive.\n\nIf unit is a vehicle, commander is marked.\n\nA captive is neutral to everyone (belong to civilian side), and will not trigger \"detected by\" conditions for its original side.\n\nUsing a number (instead of a boolean) for the status has no further effect on the engine's behavior, but can be used by captiveNum to keep track of the captivity status at a finer resolution (e.g. handcuffed, grouped, etc.)\n\nThe numbered status syntax was introduced in Arma 2. ","Syn":{"Syntax":" unitName setCaptive status ","Params":["unitName: Object\n\n","status: Boolean or Number - When using a number parameter, any value\u003e0 is considered to be the same as true"],"Return":" Nothing "},"Examples":["_soldier1 setCaptive true","_soldier1 setCaptive 3"],"Additional":["captive","captiveNum"]},{"Name":"setCenterOfMass","Desc":" Changes the center of mass of an object smoothly during the given time (in seconds). A time of zero (or using the alternative syntax) means an immediate change. ","Syn":{"Syntax":"myObject setCenterOfMass [com, time]\u003cbr\u003e(Alternate Syntax exists check Read more)","Params":["myObject: Object\n\n","com: Array - [x,y,z] offset relative to the model centre","time: Number"],"Return":" Nothing "},"Examples":["myObject setCenterOfMass [[0,-1,0],0.5];","myObject setCenterOfMass [0,-1,0];"],"Additional":["getCenterOfMass","setMass","getMass"]},{"Name":"setCombatMode","Desc":" Set group combat mode (engagement rules).\nMode may be one of: \n\n \"BLUE\" (Never fire)\n\n \"GREEN\" (Hold fire - defend only)\n\n \"WHITE\" (Hold fire, engage at will)\n\n \"YELLOW\" (Fire at will)\n\n \"RED\" (Fire at will, engage at will)\n\n\n","Syn":{"Syntax":" groupName setCombatMode mode ","Params":["groupName: Object or Group\n\n","mode: String"],"Return":" Nothing "},"Examples":["_group1 setCombatMode \"BLUE\""],"Additional":["combat mode description","AI Combat Modes","combatMode","behaviour","setBehaviour","skill","setSkill array","CfgAISkill"]},{"Name":"setCompassOscillation","Desc":" Sets compass oscillation.  ","Syn":{"Syntax":" setCompassOscillation [angle, frequencyMin, frequencyMax] ","Params":["[angle, frequencyMin, frequencyMax]: Array\n\n","angle: Number","frequencyMin: Number","frequencyMax: Number"],"Return":" Nothing "},"Examples":["setCompassOscillation [1, 1, 1];\n"],"Additional":["See also needed"]},{"Name":"setCuratorCameraAreaCeiling","Desc":" Sets maximal height to which curator camera can move. ","Syn":{"Syntax":" curatorObj setCuratorCameraAreaCeiling height ","Params":["curatorObj: Object - Curator module.\n\n","height: Number (in metres)"],"Return":" Nothing "},"Examples":["myCurator setCuratorCameraAreaCeiling 50;"],"Additional":["Curator","addCuratorCameraArea","removeCuratorCameraArea","removeAllCuratorCameraAreas","curatorCameraArea"]},{"Name":"setCuratorCoef","Desc":" Sets coef for some action (coef have to be bigger than -1 000 000, anything lower is considered as disabled action). ","Syn":{"Syntax":" curatorObj setCuratorCoef [action,coef] ","Params":["curatorObj: Object - Curator module.\n\n","action: String","coef: Number or Boolean"],"Return":" Nothing "},"Examples":["curatorModule setCuratorCoef [\"Place\", 1]","curatorModule setCuratorCoef [\"Delete\", -1e10]"],"Additional":["Curator"]},{"Name":"setCuratorEditingAreaType","Desc":" Set whether curator can edit in all editing areas (true) or outside of them (false). ","Syn":{"Syntax":" curatorObj setCuratorEditingAreaType bool ","Params":["curatorObj: Object - Curator module.\n\n","bool: Boolean"],"Return":" Nothing "},"Examples":["curatorModule setCuratorEditingAreaType true"],"Additional":["Curator","addCuratorEditingArea","removeCuratorEditingArea","removeAllCuratorEditingAreas","curatorEditingArea"]},{"Name":"setCuratorWaypointCost","Desc":" Sets cost of waypoints (used for placing, editing and deleting). ","Syn":{"Syntax":" curatorObj setCuratorWaypointCost cost ","Params":["curatorObj: Object - Curator module.\n\n","cost: Number"],"Return":" Nothing "},"Examples":["myCUrator setCuratorWaypointCost 0.1;"],"Additional":["Curator"]},{"Name":"setCurrentTask","Desc":" Set the task as a current task of the person. ","Syn":{"Syntax":" object setCurrentTask task ","Params":["object: Object - the unit having the task\n\n","task: Task - the task you want to select"],"Return":" Nothing "},"Examples":["player setCurrentTask tskKillSpongebob;"],"Additional":["createSimpleTask","simpleTasks","currentTask"]},{"Name":"setCurrentWaypoint","Desc":" Sets the currently active waypoint for a group. ","Syn":{"Syntax":" groupName setCurrentWaypoint waypoint ","Params":["groupName: Object or Group\n\n","waypoint: Array - format Waypoint"],"Return":" Nothing "},"Examples":["_grp setCurrentWaypoint [_grp, 1];"],"Additional":["waypoints","deleteWaypoint","copyWaypoints","setWaypointBehaviour","setWaypointCombatMode","setWaypointCompletionRadius","setWaypointDescription","setWaypointFormation","setWaypointHousePosition","setWaypointPosition","setWaypointScript","setWaypointSpeed","setWaypointStatements","setWaypointTimeout","setWaypointType","setWaypointVisible","waypointAttachVehicle","waypointAttachedVehicle","setWaypointLoiterRadius","waypointLoiterRadius","addWaypoint","setWaypointLoiterType","waypointSpeed"]},{"Name":"setDamage","Desc":" Damage / repair object.\n\nDamage 0 means fully functional, damage 1 means completely destroyed / dead.\n\nThis function is identical to setDammage.\n\nIt was introduced to fix a spelling error in original function name. ","Syn":{"Syntax":" object setDamage damage ","Params":["object: Object\n\n","damage: Number"],"Return":" Nothing "},"Examples":["_soldier1 setDamage 1"],"Additional":["setDammage","damage","getDammage","setHit"]},{"Name":"setDammage","Desc":" Damage / repair object.\n\nDamage 0 means fully functional, damage 1 means completely destroyed / dead.\n\nThis function is identical to setDamage.\n\nsetDamage was introduced to fix a spelling error in this operator's name. ","Syn":{"Syntax":" object setDammage damage ","Params":["object: Object\n\n","damage: Number"],"Return":" Nothing "},"Examples":["_soldier1 setDammage 1"],"Additional":["setDamage","damage","getDammage"]},{"Name":"setDate","Desc":" Sets the actual mission date and time. ","Syn":{"Syntax":" setDate [year, month, day, hour, minute] ","Params":["[year, month, day, hour, minute]: Array"],"Return":" Nothing "},"Examples":["setDate [1986, 2, 25, 16, 0]//(4:00pm February 25, 1986)"],"Additional":["date","skipTime"]},{"Name":"setDebriefingText","Desc":" Sets debriefing text for endType defined in CfgDebriefing.  ","Syn":{"Syntax":" endType setDebriefingText [title, description] ","Params":["endType: String\n\n","[title, description]: Array","title: String","description: String"],"Return":" Nothing "},"Examples":["_currentObjective = (taskDescription (currentTask player)) select 2;\n\"endDeath\" setDebriefingText [\"You Lose\",\"All of your men were killed while assaulting the \" + _currentObjective];"],"Additional":["debriefingText","disableDebriefingStats","enableDebriefingStats"]},{"Name":"setDefaultCamera","Desc":" Sets the position and direction for the camera used after camera is set on no object (log out view when leaving MP game for example) ","Syn":{"Syntax":" setDefaultCamera [position, direction] ","Params":["position: PositionASL - position of the camera\n\n","direction: vectorDir - direction of the camera"],"Return":" Nothing "},"Examples":["setDefaultCamera [[5000,5000,200],[1,1,-1]];","Lift camera 100m up above current player position and point downwards:\nsetDefaultCamera [ATLtoASL (player modelToWorld [0,0,100]),[0,0,-1]];"],"Additional":["camCreate","cameraOn","cameraView","cameraEffect","cameraEffectEnableHUD","switchCamera","positionCameraToWorld","cameraInterest","setCameraInterest","getEditorCamera","mapCenterOnCamera","preloadCamera","restartEditorCamera"]},{"Name":"setDestination","Desc":" Set the destination for path planning of the pilot.\n\nPossible values for planningMode are:\n\n\"DoNotPlan\",\n\n\"LeaderPlanned\",\n\n\"LeaderDirect\",\n\n\"FormationPlanned\",\n\n\"VehiclePlanned\" ","Syn":{"Syntax":" object setDestination [position, planningMode, forceReplan] ","Params":["object: Object\n\n","[position, planningMode, forceReplan]: Array","position: Array - format Position","planningMode: String","forceReplan: Boolean Specifies if replanning of the path should be forced."],"Return":" Nothing "},"Examples":["Example needed"],"Additional":["expectedDestination","doMove"]},{"Name":"setDir","Desc":" Sets object heading. Angles are measured in degrees clockwise from north. The accepted heading range is from 0 to 360 Negative angles represent a counter-clockwise angle and the angle can be of any size.  ","Syn":{"Syntax":" object setDir heading ","Params":["object: Object\n\n","heading: Number"],"Return":" Nothing "},"Examples":[" _soldier1 setDir 45 \nWill set soldier1 to face North East","_soldier1 setDir -675\nWill also set soldier1 to face North East"],"Additional":["getDir","direction","setFormDir"]},{"Name":"setDirection","Desc":" Set's the orientation of a location. It's area and map icon (if it's type uses an icon) will be rotated to this orientation.","Syn":{"Syntax":" location setDirection direction ","Params":["location: Location\n\n","direction: Number"],"Return":" Nothing "},"Examples":["myLocation setDirection 45"],"Additional":["direction"]},{"Name":"setDrawIcon","Desc":" Set the icon to be shown in 2D editor for the specified editor object. If maintain size is false,icon will not scale depending on the scale,of the map. If maintain size is a number,the icon will maintain size,if map scale is below that number. is3D,show line and priority are,optional.  ","Syn":{"Syntax":" map setDrawIcon [object,texture,color,offset,width,height,maintain size?,angle,string identifier,shadow,is3D,draw line?,priority] ","Params":["map: Control -\n\n","[object,texture,color,offset,width,height,maintain size?,angle,string identifier,shadow,is3D,draw line?,priority]: Array -"],"Return":" Nothing "},"Examples":["Example needed"],"Additional":["See also needed"]},{"Name":"setDropInterval","Desc":" Set interval of emitting particles from particle source. ","Syn":{"Syntax":" particleSource setDropInterval interval ","Params":["particleSource: Object\n\n","interval: Number"],"Return":" Nothing "},"Examples":["_source setDropInterval 0.05"],"Additional":["See also needed"]},{"Name":"setEditorMode","Desc":" Sets map mode to MAP,3D or PREVIEW. ","Syn":{"Syntax":" map setEditorMode mode ","Params":["map: Control -\n\n","mode: String -"],"Return":" Nothing "},"Examples":["Example needed"],"Additional":["See also needed"]},{"Name":"setEditorObjectScope","Desc":" This command defines the level of access a user has to editor objects.\n\n\"objects\" is an array of either Editor Objects (eg [\"_unit_0\"]) or actual Game Objects (eg [player]). If the array is empty then the command will automatically parse all editor objects.\n\n\"editorType\" is the editor type to effect (eg \"unit\", \"vehicle\", \"center\") or \"\" for all types.\n\n\"condition\" is an executable string that must evaluate to true or false. If true, the scope of the evaluated editor object will be modified. \"_x\" can be used in the string as reference to the ingame representation of the currently processed array member.\n\n\"scope\" is one of \"HIDE\", \"VIEW\", \"SELECT\", \"LINKTO\", \"LINKFROM\", \"ALLNODRAG\", \"ALLNOTREE\", \"ALLNOCOPY\", \"ALLNOSELECT\" or \"ALL\".\n\n\"subordinatesAlso\" is a boolean value. If true then subordinates in the editor will be assigned the same scope as the parent. ","Syn":{"Syntax":" map setEditorObjectScope [objects, editorType, condition, scope, subordinatesAlso]","Params":["map: Control -\n\n","[objects, editorType, condition, scope, subordinatesAlso]: Array -","objects: Array of Objects and/or Editor Objects","editorType: String","condition: String","scope: String","subordinatesAlso: Boolean"],"Return":" Nothing "},"Examples":["_map setEditorObjectScope [ [],\"vehicle\", \"side effectiveCommander _x != side player\", \"HIDE\", false]","((findDisplay 128) displayCtrl 51) setEditorObjectScope [ [\"_unit_0\"], \"\", \"true\", \"ALLNODRAG\", false]"],"Additional":["addEditorObject","deleteEditorObject","findEditorObject","getEditorObjectScope","insertEditorObject"]},{"Name":"setEffectCondition","Desc":" The statement is executed when the trigger or waypoint is activated and the effects are launched depending on the result.\n\n\nIf the result is a boolean and true, the effect is launched.\n\nIf the result is an object, the effect is launched if the result is the player or the player vehicle.\n\nIf the result is an array, the effect is launched if the result contains the player or the player vehicle. ","Syn":{"Syntax":" trigger setEffectCondition statement \u003cbr\u003e(Alternate Syntax exists check Read more)","Params":["trigger: Object\n\n","statement: String"],"Return":" Nothing "},"Examples":["_triggerObj setEffectCondition \"thisList\";"],"Additional":["createTrigger"]},{"Name":"setFace","Desc":" Set person's face. For a list of available faces, check Category:CfgIdentities. ","Syn":{"Syntax":" person setFace face ","Params":["person: Object\n\n","face: String"],"Return":" Nothing "},"Examples":["soldier1 setFace \"WhiteHead_02\""],"Additional":["See also needed"]},{"Name":"setFaceAnimation","Desc":" Set facial animation phase (eye blinking), blink is in the range from 0 to 1. ","Syn":{"Syntax":" person setFaceAnimation blink ","Params":["person: Object\n\n","blink: Number"],"Return":" Nothing "},"Examples":["_soldier1 setFaceAnimation 0.5;"],"Additional":["setMimic","animate","animationPhase","animateDoor"]},{"Name":"setFatigue","Desc":" Sets the person's fatigue, from 0 to 1.  ","Syn":{"Syntax":" unit setFatigue value ","Params":["unit: Object\n\n","value: Number"],"Return":" Nothing "},"Examples":[" player setFatigue 1;\n"],"Additional":["getFatigue","enableFatigue"]},{"Name":"setFlagOwner","Desc":" Set flag owner. When owner is set to objNull or any object other than a unit of class man or logic, flag is returned to the flagpole.\n\nA flag owned by a logic has no visual representation.","Syn":{"Syntax":" flag setFlagOwner owner ","Params":["flag: Object\n\n","owner: Object"],"Return":" Nothing "},"Examples":["_flag1 setFlagOwner _soldier1;"],"Additional":["Flag Textures","flag","flagOwner","setFlagSide","setFlagTexture"]},{"Name":"setFlagSide","Desc":" Set flag side. A flag may be taken by any unit that is enemy to the side that owns the flag. ","Syn":{"Syntax":" flag setFlagSide side ","Params":["flag: Object\n\n","side: Side"],"Return":" Nothing "},"Examples":["_flag1 setFlagSide east;"],"Additional":["Flag Textures","flag","flagOwner","setFlagOwner","setFlagTexture"]},{"Name":"setFlagTexture","Desc":" Set flag texture.\n\nIf texture is \"\", flag is not drawn.\nCustom texture can be used, as long as it is in *.jpg format, and has dimensions of 200px*200px.\nThe page Flag Textures shows which textures are available in each game.\n\nNOTE: In MP this command has to be executed where Flag Pole is local. If you add Flag Pole in the editor, it will be local to the server, so executing setFlagTexture on the server will change flag texture on all clients. The command is also persistent and is synchronised for JIP clients.","Syn":{"Syntax":" flag setFlagTexture texture ","Params":["flag: Object\n\n","texture: String"],"Return":" Nothing "},"Examples":["_flagE setFlagTexture \"\\ca\\misc\\data\\sever_vlajka.paa\";","_flagW setFlagTexture \"\\ca\\misc\\data\\usa_vlajka.paa\";","flag1 setFlagTexture \"\\A3\\Data_F\\Flags\\Flag_red_CO.paa\";"],"Additional":["Flag Textures","flag","flagOwner","setFlagOwner","setFlagSide","setObjectTexture","setObjectTextureGlobal"]},{"Name":"setFog","Desc":" Changes the fog smoothly over the the given TransitionTime (in seconds). A time of zero means there will be an immediate change. A fog intensity of zero is minimum fog and a fog level of one is maximum fog. ","Syn":{"Syntax":" time setFog fog ","Params":["time: Number\n\n","fog: Number"],"Return":" Nothing "},"Examples":["15 setFog 0.5;"],"Additional":["setFog array","fog","fogParams","fogForecast","nextWeatherChange"]},{"Name":"setFog_array","Desc":" Changes the fog smoothly over the given time (in seconds). A time of zero means there will be an immediate change. A fog value of zero is minimum fog and a fog value of one is maximum fog.   ","Syn":{"Syntax":" time setFog [fogValue, fogDecay, fogBase]  ","Params":["time: Number\n\n","[fogValue, fogDecay, fogBase]: Array","fogValue: Number - value for fog at base level","fogDecay: Number - decay of fog density with altitude","fogBase: Number - base altitude of fog (in meters)"],"Return":" Nothing "},"Examples":["0 setFog [1, 0.01, 0];"],"Additional":["fogParams","fog","setFog","fogForecast"]},{"Name":"setFormation","Desc":" Set group formation.\nFormation is one of: \n\n \"COLUMN\"\n\n \"STAG COLUMN\"\n\n \"WEDGE\"\n\n \"ECH LEFT\"\n\n \"ECH RIGHT\"\n\n \"VEE\"\n\n \"LINE\"\n\n \"FILE\" (ArmA)\n\n \"DIAMOND\" (ArmA)\n\n\n","Syn":{"Syntax":" group setFormation formation ","Params":["group: Object or Group\n\n","formation: String"],"Return":" Nothing "},"Examples":["_groupOne setFormation \"LINE\""],"Additional":["formations description","formation"]},{"Name":"setFormationTask","Desc":" Set the current task of the formation member. ","Syn":{"Syntax":" object setFormationTask task ","Params":["object: Object\n\n","task: String"],"Return":" Nothing "},"Examples":["Example needed"],"Additional":["formationTask"]},{"Name":"setFormDir","Desc":" Set group formation heading. Accepted heading range is 0 to 360. Formation is facing this direction unless enemy is seen. When group is moving, this value is overriden by movement direction. ","Syn":{"Syntax":" group setFormDir heading ","Params":["group: Object or Group\n\n","heading: Number"],"Return":" Nothing "},"Examples":["_group1 setFormDir 180;","_unit1 setFormDir random 360;","//center the main turret\n(group BIS_Crew1) setFormDir (getDir BIS_Armor);\n(group BIS_Crew2) setFormDir (getDir BIS_Armor);"],"Additional":["setDir"]},{"Name":"setFriend","Desc":" Sets how friendly side1 is with side2. For a value smaller than 0.6 it results in being enemy, otherwise it's friendly.\n\nIntended to be used on mission start. Changing value during mission can cause unexpected errors in AI behavior. ","Syn":{"Syntax":" side1 setFriend [side2 , value] ","Params":["side1: Side\n\n","[side2 , value]: Array","side2: Side","value: Number"],"Return":" Nothing "},"Examples":["WEST setFriend [RESISTANCE, 0];"],"Additional":["getFriend"]},{"Name":"setFromEditor","Desc":" Set if given team member was inserted directly from editor. ","Syn":{"Syntax":" teamMember setFromEditor fromEditor ","Params":["teamMember: Team Member\n\n","fromEditor: Boolean"],"Return":" Nothing "},"Examples":["_teamMember setFromEditor true"],"Additional":["See also needed"]},{"Name":"setFSMVariable","Desc":" Set variable to given value in the variable space of given FSM.\nThe FSM handle is the number returned by the execFSM command. ","Syn":{"Syntax":" handle setFSMVariable [name, value] ","Params":["handle: Number - FSM handle\n\n","[name,value]: Array","name: String - name of the FSM variable","value: Any Value - new value of the FSM variable"],"Return":" Nothing "},"Examples":["_handle = execFSM \"test.fsm\";\n_handle setFSMVariable [\"_foo\", 23];\n\nsets variable _foo in the FSM to 23"],"Additional":["FSM","commandFSM","completedFSM","doFSM","execFSM","getFSMVariable"]},{"Name":"setFuel","Desc":" Sets fuel percentage from 0 (empty) to 1 (full). The vehicle must be local to the computer where command is executed. ","Syn":{"Syntax":" vehicle setFuel amount ","Params":["vehicle: Object\n\n","amount: Number"],"Return":" Nothing "},"Examples":["_jeepOne setFuel 0.5;"],"Additional":["fuel","getFuelCargo","setFuelCargo","setHit","setAmmo"]},{"Name":"setFuelCargo","Desc":" Sets fuel amount in cargo space of refuel vehicle from empty (0) to full (1)\nNote, the carrying capacity of each side's refuel trucks differ. ","Syn":{"Syntax":" vehicle setFuelCargo amount ","Params":["vehicle : Object\n\n","amount : Number"],"Return":" Nothing "},"Examples":["_refuelTruckOne setFuelCargo 0;"],"Additional":["getFuelCargo","fuel","setFuel","setAmmoCargo","setRepairCargo"]},{"Name":"setGroupIcon","Desc":" Set group icons properties. ","Syn":{"Syntax":" group setGroupIcon properties ","Params":["group: Group -\n\n","properties: Array -"],"Return":" Nothing "},"Examples":["_target setGroupIcon [_icon,\"hc_selectedEnemy\"];\n_target setGroupIcon [_icon,\"flag\"];\n_grp setGroupIcon [_iconsize,_iconsizeclass,_offset];\n_grp setGroupIcon [_newid,_icon,_offset];\n_grp setGroupIcon [_icon,_iconclass];"],"Additional":["addGroupIcon","clearGroupIcons","getGroupIcon","getGroupIconParams","groupIconSelectable","groupIconsVisible","onGroupIconClick","removeGroupIcon","setGroupIconParams","setGroupIconsSelectable","setGroupIconsVisible"]},{"Name":"setGroupIconParams","Desc":" Set group icons parameters. [color,string,float,bool] ","Syn":{"Syntax":" group setGroupIconParams properties ","Params":["group: Group -\n\n","properties: Array -"],"Return":" Nothing "},"Examples":["_grp setGroupIconParams [_color,_text,_scale,_visible];\n_grp setGroupIconParams [[0,0,0,0],\"\",1,false];"],"Additional":["addGroupIcon","clearGroupIcons","getGroupIcon","getGroupIconParams","groupIconSelectable","groupIconsVisible","onGroupIconClick","removeGroupIcon","setGroupIcon","setGroupIconsSelectable","setGroupIconsVisible"]},{"Name":"setGroupIconsSelectable","Desc":" Sets if group icons raises onclick and onover events. ","Syn":{"Syntax":" setGroupIconsSelectable bool ","Params":["bool: Boolean -"],"Return":" Nothing "},"Examples":["setGroupIconsSelectable true;"],"Additional":["addGroupIcon","clearGroupIcons","getGroupIcon","getGroupIconParams","groupIconSelectable","groupIconsVisible","onGroupIconClick","removeGroupIcon","setGroupIcon","setGroupIconParams","setGroupIconsVisible"]},{"Name":"setGroupIconsVisible","Desc":" Sets if group icons are visible. ","Syn":{"Syntax":" setGroupIconsVisible array ","Params":["array: Array -"],"Return":" Nothing "},"Examples":["setGroupIconsVisible [true,true];//[show markers on map, show markers on player hud]\nsetGroupIconsVisible [true,false]; //Show only 2D\nsetGroupIconsVisible [false,false];"],"Additional":["addGroupIcon","clearGroupIcons","getGroupIcon","getGroupIconParams","groupIconSelectable","groupIconsVisible","onGroupIconClick","removeGroupIcon","setGroupIcon","setGroupIconParams","setGroupIconsSelectable"]},{"Name":"setGroupId","Desc":" Set a group's identity. \n","Syn":{"Syntax":" group setGroupId [nameFomat, nameParam1, ...] ","Params":["group: Object or Group\n\n","[nameFomat, nameParam1 ...]: Array of strings."],"Return":" Nothing "},"Examples":["OFP:_group1 setGroupId [\"Delta\",\"GroupColor4\"]","ArmA / ArmA 2:_group1 setGroupId [\"Assault Squad\"]"],"Additional":["groupID","group"]},{"Name":"setGusts","Desc":" Changes the gusts value smoothly during the given time (in seconds). A time of zero means there will be an immediate change. Value is 0 to 1. ","Syn":{"Syntax":" time setGusts value ","Params":["time: Number\n\n","value: Number"],"Return":" Nothing "},"Examples":["60 setGusts 0.75;\n"],"Additional":["gusts","wind","setWind"]},{"Name":"setHideBehind","Desc":" Sets the data for hiding. objectWhereHide can be taken using findCover. hidePosition can be taken using getHideFrom. Command is not functional in ArmA 2.\nThis command is part of getHideFrom, findCover, setHideBehind non-functional trio. ","Syn":{"Syntax":" object setHideBehind [objectWhereHide, hidePosition] ","Params":["object: Object\n\n","[objectWhereHide, hidePosition]: Array","objectWhereHide: Object","hidePosition: Array - format getHideFrom"],"Return":" Nothing "},"Examples":["Example needed"],"Additional":["getHideFrom","findCover","isHidden"]},{"Name":"setHit","Desc":" Damage / repair part of object. The object must be local to the computer where command is executed.\n\nDamage 0 means fully functional, damage 1 means completely destroyed / dead. Note: Some part names are in Czech; see translation table.  ","Syn":{"Syntax":" object setHit [part, damage] ","Params":["object: Object -\n\n","part: String - Name of the part (selection name).","damage: Number -"],"Return":" Nothing "},"Examples":["vehicle player setHit [\"motor\", 1]","vehicle player setHit [\"mala vrtule\", 0.95]","if (local _heli) then {\n\u0009_heli setHit [\"velka vrtule\", 0];\n} else {\n\u0009hint \"Vehicle \" + str _heli + \" must be local to this machine to do that!\";\n};"],"Additional":["getHit","getHitPointDamage","setHitPointDamage","damage","setDamage","setFuel","setAmmo"]},{"Name":"setHitPointDamage","Desc":" Set the current level of damage for a specific Hit Point (specified by its config class).\n\n 0: no damage\n\n 1: full damage ","Syn":{"Syntax":" vehicle setHitPointDamage [hitPointName, damage]","Params":["vehicle : Object - vehicle to be damaged\n\n","hitPointName: String - name of the Hit Point class","damage: String - level of damage"],"Return":" Nothing "},"Examples":["(vehicle player) setHitPointDamage [\"hitEngine2\", 1.0];","player setHitPointDamage [\"hitHead\", 0.5];\nplayer setHitPointDamage [\"hitBody\", 0.5];\nplayer setHitPointDamage [\"hitHands\", 0.5];\nplayer setHitPointDamage [\"hitLegs\", 0.5];"],"Additional":["getHitPointDamage","setHit","getHit","setDamage","damage","Common TKOH Hit Points"]},{"Name":"setHorizonParallaxCoef","Desc":" Sets coef used to shift horizon position based on camera height (use 0 to disable shifting).  ","Syn":{"Syntax":" setHorizonParallaxCoef coef ","Params":["coef: Number"],"Return":" Nothing "},"Examples":["Example needed"],"Additional":["See also needed"]},{"Name":"setHUDMovementLevels","Desc":" Set min/max movement borders displayed in HUD gauges. Use -1 to skip some value.  ","Syn":{"Syntax":" setHUDMovementLevels [minSpeed, maxSpeed, minAlt, maxAlt, minDir, maxDir, target or position] ","Params":["[minSpeed, maxSpeed, minAlt, maxAlt, minDir, maxDir, position]: Array\n\n","minSpeed: Number - Units: m/s","maxSpeed: Number - Units: m/s","minAlt: Number - Units: m","maxAlt: Number - Units: m","minDir: Number - Units: deg","maxDir: Number - Units: deg","position: Array - [x,y,z]"],"Return":" Nothing "},"Examples":["setHUDMovementLevels [20,30,-1,-1,0.23,2.1]"],"Additional":["See also needed"]},{"Name":"setIdentity","Desc":" Set identity of person.\nIdentities are defined in Description.ext of the mission or campaign. For a list of available faces, glasses and speakers check Category:CfgIdentities. ","Syn":{"Syntax":" person setIdentity identity ","Params":["person: Object\n\n","identity: String"],"Return":" Nothing "},"Examples":["_soldier1 setIdentity \"MyLittleSoldier\";"],"Additional":["See also needed"]},{"Name":"setImportance","Desc":" Sets the importance value of location.","Syn":{"Syntax":" location setImportance value ","Params":["location: Location\n\n","value: Number"],"Return":" Nothing "},"Examples":["myLocation setImportance 2"],"Additional":["importance"]},{"Name":"setLeader","Desc":" Set the leader of given team. Effect is local, unless both leader unit and team are local to PC on which command is executed, then effect is global. ","Syn":{"Syntax":" team setLeader leader ","Params":["team: Team Member\n\n","leader: Team Member"],"Return":" Nothing "},"Examples":["Example needed"],"Additional":["selectLeader","formationLeader","formLeader","leader","isFormationLeader"]},{"Name":"setLightAmbient","Desc":" Set ambient color of light. ","Syn":{"Syntax":" light setLightAmbient [r, g, b] ","Params":["light: Object\n\n","[r, g, b]: Array"],"Return":" Nothing "},"Examples":["Example needed"],"Additional":["setLightColor","setLightBrightness","lightAttachObject","lightDetachObject","setLightIntensity","setLightAttenuation","setLightUseFlare","setLightFlareSize","setLightFlareMaxDistance","setLightDayLight"]},{"Name":"setLightAttenuation","Desc":" Sets attenuation of light.  ","Syn":{"Syntax":" light setLightAttenuation [start, constant, linear, quadratic] ","Params":["light: Object\n\n","[start, constant, linear, quadratic]: Array","start: Number","constant: Number","linear: Number","quadratic: Number"],"Return":" Nothing "},"Examples":["Example needed"],"Additional":["setLightAmbient","setLightColor","lightAttachObject","lightDetachObject","setLightBrightness","setLightIntensity","setLightUseFlare","setLightFlareSize","setLightFlareMaxDistance","setLightDayLight"]},{"Name":"setLightBrightness","Desc":" Set brightness of light. ","Syn":{"Syntax":" light setLightBrightness brightness ","Params":["light: Object\n\n","brightness: Number"],"Return":" Nothing "},"Examples":["Example needed"],"Additional":["setLightAmbient","setLightColor","lightAttachObject","lightDetachObject","setLightIntensity","setLightAttenuation","setLightUseFlare","setLightFlareSize","setLightFlareMaxDistance","setLightDayLight"]},{"Name":"setLightColor","Desc":" Set diffuse color of light. ","Syn":{"Syntax":" light setLightColor [r, g, b] ","Params":["light: Object\n\n","[r, g, b]: Array"],"Return":" Nothing "},"Examples":["Example needed"],"Additional":["setLightAmbient","setLightBrightness","lightAttachObject","lightDetachObject","setLightIntensity","setLightAttenuation","setLightUseFlare","setLightFlareSize","setLightFlareMaxDistance","setLightDayLight"]},{"Name":"setLightDayLight","Desc":" Sets if light can be used during the day.  ","Syn":{"Syntax":" light setLightDayLight bool ","Params":["light: Object\n\n","bool: Boolean"],"Return":" Nothing "},"Examples":["Example needed"],"Additional":["setLightAmbient","setLightColor","lightAttachObject","lightDetachObject","setLightIntensity","setLightAttenuation","setLightUseFlare","setLightFlareSize","setLightFlareMaxDistance","setLightBrightness"]},{"Name":"setLightFlareMaxDistance","Desc":" Sets max distance where the flare is visible.  ","Syn":{"Syntax":" light setLightFlareMaxDistance distance ","Params":["light: Object\n\n","distance: Number"],"Return":" Nothing "},"Examples":["Example needed"],"Additional":["setLightAmbient","setLightColor","lightAttachObject","lightDetachObject","setLightIntensity","setLightAttenuation","setLightUseFlare","setLightFlareSize","setLightBrightness","setLightDayLight"]},{"Name":"setLightFlareSize","Desc":" Sets relative size of the flare for the light.  ","Syn":{"Syntax":" light setLightFlareSize size ","Params":["light: Object\n\n","size: Number"],"Return":" Nothing "},"Examples":["Example needed"],"Additional":["setLightAmbient","setLightColor","lightAttachObject","lightDetachObject","setLightIntensity","setLightAttenuation","setLightUseFlare","setLightBrightness","setLightFlareMaxDistance","setLightDayLight"]},{"Name":"setLightIntensity","Desc":" Sets intensity of light.  ","Syn":{"Syntax":" light setLightIntensity value ","Params":["light: Object\n\n","value: Number"],"Return":" Nothing "},"Examples":["Example needed"],"Additional":["setLightAmbient","setLightColor","lightAttachObject","lightDetachObject","setLightBrightness","setLightAttenuation","setLightUseFlare","setLightFlareSize","setLightFlareMaxDistance","setLightDayLight"]},{"Name":"setLightnings","Desc":" Changes the lightnings value smoothly during the given time (in seconds).\n\nA time of zero means there will be an immediate change. ","Syn":{"Syntax":" time setLightnings value ","Params":["time: Number\n\n","value: Number"],"Return":" Nothing "},"Examples":["1800 setLightnings 0.7;"],"Additional":["lightnings"]},{"Name":"setLightUseFlare","Desc":" Sets if light has flare.  ","Syn":{"Syntax":" light setLightUseFlare bool ","Params":["light: Object\n\n","bool: Boolean"],"Return":" Nothing "},"Examples":["Example needed"],"Additional":["setLightAmbient","setLightColor","lightAttachObject","lightDetachObject","setLightIntensity","setLightAttenuation","setLightBrightness","setLightFlareSize","setLightFlareMaxDistance","setLightDayLight"]},{"Name":"setLocalWindParams","Desc":" Sets parameters for local wind emiters (like helicopters). Default [1.0, 1.0].  ","Syn":{"Syntax":" setLocalWindParams [strength, diameter] ","Params":["[strength, diameter]: Object\n\n","strength: Number","diameter: Number"],"Return":" Nothing "},"Examples":["Example needed"],"Additional":["setWind","wind","setWindStr","setWindDir","setWindForce","windDir","windStr","gusts","setGusts"]},{"Name":"setMarkerAlpha","Desc":" Sets the marker alpha. The marker is modified on all computers in a network session.\n\nWhen alpha equals 1, the marker is visible, but if alpha equals 0, then the marker is invisible.\n\nAlpha can be numbers and fractions. ","Syn":{"Syntax":" marker setMarkerAlpha alpha ","Params":["marker: String -\n\n","alpha: Number -"],"Return":" Nothing "},"Examples":["\"my_marker\" setMarkerAlpha 0.5;","\"enemy_convoy_marker\" setMarkerAlpha 0;"],"Additional":["setMarkerAlphaLocal","setMarkerBrush","setMarkerColor","setMarkerDir","setMarkerPos","setMarkerShape","setMarkerSize","setMarkerText","setMarkerType","createMarker"]},{"Name":"setMarkerAlphaLocal","Desc":" Sets the marker alpha. The marker is only modified on the computer where the command is called.\n\nWhen alpha equals 1, the marker is visible, but if alpha equals 0, then the marker is invisible.\n\nAlpha can be numbers and fractions. ","Syn":{"Syntax":" marker setMarkerAlphaLocal alpha ","Params":["marker: String -\n\n","alpha: Number -"],"Return":" Nothing "},"Examples":["\"my_marker\" setMarkerAlphaLocal 0.5;","\"enemy_convoy_marker\" setMarkerAlphaLocal 0;"],"Additional":["setMarkerAlpha","setMarkerBrush","setMarkerColor","setMarkerDir","setMarkerPos","setMarkerShape","setMarkerSize","setMarkerText","setMarkerType","createMarker"]},{"Name":"setMarkerBrush","Desc":" Selects the fill texture for the marker (\"RECTANGLE\" or \"ELLIPSE\"). Brush is the name of the subclass in CfgMarkerBrushes.\n\n\nbrush can be:\n\n \"Solid\"\n\n \"Horizontal\"\n\n \"Vertical\"\n\n \"Grid\"\n\n \"FDiagonal\"\n\n \"BDiagonal\"\n\n \"DiagGrid\"\n\n \"Cross\"\n\n \"Border\" (ArmA2 only)\n\n \"SolidBorder\" (OA only) ","Syn":{"Syntax":" markerName setMarkerBrush brush ","Params":["markerName: String\n\n","brush: String"],"Return":" Nothing "},"Examples":["\"Marker1\" setMarkerBrush \"DIAGGRID\";"],"Additional":["setMarkerAlpha","setMarkerAlphaLocal","setMarkerBrushLocal","setMarkerColor","setMarkerColorLocal","setMarkerDir","setMarkerDirLocal","setMarkerPos","setMarkerPosLocal","setMarkerShape","setMarkerShapeLocal","setMarkerSize","setMarkerSizeLocal","setMarkerText","setMarkerTextLocal","setMarkerType","setMarkerTypeLocal"]},{"Name":"setMarkerBrushLocal","Desc":" Selects the fill texture for the marker (\"RECTANGLE\" or \"ELLIPSE\"). Brush is the name of the subclass in CfgMarkerBrushes.\n\n\nbrush can be:\n\n \"Solid\"\n\n \"SolidFull\" (A3 only)\n\n \"Horizontal\"\n\n \"Vertical\"\n\n \"Grid\"\n\n \"FDiagonal\"\n\n \"BDiagonal\"\n\n \"DiagGrid\"\n\n \"Cross\"\n\n \"Border\" (A2/A3 only)\n\n \"SolidBorder\" (OA/A3 only) ","Syn":{"Syntax":" markerName setMarkerBrushLocal brush ","Params":["markerName: String\n\n","brush: String"],"Return":" Nothing "},"Examples":["\"Marker1\" setMarkerBrushLocal \"DiagGrid\";"],"Additional":["setMarkerAlpha","setMarkerAlphaLocal","setMarkerBrush","setMarkerColor","setMarkerColorLocal","setMarkerDir","setMarkerDirLocal","setMarkerPos","setMarkerPosLocal","setMarkerShape","setMarkerShapeLocal","setMarkerSize","setMarkerSizeLocal","setMarkerText","setMarkerTextLocal","setMarkerType","setMarkerTypeLocal"]},{"Name":"setMarkerColor","Desc":" Set marker color. Color is one of: \n\n \"Default\"\n\n \"ColorBlack\"\n\n \"ColorGrey\"\n\n \"ColorRed\"\n\n \"ColorRedAlpha\" (Arma 2 only)\n\n \"ColorGreen\"\n\n \"ColorGreenAlpha\" (Arma 2 only)\n\n \"ColorBlue\"\n\n \"ColorYellow\"\n\n \"ColorOrange\"\n\n \"ColorWhite\"\n\n \"ColorPink\"\n\n \"ColorBrown\"\n\n \"ColorKhaki\"\n\n \"ColorWEST\"\n\n \"ColorEAST\"\n\n \"ColorGUER\"\n\n \"ColorCIV\"\n\n \"ColorUNKNOWN\"\n\n \"Color1_FD_F\" (Light red)\n\n \"Color2_FD_F\" (Light khaki)\n\n \"Color3_FD_F\" (Light orange)\n\n \"Color4_FD_F\" (Light blue)\n\n\n\nArma 3\n\n \"ColorBLUFOR\"\n\n \"ColorCivilian\"\n\n \"ColorIndependent\"\n\n \"ColorOPFOR\"\n\n\n","Syn":{"Syntax":" markerName setMarkerColor color ","Params":["markerName: String\n\n","color: String"],"Return":" Nothing "},"Examples":["\"MarkerOne\" setMarkerColor \"ColorBlack\";"],"Additional":["setMarkerBrush","createMarker","setMarkerDir","setMarkerPos","setMarkerShape","setMarkerSize","setMarkerText","setMarkerType","setMarkerAlpha"]},{"Name":"setMarkerColorLocal","Desc":" Set marker color. Color is one of: \n\n \"Default\"\n\n \"ColorBlack\"\n\n \"ColorRed\"\n\n \"ColorRedAlpha\"\n\n \"ColorGreen\"\n\n \"ColorGreenAlpha\"\n\n \"ColorBlue\"\n\n \"ColorYellow\"\n\n \"ColorOrange\" (Arma 2 only)\n\n \"ColorWhite\" ","Syn":{"Syntax":" markerName setMarkerColorLocal color ","Params":["markerName: String\n\n","color: String"],"Return":" Nothing "},"Examples":["\"MarkerOne\" setMarkerColorLocal \"ColorBlack\";"],"Additional":["setMarkerAlpha","setMarkerAlphaLocal","setMarkerBrush","setMarkerBrushLocal","setMarkerColor","setMarkerDir","setMarkerDirLocal","setMarkerPos","setMarkerPosLocal","setMarkerShape","setMarkerShapeLocal","setMarkerSize","setMarkerSizeLocal","setMarkerText","setMarkerTextLocal","setMarkerType","setMarkerTypeLocal"]},{"Name":"setMarkerDir","Desc":" Sets the orientation of the marker. Angle is in degrees. ","Syn":{"Syntax":" markerName setMarkerDir angle ","Params":["markerName: String\n\n","angle: Number"],"Return":" Nothing "},"Examples":["\"Marker1\" setMarkerDir 90;"],"Additional":["markerDir","setMarkerBrush","createMarker","setMarkerColor","setMarkerPos","setMarkerShape","setMarkerSize","setMarkerText","setMarkerType","setMarkerAlpha"]},{"Name":"setMarkerDirLocal","Desc":" Sets the orientation of the marker. Angle is in degrees. ","Syn":{"Syntax":" markerName setMarkerDirLocal angle ","Params":["markerName: String\n\n","angle: Number"],"Return":" Nothing "},"Examples":["\"Marker1\" setMarkerDirLocal 90;"],"Additional":["setMarkerAlpha","setMarkerAlphaLocal","setMarkerBrush","setMarkerBrushLocal","setMarkerColor","setMarkerColorLocal","setMarkerDir","setMarkerPos","setMarkerPosLocal","setMarkerShape","setMarkerShapeLocal","setMarkerSize","setMarkerSizeLocal","setMarkerText","setMarkerTextLocal","setMarkerType","setMarkerTypeLocal"]},{"Name":"setMarkerPos","Desc":" Moves the marker. Pos format is Position2D. ","Syn":{"Syntax":" markerName setMarkerPos pos ","Params":["markerName: String\n\n","pos: Array - format Position2D"],"Return":" Nothing "},"Examples":["\"MarkerOne\" setMarkerPos getMarkerPos \"MarkerTwo\""],"Additional":["setMarkerBrush","setMarkerColor","setMarkerDir","createMarker","setMarkerShape","setMarkerSize","setMarkerText","setMarkerType","setMarkerAlpha"]},{"Name":"setMarkerPosLocal","Desc":" Moves the marker. Pos format is Position2D. ","Syn":{"Syntax":" markerName setMarkerPosLocal pos ","Params":["markerName: String\n\n","pos: Array - format Position2D"],"Return":" Nothing "},"Examples":["\"MarkerOne\" setMarkerPosLocal getMarkerPos \"MarkerTwo\";"],"Additional":["setMarkerAlpha","setMarkerAlphaLocal","setMarkerBrush","setMarkerBrushLocal","setMarkerColor","setMarkerColorLocal","setMarkerDir","setMarkerDirLocal","setMarkerPos","setMarkerShape","setMarkerShapeLocal","setMarkerSize","setMarkerSizeLocal","setMarkerText","setMarkerTextLocal","setMarkerType","setMarkerTypeLocal"]},{"Name":"setMarkerShape","Desc":" Selects the shape (type) of the marker.\n\nShape can be \"ICON\", \"RECTANGLE\" or \"ELLIPSE\". ","Syn":{"Syntax":" markerName setMarkerShape shape ","Params":["markerName: String\n\n","shape: String"],"Return":" Nothing "},"Examples":["\"Marker1\" setMarkerShape \"RECTANGLE\";"],"Additional":["setMarkerBrush","setMarkerColor","setMarkerDir","setMarkerPos","createMarker","setMarkerSize","setMarkerText","setMarkerType","setMarkerAlpha"]},{"Name":"setMarkerShapeLocal","Desc":" Selects the shape (type) of the marker.\n\nShape can be \"ICON\", \"RECTANGLE\" or \"ELLIPSE\". ","Syn":{"Syntax":" markerName setMarkerShapeLocal shape ","Params":["markerName: String\n\n","shape: String"],"Return":" Nothing "},"Examples":["\"Marker1\" setMarkerShapeLocal \"RECTANGLE\";"],"Additional":["setMarkerAlpha","setMarkerAlphaLocal","setMarkerBrush","setMarkerBrushLocal","setMarkerColor","setMarkerColorLocal","setMarkerDir","setMarkerDirLocal","setMarkerPos","setMarkerPosLocal","setMarkerShape","setMarkerSize","setMarkerSizeLocal","setMarkerText","setMarkerTextLocal","setMarkerType","setMarkerTypeLocal"]},{"Name":"setMarkerSize","Desc":" Set marker size.\nSize is in format [a-axis, b-axis]. ","Syn":{"Syntax":" markerName setMarkerSize [a-axis, b-axis] ","Params":["markerName: String\n\n","[a-axis, b-axis]: Array","a-axis: Number. width of marker","b-axis: Number. height of marker"],"Return":" Nothing "},"Examples":["\"MarkerOne\" setMarkerSize [100, 200];"],"Additional":["getMarkerSize","setMarkerBrush","setMarkerColor","setMarkerDir","setMarkerPos","setMarkerShape","createMarker","setMarkerText","setMarkerType","setMarkerAlpha"]},{"Name":"setMarkerSizeLocal","Desc":" Set marker size.\nSize is in format [a-axis, b-axis]. ","Syn":{"Syntax":" markerName setMarkerSizeLocal [a-axis, b-axis] ","Params":["markerName: String\n\n","[a-axis, b-axis]: Array","a-axis: Numbers. width of marker","b-axis: Numbers. height of marker"],"Return":" Nothing "},"Examples":["\"MarkerOne\" setMarkerSizeLocal [100, 200];"],"Additional":["setMarkerAlpha","setMarkerAlphaLocal","setMarkerBrush","setMarkerBrushLocal","setMarkerColor","setMarkerColorLocal","setMarkerDir","setMarkerDirLocal","setMarkerPos","setMarkerPosLocal","setMarkerShape","setMarkerShapeLocal","setMarkerSize","setMarkerText","setMarkerTextLocal","setMarkerType","setMarkerTypeLocal"]},{"Name":"setMarkerText","Desc":" Sets the text label of an existing marker. ","Syn":{"Syntax":" markerName setMarkerText text ","Params":["markerName: String\n\n","text: String"],"Return":" Nothing "},"Examples":["\"Marker1\" setMarkerText \"You are here.\";"],"Additional":["setMarkerBrush","setMarkerColor","setMarkerDir","setMarkerPos","setMarkerShape","setMarkerSize","setMarkerType","setMarkerAlpha"]},{"Name":"setMarkerTextLocal","Desc":" Sets the text label of an existing marker. ","Syn":{"Syntax":" markerName setMarkerTextLocal text ","Params":["markerName: String\n\n","text: String"],"Return":" Nothing "},"Examples":["\"Marker1\" setMarkerTextLocal \"You are here.\";"],"Additional":["setMarkerBrush","setMarkerColor","setMarkerDir","setMarkerPos","setMarkerShape","setMarkerSize","setMarkerType"]},{"Name":"setMarkerType","Desc":" Set marker type. See cfgMarkers for a list of standard markers.\n\n","Syn":{"Syntax":" markerName setMarkerType type ","Params":["markerName: String\n\n","type: String. See cfgMarkers."],"Return":" Nothing "},"Examples":["\"MarkerOne\" setMarkerType \"Warning\";"],"Additional":["cfgMarkers","setMarkerTypeLocal","markerType","setMarkerAlphaLocal","setMarkerBrush","setMarkerColor","setMarkerDir","setMarkerPos","setMarkerShape","setMarkerSize","setMarkerText","createMarker"]},{"Name":"setMarkerTypeLocal","Desc":" Set marker type. See cfgMarkers for a list of standard markers.\n\n","Syn":{"Syntax":" markerName setMarkerTypeLocal type ","Params":["markerName: String\n\n","type: String. See cfgMarkers."],"Return":" Nothing "},"Examples":["\"MarkerOne\" setMarkerTypeLocal \"Warning\";"],"Additional":["cfgMarkers","setMarkerAlpha","setMarkerAlphaLocal","setMarkerBrush","setMarkerBrushLocal","setMarkerColor","setMarkerColorLocal","setMarkerDir","setMarkerDirLocal","setMarkerPos","setMarkerPosLocal","setMarkerShape","setMarkerShapeLocal","setMarkerSize","setMarkerSizeLocal","setMarkerText","setMarkerTextLocal","setMarkerType","markerType"]},{"Name":"setMass","Desc":" Changes the mass of an object smoothly during the given time (in seconds). A time of zero (or using the alternative syntax) means an immediate change. ","Syn":{"Syntax":" myObject setMass [mass, time] \u003cbr\u003e(Alternate Syntax exists check Read more)","Params":["myObject: Object\n\n","[mass, time]: Array","mass: Number","time: Number"],"Return":" Nothing"},"Examples":["myObject setMass [10,0.5];","myObject setMass 10;"],"Additional":["getMass","setCenterOfMass","getCenterOfMass"]},{"Name":"setMimic","Desc":" Set person's facial expression. Following mimic values are recognized: \n\n \"Default\"\n\n \"Normal\"\n\n \"Smile\"\n\n \"Hurt\"\n\n \"Ironic\"\n\n \"Sad\"\n\n \"Cynic\"\n\n \"Surprised\"\n\n \"Agresive\"\n\n \"Angry\"\n\n\n\nSince Arma 2 OA 1.6*, these values are used :\n\n \"neutral\"\n\n \"dead\"\n\n \"danger\"\n\n \"hurt\"\n\n \"aware\"\n\n \"safe\"\n\n \"combat\"\n\n\n","Syn":{"Syntax":" person setMimic mimic ","Params":["person: Object\n\n","mimic: String. as above"],"Return":" Nothing "},"Examples":["_soldier1 setmimic \"angry\""],"Additional":["setIdentity","setFace","setFaceAnimation","enableMimics"]},{"Name":"setMousePosition","Desc":" Moves mouse pointer to specified position on the screen. x and y could be any number, but will be clipped so mouse never leaves the screen area. ","Syn":{"Syntax":" setMousePosition [x, y] ","Params":["[x, y]: Array\n\n","x: Number - x in screen coordinates","y: Number - y in screen coordinates"],"Return":" Nothing "},"Examples":["setMousePosition [0.5, 0.5];"],"Additional":["ctrlMapCursor"]},{"Name":"setMusicEffect","Desc":" Defines the music track played on activation.\n\nTrack is a subclass name of CfgMusic. In addition, \"$NONE$\" (no change) or \"$STOP$\" (stops the current music track). ","Syn":{"Syntax":" trigger setMusicEffect track \u003cbr\u003e(Alternate Syntax exists check Read more)","Params":["trigger: Object\n\n","track: String"],"Return":" Nothing "},"Examples":["_trigger setMusicEffect \"Track1\"","[_group1,1] setMusicEffect \"$STOP$\""],"Additional":["createTrigger"]},{"Name":"setMusicEventHandler","Desc":" Sets given music track event handler. Will overwrite other music event handlers. Use addMusicEventHandler if you want to stack them. ","Syn":{"Syntax":" setMusicEventHandler [type, function] ","Params":["[type, function]: Array\n\n","type: String - \"MusicStart\" or \"MusicStop\"","function: String - script to be executed. Passes params array 0: class name of the sound in CfgMusic, 1: event handler id"],"Return":" Number - id of the event handler "},"Examples":["_ehID = setMusicEventHandler [\"MusicStart\", \"hint str _this\"];","_ehID = setMusicEventHandler [\"MusicStop\", \"hint str _this\"];"],"Additional":["addMusicEventHandler","removeMusicEventHandler","playMusic","removeAllMusicEventHandlers"]},{"Name":"setName","Desc":" Sets the name of a location or a person. In Arma 3 this can be used to set name of a person but only in single player. ","Syn":{"Syntax":" object setName name \u003cbr\u003e(Alternate Syntax exists check Read more)","Params":["object: Location or Object\n\n","name: String"],"Return":"Nothing "},"Examples":["myLocation setName \"My Location Name\";","player setName \"New Name\";","player setName [\"Ben Kerry\",\"Ben\",\"Kerry\"];"],"Additional":["name"]},{"Name":"setNameSound","Desc":" Sets the nameSound of a person. ","Syn":{"Syntax":" person setNameSound name ","Params":["person: Object\n\n","name: String"],"Return":" Nothing "},"Examples":["unit1 setNameSound \"dixon\";","unit1 setNameSound \"\"; // will reset to default behaviour"],"Additional":["See also needed"]},{"Name":"setObjectArguments","Desc":" Set object arguments in mission editor. ","Syn":{"Syntax":" map setObjectArguments [object,[name1,value1,...]] ","Params":["map: Control -\n\n","[name1,value1,...]]: Array -"],"Return":" Any "},"Examples":["Example needed"],"Additional":["See also needed"]},{"Name":"setObjectMaterial","Desc":" Sets material of object selection. The selection number is defined through the  hiddenselection[]={} array in the vehicle's config (starting with 0).   ","Syn":{"Syntax":" obj setObjectMaterial [selectionNumber, material] ","Params":["obj: Object\n\n","[selectionNumber, material]: Array","selectionNumber: Number","material: String"],"Return":" Nothing "},"Examples":["car setObjectMaterial [0,\"A3\\Structures_F\\Data\\Windows\\window_set.rvmat\"];\ncar setObjectMaterial [1,\"A3\\Structures_F\\Data\\Windows\\window_set.rvmat\"];"],"Additional":["setObjectTexture"]},{"Name":"setObjectProxy","Desc":" Set the proxy object associated with the given editor object. ","Syn":{"Syntax":" map setObjectProxy [object,proxy object] ","Params":["map: Control -\n\n","[object,proxy object]: Array -"],"Return":" Nothing "},"Examples":["_map setObjectProxy [\"_group_0\", vehicle (leader _group)];"],"Additional":["getObjectProxy"]},{"Name":"setObjectTexture","Desc":" Textures object selection with texture named in array. \n\nArray has the form [selectionNumber, \"Texture\"].\n\nThe selection number is defined through the hiddenselection[]={} array in the vehicle's config (starting with 0). ","Syn":{"Syntax":" object setObjectTexture [selectionNumber,texture] ","Params":["object: Object\n\n","[selectionNumber,texture]: Array","selectionNumber: Number","texture: String"],"Return":" Nothing "},"Examples":["_objectname setObjectTexture [0, \"\\pboname\\texture.paa\"];\n_objectname setObjectTexture [1, \"\\pboname\\texture2.paa\"];","_obj setObjectTexture [0, \"#(rgb,8,8,3)color(1,0,0,1)\"];","_obj setObjectTexture [0, \"#(argb,512,512,1)r2t(rendersurface,1.333)\"];"],"Additional":["setObjectTextureGlobal","setObjectMaterial"]},{"Name":"setObjectTextureGlobal","Desc":" Set the texture of the given selection on all computers in a network session. ","Syn":{"Syntax":" obj setObjectTextureGlobal [selection, texture] ","Params":["obj: Object\n\n","[selection,texture]: Array","selection: Number","texture: String"],"Return":" Nothing "},"Examples":["player setObjectTextureGlobal [0, \"\\MyAddon\\blue.paa\"];"],"Additional":["setObjectTexture"]},{"Name":"setObjectViewDistance","Desc":" Sets the rendering distance of objects. \n\nThis command does nothing and also throws error when 3 element array is passed: http://feedback.arma3.com/view.php?id=11835  ","Syn":{"Syntax":" setObjectViewDistance dist ","Params":["dist: Number or Array - Array in format [vehiclesZ, staticZ, treesZ]"],"Return":" Nothing "},"Examples":["setObjectViewDistance 2000"],"Additional":["setViewDistance"]},{"Name":"setOvercast","Desc":" Set overcast to given value smoothly during given time (in seconds). Zero time means immediate change. An overcast setting of zero means clear (sunny) weather, and one means storms and rain are very likely. Higher overcast values also result in higher wind speeds. ","Syn":{"Syntax":" time setOvercast overcast ","Params":["time: Number. In seconds\n\n","overcast: Number. Range 0 to 1"],"Return":" Nothing "},"Examples":["50 setOvercast 0.5"],"Additional":["overcast","nextWeatherChange","simulSetHumidity"]},{"Name":"setOwner","Desc":" From server machine, change the ownership of an object to a given client. Returns true if locality was changed. ","Syn":{"Syntax":" object setOwner clientID ","Params":["object: Object -\n\n","clientID: Number - clientID of the new owner"],"Return":" Boolean "},"Examples":["_someObject setOwner 12;","_someObject setOwner (owner _playerObject);"],"Additional":["owner"]},{"Name":"setOxygenRemaining","Desc":" Sets oxygen remaining. It has no effect when soldier is not diving. Oxygen remaining is a number between 0 and 1.  ","Syn":{"Syntax":" unit setOxygenRemaining value ","Params":["unit: Object\n\n","value: Number"],"Return":" Nothing "},"Examples":["player setOxygenRemaining 0; // Drowns player"],"Additional":["getOxygenRemaining"]},{"Name":"setParticleCircle","Desc":" Update particle source to create particles on circle with given radius. Velocity is transformed and added to total velocity. ","Syn":{"Syntax":" particleSource setParticleCircle [radius, velocity] ","Params":["particleSource: Object\n\n","[radius, velocity]: Array","radius: Number","velocity: Array (x,y,z)"],"Return":" Nothing "},"Examples":["Example needed"],"Additional":["setParticleParams","setParticleRandom","ParticleTemplates","setParticleClass","particlesQuality","setParticleFire"]},{"Name":"setParticleClass","Desc":" Set parameters from existing config class. ClassName is name of the class from CfgCloudlets. \n\nSince version 1.11.114706 you can use setParticleParams to overwrite many values set by config class, particularity those defined in ParticleArray. ","Syn":{"Syntax":" source setParticleClass className ","Params":["source: Object\n\n","className: String"],"Return":" Nothing "},"Examples":["_source01 = \"#particlesource\" createVehicleLocal _pos01;\n_source01 setParticleClass \"ObjectDestructionFire1Smallx\";\n_source01 attachTo [_object,[0,0,0]];\n"],"Additional":["Arma 3 Particle Effects","ParticleArray","setParticleParams","setParticleRandom","setParticleCircle","setParticleFire","setDropInterval","drop"]},{"Name":"setParticleFire","Desc":" Set fire parameters to particle effect.\n\nNote: You need to create emitter at first. Basic parameters of particle effect must be defined too. You can use script commands setParticleClass or setParticleParams to do so. See example.  ","Syn":{"Syntax":" source setParticleFire [coreIntensity, coreDistance, damageTime] ","Params":["source: Object\n\n","[coreIntensity, coreDistance, damageTime]: Array","coreIntensity: Number - damage in the center of fire","coreDistance: Number - how far can unit get damage","damageTime: Number - how often is unit getting damage"],"Return":" Nothing "},"Examples":["_emitter = \"#particlesource\" createVehicleLocal (getPos player);\n_emitter setParticleClass \"MediumSmoke\";\n_emitter setParticleFire [0.3,1.0,0.1];\n"],"Additional":["Arma 3 Particle Effects","ParticleArray","setParticleParams","setParticleRandom","setParticleCircle","setDropInterval","drop","setParticleClass"]},{"Name":"setParticleParams","Desc":" Set parameters to particle source. Array is in format ParticleArray. \n\nSince Arma 3 version 1.11.114706 you can use this command to overwrite many values set by setParticleClass, particularity those defined in ParticleArray. ","Syn":{"Syntax":" particleSource setParticleParams array ","Params":["particleSource: Object\n\n","array: Array - format ParticleArray"],"Return":" Nothing "},"Examples":["see ParticleArray"],"Additional":["Arma 3 Particle Effects","ParticleArray","setParticleClass","setParticleRandom","setParticleCircle","setParticleFire","setDropInterval","drop"]},{"Name":"setParticleRandom","Desc":" Set randomization of particle source parameters. ","Syn":{"Syntax":" particleSource setParticleRandom [lifeTime, position, moveVelocity, rotationVelocity, size, color, randomDirectionPeriod, randomDirectionIntensity, {angle}, bounceOnSurface] ","Params":["particleSource: Object\n\n","[lifeTime, position, moveVelocity, rotationVelocity, size, color, randomDirectionPeriod, randomDirectionIntensity, {angle}, bounceOnSurface]: Array"],"Return":" Nothing "},"Examples":[" _PS setParticleRandom [0, [0.1, 0.1, 0.1], [0, 0, 0.5], 0, 0.1, [0, 0, 0, 0], 0, 0];"],"Additional":["ParticleArray","setParticleCircle","setParticleParams","ParticleTemplates","setParticleClass","particlesQuality","setParticleFire"]},{"Name":"setPiPEffect","Desc":" Sets Render Target's visual effect (Picture-in-Picture). \n\n 0: Normal - [0]\n\n 1: Night Vision - [1]\n\n 2: Thermal - [2]\n\n 3: Color Correction - [3, enabled, brightness, contrast, offset, blend [r,g,b,a], lerp [r,g,b,a], rgb [r,g,b,a]]\n\n 4: Mirror - [4] \u003ccurrently not working\u003e\n\n 5: Chromatic Aberration - [5, enabled, powerx, powery, (bool) aspectCorrection] \u003ccurrently not working\u003e\n\n 6: Film Grain - [6, enabled, intensity, sharpness, grainsize, intensityx1, intensityx2, (bool) monochromatic] \u003ccurrently not working\u003e\n\n 7: Thermal Inverted [7]\n\n\n","Syn":{"Syntax":" name setPiPEffect [effect, optionalParam1, ..., optionalParamN]","Params":["name : String - Render surface reference from Render To Texture\n\n","[effect, optionalParam1, ..., optionalParamN] : Array","effect : Number - effect type","optionalParam1: Parameters based on selected effect"],"Return":" Nothing "},"Examples":["\"rendersurface\" setPiPEffect [0];","\"rendertarget0\" setPiPEffect [3, 1.0, 1.0, 1.0, 0.0, [0.0, 1.0, 0.0, 0.25], [1.0, 0.0, 1.0, 1.0],  [0.199, 0.587, 0.114, 0.0]];","cam = \"camera\" camCreate (player modelToWorld [0,-5,2]);\ncam cameraEffect [\"internal\",\"back\",\"rtt\"];\n\"rtt\" setPiPEffect [2];\nwith uiNamespace do {\n\u0009pic = findDisplay 46 ctrlCreate [\"RscPicture\", -1];\n\u0009pic ctrlSetPosition [0,0,1,1];\n\u0009pic ctrlCommit 0;\n\u0009pic ctrlSetText \"#(argb,512,512,1)r2t(rtt,1.0)\";\n};"],"Additional":["Procedural Textures","camCreate","cameraEffect","Post process effects"]},{"Name":"setPitch","Desc":" Sets the pitch of a persons voice. ","Syn":{"Syntax":" person setPitch pitch ","Params":["person: Object\n\n","pitch: Number"],"Return":" Nothing "},"Examples":["unit1 setPitch 1\n"],"Additional":["pitch"]},{"Name":"setPlayable","Desc":" Create MP role for the unit. The roles created this way are used for Join In Progress and Team Switch. \n\nNOTE: Currently in Arma 3 this command does nothing.","Syn":{"Syntax":" setPlayable unitName ","Params":["unitName: Object"],"Return":" Nothing "},"Examples":["setPlayable _aPerson"],"Additional":["See also needed"]},{"Name":"setPlayerRespawnTime","Desc":" Set the time interval to wait on player respawn. It is set to mission default on mission start again. ","Syn":{"Syntax":" setPlayerRespawnTime interval ","Params":["interval: Number - respawn time in seconds"],"Return":" Nothing "},"Examples":["setPlayerRespawnTime 5;"],"Additional":["playerRespawnTime"]},{"Name":"setPos","Desc":" Sets object position.  ","Syn":{"Syntax":" object setPos pos ","Params":["object: Object\n\n","pos: Array - [x,y,z] format Position"],"Return":" Nothing "},"Examples":["player setPos [getPos player select 0, getPos player select 1, (getPos player select 2) +10];\n\n//the same as above using modelToWorld:\nplayer setPos (player modelToWorld [0,0,10]);\n\n//the same as above using vectorAdd:\nplayer setPos (getPos player vectorAdd [0,0,10]);\n","_obj setPos [ getPos _obj select 0, getPos _obj select 1, -5];","player setPos (getPos _obj);"],"Additional":["setPosASL","getPos","setVehiclePosition"]},{"Name":"setPosASL","Desc":" Sets the object position above sea level. The pos array uses the PositionASL format. ","Syn":{"Syntax":" object setPosASL pos ","Params":["object: Object\n\n","pos: Array - format PositionASL"],"Return":" Nothing "},"Examples":["player setPosASL [ getPosASL player select 0, (getPosASL player select 1) + 10, getPosASL player select 2];","this setPosASL [ position this select 0, position this select 1, 9];  //[ X, Y, Z]"],"Additional":["ASLToATL","ATLToASL","getPos","getPosASL","getPosATL","position","setPos","setPosASL2","setPosATL","getTerrainHeightASL"]},{"Name":"setPosASL2","Desc":" Sets the object position. The pos array uses the PositionASL format. The version of the command does not offset based on object center. ","Syn":{"Syntax":" obj setPosASL2 pos","Params":["obj: Object\n\n","pos: Array"],"Return":" Nothing "},"Examples":["player setPosASL2 [getPosASL player select 0, (getPosASL player select 1) + 10, getPosASL player select 2] "],"Additional":["setPosASL","getPosASL"]},{"Name":"setPosASLW","Desc":" Sets the object position above sea surface. The pos array uses the PositionASLW format.   ","Syn":{"Syntax":" obj setPosASLW pos ","Params":["obj: Object\n\n","pos: Array - format PositionASLW"],"Return":" Nothing "},"Examples":["_diver setPosASLW [(position _diver) select 0, (position _diver) select 1, -10];\n"],"Additional":["getPosASLW"]},{"Name":"setPosATL","Desc":" Sets the position of an object relative to the terrain. ","Syn":{"Syntax":" object setPosATL pos ","Params":["object: Object\n\n","pos: Array - format PositionATL"],"Return":" Nothing "},"Examples":["player setPosATL [ getPosATL player select 0, (getPosATL player select 1) - 10,\ngetPosATL player select 2]"],"Additional":["getPosATL","getPos","getPosASL","setPos","setPosASL"]},{"Name":"setPosition","Desc":" Sets the position of a location. ","Syn":{"Syntax":" location setPosition pos ","Params":["location: Location\n\n","pos: Array - format Position"],"Return":" Nothing "},"Examples":["myLocation setPosition [1000,5320,10]"],"Additional":["locationPosition"]},{"Name":"setPosWorld","Desc":" Sets position of an object based on PositionASL of the model centre [0,0,0]. ","Syn":{"Syntax":"object setPosWorld position ","Params":["object: Object\n\n","position: PositionASL of the model centre"],"Return":" Nothing "},"Examples":["_obj setPosWorld getPosWorld _obj;"],"Additional":["getPosWorld","setPos","setPosATL","setPosASL","setPosASLW","setMarkerPos"]},{"Name":"setRadioMsg","Desc":" Set radio message (0, 0, map radio) to given text. Use \"NULL\" to disable radio slot. ","Syn":{"Syntax":" index setRadioMsg text ","Params":["index: Number\n\n","text: String"],"Return":" Nothing "},"Examples":["1 setRadioMsg \"Alpha Radio\""],"Additional":["createTrigger","setTriggerText"]},{"Name":"setRain","Desc":" Set rain density smoothly over the given transition time (in seconds). A transition time of zero means an immediate change. A rain density of zero is no rain, one is maximum rain. Rain is not possible when overcast is less than 0.7. ","Syn":{"Syntax":" time setRain rain ","Params":["time: Number. In seconds\n\n","rain: Number. Range 0 to 1"],"Return":" Nothing "},"Examples":["60 setRain 1"],"Additional":["overcast","setOvercast","rain"]},{"Name":"setRainbow","Desc":" Changes the rainbow value smoothly during the given time (in seconds). A time of zero means there will be an immediate change.  ","Syn":{"Syntax":" time setRainbow value ","Params":["time: Number\n\n","value: Number"],"Return":" Nothing "},"Examples":["Example needed"],"Additional":["rainbow"]},{"Name":"setRandomLip","Desc":" Enables/Disables random lip. When enabled, the unit continuously moves its lips as if it's talking.  ","Syn":{"Syntax":" unit setRandomLip bool ","Params":["unit: Object\n\n","bool: Boolean"],"Return":" Nothing "},"Examples":["player setRandomLip true;"],"Additional":["say"]},{"Name":"setRank","Desc":" Sets rank of given unit.\n\nPossible values: PRIVATE, CORPORAL, SERGEANT, LIEUTENANT, CAPTAIN, MAJOR or COLONEL. ","Syn":{"Syntax":" unitName setRank rank ","Params":["unitName: Object\n\n","rank: String"],"Return":" Nothing "},"Examples":["player setRank \"COLONEL\""],"Additional":["rank","setUnitRank"]},{"Name":"setRectangular","Desc":" Set the shape of a location to be either rectangular or elliptical. Locations default shape is elliptical.","Syn":{"Syntax":" location setRectangular set ","Params":["location: Location\n\n","set: Boolean"],"Return":" Nothing "},"Examples":["myLocation setRectangular true"],"Additional":["rectangular"]},{"Name":"setRepairCargo","Desc":" Set amount of repair resources in cargo space of repair vehicle.\nAmount 1 is full cargo. ","Syn":{"Syntax":" vehicleName setRepairCargo amount ","Params":["vehicleName: Object\n\n","amount: Number range 0 to 1"],"Return":" Nothing "},"Examples":["_repairTruck1 setRepairCargo 0"],"Additional":["getRepairCargo","setAmmoCargo","setFuelCargo"]},{"Name":"setShadowDistance","Desc":" Sets the shadows rendering distance.  ","Syn":{"Syntax":" setShadowDistance value ","Params":["value: Number"],"Return":" Nothing "},"Examples":["setShadowDistance 1000"],"Additional":["getShadowDistance"]},{"Name":"setSide","Desc":" Sets a location's side. The default side is Unknown.","Syn":{"Syntax":" location setSide side ","Params":["location: Location\n\n","side: Side"],"Return":" Nothing "},"Examples":["myLocation setSide resistance"],"Additional":["Side","side","west","east","resistance","civilian","sideUnknown","sideFriendly","sideEnemy","playerSide","side location","Side relations"]},{"Name":"setSimpleTaskDescription","Desc":" Attach descriptions to the simple task.  ","Syn":{"Syntax":" task setSimpleTaskDescription array ","Params":["Task\n\n","Array: [Task description, Task title, Task waypoint description]"],"Return":" Nothing "},"Examples":["tskCaptObj setSimpleTaskDescription [\"Today you have to kill Spongebob.\", \"Kill Spongebob\", \"Here he is !\"];"],"Additional":["taskDescription","Tasks","createSimpleTask","removeSimpleTask","setSimpleTaskDestination","setTaskState","setTaskResult","taskState"]},{"Name":"setSimpleTaskDestination","Desc":" Attach a destination to the simple task.  ","Syn":{"Syntax":" task setSimpleTaskDestination position ","Params":["Task: Task\n\n","Position: Position"],"Return":" Nothing "},"Examples":["_tskGoHere setSimpleTaskDestination (getMarkerPos \"obj1\");"],"Additional":["Tasks","createSimpleTask","removeSimpleTask","setSimpleTaskDescription","setTaskState","setTaskResult","taskState","taskDestination","cancelSimpleTaskDestination"]},{"Name":"setSimpleTaskTarget","Desc":" Attach a target to the simple task.Overrides setSimpleTaskDestination.\n","Syn":{"Syntax":" task setSimpleTaskTarget [target, precisePosition] ","Params":["task: Task\n\n","target: Object","precisePosition: Boolean - use exact position of the target for map marker / HUD indicator instead of the position known to the owner of the task (depending on the knowledge about the target)"],"Return":" Nothing "},"Examples":["task setSimpleTaskTarget [targetVehicle, true];"],"Additional":["briefing","createSimpleTask","setSimpleTaskDestination"]},{"Name":"setSimulWeatherLayers","Desc":" Sets number of simul weather layers, affects quality of simul weather clouds. ","Syn":{"Syntax":" setSimulWeatherLayers layers ","Params":["layers: Number"],"Return":" Nothing "},"Examples":["Example needed"],"Additional":["simulCloudDensity","simulCloudOcclusion","simulInClouds"]},{"Name":"setSize","Desc":" Sets the size (radius)  of a location.\n\nThe width  is 2 * x, the height is 2 * y. ","Syn":{"Syntax":" location setSize size ","Params":["location: Location\n\n","size: Array"],"Return":" Nothing "},"Examples":["myLocation setSize [10,30]"],"Additional":["size"]},{"Name":"setSkill","Desc":" Sets ability level of person (commander unit). Value of skill may vary from 0 to 1. ","Syn":{"Syntax":" vehicleName setSkill skill ","Params":["vehicleName: Object\n\n","skill: Number Range 0 to 1"],"Return":" Nothing "},"Examples":["_hero setskill 1"],"Additional":["skill","setSkill array","setUnitAbility","CfgAISkill","AI Combat Modes"]},{"Name":"setSkill_array","Desc":" Sets sub-skill level of an unit / commander unit. \n\nValue of sub-skill may vary from 0 to 1.\n\nPossible sub-skill types are:\n\naimingAccuracy\n\naimingShake\n\naimingSpeed\n\nendurance\n\nspotDistance\n\nspotTime\n\ncourage\n\nreloadSpeed\n\ncommanding\n\ngeneral","Syn":{"Syntax":" unitName setSkill [type, skill] ","Params":["unitName: Object\n\n","[type, skill]: Array","type: String As above","skill: Number Range 0..1"],"Return":" Nothing "},"Examples":["hero setskill [\"Endurance\",0.7]"],"Additional":["AI Sub-skills","skill","setSkill","setUnitAbility","CfgAISkill"]},{"Name":"setSoundEffect","Desc":" Defines the different sound effects.\n\nSound / voice plays a 2D / 3D sound from CfgSounds.\n\nSoundEnv plays an enviromental sound from CfgEnvSounds.\n\nSoundDet (only for triggers) creates a dynamic sound object attached to a trigger defined in CfgSFX. ","Syn":{"Syntax":" trigger setSoundEffect [sound, voice, soundEnv, soundDet] \u003cbr\u003e(Alternate Syntax exists check Read more)","Params":["trigger: Object\n\n","[sound, voice, soundEnv, soundDet]: Array of strings"],"Return":" Nothing "},"Examples":["_trigger setSoundEffect [\"Alarm\", \"\", \"\", \"\"];"," [_group1,2] setSoundEffect [\"Alarm\", \"\", \"\", \"\"];","_trigger setSoundEffect [\"$NONE$\", \"\", \"\", \"MySound\"];"],"Additional":["createTrigger"]},{"Name":"setSpeaker","Desc":" Sets the speaker of a person. ","Syn":{"Syntax":" person setSpeaker speaker ","Params":["person: Object\n\n","name: String"],"Return":" Nothing "},"Examples":["unit1 setSpeaker \"Male02GRE\";\n"],"Additional":["speaker"]},{"Name":"setSpeech","Desc":" Add speech to location. ","Syn":{"Syntax":" location setSpeech speech ","Params":["location: Location\n\n","speech: String"],"Return":" Nothing "},"Examples":["Example needed"],"Additional":["See also needed"]},{"Name":"setSpeedMode","Desc":" Set group speed mode. Mode may be one of: \n\n \"LIMITED\" (half speed)\n\n \"NORMAL\" (full speed, maintain formation)\n\n \"FULL\" (do not wait for any other units in formation)\n\n\n","Syn":{"Syntax":" groupName setSpeedMode mode ","Params":["groupName: Object or Group\n\n","mode: String"],"Return":" Nothing "},"Examples":["_groupOne setSpeedMode \"LIMITED\""],"Additional":["speedMode"]},{"Name":"setStatValue","Desc":" Sets a value to a given stat. ","Syn":{"Syntax":" setStatValue [StatName, Value] ","Params":["StatName: String\n\n","Value: Number"],"Return":" Boolean "},"Examples":["Example needed"],"Additional":["See also needed"]},{"Name":"setSystemOfUnits","Desc":" Set system of units.  ","Syn":{"Syntax":" setSystemOfUnits value ","Params":["value: Number - 0 for metric, 1 for mixed, 2 for imperial."],"Return":" Nothing "},"Examples":["Example needed"],"Additional":["See also needed"]},{"Name":"setTargetAge","Desc":" Sets how the target is known to the other centers. They behave like the target was seen age seconds ago.\n\nPossible age values are: \"ACTUAL\", \"5 MIN\", \"10 MIN\", \"15 MIN\", \"30 MIN\", \"60 MIN\", \"120 MIN\" or \"UNKNOWN\". ","Syn":{"Syntax":" object setTargetAge age ","Params":["object: Object\n\n","age: String As above"],"Return":" Nothing "},"Examples":["player setTargetAge \"10 MIN\""],"Additional":["See also needed"]},{"Name":"setTaskResult","Desc":" Set a result of the task. ","Syn":{"Syntax":" task setTaskResult [state,result] ","Params":["task: Task -\n\n","[state,result]: Array -"],"Return":" Nothing "},"Examples":["Example needed"],"Additional":["Tasks","createSimpleTask","removeSimpleTask","setSimpleTaskDescription","setSimpleTaskDestination","setTaskState","taskState"]},{"Name":"setTaskState","Desc":" Set the state of a given task.\n\nState value may be one of:\n\n\"Succeeded\"\n\n\"Failed\"\n\n\"Canceled\"\n\n\"Created\"\n\n\"Assigned\"\n\n\n","Syn":{"Syntax":" task setTaskState state ","Params":["task: Task\n\n","state: String"],"Return":" "},"Examples":["_tskKillSpongebob setTaskState \"Succeeded\""],"Additional":["Tasks","createSimpleTask","removeSimpleTask","setSimpleTaskDescription","setSimpleTaskDestination","setTaskResult","taskState"]},{"Name":"setTerrainGrid","Desc":" Operation Flashpoint, VBS1: Set desired terrain resolution (in meters). \nFor default landscapes, supported resolutions are:\n\n 50 - smoothest, less lag\n\n 25 - default in multiplayer\n\n 12.5 - default in singleplayer\n\n 6.25\n\n 3.125 - bumpiest, higher lag\n\n\n\nIf you select unsupported resolutions, nearest supported value is used instead. \n\nArmed Assault, VBS2: Terrain resolution is fixed, determined by the world created. This function controls terrain LOD instead (the distance in which the terrain mesh resolution starts to degrade). Higher number means less vertices are used for terrain rendering, making distant hills less smooth. Value 12.5 corresponds to selecting Terrain Detail Normal in Video options, 50 to Very Low, 3.125 to Very High.\n","Syn":{"Syntax":" setTerrainGrid grid ","Params":["grid: Number"],"Return":" Nothing "},"Examples":["setTerrainGrid 12.5"],"Additional":["setViewDistance","viewDistance"]},{"Name":"setText","Desc":" Sets the text associated with a location. This text will be displayed on the game map at the location's position. ","Syn":{"Syntax":" location setText text ","Params":["location: Location\n\n","text: String"],"Return":" Nothing "},"Examples":["myLocation setText \"Rahmadi Village\""],"Additional":["text","createLocation"]},{"Name":"setTitleEffect","Desc":" Defines the title effect via [Type, Effect, Text] where\n\n'Type' can be \n\n\"NONE\", \n\n\"OBJECT\", \n\n'Text' defines the shown object , a subclass of CfgTitles.\n\n\n\n\n\n\n\"RES\" \n\n'Text' defines a resource class, a subclass of RscTitles.\n\n\n\n\"TEXT\"\n\nThe 'Text' is shown as text itself. 'Effect' defines a subtype: \"PLAIN\", \"PLAIN DOWN\", \"BLACK\", \"BLACK FADED\", \"BLACK OUT\", \"BLACK IN\", \"WHITE OUT\" or \"WHITE IN\".  ","Syn":{"Syntax":" trigger setTitleEffect [type, effect, text] \u003cbr\u003e(Alternate Syntax exists check Read more)","Params":["trigger: Object\n\n","[type, effect, text]: Array of strings. See above"],"Return":" Nothing "},"Examples":["_trigger setTitleEffect [\"TEXT\", \"PLAIN DOWN\", \"Hello world.\"]"],"Additional":["createTrigger"]},{"Name":"setTriggerActivation","Desc":" Defines the trigger activation type. \n\nSee ArmA:Mission Editor - Triggers for a thorough overview of triggers and its fields for activation, effects, etc.","Syn":{"Syntax":" trigger setTriggerActivation [by, type, repeating] ","Params":["trigger: Object - Trigger object\n\n","by: String - Who activates trigger. Can be \"NONE\" or\nSide': \"EAST\", \"WEST\", \"GUER\", \"CIV\", \"LOGIC\", \"ANY\"\nRadio: \"ALPHA\", \"BRAVO\", \"CHARLIE\", \"DELTA\", \"ECHO\", \"FOXTROT\", \"GOLF\", \"HOTEL\", \"INDIA\", \"JULIET\"\nObject: \"STATIC\", \"VEHICLE\", \"GROUP\", \"LEADER\", \"MEMBER\"\nStatus: \"WEST SEIZED\", \"EAST SEIZED\" or \"GUER SEIZED\"","type: String -  How trigger is it activated. Can be:\nPresence: \"PRESENT\", \"NOT PRESENT\"\nDetection: \"WEST D\", \"EAST D\", \"GUER D\" or \"CIV D\"","repeating: Boolean - Activation can happen repeatedly"],"Return":" Nothing "},"Examples":["_trigger setTriggerActivation [\"WEST\", \"EAST D\", true]"],"Additional":["triggerActivation","triggerActivated","createTrigger","setTriggerArea","setTriggerStatements","setTriggerText","setTriggerTimeout","setTriggerType","triggerAttachVehicle","triggerAttachObject"]},{"Name":"setTriggerArea","Desc":" Defines the area controlled by the trigger.\n\nThe area is either rectangular or elliptical, the width is 2 * xrad, the height is 2 * yrad.\n\nIt is rotated angle degrees. ","Syn":{"Syntax":" trigger setTriggerArea [xrad, yrad, angle, rectangle] ","Params":["trigger: Object\n\n","[xrad, yrad, angle, rectangle]: Array","xrad: Number - horizontal(x) radius (or half the width of rectangle)","yrad: Number - vertical(y) radius (or half the height of rectangle)","angle: Number - rotational in degrees","rectangle: Boolean - true if rectangle)"],"Return":" Nothing "},"Examples":["_trigger setTriggerArea [100, 50, 45, false ]"],"Additional":["triggerArea","createTrigger","setTriggerActivation","setTriggerStatements","setTriggerText","setTriggerTimeout","setTriggerType"]},{"Name":"setTriggerStatements","Desc":" Defines a trigger's condition, and executable code for its activation and deactivation events. ","Syn":{"Syntax":" trigger setTriggerStatements [condition, activation, deactivation] ","Params":["trigger: Object - Trigger object\n\n","condition: String - Code containing the trigger's condition, which has to return a boolean value. If this is used, the result of the trigger's activation condition is interpreted.","activation: String - Code that is executed when the trigger is activated (The variable thislist contains an array with the units that activated the trigger.)","deactivation: String - Code that is executed when the trigger is deactivated."],"Return":" Nothing "},"Examples":["_trg setTriggerStatements [\"this\", \"hint 'trigger on'\", \"hint 'trigger off'\"]"],"Additional":["triggerStatements","createTrigger","setTriggerActivation","setTriggerArea","setTriggerText","setTriggerTimeout","setTriggerType","this"]},{"Name":"setTriggerText","Desc":" Sets the text label attached to the trigger object. This is used for example as a radio slot label for radio activated triggers. ","Syn":{"Syntax":" trigger setTriggerText text ","Params":["trigger: Object\n\n","text: String"],"Return":" Nothing "},"Examples":["trigger setTriggerText \"Call for support\""],"Additional":["triggerText","createTrigger","setTriggerActivation","setTriggerArea","setTriggerStatements","setTriggerTimeout","setTriggerType"]},{"Name":"setTriggerTimeout","Desc":" Defines the time between condition satisfaction and trigger activation (randomly from min to max, with an average value mid). If the last argument is true, the condition must be fullfilled all the time. ","Syn":{"Syntax":" trigger setTriggerTimeout [min, mid, max, interruptable] ","Params":["trigger: Object\n\n","[min, mid, max, interruptable]: Array","min: Number","mid: Number","max: Number","interruptable: Boolean"],"Return":" Nothing "},"Examples":["_trigger setTriggerTimeout [5, 10, 7, false];"],"Additional":["triggerTimeout","triggerTimeoutCurrent","createTrigger","setTriggerActivation","setTriggerArea","setTriggerStatements","setTriggerText","setTriggerType"]},{"Name":"setTriggerType","Desc":" Sets the type of action processed by the trigger after activation (no action, a waypoints switch or an end of mission):\n\n\n \"NONE\"\n\n \"EAST G\" - Guarded by OPFOR\n\n \"WEST G\" - Guarded by BLUFOR\n\n \"GUER G\" - Guarded by Independent\n\n \"SWITCH\" - Switch waypoints/break loop (see Triggers)\n\n \"END1\" - End #1\n\n \"END2\" - End #2\n\n \"END3\" - End #3\n\n \"END4\" - End #4\n\n \"END5\" - End #5\n\n \"END6\" - End #6\n\n \"LOOSE\" - Lose //it is not a typo on the wiki, it is indeed misspelt in the game engine.\n\n \"WIN\" - (not found in ArmA)\n\n\n","Syn":{"Syntax":" trigger setTriggerType action ","Params":["trigger: Object\n\n","action: String"],"Return":" Nothing "},"Examples":["_trigger setTriggerType \"END1\""],"Additional":["triggerType","createTrigger","setTriggerActivation","setTriggerArea","setTriggerStatements","setTriggerText","setTriggerTimeout"]},{"Name":"setType","Desc":" Changes a location to the specified class. Location classes are defined in CfgLocationTypes. ","Syn":{"Syntax":" location setType name ","Params":["location: Location\n\n","name: String"],"Return":" Nothing "},"Examples":["myLocation setType \"RockArea\""],"Additional":["type"]},{"Name":"setUnconscious","Desc":" Set / reset the unconscious life state of the given unit (in MP works only for a local unit). ","Syn":{"Syntax":" unit setUnconscious set ","Params":["unit: Object -\n\n","set: Boolean -"],"Return":" Nothing "},"Examples":["_unit setUnconscious true"],"Additional":["lifeState"]},{"Name":"setUnitAbility","Desc":" Sets skill of given unit. This command will probably differ in some future products, but currently it does the same as setSkill. \n\nSkill may vary from 0.2 to 1.0. ","Syn":{"Syntax":" unit setUnitAbility skill ","Params":["unit: Object\n\n","skill: Number Range 0.2 to 1.0"],"Return":" Nothing "},"Examples":["player setUnitAbility 1.0"],"Additional":["skill","setSkill","setSkill array","CfgAISkill","AI Combat Modes"]},{"Name":"setUnitPos","Desc":" Set unit position rules. Mode may be one of: \n\n \"DOWN\" - unit goes prone and stays prone.\n\n \"UP\" - unit stands and stays standing.\n\n \"Middle\" - Kneel Position. ArmA version 1.04 (Unit will not kneel if it is unarmed)\n\n \"AUTO\" - unit chooses mode according to circumstances.\n\n\n\n","Syn":{"Syntax":" unit setUnitPos mode ","Params":["unit: Object\n\n","mode: String - as above"],"Return":" Nothing "},"Examples":["_soldier setUnitPos \"UP\";"],"Additional":["setUnitPosWeak","unitPos"]},{"Name":"setUnitPosWeak","Desc":" Set unit position rules. Mode may be one of: \n\n \"DOWN\" - person goes prone and stays prone.\n\n \"UP\" - person stands and stays standing.\n\n \"Middle\" - Kneel Position. ArmA version 1.04\n\n \"AUTO\" - person chooses mode according to circumstances.\n\n\n\n","Syn":{"Syntax":" unit setUnitPosWeak mode ","Params":["unit: Object\n\n","mode: String - as above"],"Return":" Nothing "},"Examples":["_soldier disableAI \"FSM\";\n_soldier setUnitPosWeak \"DOWN\";"],"Additional":["FSM","doFSM","setUnitPos","unitPos"]},{"Name":"setUnitRank","Desc":" Sets rank of given unit.\n\nPossible rank values, and the associated rating that is automatically given:\n\n PRIVATE: 0\n\n CORPORAL: 500\n\n SERGEANT: 1500\n\n LIEUTENANT: 2500\n\n CAPTAIN: 3500\n\n MAJOR: 5000\n\n COLONEL: 7500 ","Syn":{"Syntax":" unitName setUnitRank rank ","Params":["unitName: Object\n\n","rank: String As above"],"Return":" Nothing "},"Examples":["player setUnitRank \"COLONEL\""],"Additional":["Rating Values","rating","addRating","rank","setRank"]},{"Name":"setUnitRecoilCoefficient","Desc":" Proportionaly increase/decrease unit's recoil. Drives muzzle up with every shot when supplied positive number and down when negative. 0 cancels recoil. ","Syn":{"Syntax":" unitName setUnitRecoilCoefficient coefficient ","Params":["unitName: Object\n\n","coefficient: Number"],"Return":" Nothing "},"Examples":["player setUnitRecoilCoefficient 10"],"Additional":["unitRecoilCoefficient"]},{"Name":"setUserActionText","Desc":" Changes user added action menu item text. ","Syn":{"Syntax":" unit setUserActionText [index, text] ","Params":["unit: Object\n\n","[index, text]: Array","index: Number - Action id returned by addAction","text: String or Structured Text - Action title"],"Return":" Nothing "},"Examples":["_id = player addAction [\"Hello\", \"\"];\nplayer setUserActionText [_id, \"Good Bye\"];"],"Additional":["addAction","removeAction","removeAllActions"]},{"Name":"setVariable","Desc":" Set variable to given value in the variable space of given element.\n\nTo remove a variable, set it to nil (e.g. player setVariable [\"varname\", nil];).\n\n\nAll available data type combinations:\n\n Namespace setVariable Array\n\n Control setVariable Array (static map editor control only)\n\n Object setVariable Array\n\n Group setVariable Array\n\n Team_Member setVariable Array\n\n Task setVariable Array\n\n Location setVariable Array\n\n\n\n\n\n\n\n \n\n In Arma 3 it is possible to broadcast nil value\n","Syn":{"Syntax":" objectName setVariable [name, value, (public)] ","Params":["objectName: Object or Location. Arma 2 also supports: Namespace, Group, Control, Task\n\n","[name, value]: Array","name: String","value: Any_Value","public: Boolean - Only available for Object types. If public is true then the value is broadcast to all computers."],"Return":" Nothing "},"Examples":["_myTruck setVariable [\"myPublicVariable\", 123, true];","_myTruck setVariable [\"myLocalVariable\", [\"321\", _var], false];","missionNamespace setVariable [\"myName\", \"KK\"];\nhint myName; //KK"],"Additional":["JIP","MP editing guide","getVariable"]},{"Name":"setVectorDir","Desc":" Set object's direction vector. Up vector will remain unchanged. ","Syn":{"Syntax":" object setVectorDir [x,y,z] ","Params":["object: Object\n\n","[x,y,z]: Array"],"Return":" Nothing "},"Examples":["Example needed"],"Additional":["vectorDir","vectorUp","setVectorUp","setVectorDirAndUp","vectorDiff","vectorAdd","vectorMultiply","vectorCrossProduct","vectorDistance","vectorMagnitudeSqr","vectorDistanceSqr","vectorCos","vectorMagnitude","vectorDotProduct","vectorNormalized","vectorFromTo"]},{"Name":"setVectorDirAndUp","Desc":" Sets orientation of an object. The command takes 2 vector arrays, one for vectorDir and one for vectorUp. Default object orientation will always have vectorDir pointing forward (North) along Y axis and vectorUp pointing up along Z axis - [[0,1,0],[0,0,1]], as shown on the diagram below.\n\nWhen attaching object to an object the axes are relative to the object that gets the attachment. If it is player object for example, then X goes from left to right, Y goes from back to front, and Z goes from down up. \n\nThe setDir command is incompatible with setVectorDirAndUp and should not be used together on the same object. Using setVectorDirAndUp alone should be sufficient for any orientation. \n\nIn Multiplayer, setVectorDirAndUp must be executed on the machine where the object it applied to is local. ","Syn":{"Syntax":" vehicle setVectorDirAndUp [[x, y, z],[x, y, z]] ","Params":["vehicle: Object\n\n","[[x, y, z],[x, y, z]]: Array"],"Return":" Nothing \n\n"},"Examples":["To rotate BRICK on Z axis 90 degrees clockwise, change its vectorDir but leave vectorUp unchanged.\nBRICK setVectorDirAndUp [[1,0,0],[0,0,1]];","To rotate BRICK on Y axis 90 degrees clockwise, change its vectorUp but leave vectorDir unchanged.\nBRICK setVectorDirAndUp [[0,1,0],[1,0,0]];","To rotate BRICK on X axis 90 degrees (tilt forward), change both vectorDir and vectorUp accordingly.\nBRICK setVectorDirAndUp [[0,0,-1],[0,1,0]];","More complex orientations\n//tilt forward 90 + rotate left 90\nBRICK setVectorDirAndUp [[1,0,0],[0,1,0]];\n//tilt backward 45 degrees\nBRICK setVectorDirAndUp [[0,0.5,0.5],[0,-0.5,0.5]];\n//tilt forward 30 degrees\nBRICK setVectorDirAndUp [[0,0.66,-0.33],[0,0.33,0.66]];\n"],"Additional":["vectorDir","vectorUp","setVectorDir","setVectorUp","vectorDiff","vectorAdd","vectorMultiply","vectorCrossProduct","vectorDistance","vectorMagnitudeSqr","vectorDistanceSqr","vectorCos","vectorMagnitude","vectorDotProduct","vectorNormalized","vectorFromTo"]},{"Name":"setVectorUp","Desc":" Set object's up vector. Direction vector will remain unchanged. Default object's vectorUp is [0,0,1].\n\nIn Multiplayer, setVectorUp must be executed on the machine where the object it applied to is local. ","Syn":{"Syntax":" object setVectorUp [x, y, z] ","Params":["object: Object\n\n","[x, y, z]: Array"],"Return":" Nothing "},"Examples":["Turn object upside down:\n_obj setVectorUp [0,0,-1];","Align object with the terrain underneath:\n_obj setVectorUp surfaceNormal position _obj;"],"Additional":["vectorDir","vectorUp","setVectorDir","setVectorDirAndUp","vectorDiff","vectorAdd","vectorMultiply","vectorCrossProduct","vectorDistance","vectorMagnitudeSqr","vectorDistanceSqr","vectorCos","vectorMagnitude","vectorDotProduct","vectorNormalized","vectorFromTo"]},{"Name":"setVehicleAmmo","Desc":" Sets how much ammunition (compared to a full state defined by the vehicle type) the vehicle has. Note that the ammo will be added only to local turrets. To check locality of turret use turretLocal.\n\nThe value ranges from 0 to 1. ","Syn":{"Syntax":"  vehicleName setVehicleAmmo value ","Params":["vehicleName: Object\n\n","value: Number - 0: empty, 1: full"],"Return":" Nothing "},"Examples":["player setVehicleAmmo 0;","_vehicle setVehicleAmmo 1;"],"Additional":["setVehicleAmmoDef","ammo","setAmmo","setAmmoCargo","turretLocal"]},{"Name":"setVehicleAmmoDef","Desc":" Sets how much ammunition (compared to the current configuration of magazines, but fully loaded) the vehicle has. Note that the ammo will beaddet only to local turrets. To check the locality of turret use turretLocal.  ","Syn":{"Syntax":" unit setVehicleAmmoDef value ","Params":["unit: Object - Unit or vehicle.\n\n","value: Number - From 0 (no ammo) to 1 (fully loaded)."],"Return":" Nothing "},"Examples":["player setVehicleAmmoDef 0;"],"Additional":["setVehicleAmmo","ammo","setAmmo","setAmmoCargo","turretLocal"]},{"Name":"setVehicleArmor","Desc":" Sets the armor (or health for men) state of the vehicle (a value from 0 to 1). \n\nWorks like setDamage only in reverse: player setVehicleArmor 1 is the same as player setDamage 0, and player setVehicleArmor 0 is the same as player setDamage 0.97","Syn":{"Syntax":"  vehicleName setVehicleArmor value ","Params":["vehicleName: Object\n\n","value: Number range 0 to 1"],"Return":" Nothing "},"Examples":["player setVehicleArmor 0.5;"],"Additional":["setDamage"]},{"Name":"setVehicleId","Desc":" Sets id (integer value) to vehicle. By this id vehicle is referenced by triggers and waypoints. ","Syn":{"Syntax":" vehicleName setVehicleId id ","Params":["vehicleName: Object\n\n","id: Number"],"Return":" Nothing "},"Examples":["player setVehicleId 1"],"Additional":["See also needed"]},{"Name":"setVehicleLock","Desc":" Set how vehicle is locked for player.\n\nPossible values: \"UNLOCKED\", \"DEFAULT\" or \"LOCKED\". ","Syn":{"Syntax":" vehicleName setVehicleLock state ","Params":["vehicleName: Object\n\n","state: String see above"],"Return":" Nothing "},"Examples":["_veh1 setVehicleLock \"LOCKED\""],"Additional":["See also needed"]},{"Name":"setVehiclePosition","Desc":" Moves the object to a random position.\n\nUses either the position that's defined in the first array, or one of the marker positions from the markers array. \n\nThe object is placed inside a circle with this position as its center and placement as its radius. ","Syn":{"Syntax":" object setVehiclePosition [position, markers, placement] ","Params":["object: Object\n\n","[position, markers, placement]: Array","position: Array - format Position","markers: Array - format Position","placement: Number"],"Return":" Nothing "},"Examples":["player setVehiclePosition [[1000,2000], [\"Pos1\",\"Pos2\",\"Pos3\"], 0] Will place the player at either [1000,2000], or one of the three markers positions."],"Additional":["See also needed"]},{"Name":"setVehicleTiPars","Desc":" Sets the \"heat\" state of different vehicle parts (for TI detection).  This allows simulation of heated up parts of a vehicle without it actually having to utilize them. (0: cold, 1: hot) ","Syn":{"Syntax":" vehicle setVehicleTiPars [engine, wheels, weapon] ","Params":["vehicle: Object - Vehicle whose components are manipulated.\n\n","engine: Number - TI heat for engine \u0026 body (0 - 1)","wheels: Number - TI heat for tracks or wheels (0 - 1)","weapon: Number - TI heat for main weapon (0 - 1)"],"Return":" Nothing "},"Examples":[" vehicle player setVehicleTiPars [\"pars\"]; "],"Additional":["See also needed"]},{"Name":"setVehicleVarName","Desc":" Sets string representation of an object to a custom string. For example it is possible to return \"MyFerrari\" instead of default \"ce06b00# 164274: offroad_01_unarmed_f.p3d\" when querying object as string: \nhint str _offroad; //MyFerrari\nWhen a vehicle is created and named in the editor, the name becomes both the variable containing the vehicle object and the string representation of the vehicle object. vehicleVarName on the other hand is only string representation of the object. So if you want to refer to the actual object by its vehicleVarName, an extra step needed to assign the object to a variable of the same name. For example to see and refer to offroad as myFerrari:\n_offroad setVehicleVarName \"MyFerrari\"; MyFerrari = _offroad;\nIn multiplayer environment setVehicleVarName has to be executed on every PC if you want the custom name to be known everywhere. If vehicle is created and named in the editor, the vehicle name will be known globally automatically. \nTo reset vehicleVarName and str representation of the object to original form set vehicleVarName to an empty string:\n_offroad setVehicleVarName \"\"; ","Syn":{"Syntax":" object setVehicleVarName name ","Params":["object: Object\n\n","name: String"],"Return":" Nothing "},"Examples":["player setVehicleVarName \"aP\";"],"Additional":["vehicleVarName"]},{"Name":"setVelocity","Desc":" Set velocity (speed vector) of a vehicle.   Units are in metres per second. ","Syn":{"Syntax":" vehicleName setVelocity [x, y, z] ","Params":["vehicleName: Object\n\n","[x, y, z]: Array"],"Return":" Nothing "},"Examples":["_truck1 setVelocity [20, 0, 0];","Advanced method used for relative acceleration:\n_vel = velocity _vehicle;\n_dir = direction _vehicle;\n_speed = 10; comment \"Added speed\";\n_vehicle setVelocity [\n\u0009(_vel select 0) + (sin _dir * _speed), \n\u0009(_vel select 1) + (cos _dir * _speed), \n\u0009(_vel select 2)\n];\n"],"Additional":["velocity","velocityModelSpace","setVelocityTransformation"]},{"Name":"setVelocityTransformation","Desc":" Interpolate and sets vectors. For additional info see this resource.","Syn":{"Syntax":" objectName setVelocityTransformation [position1, position2, velocity1, velocity2, direction1, direction2, up1, up2, time] ","Params":["objectName: Object\n\n","position1: Number","position2: Number","velocity1: Number","velocity2: Number","direction1: Number","direction2: Number","up1: Number","up2: Number","time: Number"],"Return":" Nothing "},"Examples":["_tracker setVelocityTransformation [\n\u0009getPosASL _currentPos,\n\u0009getPosASL _nextPos,\n\u0009velocity _currentVelocity,\n\u0009velocity _nextVelocity,\n\u0009vectorDir _currentVectorDir,\n\u0009vectorDir _nextVectorDir,\n\u0009vectorUp _currentVectorUp,\n\u0009vectorUp _nextVectorUp,\n\u0009_timeDiff\n];\n"],"Additional":["velocity","velocityModelSpace","setVelocity"]},{"Name":"setViewDistance","Desc":" Set rendering distance, in metres. Default is 900m (in OFP) or 1,200m (in ArmA), accepted range is 500m to 5,000m (in OFP) or 10,000m (in ArmA). ","Syn":{"Syntax":" setViewDistance distance ","Params":["distance: Number"],"Return":" Nothing "},"Examples":["setViewDistance 2250;","//reset view distance in Arma 3\nsetViewDistance -1;"],"Additional":["viewDistance","setTerrainGrid","setObjectViewDistance"]},{"Name":"setVisibleIfTreeCollapsed","Desc":" Sets whether or not the object is visible even if the tree is collapsed. ","Syn":{"Syntax":" map setVisibleIfTreeCollapsed [object, visible] ","Params":["map: Control\n\n","[object, visible]: Array","object: Editor Object","visible: Boolean"],"Return":" Nothing "},"Examples":["_map setVisibleIfTreeCollapsed [\"_unit_0\", true]"],"Additional":["See also needed"]},{"Name":"setWaves","Desc":" Changes the waves value smoothly during the given time (in seconds). A time of zero means there will be an immediate change.  ","Syn":{"Syntax":" time setWaves value ","Params":["time: Number\n\n","value: Number"],"Return":" Nothing "},"Examples":["180 setWaves .5;\n","0 setWaves 1;\n"],"Additional":["waves","fog","overcast"]},{"Name":"setWaypointBehaviour","Desc":" Switches the unit behaviour when the waypoint becomes active.\n\n\nPossible values are:\n\n \"UNCHANGED\"\n\n \"CARELESS\"\n\n \"SAFE\"\n\n \"AWARE\"\n\n \"COMBAT\"\n\n \"STEALTH\"\n\n\n\nSee the AIBehaviour page for details of the effect of this command on AI units. ","Syn":{"Syntax":" waypoint setWaypointBehaviour mode ","Params":["waypoint: Array - format Waypoint\n\n","mode: String As Above"],"Return":" Nothing "},"Examples":["[_grp, 2] setWaypointBehaviour \"AWARE\";"],"Additional":["behaviour description","AIBehaviour","waypoints","deleteWaypoint","copyWaypoints","setCurrentWaypoint","setWaypointCombatMode","setWaypointCompletionRadius","setWaypointDescription","setWaypointFormation","setWaypointHousePosition","setWaypointPosition","setWaypointScript","setWaypointSpeed","setWaypointStatements","setWaypointTimeout","setWaypointType","setWaypointVisible","waypointAttachVehicle","waypointAttachedVehicle","setWaypointLoiterRadius","waypointLoiterRadius","addWaypoint","setWaypointLoiterType","waypointSpeed"]},{"Name":"setWaypointCombatMode","Desc":" The group combat mode is switched when the waypoint becomes active.\n\n\nPossible mode values are:\n\n \"NO CHANGE\" (No change)\n\n \"BLUE\" (Never fire)\n\n \"GREEN\" (Hold fire - defend only)\n\n \"WHITE\" (Hold fire, engage at will)\n\n \"YELLOW\" (Fire at will)\n\n \"RED\" (Fire at will, engage at will) ","Syn":{"Syntax":" waypoint setWaypointCombatMode mode ","Params":["waypoint: Array - format Waypoint\n\n","mode: String"],"Return":" Nothing "},"Examples":["[_grp, 2] setWaypointCombatMode \"RED\";"],"Additional":["combat mode description","AI Combat Modes","waypoints","deleteWaypoint","copyWaypoints","setCurrentWaypoint","setWaypointBehaviour","setWaypointCompletionRadius","setWaypointDescription","setWaypointFormation","setWaypointHousePosition","setWaypointPosition","setWaypointScript","setWaypointSpeed","setWaypointStatements","setWaypointTimeout","setWaypointType","setWaypointVisible","waypointAttachVehicle","waypointAttachedVehicle","setWaypointLoiterRadius","waypointLoiterRadius","addWaypoint","setWaypointLoiterType","waypointSpeed"]},{"Name":"setWaypointCompletionRadius","Desc":" The completion radius allows units to call the waypoint completed once they are inside of the given circle. ","Syn":{"Syntax":" waypoint setWaypointCompletionRadius radius ","Params":["waypoint:  Array - format Waypoint\n\n","radius: Number"],"Return":" Nothing "},"Examples":["[grp, 2] setWaypointCompletionRadius 30;"],"Additional":["waypoints","deleteWaypoint","copyWaypoints","setCurrentWaypoint","setWaypointBehaviour","setWaypointCombatMode","setWaypointDescription","setWaypointFormation","setWaypointHousePosition","setWaypointPosition","setWaypointScript","setWaypointSpeed","setWaypointStatements","setWaypointTimeout","setWaypointType","setWaypointVisible","waypointAttachVehicle","waypointAttachedVehicle","setWaypointLoiterRadius","waypointLoiterRadius","addWaypoint","setWaypointLoiterType","waypointSpeed"]},{"Name":"setWaypointDescription","Desc":" Sets the description shown in the HUD while the waypoint is active. ","Syn":{"Syntax":" waypoint setWaypointDescription text ","Params":["waypoint: Array - format Waypoint\n\n","text: String"],"Return":" Nothing "},"Examples":["[_grp, 2] setWaypointDescription \"Move here.\";"],"Additional":["waypoints","deleteWaypoint","copyWaypoints","setCurrentWaypoint","setWaypointBehaviour","setWaypointCombatMode","setWaypointCompletionRadius","setWaypointFormation","setWaypointHousePosition","setWaypointPosition","setWaypointScript","setWaypointSpeed","setWaypointStatements","setWaypointTimeout","setWaypointType","setWaypointVisible","waypointAttachVehicle","waypointAttachedVehicle","setWaypointLoiterRadius","waypointLoiterRadius","addWaypoint","setWaypointLoiterType","waypointSpeed"]},{"Name":"setWaypointFormation","Desc":" Switches the group formation when the waypoint becomes active.\n\n\nPossible values are: \n\n \"NO CHANGE\"\n\n \"COLUMN\"\n\n \"STAG COLUMN\"\n\n \"WEDGE\"\n\n \"ECH LEFT\"\n\n \"ECH RIGHT\"\n\n \"VEE\"\n\n \"LINE\"\n\n \"FILE\"\n\n \"DIAMOND\" ","Syn":{"Syntax":" waypoint setWaypointFormation formation ","Params":["waypoint: Array - format Waypoint\n\n","formation: String"],"Return":" Nothing "},"Examples":["[_grp, 2] setWaypointFormation \"LINE\";"],"Additional":["formations description","waypoints","deleteWaypoint","copyWaypoints","setCurrentWaypoint","setWaypointBehaviour","setWaypointCombatMode","setWaypointCompletionRadius","setWaypointDescription","setWaypointHousePosition","setWaypointPosition","setWaypointScript","setWaypointSpeed","setWaypointStatements","setWaypointTimeout","setWaypointType","setWaypointVisible","waypointAttachVehicle","waypointAttachedVehicle","setWaypointLoiterRadius","waypointLoiterRadius","addWaypoint","setWaypointLoiterType","waypointSpeed"]},{"Name":"setWaypointHousePosition","Desc":" For waypoints attached to a house, this defines the target house position. ","Syn":{"Syntax":" waypoint setWaypointHousePosition pos ","Params":["waypoint: Array - format Waypoint\n\n","pos: Number"],"Return":" Nothing "},"Examples":["[_grp, 2] setWaypointHousePosition 1;"],"Additional":["waypoints","deleteWaypoint","copyWaypoints","setCurrentWaypoint","setWaypointBehaviour","setWaypointCombatMode","setWaypointCompletionRadius","setWaypointDescription","setWaypointFormation","setWaypointPosition","setWaypointScript","setWaypointSpeed","setWaypointStatements","setWaypointTimeout","setWaypointType","setWaypointVisible","waypointAttachVehicle","waypointAttachedVehicle","setWaypointLoiterRadius","waypointLoiterRadius","addWaypoint","setWaypointLoiterType","waypointSpeed"]},{"Name":"setWaypointLoiterRadius","Desc":" Assignes loiter radius to waypoint ","Syn":{"Syntax":" waypoint setWaypointLoiterRadius radius ","Params":["Waypoint: Waypoint\n\n","Radius: Number"],"Return":" Nothing  "},"Examples":["[_grp, 2] setWaypointLoiterRadius 200;"],"Additional":["waypoints","deleteWaypoint","copyWaypoints","setCurrentWaypoint","setWaypointBehaviour","setWaypointCombatMode","setWaypointCompletionRadius","setWaypointDescription","setWaypointFormation","setWaypointHousePosition","setWaypointPosition","setWaypointScript","setWaypointSpeed","setWaypointStatements","setWaypointTimeout","setWaypointType","setWaypointVisible","waypointAttachVehicle","waypointAttachedVehicle","waypointLoiterRadius","addWaypoint","setWaypointLoiterType","currentWaypoint","waypointSpeed","setWPPos"]},{"Name":"setWaypointLoiterType","Desc":" Sets the waypoint loiter type. ","Syn":{"Syntax":" waypoint setWaypointLoiterType type","Params":["Waypoint: Waypoint\n\n","type: String"],"Return":" Nothing  "},"Examples":["[_grp, 2] setWaypointLoiterType \"CIRCLE\";","[_grp, 2] setWaypointLoiterType \"CIRCLE_L\";"],"Additional":["waypoints","deleteWaypoint","copyWaypoints","setCurrentWaypoint","setWaypointBehaviour","setWaypointCombatMode","setWaypointCompletionRadius","setWaypointDescription","setWaypointFormation","setWaypointHousePosition","setWaypointPosition","setWaypointScript","setWaypointSpeed","setWaypointStatements","setWaypointTimeout","setWaypointType","setWaypointVisible","waypointAttachVehicle","waypointAttachedVehicle","setWaypointLoiterRadius","waypointLoiterRadius","addWaypoint","currentWaypoint","waypointSpeed","setWPPos","waypointName"]},{"Name":"setWaypointName","Desc":" Changes the waypoint name. ","Syn":{"Syntax":" waypoint setWaypointName name ","Params":["waypoint: Waypoint\n\n","name: String"],"Return":" Nothing "},"Examples":["Example needed"],"Additional":["addWaypoint","waypointName","setWaypointBehaviour","setWaypointCombatMode","setWaypointCompletionRadius","setWaypointDescription","setWaypointFormation","setWaypointHousePosition","setWaypointLoiterRadius","setWaypointLoiterType","setWaypointPosition","setWaypointScript","setWaypointSpeed","setWaypointStatements","setWaypointTimeout","setWaypointType","setWaypointVisible"]},{"Name":"setWaypointPosition","Desc":" Moves the waypoint to a random position in a circle with the given center and radius. ","Syn":{"Syntax":" waypoint setWaypointPosition [center, radius] ","Params":["waypoint: Array - format Waypoint\n\n","[center, radius]: Array","center: Array - format Position","radius: Number meters"],"Return":" Nothing "},"Examples":["[_grp, 2] setWaypointPosition [position player, 0];"],"Additional":["waypoints","deleteWaypoint","copyWaypoints","setCurrentWaypoint","setWaypointBehaviour","setWaypointCombatMode","setWaypointCompletionRadius","setWaypointDescription","setWaypointFormation","setWaypointHousePosition","setWaypointScript","setWaypointSpeed","setWaypointStatements","setWaypointTimeout","setWaypointType","setWaypointVisible","waypointAttachVehicle","waypointAttachedVehicle","setWaypointLoiterRadius","waypointLoiterRadius","addWaypoint","setWaypointLoiterType","waypointSpeed"]},{"Name":"setWaypointScript","Desc":" Attaches a script to a scripted waypoint. Command consist of a script name and additional script arguments.\n\nThe Script has to use SQS-Syntax.\n\nSee Mission editor Description for more information about scripted waypoints. ","Syn":{"Syntax":" waypoint setWaypointScript command ","Params":["waypoint: Array - format Waypoint\n\n","command: String"],"Return":" Nothing "},"Examples":["[_grp, 2] setWaypointScript \"find.sqs player\";"],"Additional":["waypoints","deleteWaypoint","copyWaypoints","setCurrentWaypoint","setWaypointBehaviour","setWaypointCombatMode","setWaypointCompletionRadius","setWaypointDescription","setWaypointFormation","setWaypointHousePosition","setWaypointPosition","setWaypointSpeed","setWaypointStatements","setWaypointTimeout","setWaypointType","setWaypointVisible","waypointAttachVehicle","waypointAttachedVehicle","setWaypointLoiterRadius","waypointLoiterRadius","addWaypoint","setWaypointLoiterType","waypointSpeed"]},{"Name":"setWaypointSpeed","Desc":" Switches the group speed mode when the waypoint becomes active.\n\n\nPossible values are:\n\n \"UNCHANGED\"\n\n \"LIMITED\"\n\n \"NORMAL\"\n\n \"FULL\" ","Syn":{"Syntax":" waypoint setWaypointSpeed mode ","Params":["waypoint: Array - format Waypoint\n\n","mode: String"],"Return":" Nothing "},"Examples":["[_grp, 2] setWaypointSpeed \"FULL\";"],"Additional":["waypoints","deleteWaypoint","copyWaypoints","setCurrentWaypoint","setWaypointBehaviour","setWaypointCombatMode","setWaypointCompletionRadius","setWaypointDescription","setWaypointFormation","setWaypointHousePosition","setWaypointPosition","setWaypointScript","setWaypointStatements","setWaypointTimeout","setWaypointType","setWaypointVisible","waypointAttachVehicle","waypointAttachedVehicle","setWaypointLoiterRadius","waypointLoiterRadius","addWaypoint","setWaypointLoiterType","waypointSpeed"]},{"Name":"setWaypointStatements","Desc":" The waypoint is done only when the condition is fulfilled. When the waypoint is done, the statement expression is executed.\n\n\nWithin the Condition \u0026 Statement code string:\n\n this refers to the group leader\n\n thislist refers to an array containing each unit in the group ","Syn":{"Syntax":" waypoint setWaypointStatements [condition, statement] ","Params":["waypoint: Array - format Waypoint\n\n","[condition, statement]: Array","condition: String","statement: String"],"Return":" Nothing "},"Examples":["new_wp setWaypointStatements [\"true\", \"hint 'hello'; hint 'goodbye'\"];","new_wp setWaypointStatements [\"true\", \"diag_log ['GroupLeader: ', this]; diag_log ['Units: ', thislist]\"];"],"Additional":["waypoints","deleteWaypoint","copyWaypoints","setCurrentWaypoint","setWaypointBehaviour","setWaypointCombatMode","setWaypointCompletionRadius","setWaypointDescription","setWaypointFormation","setWaypointHousePosition","setWaypointPosition","setWaypointScript","setWaypointSpeed","setWaypointTimeout","setWaypointType","setWaypointVisible","waypointAttachVehicle","waypointAttachedVehicle","setWaypointLoiterRadius","waypointLoiterRadius","addWaypoint","setWaypointLoiterType","waypointSpeed"]},{"Name":"setWaypointTimeout","Desc":" Defines the time between condition satisfaction and waypoint finish (randomly from min to max, with an average value mid). ","Syn":{"Syntax":" waypoint setWaypointTimeout [min, mid, max] ","Params":["waypoint: Array - format Waypoint\n\n","[min, mid, max]: Array","min: Number","mid: Number","max: Number"],"Return":" Nothing "},"Examples":["[_grp, 2] setWaypointTimeout [5, 10, 6];"],"Additional":["waypoints","deleteWaypoint","copyWaypoints","setCurrentWaypoint","setWaypointBehaviour","setWaypointCombatMode","setWaypointCompletionRadius","setWaypointDescription","setWaypointFormation","setWaypointHousePosition","setWaypointPosition","setWaypointScript","setWaypointSpeed","setWaypointStatements","setWaypointType","setWaypointVisible","waypointAttachVehicle","waypointAttachedVehicle","setWaypointLoiterRadius","waypointLoiterRadius","addWaypoint","setWaypointLoiterType","waypointTimeoutCurrent","waypointSpeed"]},{"Name":"setWaypointType","Desc":" Changes the waypoint type. \n\nType can be:\n\n \"MOVE\"\n\n \"DESTROY\"\n\n \"GETIN\"\n\n \"SAD\"\n\n \"JOIN\"\n\n \"LEADER\"\n\n \"GETOUT\"\n\n \"CYCLE\"\n\n \"LOAD\"\n\n \"UNLOAD\"\n\n \"TR UNLOAD\"\n\n \"HOLD\"\n\n \"SENTRY\"\n\n \"GUARD\"\n\n \"TALK\"\n\n \"SCRIPTED\"\n\n \"SUPPORT\"\n\n \"GETIN NEAREST\"\n\n \"DISMISS\"\n\n \"LOITER\" (new in Arma 3)\n\n \"AND\" (only for game logics)\n\n \"OR\" (only for game logics)\n\n\n\nMore details at Waypoint types. ","Syn":{"Syntax":" waypoint setWaypointType type ","Params":["waypoint: Array - format Waypoint\n\n","type: String"],"Return":" Nothing "},"Examples":["[_grp, 2] setWaypointType \"HOLD\";"],"Additional":["waypoints description","Waypoint types","waypoints","deleteWaypoint","copyWaypoints","setCurrentWaypoint","setWaypointBehaviour","setWaypointCombatMode","setWaypointCompletionRadius","setWaypointDescription","setWaypointFormation","setWaypointHousePosition","setWaypointPosition","setWaypointScript","setWaypointSpeed","setWaypointStatements","setWaypointTimeout","setWaypointVisible","waypointAttachVehicle","waypointAttachedVehicle","setWaypointLoiterRadius","waypointLoiterRadius","addWaypoint","setWaypointLoiterType","waypointSpeed"]},{"Name":"setWaypointVisible","Desc":" Sets the visibility of the waypoint. ","Syn":{"Syntax":" waypoint setWaypointVisible visible ","Params":["waypoint: Array - format Waypoint\n\n","visible: Boolean"],"Return":" Nothing "},"Examples":["[grp, 2] setWaypointVisible false;","[group player, currentWaypoint (group player)] setWaypointVisible false;"],"Additional":["waypoints","deleteWaypoint","copyWaypoints","setCurrentWaypoint","setWaypointBehaviour","setWaypointCombatMode","setWaypointCompletionRadius","setWaypointDescription","setWaypointFormation","setWaypointHousePosition","setWaypointPosition","setWaypointScript","setWaypointSpeed","setWaypointStatements","setWaypointTimeout","setWaypointType","waypointAttachVehicle","waypointAttachedVehicle","setWaypointLoiterRadius","waypointLoiterRadius","addWaypoint","setWaypointLoiterType","currentWaypoint","waypointSpeed","setWPPos"]},{"Name":"setWeaponReloadingTime","Desc":" Sets states and/or makes an action of/on weapon. Reload time is between 0 and 1 inclusive, where 1 is 100% of maximum reloading time. ","Syn":{"Syntax":" vehicle setWeaponReloadingTime [gunner, weaponName, reloadTime] ","Params":["vehicle: Object\n\n","[gunner, weaponName, reloadTime]: Array"],"Return":" Boolean "},"Examples":["_done = _vehicle setWeaponReloadingTime [gunner (vehicle player), currentMuzzle (gunner (vehicle player)), 0.5];"],"Additional":["See also needed"]},{"Name":"setWind","Desc":" Set current (forced == false) or permanent (forced == true) wind vector.\nNOTE: The effect is global only if command is executed on the server. Wind set locally will sync back to server value in a while. ","Syn":{"Syntax":" setWind [x, y, forced] ","Params":["[x, y, forced]: Array\n\n","x: Number Easterly component (in m/s, positive = to the east)","y: Number Northerly component (in m/s, positive = to the north)","forced: Boolean true: wind constantly blows in set direction, false: wind can change direction (default)"],"Return":" Nothing "},"Examples":["setWind [10, 10, true];"],"Additional":["wind","setWindDir","gusts","setGusts"]},{"Name":"setWindDir","Desc":" Changes the wind direction smoothly during the given time (in seconds). A time of zero means there will be an immediate change.  \nNOTE: Effect is global only when executed on the server. On clients wind direction will sync to server value in a while. ","Syn":{"Syntax":" time setWindDir value ","Params":["time: Number\n\n","value: Number - Azimut."],"Return":" Nothing "},"Examples":["60 setWindDir 180"],"Additional":["windDir"]},{"Name":"setWindForce","Desc":" Set max. wind overall wind changes in time. A time of zero means there will be an immediate change. A wind level of zero is minimal changes and a wind level of one means that wind can change rapidly.  ","Syn":{"Syntax":" time setWindForce wind ","Params":["time: Number\n\n","wind: Number"],"Return":" Nothing "},"Examples":["1800 setWindForce 0.5\n"],"Additional":["See also needed"]},{"Name":"setWindStr","Desc":" Changes the wind strength smoothly during the given time (in seconds). A time of zero means there will be an immediate change.  ","Syn":{"Syntax":" time setWindStr value ","Params":["time: Number\n\n","value: Number"],"Return":" Nothing "},"Examples":["Example needed"],"Additional":["See also needed"]},{"Name":"setWPPos","Desc":" Set waypoint position ","Syn":{"Syntax":" waypoint setWPPos pos ","Params":["waypoint: Array - format Waypoint\n\n","pos: Array - format Position2D"],"Return":" Nothing "},"Examples":["[_groupOne, 1] setWPPos markerPos \"MarkerOne\";"],"Additional":["deleteWaypoint","copyWaypoints","setCurrentWaypoint","setWaypointBehaviour","setWaypointCombatMode","setWaypointCompletionRadius","setWaypointDescription","setWaypointFormation","setWaypointHousePosition","setWaypointPosition","setWaypointScript","setWaypointSpeed","setWaypointStatements","setWaypointTimeout","setWaypointType","setWaypointVisible","waypointAttachVehicle","waypointAttachedVehicle","setWaypointLoiterRadius","waypointLoiterRadius","addWaypoint","setWaypointLoiterType","waypoints","waypointSpeed"]},{"Name":"show3DIcons","Desc":" Toggle the drawing of 3D icons. ","Syn":{"Syntax":" map show3DIcons bool ","Params":["map: Control -\n\n","bool: Boolean -"],"Return":" Nothing "},"Examples":["Example needed"],"Additional":["See also needed"]},{"Name":"showChat","Desc":" Shows/hides the whole chat window.  ","Syn":{"Syntax":" showChat bool ","Params":["bool: Boolean"],"Return":" Nothing "},"Examples":["Example needed"],"Additional":["See also needed"]},{"Name":"showCinemaBorder","Desc":" Forces drawing of cinema borders when using custom camera camCreate. This is normally used in cutscenes to indicate player has no control. ","Syn":{"Syntax":" showCinemaBorder show ","Params":["show: Boolean"],"Return":" Nothing "},"Examples":["showCinemaBorder false;"],"Additional":["showHUD"]},{"Name":"showCommandingMenu","Desc":" Create the commanding menu described by the given config class or menu name. When the name is empty, the current menu is hidden.  ","Syn":{"Syntax":" showCommandingMenu name ","Params":["name: String - Class name or user menu name (with \"#USER:\" prefix and \"_#\" page number suffix, where # is the page number starting with 0)."],"Return":" Nothing "},"Examples":["showCommandingMenu \"\";","showCommandingMenu \"MyClassName\";","showCommandingMenu \"#USER:Tag_Menu_myMenu_0\";","showCommandingMenu \"RscMainMenu\";"],"Additional":["commandingMenu","BIS_fnc_createMenu","BIS_Menu_GroupCommunication"]},{"Name":"showCompass","Desc":" Shows or hides the compass on the map screen, if enabled for the mission and you possess the item. (default true) ","Syn":{"Syntax":" showCompass show ","Params":["show: Boolean"],"Return":" Nothing "},"Examples":["showCompass false;"],"Additional":["shownCompass","visibleCompass","showGPS","showRadio","showWatch","showPad","showMap"]},{"Name":"showCuratorCompass","Desc":" Hides or shows compass in curator interface. ","Syn":{"Syntax":" showCuratorCompass bool ","Params":["bool: Boolean"],"Return":" Nothing "},"Examples":["Example needed"],"Additional":["See also needed"]},{"Name":"showGPS","Desc":" Shows or hides the GPS receiver on the map screen, if enabled for the mission and you possess the item. (default false) ","Syn":{"Syntax":" showGPS show ","Params":["show: Boolean"],"Return":" Nothing "},"Examples":["showGPS true;"],"Additional":["shownGPS","visibleGPS","showCompass","showRadio","showWatch","showPad"]},{"Name":"showHUD","Desc":" Enable / disable showing of HUD. Defines visibility of weapon crosshair and any informational tags that appear when pointing the weapon at an object as well as availability of the default action menu. Unfortunately, it also hides icons drawn with drawIcon3D.","Syn":{"Syntax":" showHUD enable ","Params":["enable: Boolean"],"Return":" Nothing "},"Examples":["showHUD false;"],"Additional":["showCinemaBorder","showSubtitles","showWatch","showRadio","showMap","showGPS","showCompass","showPad"]},{"Name":"showLegend","Desc":" Show/hide map legend. ","Syn":{"Syntax":" map showLegend bool ","Params":["map: Control -\n\n","bool: Boolean -"],"Return":" Nothing "},"Examples":["Example needed"],"Additional":["See also needed"]},{"Name":"showMap","Desc":" Enable Map (default true) ","Syn":{"Syntax":" showMap show ","Params":["show: Boolean"],"Return":" Nothing "},"Examples":["showMap false"],"Additional":["showCompass","showGPS","showRadio","showWatch","showPad","shownMap"]},{"Name":"shownArtilleryComputer","Desc":" Checks whether the player has the artillery computer currently open.  ","Syn":{"Syntax":" shownArtilleryComputer ","Params":null,"Return":" Boolean "},"Examples":["if ( shownArtilleryComputer ) then { hint \"Artillery Computer shown on screen\"; };\n"],"Additional":["enableEngineArtillery","getArtilleryComputerSettings","inRangeOfArtillery","commandArtilleryFire","doArtilleryFire","getArtilleryETA"]},{"Name":"shownCompass","Desc":" Checks if client has Compass enabled in description.ext (showCompass param) or force enabled with showCompass command. ","Syn":{"Syntax":" shownCompass ","Params":null,"Return":" Boolean "},"Examples":["if (shownCompass) then {hint \"You have Compass enabled\"};"],"Additional":["showCompass","visibleCompass","shownGPS","shownWatch"]},{"Name":"shownCuratorCompass","Desc":" Returns true if compass is shown. ","Syn":{"Syntax":" shownCuratorCompass ","Params":null,"Return":" Boolean "},"Examples":["Example needed"],"Additional":["See also needed"]},{"Name":"showNewEditorObject","Desc":" Show the add editor object dialog,type is editor object type,class is,class definition to automatically select,side filters by a certain,side,pos is position to create the object.  ","Syn":{"Syntax":" map showNewEditorObject [type,class,side,position] ","Params":["map: Control -\n\n","[type,class,side,position]: Array -"],"Return":" Any "},"Examples":["Example needed"],"Additional":["See also needed"]},{"Name":"shownGPS","Desc":" Checks if client has GPS reciever enabled in description.ext (showGPS param) or force enabled with showGPS command. ","Syn":{"Syntax":" shownGPS ","Params":null,"Return":" Boolean "},"Examples":["if (shownGPS) then {hint \"You have GPS reciever enabled\"};"],"Additional":["showGPS","visibleGPS","shownWatch","shownCompass"]},{"Name":"shownMap","Desc":" Checks if client has Map enabled in description.ext (showMap param) or force enabled with showMap command. ","Syn":{"Syntax":" shownMap ","Params":null,"Return":" Boolean "},"Examples":["if (shownMap) then {hint \"You have Map enabled\"};"],"Additional":["showMap","visibleMap","forceMap","shownGPS","shownWatch","shownCompass","shownUAVFeed"]},{"Name":"shownPad","Desc":" Checks if client has Notepad enabled.  ","Syn":{"Syntax":" shownPad ","Params":null,"Return":" Boolean "},"Examples":["if (shownPad) then {hint \"You have Notepad enabled.\"};"],"Additional":["shownMap","shownGPS","shownWatch","shownCompass","shownUAVFeed"]},{"Name":"shownRadio","Desc":" Check if player has Radio enabled. ","Syn":{"Syntax":" shownRadio ","Params":null,"Return":" Boolean "},"Examples":["if (shownRadio) then {hint \"You have Radio enabled.\"};"],"Additional":["shownMap","shownGPS","shownWatch","shownCompass","shownUAVFeed"]},{"Name":"shownUAVFeed","Desc":" Returns true if video feed transmitted from UAV is shown.  ","Syn":{"Syntax":" shownUAVFeed ","Params":null,"Return":" Boolean "},"Examples":["_bool = shownUAVFeed;"],"Additional":["showUAVFeed","allUnitsUAV","getConnectedUAV","UAVControl","connectTerminalToUAV","isUAVConnected"]},{"Name":"shownWarrant","Desc":" Check if player has ID card enabled. Obsolete command. ","Syn":{"Syntax":" Boolean = shownWarrant ","Params":null,"Return":" Boolean "},"Examples":["Example needed"],"Additional":["See also needed"]},{"Name":"shownWatch","Desc":" Checks if client has Watch enabled in description.ext (showWatch param) or force enabled with showWatch command.  ","Syn":{"Syntax":" shownWatch ","Params":null,"Return":" Boolean "},"Examples":["if (shownWatch) then {hint \"You have Watch enabled\"};"],"Additional":["showWatch","visibleWatch","shownGPS","shownCompass"]},{"Name":"showPad","Desc":" Shows or hides the notebook on the map screen, if enabled for the mission. (default true). It is no longer relevant to Arma 2. ","Syn":{"Syntax":" showPad show ","Params":["show: Boolean"],"Return":" Nothing "},"Examples":["showPad false"],"Additional":["shownPad","showCompass","showGPS","showRadio","showWatch"]},{"Name":"showRadio","Desc":" Shows or hides the radio on the map screen, if enabled for the mission and you possess the item. (default true) ","Syn":{"Syntax":" showRadio show ","Params":["show: Boolean"],"Return":" Nothing "},"Examples":["showRadio false"],"Additional":["shownRadio","showCompass","showGPS","showWatch","showPad"]},{"Name":"showSubtitles","Desc":" Enable / disable showing of subtitles. Return the previous state. ","Syn":{"Syntax":" showSubtitles enable ","Params":["enable: Boolean -"],"Return":" Boolean "},"Examples":["showSubtitles false;"],"Additional":["See also needed"]},{"Name":"showUAVFeed","Desc":" Shows/hides video feed transmitted from UAV.  ","Syn":{"Syntax":" showUAVFeed bool ","Params":["bool: Boolean"],"Return":" Nothing "},"Examples":["showUAVFeed true;"],"Additional":["shownUAVFeed","allUnitsUAV","getConnectedUAV","UAVControl","connectTerminalToUAV","isUAVConnected"]},{"Name":"showWarrant","Desc":" Enable ID card (default false). Obsolete command. ","Syn":{"Syntax":" showWarrant show ","Params":["show: Boolean"],"Return":" Nothing "},"Examples":["Example needed"],"Additional":["See also needed"]},{"Name":"showWatch","Desc":" Shows or hides the watch on the map screen, if enabled for the mission and you possess the item. (default true) ","Syn":{"Syntax":" showWatch show ","Params":["show: Boolean"],"Return":" Nothing "},"Examples":["showWatch false;"],"Additional":["shownWatch","visibleWatch","showCompass","showGPS","showRadio","showPad"]},{"Name":"showWaypoint","Desc":" Sets the condition determining when the waypoint is shown.\n\nPossible values are:\n\n \"NEVER\" - never show it\n\n \"EASY\" - show only in cadet mode\n\n \"ALWAYS\" - always show it ","Syn":{"Syntax":" waypoint showWaypoint show ","Params":["waypoint: Array - format Waypoint\n\n","show: String - see description"],"Return":" Nothing "},"Examples":["[_grp, 2] showWaypoint \"ALWAYS\";"],"Additional":["waypointShow"]},{"Name":"side","Desc":" Returns the side of a unit or object.\n\nOnce dead, a unit will be on the civilian side. Query the side of the Group to get a reliable result.\n\nWhen used in conjunction with a format statement (hint format[\"%1\",side player]), the returned strings are: \"WEST\", \"EAST\", \"GUER\", \"CIV\", \"LOGIC\", \"ENEMY\" (eg: renegades), \"AMBIENT LIFE\" or \"UNKNOWN\".\n","Syn":{"Syntax":" Side = side unitName ","Params":["unitName: Object or Group"],"Return":" Side "},"Examples":["? (side player == west) : hint \"You are on the West side.\" SQS","if (side player == west) then {hint \"You are on the West side.\";}; SQF","_sideAlsoWorkingForDead = side (group player);"],"Additional":["CfgVehicles config side value","Side","playerSide","west","east","resistance","civilian","sideLogic","sideFriendly","sideEnemy","sideUnknown","playerSide","side location","Side relations"]},{"Name":"sideChat","Desc":" Types text to the side radio channel. Must have assigned \"itemRadio\" to see or transmit the messages.\n\nNote: This function only types text to the list, it does not broadcast the message. If you want the message to show on all computers, you have to execute it on all of them. ","Syn":{"Syntax":" unitName sideChat chatText \u003cbr\u003e(Alternate Syntax exists check Read more)","Params":["unitName: Object\n\n","chatText: String"],"Return":" Nothing "},"Examples":["_soldierOne sideChat \"Show this text\""," PAPABEAR=[West,\"HQ\"]; PAPABEAR SideChat \"Hi there\";\n____________________________________________________________________________________________"],"Additional":["globalChat","groupChat"]},{"Name":"sideEnemy","Desc":" The enemy side (used for renegades). Unit of this side is enemy to everyone.\nTo become one, you can attack members of your own side or use addRating.\nWhen below a rating of -2000 units switch automatically to this side. ","Syn":{"Syntax":" sideEnemy ","Params":null,"Return":" Side "},"Examples":["if (side player == sideEnemy) then {\n    hint \"We've got a renegade!\";\n};"],"Additional":["addRating","rating","Side","side","west","east","resistance","civilian","sideLogic","sideFriendly","sideUnknown","playerSide","side location","Side relations"]},{"Name":"sideFriendly","Desc":" The Friendly side (used for captives). ","Syn":{"Syntax":" Side = sideFriendly ","Params":null,"Return":" Side "},"Examples":["Example needed"],"Additional":["Side","side","west","east","resistance","civilian","sideLogic","sideUnknown","sideEnemy","playerSide","side location","Side relations"]},{"Name":"sideLogic","Desc":" The Logic side.\nSide of Game Logics and Modules. ","Syn":{"Syntax":" sideLogic ","Params":null,"Return":" Side "},"Examples":["if (side _obj == sideLogic) then {\n    hint \"It's a logic!\";\n};\n"],"Additional":["Side","side","west","east","resistance","civilian","sideUnknown","sideFriendly","sideEnemy","playerSide","side location","Side relations"]},{"Name":"sideRadio","Desc":" Send the message to the side radio channel. Message is defined in Description.ext file. ","Syn":{"Syntax":" unitName sideRadio chat ","Params":["unitName: Object\n\n","chat: String"],"Return":" Nothing "},"Examples":["_soldierOne sideRadio \"messageOne\""],"Additional":["sideChat","vehicleChat","globalChat","groupChat","customRadio","groupRadio","globalRadio","vehicleRadio"]},{"Name":"sideUnknown","Desc":" The unknown side.\nUsed when the side of a unit is unknown, e.g. for spotted targets with insufficient information. ","Syn":{"Syntax":" sideUnknown ","Params":null,"Return":" Side "},"Examples":["//soldier1 and soldier2 of different sides and out of sight\nsoldier1 reveal soldier2;\nhint str (soldier1 nearTargets 1000);\n//returns: [[[1557.96,5047.4,1.32402],\"SoldierWB\",UNKNOWN,0.0155183,soldier2,5]]\nsoldier1 reveal [soldier2,1.5];\n//returns: [[[1556.52,5050.08,1.32402],\"SoldierWB\",WEST,0.0211193,soldier2,5]]\n"],"Additional":["nearTargets","reveal","Side","side","west","east","resistance","civilian","sideLogic","sideFriendly","sideEnemy","playerSide","side location","Side relations"]},{"Name":"simpleTasks","Desc":" Return all simple tasks assigned to given person. ","Syn":{"Syntax":" simpleTasks person ","Params":["person: Object -"],"Return":" Array "},"Examples":["Example needed"],"Additional":["createSimpleTask","currentTask"]},{"Name":"simulationEnabled","Desc":" Check if the entity has enabled simulation.  ","Syn":{"Syntax":" simulationEnabled entity ","Params":["entity: Object"],"Return":" Boolean "},"Examples":["Example needed"],"Additional":["enableSimulation","enableSimulationGlobal"]},{"Name":"simulCloudDensity","Desc":" Returns density of clouds at given position. ","Syn":{"Syntax":" simulCloudDensity pos ","Params":["pos: Position"],"Return":" Number "},"Examples":["simulCloudDensity (getPos player)\n"],"Additional":["setSimulWeatherLayers","simulCloudOcclusion","simulInClouds"]},{"Name":"simulCloudOcclusion","Desc":" Returns clouds occlusion between two given points (0 - no clouds, 1 - full clouds). ","Syn":{"Syntax":" simulCloudOcclusion [pos1,pos2] ","Params":["[pos1,pos2]: Array\n\n","pos1: Position","pos2: Position"],"Return":" Number "},"Examples":["canSeeSun = (simulCloudOcclusion == 0)"],"Additional":["setSimulWeatherLayers","simulCloudDensity","simulInClouds"]},{"Name":"simulInClouds","Desc":" Returns if given position is in clouds. ","Syn":{"Syntax":" simulInClouds pos ","Params":["pos: Position"],"Return":" Boolean "},"Examples":["simulInClouds (getPos player)\n"],"Additional":["setSimulWeatherLayers","simulCloudDensity","simulCloudOcclusion"]},{"Name":"simulWeatherSync","Desc":" Synchronizes Simul Weather with Arma weather, generates all keyframes.  ","Syn":{"Syntax":" simulWeatherSync ","Params":null,"Return":" Nothing "},"Examples":["Example needed"],"Additional":["See also needed"]},{"Name":"sin","Desc":" Sine of x, argument in Degrees. ","Syn":{"Syntax":" Number = sin x ","Params":["x: Number"],"Return":" Number "},"Examples":["_sine = sin 30;//result is 0.5"],"Additional":["Math Commands"]},{"Name":"size","Desc":" Returns a location's size.","Syn":{"Syntax":" size location ","Params":["location: Location"],"Return":" Array = in format [x,y] in meters"},"Examples":["_locSize = size myLocation"],"Additional":["setSize"]},{"Name":"sizeOf","Desc":" Returns an approximate size of the object of given type in meters. Size returned is usually bigger than the biggest size of the object along any of the axes. For example if object is 10 x 4 x 5 the sizeOf value returned expected to be around 10. If you need to estimate the size of the object more precisely, use boundingBox or boundingBoxReal.\n\nNOTE: The object has to be present in current mission to be able to read its size (otherwise zero will be returned).\n ","Syn":{"Syntax":" Number = sizeOf type ","Params":["type: String"],"Return":" Number "},"Examples":["_dimension = sizeOf \"M1Abrams\"; //returns 10.7833"],"Additional":["boundingBox","boundingBoxReal","boundingCenter"]},{"Name":"skill","Desc":" Returns current level of ability of person, in range between 0 and 1. Skill 1 is highest skill. ","Syn":{"Syntax":" skill unitName  \u003cbr\u003e(Alternate Syntax exists check Read more)","Params":["unitName: Object"],"Return":" Number "},"Examples":["_skill = skill unit1 ","_myEndurance = player skill \"Endurance\""],"Additional":["skillFinal","setSkill","setSkill array","setUnitAbility","CfgAISkill","AI Combat Modes"]},{"Name":"skillFinal","Desc":" Returns final, calculated and combined sub skill value of given unit. ","Syn":{"Syntax":" unitName skillFinal sub-skill ","Params":["unitName: Object\n\n","sub-skill: String\nPossible values are:\n\"aimingAccuracy\"\n\"aimingShake\"\n\"aimingSpeed\"\n\"endurance\"\n\"spotDistance\"\n\"spotTime\"\n\"courage\"\n\"reloadSpeed\"\n\"commanding\"\n\"general\""],"Return":" Number "},"Examples":[" player skillFinal \"Endurance\" "],"Additional":["skill","setSkill","setSkill array","setUnitAbility","CfgAISkill","AI Combat Modes"]},{"Name":"skipTime","Desc":" Jumps the specified number of hours forward or backward.The time of day and tides are adjusted, but no changes are made to any units. If present, the lower level of clouds instantly jump to the position they would be in if time had passed normally.","Syn":{"Syntax":" skipTime duration ","Params":["duration: Number - Hours to skip.A positive value will create a forward time jump, a negative value will jump backwards.One second is roughly 0.00026 hours.Any calculations must be enclosed in parentheses, e.g. skipTime (_seconds/3600)"],"Return":" Nothing "},"Examples":["skipTime 5"],"Additional":["setDate","accTime","setTimeMultiplier","timeMultiplier"]},{"Name":"sleep","Desc":" Suspend execution for given time in seconds. The sleep precision is given by a framerate, the delay given is the minimal delay expected. Must be called inside of a context which is interruptible, i.e. a script executed by execVM or spawn.\nNote that this command will suspend the script indefinitely if game simulation is paused in SP. To avoid this, use uiSleep. ","Syn":{"Syntax":" sleep delay ","Params":["delay: Number of seconds"],"Return":" Nothing "},"Examples":["[] spawn {sleep 5; hint \"after 5 sec...\"};"],"Additional":["uiSleep","Control Structures"]},{"Name":"sliderPosition","Desc":" Return current thumb position of slider idc of topmost user dialog. ","Syn":{"Syntax":" sliderPosition idc \u003cbr\u003e(Alternate Syntax exists check Read more)","Params":["idc: Number"],"Return":" Number "},"Examples":["_slidepos1 = sliderPosition 105;"],"Additional":["sliderRange","sliderSetPosition","sliderSetRange","sliderSetSpeed","sliderSpeed"]},{"Name":"sliderRange","Desc":" Return limits, as an Array [min, max] of slider idc of topmost user dialog. ","Syn":{"Syntax":" sliderRange idc \u003cbr\u003e(Alternate Syntax exists check Read more)","Params":["idc: Number"],"Return":" Array [min, max] "},"Examples":["_slidelimits1 = sliderRange 105;"],"Additional":["sliderPosition","sliderSetPosition","sliderSetRange","sliderSetSpeed","sliderSpeed"]},{"Name":"sliderSetPosition","Desc":" Set current thumb position of slider idc of topmost user dialog. ","Syn":{"Syntax":" sliderSetPosition [idc, pos] \u003cbr\u003e(Alternate Syntax exists check Read more)","Params":["[idc, pos]: Array\n\n","idc: Number of control","pos: Number"],"Return":" Nothing "},"Examples":["sliderSetPosition [101, 50];"],"Additional":["sliderPosition","sliderRange","sliderSetRange","sliderSetSpeed","sliderSpeed"]},{"Name":"sliderSetRange","Desc":" Set limits of slider idc of topmost user dialog. ","Syn":{"Syntax":" sliderSetRange [idc, min, max] \u003cbr\u003e(Alternate Syntax exists check Read more)","Params":["[idc, min, max]: Array\n\n","idc: Number of control","min: Number","max: Number"],"Return":" Nothing "},"Examples":["sliderSetRange [101, 0, 100];"],"Additional":["sliderPosition","sliderRange","sliderSetPosition","sliderSetSpeed","sliderSpeed"]},{"Name":"sliderSetSpeed","Desc":" Set speed of slider with id idc of topmost user dialog.\n\n Click to arrow - move by line\n\n Click to scale outside thumb - move by page. ","Syn":{"Syntax":" sliderSetSpeed [idc,line,page] \u003cbr\u003e(Alternate Syntax exists check Read more)","Params":["[idc,line,page]: Array\n\n","idc: Number of control","line: Number","page: Number"],"Return":" Nothing "},"Examples":["sliderSetSpeed [101, 0.5, 2];"],"Additional":["sliderPosition","sliderRange","sliderSetPosition","sliderSetRange","sliderSpeed"]},{"Name":"sliderSpeed","Desc":" Return speed, as an Array [min, max] of slider idc of topmost user dialog. ","Syn":{"Syntax":" sliderSpeed idc \u003cbr\u003e(Alternate Syntax exists check Read more)","Params":["idc: Number of control"],"Return":" Array: [min, max] "},"Examples":["_slidespeed1 = sliderSpeed 105;"],"Additional":["sliderPosition","sliderRange","sliderSetPosition","sliderSetRange","sliderSetSpeed"]},{"Name":"soldierMagazines","Desc":"  Get array with all magazines of the given unit. ","Syn":{"Syntax":" soldierMagazines unit ","Params":["unit : Object"],"Return":" Array "},"Examples":["soldierMagazines player;\n\n[\n\u0009\"6.5mm 30Rnd STANAG Mag(30/30)[id/cr:1/0](5x)\",\n\u0009\"9mm 16Rnd Mag(16/16)[id/cr:7/0](2x)\",\n\u0009\"RGO Frag Grenade(1/1)[id/cr:10/0](2x)\",\n\u0009\"Smoke Grenade (White)(1/1)[id/cr:12/0](1x)\",\n\u0009\"Smoke Grenade (Green)(1/1)[id/cr:13/0](1x)\",\n\u0009\"Chemlight (Green)(1/1)[id/cr:14/0](2x)\",\n\u0009\"Titan AT Missile(1/1)[id/cr:16/0](2x)\"\n]"],"Additional":["uniformMagazines","vestMagazines","backpackMagazines"]},{"Name":"someAmmo","Desc":" Check if unit has some ammo. ","Syn":{"Syntax":" Boolean = someAmmo unitName ","Params":["unitName: Object"],"Return":" Boolean "},"Examples":["? not (someAmmo _loon1) : hint \"Loon1 is out of ammo!\""],"Additional":["ammo","magazines"]},{"Name":"soundVolume","Desc":" Check current sound volume (set by fadeSound). ","Syn":{"Syntax":" Number = soundVolume ","Params":null,"Return":" Number "},"Examples":["_vol = soundVolume"],"Additional":["See also needed"]},{"Name":"spawn","Desc":" Starts running a new script (SQF). Additional arguments are passed in local _this variable.\n\nThe new script is running in scheduled environment, spawn does not wait for it to be done, instead spawn returns a Script handle. ","Syn":{"Syntax":" Script = arguments spawn code ","Params":["arguments: Any Value\n\n","code: Code"],"Return":" Script "},"Examples":["[] spawn { player globalChat \"This is run in parallel.\"; };","There is no guarantee that spawned scripts will be executed in the same order they spawned: \nfor \"_i\" from 0 to 100 do {\n\u0009_null = _i spawn {\n\u0009\u0009diag_log _this\n\u0009}\n}\nResult: 51,1,2...49,50,0,52,53...100"],"Additional":["call","execVM","execFSM","exec","compile","preprocessFileLineNumbers","preprocessFile","terminate","scriptDone"]},{"Name":"speaker","Desc":" Returns the speaker of a person. ","Syn":{"Syntax":" speaker person ","Params":["person: Object"],"Return":" String "},"Examples":["speaker player\n"],"Additional":["setSpeaker"]},{"Name":"speed","Desc":" Object speed (in km/h). ","Syn":{"Syntax":" Number = speed object ","Params":["object: Object"],"Return":" Number "},"Examples":["? (speed _truck1) \u003e= 100 : hint \"You're going too fast!\""],"Additional":["limitSpeed"]},{"Name":"speedMode","Desc":" Returns speed mode of the group, which can be any of the following: \n\n \"LIMITED\"\n\n \"NORMAL\"\n\n \"FULL\"\n\n\n","Syn":{"Syntax":"String = speedMode groupName ","Params":["groupName: Object or Group"],"Return":" String "},"Examples":["_grpspeed1 = speedMode grp1"],"Additional":["setSpeedMode"]},{"Name":"sqrt","Desc":" Returns square root of x. ","Syn":{"Syntax":" Number =  sqrt x ","Params":["x: Number"],"Return":" Number "},"Examples":["_sq = sqrt 9;  // Result is 3"],"Additional":["Math Commands","a ^ b"]},{"Name":"squadParams","Desc":" Returns data about squad of given unit loaded from squad.xml.\nAll items in returned array are String.  ","Syn":{"Syntax":" squadParams unit ","Params":["unit: Object"],"Return":" Array - [[squadNick,squadName,squadEmail,squadWeb,squadPicture,squadTitle],[memberId,memberNick,memberName,memberEmail,memberIcq,memberRemark]]"},"Examples":["_info = squadParams player;"],"Additional":["squad.xml"]},{"Name":"stance","Desc":" Returns the stance of given unit - can be \"STAND\", \"CROUCH\", \"PRONE\", \"UNDEFINED\" (for example, swimming) or \"\" (on non-human object) ","Syn":{"Syntax":" stance unit ","Params":["unit: Object"],"Return":" String "},"Examples":["if (stance player == \"STAND\") then { hint \"I am standing now!\"; };"],"Additional":["animationState"]},{"Name":"startLoadingScreen","Desc":" Shows loading screen with the given text, using the given resource. While loading screen is shown, simulation and scene drawing is disabled, scripts run at full speed.  ","Syn":{"Syntax":" startLoadingScreen [text] or [text,resource] ","Params":["[text] or [text,resource]: Array -"],"Return":" Nothing "},"Examples":["startLoadingScreen [\"Loading My Mission, please wait...\"];","startLoadingScreen [\"Can't skip loading time...\", \"MyLoadingRsc\"];"],"Additional":["endLoadingScreen","progressLoadingScreen"]},{"Name":"step","Desc":" Optionally can set step. If you want to count down, step must be specified, and set negative. Default value is 1. ","Syn":{"Syntax":" for /.../ step step ","Params":["for /.../: For Type\n\n","step: Number"],"Return":" For Type "},"Examples":["for \"_x\" from 20 to 10 step -2 do {..code..}"],"Additional":["Control Structures"]},{"Name":"stop","Desc":" Stop AI unit.Stopped unit will not be able to move, fire, or change its orientation to follow a watched object.It may still change the stance if deemed appropriate (e.g. under fire).Use disableAI to disable specific AI capabilities. ","Syn":{"Syntax":" unitName stop stop ","Params":["unitName: Object\n\n","stop: Boolean"],"Return":" Nothing "},"Examples":["loon1 stop true"],"Additional":["stopped","doStop","commandStop"]},{"Name":"stopped","Desc":" Check if unit is stopped by stop command. ","Syn":{"Syntax":" Boolean = stopped unitName ","Params":["unitName: Object"],"Return":" Boolean "},"Examples":["? (stopped _loon1) : hint \"Loon1 is stopped\""],"Additional":["stop"]},{"Name":"str","Desc":" Converts any variable to a string. ","Syn":{"Syntax":" String = str value ","Params":["value: Anything"],"Return":" String "},"Examples":["_s = str (2 + 3);\n\nThe value of _s is the string \"5\"","a = [];\nac = 0;\nwhile {ac \u003c 5} do {\n\u0009ac = count a;\n\u0009a set [ac, format [\"Index %1\", ac]];\n};\nhintSilent str a;\n\nHints all of [\"Index 0\",\"Index 1\",\"Index 2\",\"Index 3\",\"Index 4\"] including brackets, quotes and commas."],"Additional":["See also needed"]},{"Name":"sunOrMoon","Desc":" Returns the sun to moon transition state. ","Syn":{"Syntax":" Number = sunOrMoon ","Params":null,"Return":" Number "},"Examples":["_transitionState = sunOrMoon;"],"Additional":["moonIntensity"]},{"Name":"supportInfo","Desc":" Creates a list of supported operators and type. Each field of array has the format: \"x:name\" Where x can be:\n\n't' - type\n\n'n' - null operator\n\n'u' - unary operator\n\n'b' - binary operator.\n\n\n \n'name' is the operator or type name (in case operator, type of input operands is included). \nmask parameter can be an empty string, or one of field. In this case, function returns empty array, if operator is not included in the list. Limited wildcard support is available. Type x may be replaced with *, meaning all types. For the mask partial match may be used, like abc*, meaning any operators starting with 'abc' are reported, for example: *:name, t:*, t:name* or *:*. ","Syn":{"Syntax":" Array =  supportInfo mask ","Params":["mask: String"],"Return":" Array "},"Examples":["supportInfo \"b:select*\";   //Returns [\"b:ARRAY select SCALAR\",\"b:ARRAY select BOOL\",\"b:CONFIG select SCALAR\"]"],"Additional":["productVersion"]},{"Name":"suppressFor","Desc":" Force suppressive fire from the unit. ","Syn":{"Syntax":" unit suppressFor duration ","Params":["unit: Object\n\n","duration: Number"],"Return":" Nothing "},"Examples":[" _soldier1 suppressFor 10 \nWill force soldier1 to do suppressive fire to known enemies during 10 seconds"],"Additional":["See also needed"]},{"Name":"surfaceIsWater","Desc":" Returns whether water is at given position. ","Syn":{"Syntax":"surfaceIsWater position ","Params":["position: Array - format Position2D  or Position3D in which case Z will be ignored"],"Return":" Boolean "},"Examples":["_isWater= surfaceIsWater [1000, 3000];","_isWater = surfaceIsWater position player;"],"Additional":["surfaceType","surfaceNormal","isOnRoad"]},{"Name":"surfaceNormal","Desc":" Returns surface normal on given position. ","Syn":{"Syntax":" surfaceNormal position","Params":["position: Array - format Position2D or Position3D in which case Z will be ignored"],"Return":" Array - Example: [-0.102321,0.19977,0.974486] "},"Examples":["_normal = surfaceNormal [300, 500];","_normal = surfaceNormal position player;"],"Additional":["setVectorUp","surfaceIsWater","surfaceType"]},{"Name":"surfaceType","Desc":" Returns what surface type is at the given position. ","Syn":{"Syntax":" String = surfaceType position ","Params":["position: Array - format Position2D or Position3D in which case Z will be ignored"],"Return":" String "},"Examples":["_surface = surfaceType [4500, 4500];","_surface = surfaceType position player;"],"Additional":["surfaceIsWater","surfaceNormal"]},{"Name":"swimInDepth","Desc":" Sets the target depth level for swimming soldier.  ","Syn":{"Syntax":" unit swimInDepth value ","Params":["unit: Object\n\n","value: Number"],"Return":" Nothing "},"Examples":["soldier swimInDepth -20"],"Additional":["See also needed"]},{"Name":"switch","Desc":" Switch form. ","Syn":{"Syntax":" switch do block ","Params":["switch: Switch Type\n\n","block: Code"],"Return":" Anything "},"Examples":["switch (_a) do { case 1 : { /*...code...*/ }; case 2 : { /*...code...*/ }; default { /*...code...*/ }; };\n\nswitch (_condition) do {\n    case 1: { hint \"1\" };\n    case 2: { hint \"2\" };\n    default { hint \"default\" };\n};\n\nswitch (_condition) do {\n    case \"string1\";\n    case \"string2\": { hint \"string1 or string2\" };\n    case \"string3\";\n    case \"string4\": { hint \"string3 or string4\" };\n    default { hint \"default\" };\n};","_color = switch (side player) do {\n    case west: { \"ColorGreen\" };\n    case east: { \"ColorRed\" };\n};","_fn_moveForward = { /*...code...*/ };\n_fn_moveBackward = { /*...code...*/ };\n_fn_invalidKey = { /*...code...*/ };\nswitch true do {\n    case (_dikCode in actionKeys \"MoveForward\"): _fn_moveForward;\n    case (_dikCode in actionKeys \"MoveBackward\"): _fn_moveBackward;\n    default _fn_invalidKey;\n};","switch _var do {\n    case \"0\";\n    default { hint str [\"default\", _var] };\n    case \"3\": { hint str [\"3\", _var] };\n    case \"1\";\n    case \"4\";\n    case \"2\": { hint str [\"2\", _var] };\n};\n_var = \"0\"; //-\u003e [\"3\", \"0\"]\n_var = \"1\"; //-\u003e [\"2\", \"1\"]\n_var = \"2\"; //-\u003e [\"2\", \"2\"]\n_var = \"3\"; //-\u003e [\"3\", \"3\"]\n_var = \"4\"; //-\u003e [\"2\", \"4\"]\n_var = \"5\"; //-\u003e [\"default\", \"5\"]"],"Additional":["Control Structures","a:b","case","default"]},{"Name":"switchableUnits","Desc":" Return a list of units accessible through Team Switch. ","Syn":{"Syntax":" Array = switchableUnits ","Params":null,"Return":" Array"},"Examples":["Example needed"],"Additional":["Team_Switch","units","allCurators","allGroups","allDead","playableUnits","vehicles","allUnitsUAV","allDeadMen"]},{"Name":"switchAction","Desc":" When used on a person, the given action is started immediately (there is no transition). Use switchmove \"\" to switch back to the default movement if there is no transition back, otherwise the person may be stuck. ","Syn":{"Syntax":" soldier switchAction action ","Params":["soldier: Object\n\n","action: String"],"Return":" Nothing "},"Examples":["soldierOne switchAction \"SitDown\""],"Additional":["See also needed"]},{"Name":"switchCamera","Desc":" Switch camera to given vehicle / camera. Mode is one of: \n\n \"INTERNAL\": 1st person\n\n \"GUNNER\": optics / sights\n\n \"EXTERNAL\": 3rd person\n\n \"GROUP\": group\n\n \"VIEW\": exactly what spectated unit sees (gun optics, binoculars, TI and NV, etc.) (VBS2 1.30+ only)\n\n\n\n\nNote: If you switch to a unit in a vehicle, this command uses the correct turret.\n","Syn":{"Syntax":" unitName switchCamera mode ","Params":["unitName: Object\n\n","mode: String"],"Return":" Nothing "},"Examples":["_loon1 switchCamera \"External\" "],"Additional":["cameraView","cameraOn","cameraEffect","selectPlayer","remoteControl"]},{"Name":"switchGesture","Desc":" When used on a person,the given move is started immediately (there is no transition). ","Syn":{"Syntax":" soldier switchGesture moveName ","Params":["soldier:  -\n\n","Object,moveName:  -"],"Return":" Nothing "},"Examples":["soldierOne switchGesture \"Wave\""],"Additional":["See also needed"]},{"Name":"switchLight","Desc":" Controls whether a lamp is lit or not. For working with CfgNonAIVehicles class \"StreetLamp\" only.","Syn":{"Syntax":" lamp switchLight mode ","Params":["lamp: Object\n\n","mode: String - Mode can be: \"ON\", \"OFF\" or \"AUTO\" (Lamp is on only during nighttime , default)"],"Return":" Nothing "},"Examples":["(object 12345) switchLight \"off\" ","nearestObject  [player, \"Streetlamp\"] switchLight \"OFF\" ","if (count allMissionObjects \"StreetLamp\" == 0) then {\n\u0009hint \"Objects compatible with 'switchLight' are not found.\";\n} else {\n\u0009hint \"'switchLight' compatible objects are found!\";\n};"],"Additional":["lightIsOn"]},{"Name":"switchMove","Desc":" When used on a person, the given move is started immediately (there is no transition). Use switchmove \"\" to switch back to the default movement if there is no transition back, otherwise the person may be stuck.\n\nList of moves in ArmA 2\nList of moves in Armed Assault\nList of moves in Operation Flashpoint: Resistance ","Syn":{"Syntax":" person switchmove movename ","Params":["person: Object\n\n","movename: String"],"Return":" Nothing "},"Examples":["_loon1 switchMove \"FXStandDip\" "],"Additional":["playAction","playActionNow","playMove","playMoveNow","playGesture"]},{"Name":"synchronizedObjects","Desc":" Return the list of objects synchronized with the given unit. ","Syn":{"Syntax":" synchronizedObjects unit ","Params":["unit: Object -"],"Return":" Array "},"Examples":["_objects = synchronizedObjects _logic"],"Additional":["See also needed"]},{"Name":"synchronizedTriggers","Desc":" Returns the list of triggers synchronized with a given waypoint.  ","Syn":{"Syntax":" synchronizedTriggers waypoint ","Params":["waypoint: Waypoint"],"Return":" Array "},"Examples":["Example needed"],"Additional":["See also needed"]},{"Name":"synchronizedWaypoints","Desc":" Returns the list of waypoints synchronized with a given trigger or waypoint.  ","Syn":{"Syntax":" synchronizedWaypoints obj ","Params":["obj: Object or Waypoint"],"Return":" Array "},"Examples":["Example needed"],"Additional":["See also needed"]},{"Name":"synchronizeObjectsAdd","Desc":" Add given objects to the unit's list of synchronized objects. ","Syn":{"Syntax":" unit synchronizeObjectsAdd [objects] ","Params":["unit: Object -\n\n","[objects]: Array -"],"Return":" Nothing "},"Examples":["_acm = _groupLogic createUnit [\"AmbientCombatManager\",position player,[],0,\"NONE\"];\n_acm synchronizeObjectsAdd [player];"],"Additional":["See also needed"]},{"Name":"synchronizeObjectsRemove","Desc":" Remove given objects from the unit's list of synchronized objects. ","Syn":{"Syntax":" unit synchronizeObjectsRemove [objects] ","Params":["unit: Object -\n\n","[objects]: Array -"],"Return":" Nothing "},"Examples":["Example needed"],"Additional":["See also needed"]},{"Name":"synchronizeTrigger","Desc":" Synchronizes the trigger with zero or more waypoints. ","Syn":{"Syntax":" trigger synchronizeTrigger [waypoint1, ...] ","Params":["trigger: Object - trigger to synchronize\n\n","[waypoint1, waypoint2, ...]: Array of waypoints to synchronize with trigger. Array can be empty to unset.","waypoint1: Waypoint - first waypoint"],"Return":" Nothing "},"Examples":["_trigger synchronizeTrigger []","_trigger synchronizeTrigger [_waypoint1]","_trigger synchronizeTrigger [_waypoint1, [_group5, 7], _waypoint3]"],"Additional":["createTrigger","synchronizeWaypoint"]},{"Name":"synchronizeWaypoint","Desc":" Synchronizes the waypoint with other waypoints. Each waypoint is given as an array [group, index]. ","Syn":{"Syntax":" waypoint synchronizeWaypoint [waypoint1, waypoint2, ...] ","Params":["waypoint: Array - format Waypoint\n\n","[waypoint1, waypoint2, ...]: Array of waypoints","waypoint1: Array - format Waypoint","waypoint2: Array - format Waypoint","And so on ......"],"Return":" Nothing "},"Examples":["[_group1, 2] synchronizeWaypoint [ [_group2, 3] ];"],"Additional":["See also needed"]},{"Name":"synchronizeWaypoint_trigger","Desc":" Synchronizes a trigger with other waypoints. Each waypoint is given as an array [group, index]. ","Syn":{"Syntax":" trigger synchronizeWaypoint [waypoint1, waypoint2, ...] ","Params":["trigger: Object\n\n","[waypoint1, waypoint2, ...]: Array of waypoints","waypoint1: Array - format Waypoint","waypoint2: Array - format Waypoint","And so on ......"],"Return":" Nothing "},"Examples":["_myTrigger synchronizeWaypoint [ [_group2, 3] ];"],"Additional":["createTrigger","synchronizeTrigger"]},{"Name":"systemChat","Desc":" Types text to the system radio channel.  ","Syn":{"Syntax":" systemChat text ","Params":["text: String"],"Return":" Nothing "},"Examples":["systemChat \"Hello world!\";"],"Additional":["sideChat","vehicleChat","globalChat"]},{"Name":"systemOfUnits","Desc":" Returns the currently selected system of units.\n\n 0: Metric\n\n 1: Mixed (ground vehicles use Metric / air vehicles use Imperial)\n\n 2: Imperial ","Syn":{"Syntax":" systemOfUnits","Params":null,"Return":" Number "},"Examples":["_system = systemOfUnits;"],"Additional":null},{"Name":"tan","Desc":" Tangent of x, argument in Degrees. ","Syn":{"Syntax":" Number = tan x ","Params":["x: Number"],"Return":" Number "},"Examples":["_tangent = tan 45  \nResult is 1"],"Additional":["Math Commands"]},{"Name":"targetsAggregate","Desc":" Aggregate candidates. ","Syn":{"Syntax":" [speaker, side, unit, place, time] targetsAggregate candidates ","Params":["[speaker, side, unit, place, time]: Array\n\n","candidates: Array"],"Return":" Array "},"Examples":["_aggregation = [_this,\"\",\"\",\"\",\"\"] targetsAggregate _selected;//ca\\characters\\scripts\\reactCore_Full.fsm"],"Additional":["targetsQuery"]},{"Name":"targetsQuery","Desc":" Find all targets known to sender matching given query. ","Syn":{"Syntax":" speaker targetsQuery [receiver,side,unit,place,time] ","Params":["speaker: Object -\n\n","[receiver,side,unit,place,time]: Array -"],"Return":" Array "},"Examples":["_candidates = _this targetsQuery [_from,_enemySide,\"\",\"\",\"\"];//ca\\characters\\scripts\\reactCore_Full.fsm"],"Additional":["targetsAggregate"]},{"Name":"taskChildren","Desc":" Return the child tasks of the specified task. ","Syn":{"Syntax":" taskChildren task ","Params":["task: Task -"],"Return":" Array "},"Examples":["Example needed"],"Additional":["See also needed"]},{"Name":"taskCompleted","Desc":" Return if task is completed. (state Succeeded, Failed or Canceled) ","Syn":{"Syntax":" taskCompleted task ","Params":["task: Task"],"Return":" Boolean "},"Examples":["Example needed"],"Additional":["See also needed"]},{"Name":"taskDescription","Desc":" Returns the sub-parts of the task description. ","Syn":{"Syntax":" Array = taskDescription task ","Params":["task: Task"],"Return":" Array: [Task description, Task title, Task waypoint description] "},"Examples":["_taskDescArray = taskDescription _task;"],"Additional":["setSimpleTaskDescription","createSimpleTask"]},{"Name":"taskDestination","Desc":" Returns the position of the task (as specified by destination parameter in config). ","Syn":{"Syntax":" taskDestination task ","Params":["task: Task"],"Return":" Array (A3 1.28 Returns Nothing if identity is taskNull) "},"Examples":["if (!isNull currentTask player) then {taskDestination currentTask player}; //return Position (Array)"],"Additional":["cancelSimpleTaskDestination","setSimpleTaskDestination"]},{"Name":"taskHint","Desc":" Shows info about new, changed or failed task. The text can contain several lines. \\n is used to indicate the end of a line.\n\n\n\n\n\n \n\n To maintain Arma 3 visual style, it's recommended to use BIS_fnc_showNotification instead.\n\n","Syn":{"Syntax":" taskHint [hintText, [r, g, b, a], icon] ","Params":["[hintText, [r, g, b, a], icon]: Array\n\n","hintText: String","[r, g, b, a]: Array - format Color","icon: String - possible values: taskNew, taskDone, taskFailed, taskCurrent"],"Return":" Nothing "},"Examples":["taskhint [\"Task failed!\\nBad job!\", [1, 0, 0, 1], \"taskFailed\"]"],"Additional":["See also needed"]},{"Name":"taskNull","Desc":" A non-existing task. This value is not equal to anything, including itself. ","Syn":{"Syntax":" taskNull ","Params":null,"Return":" Task "},"Examples":["taskNull == taskNull\nresult is false"],"Additional":["See also needed"]},{"Name":"taskParent","Desc":" Return the parent task of the specified task. ","Syn":{"Syntax":" taskParent task ","Params":["task: Task -"],"Return":" Task "},"Examples":["Example needed"],"Additional":["See also needed"]},{"Name":"taskResult","Desc":" Send a result of the task to the task sender. ","Syn":{"Syntax":" task sendTaskResult [state,result,sentence] ","Params":["task: Task -\n\n","[state,result,sentence]: Array -"],"Return":" Nothing "},"Examples":["Example needed"],"Additional":["See also needed"]},{"Name":"taskState","Desc":" Returns the current state of a task. \n\nPossible return values are:\n\n None\n\n Created\n\n Assigned\n\n Succeeded\n\n Failed\n\n Canceled\n\n\n","Syn":{"Syntax":" String = taskState  Task ","Params":["Task - the task you want to query"],"Return":" String - current state of task"},"Examples":["tskSomeTask = player createSimpleTask [\"NewTask\"];\nhint format[\"Taskstate: %1\", taskState tskSomeTask];"],"Additional":["Tasks","createSimpleTask","removeSimpleTask","setSimpleTaskDescription","setSimpleTaskDestination","setTaskResult","setTaskState"]},{"Name":"teamMember","Desc":" Return an agent for given person. ","Syn":{"Syntax":" teamMember person ","Params":["person: Object"],"Return":" Team Member "},"Examples":["_agent = teamMember player;"],"Additional":["addTeamMember","createTeam","deleteTeam","forEachMemberTeam","removeTeamMember","teamName","teams","teamType","forEachMember","forEachMemberAgent"]},{"Name":"teamMemberNull","Desc":" A null team member. ","Syn":{"Syntax":" teamMemberNull ","Params":null,"Return":" Team Member "},"Examples":["if (_teamMember isEqualTo teamMemberNull) then {\n\u0009hint \"is null member\";\n};"],"Additional":["addTeamMember","createTeam","deleteTeam","forEachMemberTeam","removeTeamMember","teamMember","teamName","teams","teamType"]},{"Name":"teamName","Desc":" Return a name of given team. ","Syn":{"Syntax":" teamName team ","Params":["team: Team Member"],"Return":" String "},"Examples":["_name = teamName _team;"],"Additional":["addTeamMember","createTeam","deleteTeam","forEachMemberTeam","removeTeamMember","teamMember","teams","teamType","forEachMember","forEachMemberAgent"]},{"Name":"teams","Desc":" Return a list of teams in the current mission. ","Syn":{"Syntax":" teams ","Params":null,"Return":" Array "},"Examples":["_teams = teams;"],"Additional":["addTeamMember","createTeam","deleteTeam","forEachMemberTeam","removeTeamMember","teamMember","teamName","teamType","forEachMember","forEachMemberAgent"]},{"Name":"teamSwitch","Desc":" Invoke the Team Switch dialog (force it even when conditions are not met). ","Syn":{"Syntax":" teamSwitch ","Params":null,"Return":" Nothing "},"Examples":["Example needed"],"Additional":["Team_Switch","enableTeamSwitch","onBriefingTeamSwitch","onTeamSwitch","teamSwitchEnabled"]},{"Name":"teamSwitchEnabled","Desc":" Check if Team Switch is currently enabled.\n\nTeam Switch is enabled by default.","Syn":{"Syntax":" Boolean = teamSwitchEnabled ","Params":null,"Return":" Boolean "},"Examples":["Example needed"],"Additional":["Team_Switch","enableTeamSwitch","onBriefingTeamSwitch","onTeamSwitch","teamSwitch"]},{"Name":"teamType","Desc":" Returns a type of given team. ","Syn":{"Syntax":" teamType team ","Params":["team: Team Member"],"Return":" String "},"Examples":["_type = teamType _team;"],"Additional":["addTeamMember","createTeam","deleteTeam","forEachMemberTeam","removeTeamMember","teamMember","teamName","teams","forEachMember","forEachMemberAgent"]},{"Name":"terminate","Desc":" Terminate (abort) spawned or execVMed script. ","Syn":{"Syntax":" terminate scriptHandle ","Params":["scriptHandle: Script"],"Return":" Nothing "},"Examples":["_script = [] execVM \"script.sqf\";\nsleep 5;\nterminate _script;\nhint \"'script.sqf' has been terminated after 5 seconds\";"],"Additional":["execVM","spawn","scriptDone"]},{"Name":"terrainIntersect","Desc":" Checks for intersection of terrain between two positions. Returns true if intersects with terrain. Uses PositionATL ","Syn":{"Syntax":" terrainIntersect [pos1, pos2] ","Params":["pos1: PositionATL\n\n","pos2: PositionATL"],"Return":" Boolean "},"Examples":["terrainIntersect [getPosATL player, getPosATL chopper]","_doesIntersect = terrainIntersect [ position player, position enemy1 ];"],"Additional":["intersect","lineIntersects","lineIntersectsWith","terrainIntersectASL","lineIntersectsObjs"]},{"Name":"terrainIntersectASL","Desc":" Checks for intersection of terrain between two positions. Returns true if intersects with terrain. Uses PositionASL ","Syn":{"Syntax":" terrainIntersectASL [pos1, pos2] ","Params":["pos1: PositionASL\n\n","pos2: PositionASL"],"Return":" Boolean "},"Examples":["terrainIntersectASL [getPosASL player, getPosASL chopper]","_doesIntersect = terrainIntersectASL [ eyePos player, eyePos enemy1 ];"],"Additional":["intersect","lineIntersects","lineIntersectsWith","terrainIntersect","lineIntersectsObjs"]},{"Name":"text","Desc":" Creates a structured text containing the given plain text. ","Syn":{"Syntax":" Structured Text = text text ","Params":["text: String"],"Return":" Structured Text "},"Examples":["_stxt2 = text \"Hello world.\""],"Additional":["See also needed"]},{"Name":"text_location","Desc":" Returns a location's text value.","Syn":{"Syntax":" text location ","Params":["location: Location"],"Return":" String "},"Examples":["_townName = text myTownLocation"],"Additional":["setText"]},{"Name":"textLog","Desc":" Dump argument value to debugging output. \nNote: This command is non-functional in the retail version.","Syn":{"Syntax":" textLog anything ","Params":["anything: Any Value"],"Return":" Nothing "},"Examples":["textLog player"],"Additional":["See also needed"]},{"Name":"textLogFormat","Desc":" Debugging output. This command is non-functional in the retail version. ","Syn":{"Syntax":" textLogFormat [format, arg1, arg2, ...] ","Params":["format: dataType\n\n","arg1: Any Value","arg2: Any Value"],"Return":" Nothing "},"Examples":["Example needed"],"Additional":["See also needed"]},{"Name":"tg","Desc":" Identical to tan ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Operation Flashpoint","1.00"],"Additional":null},{"Name":"then","Desc":" First or second element of array is executed depending on result of if condition. Result of the expression executed is returned as a result (result may be Nothing).  ","Syn":{"Syntax":" if then else ","Params":["if: If Type\n\n","else: Code"],"Return":" Anything "},"Examples":["if (a \u003e b) then { c = 1 };","if (a \u003e b) then {\n    c = 1;\n} else {\n    c = 2;\n};\nhint str c;"],"Additional":["Control Structures","if","else"]},{"Name":"throw","Desc":" Throws an exception. The exception is processed by first catch block.  ","Syn":{"Syntax":" throw expression ","Params":["expression: Anything"],"Return":" Nothing "},"Examples":["throw \"invalid argument\""],"Additional":["try","Exception handling"]},{"Name":"time","Desc":" Time elapsed since mission started (in seconds). ","Syn":{"Syntax":" Number = time ","Params":null,"Return":" Number "},"Examples":["Example needed"],"Additional":["daytime","date","dateToNumber"]},{"Name":"titleCut","Desc":" \n\n\n\n \n\n this command was obsoleted, use cutText instead.\n ","Syn":{"Syntax":" titleCut [text, type, speed] ","Params":["[text, type, speed]: Array\n\n","text: String","type: String","speed: Number - optional, default 1."],"Return":" Nothing "},"Examples":["titleCut [\"Hello, how are you?\",\"Plain Down\",3];"],"Additional":["cutText"]},{"Name":"titleFadeOut","Desc":" Terminate the title effect and set duration of the fade out phase to the given time. ","Syn":{"Syntax":" titleFadeOut duration ","Params":["duration: Number"],"Return":" Nothing "},"Examples":["titleText [\"Hi\", \"plain\"]; titleFadeOut 2"],"Additional":["titleText"]},{"Name":"titleObj","Desc":" Object title - Object can be defined in Description.ext\n\ntype may be one of:\n\n• \"PLAIN\"\n\n• \"PLAIN DOWN\"\n\n• \"BLACK\"\n\n• \"BLACK FADED\"\n\n• \"BLACK OUT\"\n\n• \"BLACK IN\"\n\n• \"WHITE OUT\"\n\n• \"WHITE IN\"\n\nSee Title Effect Type for more information about these types. ","Syn":{"Syntax":" titleObj [text, type, speed] ","Params":["[text, type, speed]: Array\n\n","text: String","type: String.","speed: Number - optional, default 1."],"Return":" Nothing "},"Examples":["titleObj [\"BISLogo\", \"PLAIN\"]"],"Additional":["See also needed"]},{"Name":"titleRsc","Desc":" Resource title - Resource can be defined in Description.ext Also see cutRsc, with these two commands you can show two different resources at once. ","Syn":{"Syntax":" titleRsc [text, type, speed] ","Params":["[text, type, speed]: Array\n\n","text: String - the class name of the resource. (\"Default\" will remove the current resource.)","type: String - one of \"PLAIN\", \"PLAIN DOWN\", \"BLACK\", \"BLACK FADED\", \"BLACK OUT\", \"BLACK IN\", \"WHITE OUT\" and \"WHITE IN\". See Title Effect Type for more information about these values.","speed: Number - optional, default 1"],"Return":" Nothing "},"Examples":["titleRsc [\"BIS\", \"PLAIN\"]"],"Additional":["cutRsc"]},{"Name":"titleText","Desc":" Displays text across the screen.\nIf used along with cutText two different texts (in different type styles) can be shown at once. ","Syn":{"Syntax":" titleText [text, type, speed] ","Params":["text: String\n\n","type: String- Possible Title Effect Types:\n• \"PLAIN\"\n• \"PLAIN DOWN\"\n• \"BLACK\"\n• \"BLACK FADED\"\n• \"BLACK OUT\"\n• \"BLACK IN\"\n• \"WHITE OUT\"\n• \"WHITE IN\"","speed: Number - optional, default 1"],"Return":" Nothing "},"Examples":["titleText [\"Show this text\", \"PLAIN\"];\ntitleText [\"Your message\", \"BLACK\", 2];"],"Additional":["titleFadeOut","cutText"]},{"Name":"to","Desc":" Continue sequence of 'for' command. ","Syn":{"Syntax":" for \"_var\" from a to b ","Params":["for \"_var\" from a: For Type\n\n","b: Number"],"Return":" For Type "},"Examples":["for \"_x\" from 10 to 20 do {..code..}"],"Additional":["Control Structures"]},{"Name":"toArray","Desc":" Converts the supplied String into an Array of Numbers. \nThe numbers in the created array are the decimal Unicode representations of characters.\n\n","Syn":{"Syntax":" toArray string ","Params":["string: String"],"Return":" Array "},"Examples":["hint format[\"%1\",toArray(\"AaŒ\")] returns \"[65,97,338]\""],"Additional":["set","resize","reverse","select","in","find","toString","forEach","count","deleteAt","deleteRange","Unicode Character Table"]},{"Name":"toLower","Desc":" Converts the supplied string to all lowercase characters. ","Syn":{"Syntax":" toLower string ","Params":["string: String"],"Return":" String "},"Examples":["hint toLower(\"AaBb1\") returns \"aabb1\""],"Additional":["toUpper"]},{"Name":"toString","Desc":" Converts the supplied Array of Numbers into a String. \nThe numbers in the array to be converted are the decimal Unicode representations of characters.\n\n\n","Syn":{"Syntax":" toString array ","Params":["array: Array"],"Return":" String "},"Examples":["hint toString [65,97,338] returns \"AaŒ\""],"Additional":["set","resize","reverse","select","in","find","toArray","forEach","count","deleteAt","deleteRange","Unicode Character Table"]},{"Name":"toUpper","Desc":" Converts the supplied string to all uppercase characters. ","Syn":{"Syntax":" toUpper string ","Params":["string: String"],"Return":" String "},"Examples":["hint toUpper(\"AaBb1\") returns \"AABB1\""],"Additional":["toLower"]},{"Name":"triggerActivated","Desc":" Returns true if the trigger has been activated.\n\nNote: The trigger could be local or remote but the result returned by this command will be for the trigger condition set up locally on the client that executed the command. See createTrigger for more info. ","Syn":{"Syntax":" triggerActivated trigger ","Params":["trigger: Object"],"Return":" Boolean "},"Examples":["if (triggeractivated trg1) then {};"],"Additional":["setTriggerActivation","triggerActivation"]},{"Name":"triggerActivation","Desc":" Returns trigger activation in the form [by, type, repeating]. \n\nNote: The trigger could be local or remote but the result returned by this command will be for the trigger condition set up locally on the client that executed the command. See createTrigger for more info. ","Syn":{"Syntax":" triggerActivation trigger ","Params":["trigger: Object"],"Return":" Array "},"Examples":["Example needed"],"Additional":["setTriggerActivation","triggerActivated"]},{"Name":"triggerArea","Desc":" Returns trigger area in the form [a, b, angle, rectangle].\n\nNote: The trigger could be local or remote but the result returned by this command will be for the trigger condition set up locally on the client that executed the command. See createTrigger for more info. ","Syn":{"Syntax":" triggerArea trigger ","Params":["trigger: Object"],"Return":" Array "},"Examples":["_params = triggerArea sensor1; // result is [200, 120, 45, false]"],"Additional":["setTriggerArea"]},{"Name":"triggerAttachedVehicle","Desc":" Returns vehicle attached to the trigger (for example using triggerAttachVehicle).\n\nNote: The trigger could be local or remote but the result returned by this command will be for the trigger condition set up locally on the client that executed the command. See createTrigger for more info. ","Syn":{"Syntax":" triggerAttachedVehicle trigger ","Params":["trigger: Object"],"Return":" Object "},"Examples":["return = triggerAttachedVehicle triggerName;"],"Additional":["attachObject","attachTo","attachedObjects","attachedTo","waypointAttachVehicle","waypointAttachedVehicle","lightAttachObject","triggerAttachVehicle","attachedObject","triggerAttachObject"]},{"Name":"triggerAttachObject","Desc":" Assigns a static object to the trigger. The activation source is changed to \"STATIC\". ","Syn":{"Syntax":" triggerName triggerAttachObject objectId ","Params":["triggerName: Object\n\n","objectId: Number"],"Return":" Nothing "},"Examples":["_trigger triggerAttachObject 1234;"],"Additional":["attachObject","attachTo","attachedObjects","attachedTo","waypointAttachVehicle","waypointAttachedVehicle","lightAttachObject","triggerAttachVehicle","attachedObject","triggerAttachedVehicle"]},{"Name":"triggerAttachVehicle","Desc":"Specifies the entity which will activate the selected trigger.\n\nIf [] is given, the trigger is decoupled from the assigned vehicle (example 2).\n\nIf the activation source is \"VEHICLE\", \"GROUP\", \"LEADER\" or \"MEMBER\", it's changed to \"NONE\". \n\nIf [vehicle] is given, the trigger is coupled to the vehicle or its group. \n\nWhen the source is \"GROUP\", \"LEADER\" or \"MEMBER\", it's coupled to the group, otherwise it's coupled to the vehicle and the source is changed to \"VEHICLE\". ","Syn":{"Syntax":" triggerName triggerAttachVehicle [] or [vehicle] ","Params":["triggerName: Object\n\n","[] or [vehicle]: Array"],"Return":" Nothing "},"Examples":["trigger triggerAttachVehicle [player];","trigger triggerAttachVehicle [];"],"Additional":["attachObject","attachTo","attachedObjects","attachedTo","waypointAttachVehicle","waypointAttachedVehicle","lightAttachObject","attachedObject","triggerAttachedVehicle","triggerAttachObject"]},{"Name":"triggerStatements","Desc":" Returns trigger statements in the form [cond, activ, desactiv]. \n\nNote: The trigger could be local or remote but the result returned by this command will be for the trigger condition set up locally on the client that executed the command. See createTrigger for more info. ","Syn":{"Syntax":" triggerStatements trigger ","Params":["trigger: Object"],"Return":" Array "},"Examples":["Example needed"],"Additional":["setTriggerStatements"]},{"Name":"triggerText","Desc":" Returns trigger text.\n\nNote: The trigger could be local or remote but the result returned by this command will be for the trigger condition set up locally on the client that executed the command. See createTrigger for more info.  ","Syn":{"Syntax":" triggerText trigger ","Params":["trigger: Object"],"Return":" String "},"Examples":["result = triggerText triggerName;"],"Additional":["setTriggerText"]},{"Name":"triggerTimeout","Desc":" Returns trigger timeout in the form [min, mid, max, interruptable].\n\nNote: The trigger could be local or remote but the result returned by this command will be for the trigger condition set up locally on the client that executed the command. See createTrigger for more info.","Syn":{"Syntax":" triggerTimeout trigger ","Params":["trigger: Object"],"Return":" Array "},"Examples":["Example needed"],"Additional":["setTriggerTimeout","triggerTimeoutCurrent"]},{"Name":"triggerTimeoutCurrent","Desc":" Returns trigger timeout or -1 if countdown is not in progress. \n\nNote: The trigger could be local or remote but the result returned by this command will be for the trigger condition set up locally on the client that executed the command. See createTrigger for more info.","Syn":{"Syntax":" triggerTimeoutCurrent trigger ","Params":["trigger: Object - trigger object"],"Return":" Number - time remaining before trigger activation.\n\n"},"Examples":["_remaining = triggerTimeoutCurrent _trigger;"],"Additional":["triggerTimeout","setTriggerTimeout"]},{"Name":"triggerType","Desc":" Returns trigger type. \n\nNote: The trigger could be local or remote but the result returned by this command will be for the trigger condition set up locally on the client that executed the command. See createTrigger for more info.","Syn":{"Syntax":" triggerType trigger ","Params":["trigger: Object"],"Return":" String "},"Examples":["Example needed"],"Additional":["setTriggerType"]},{"Name":"true","Desc":" Always true ","Syn":{"Syntax":" true ","Params":null,"Return":" Boolean "},"Examples":["Example needed"],"Additional":["false"]},{"Name":"try","Desc":" Defines a try-catch structure. This sets up an exception handling block. Any thrown exception in a try block is caught in a catch block. The structured exception block has following form:\n try //begin of try-catch block \n  { //block, that can throw exception } \n catch\n  { //block, that process an exception. Exception is described in _exception variable };  ","Syn":{"Syntax":" try code ","Params":["code: Code"],"Return":" Exception Type "},"Examples":["Example needed"],"Additional":["Exception handling"]},{"Name":"turretUnit","Desc":" Returns the unit in the vehicle turret.  ","Syn":{"Syntax":" vehicle turretUnit turretpath ","Params":["vehicle: Object\n\n","turretpath: Array"],"Return":" Object "},"Examples":["_vehicle turretUnit _thisTurret"],"Additional":["moveInTurret","assignAsTurret","assignedVehicleRole","lockedTurret"]},{"Name":"tvAdd","Desc":" Adds an item with given text to Tree View with given idc under specified path (zero based). ","Syn":{"Syntax":" tvAdd [idc, [path], text] \u003cbr\u003e(Alternate Syntax exists check Read more)","Params":["[idc, [path], text]: Array\n\n","idc: Number","[path]: Array - Array containing numbers.","text: String"],"Return":" Number "},"Examples":["tvAdd [101, [0], \"First item\"];","_ctrl tvAdd [ [], \"Parent_A\"];"],"Additional":["tvClear","tvCollapse","tvCount","tvCurSel","tvData","tvDelete","tvExpand","tvPicture","tvSetCurSel","tvSetData","tvSetPicture","tvSetValue","tvSort","tvSortByValue","tvText","tvValue"]},{"Name":"tvClear","Desc":" Removes all items from Tree View with given idc.\n\n\n\n\n \n\n (A3 1.28)Doesn't support Control type, alternatively use Control tvCollapse [];//Same effect\n ","Syn":{"Syntax":" tvClear idc ","Params":["idc: Number"],"Return":" Nothing "},"Examples":["tvClear 101;"],"Additional":["tvAdd","tvCollapse","tvCount","tvCurSel","tvData","tvDelete","tvExpand","tvPicture","tvSetCurSel","tvSetData","tvSetPicture","tvSetValue","tvSort","tvSortByValue","tvText","tvValue"]},{"Name":"tvCollapse","Desc":" Collapses tree item pointed to by the path. IDC means id of parent Tree View. ","Syn":{"Syntax":" tvCollapse [idc, [path]] ","Params":["[idc, [path]]: Array"],"Return":" Nothing "},"Examples":["tvCollapse [101, [0]];"],"Additional":["tvAdd","tvClear","tvCount","tvCurSel","tvData","tvDelete","tvExpand","tvPicture","tvSetCurSel","tvSetData","tvSetPicture","tvSetValue","tvSort","tvSortByValue","tvText","tvValue"]},{"Name":"tvCount","Desc":" Returns childrens count of item on given path. IDC means id of parent Tree View. ","Syn":{"Syntax":" tvCount [idc, [path]] \u003cbr\u003e(Alternate Syntax exists check Read more)","Params":["[idc, [path]]: Array\n\n","idc: Number","[path]: Array - Array containing numbers."],"Return":" Number "},"Examples":["tvCount [101, [0]];","_ctrl tvCount [1,0];"],"Additional":["tvAdd","tvClear","tvCollapse","tvCurSel","tvData","tvDelete","tvExpand","tvPicture","tvSetCurSel","tvSetData","tvSetPicture","tvSetValue","tvSort","tvSortByValue","tvText","tvValue"]},{"Name":"tvCurSel","Desc":" Returns path to currently selected item. IDC means id of parent Tree View. ","Syn":{"Syntax":" tvCurSel idc \u003cbr\u003e(Alternate Syntax exists check Read more)","Params":["idc: Number"],"Return":" Array "},"Examples":["tvCurSel 101;","tvCurSel _ctrl;"],"Additional":["tvAdd","tvClear","tvCollapse","tvCount","tvData","tvDelete","tvExpand","tvPicture","tvSetCurSel","tvSetData","tvSetPicture","tvSetValue","tvSort","tvSortByValue","tvText","tvValue"]},{"Name":"tvData","Desc":" Returns string data from item on given path. IDC means id of parent Tree View. ","Syn":{"Syntax":" tvData [idc, [path]] \u003cbr\u003e(Alternate Syntax exists check Read more)","Params":["[idc, [path]]: Array\n\n","idc: Number","[path]: Array - Array containing numbers."],"Return":" String "},"Examples":["tvData [101, [0]];","(_display displayCtrl 101) tvData [0];"],"Additional":["tvAdd","tvClear","tvCollapse","tvCount","tvCurSel","tvDelete","tvExpand","tvPicture","tvSetCurSel","tvSetData","tvSetPicture","tvSetValue","tvSort","tvSortByValue","tvText","tvValue"]},{"Name":"tvDelete","Desc":" Removes an item on given path from Tree View with given idc. ","Syn":{"Syntax":" tvDelete [idc, [path]] \u003cbr\u003e(Alternate Syntax exists check Read more)","Params":["[idc, [path]]: Array\n\n","idc: Number","[path]: Array - Array containing numbers."],"Return":" Nothing "},"Examples":["tvDelete [101, [0, 0]];","_ctrl tvDelete [0, 0];"],"Additional":["tvAdd","tvClear","tvCollapse","tvCount","tvCurSel","tvData","tvExpand","tvPicture","tvSetCurSel","tvSetData","tvSetPicture","tvSetValue","tvSort","tvSortByValue","tvText","tvValue"]},{"Name":"tvExpand","Desc":" Expands tree item pointed to by the path. IDC means id of parent Tree View. ","Syn":{"Syntax":" tvExpand [idc, [path]] \u003cbr\u003e(Alternate Syntax exists check Read more)","Params":["[idc, [path]]: Array"],"Return":" Nothing "},"Examples":["_ctrl tvExpand [1];"],"Additional":["tvAdd","tvClear","tvCollapse","tvCount","tvCurSel","tvData","tvDelete","tvPicture","tvSetCurSel","tvSetData","tvSetPicture","tvSetValue","tvSort","tvSortByValue","tvText","tvValue"]},{"Name":"tvPicture","Desc":" Returns name of picture from item pointed to by path. IDC means id of parent Tree View. ","Syn":{"Syntax":" tvPicture [idc, [path]] \u003cbr\u003e(Alternate Syntax exists check Read more)","Params":["[idc, [path]]: Array\n\n","idc: Number","[path]: Array - Array containing numbers."],"Return":" String "},"Examples":["tvPicture [101, [0]];","_ctrl tvPicture [0,0,0];"],"Additional":["tvAdd","tvClear","tvCollapse","tvCount","tvCurSel","tvData","tvDelete","tvExpand","tvSetCurSel","tvSetData","tvSetPicture","tvSetValue","tvSort","tvSortByValue","tvText","tvValue"]},{"Name":"tvSetCurSel","Desc":" Sets cursor to given item on given path. IDC means id of parent Tree View. ","Syn":{"Syntax":" tvSetCurSel [idc, [path]] \u003cbr\u003e(Alternate Syntax exists check Read more)","Params":["[idc, [path]]: Array\n\n","idc: Number","[path]: Array - Array containing numbers."],"Return":" Nothing "},"Examples":["tvSetCurSel [101, [0]];","_ctrl tvSetCurSel [0,0,0];"],"Additional":["tvAdd","tvClear","tvCollapse","tvCount","tvCurSel","tvData","tvDelete","tvExpand","tvPicture","tvSetData","tvSetPicture","tvSetValue","tvSort","tvSortByValue","tvText","tvValue"]},{"Name":"tvSetData","Desc":" Sets string data to item on given path. IDC means id of parent Tree View. ","Syn":{"Syntax":" tvSetData [idc, [path], data] \u003cbr\u003e(Alternate Syntax exists check Read more)","Params":["[idc, [path], text]: Array\n\n","idc: Number","[path]: Array - Array containing numbers.","data: String"],"Return":" Nothing "},"Examples":["tvSetData [101, [0], \"Test data\"];","_ctrl tvSetData [ [0,0,0], \"Test data\"];"],"Additional":["tvAdd","tvClear","tvCollapse","tvCount","tvCurSel","tvData","tvDelete","tvExpand","tvPicture","tvSetCurSel","tvSetPicture","tvSetValue","tvSort","tvSortByValue","tvText","tvValue"]},{"Name":"tvSetPicture","Desc":" Sets picture to item selected by path. IDC means id of parent Tree View.\n\nName is picture name. The picture is searched in the mission directory. ","Syn":{"Syntax":" tvSetPicture [idc, [path], name] \u003cbr\u003e(Alternate Syntax exists check Read more)","Params":["[idc, [path], name]: Array\n\n","idc: Number","[path]: Array - Array containing numbers.","name: String"],"Return":" Nothing "},"Examples":["tvSetPicture [101, [0], \"picture\"];","_ctrl tvSetPicture [ [0,0,0], getText (configFile \u003e\u003e \"CfgWeapons\" \u003e\u003e \"optic_NVS\" \u003e\u003e \"picture\")];"],"Additional":["tvAdd","tvClear","tvCollapse","tvCount","tvCurSel","tvData","tvDelete","tvExpand","tvPicture","tvSetCurSel","tvSetData","tvSetValue","tvSort","tvSortByValue","tvText","tvValue"]},{"Name":"tvSetValue","Desc":" Sets scalar data to item on given path. IDC means id of parent Tree View. ","Syn":{"Syntax":" tvSetValue [idc, [path], val] \u003cbr\u003e(Alternate Syntax exists check Read more)","Params":["[idc, [path], val]: Array\n\n","idc: Number","[path]: Array - Array containing numbers.","val: Number"],"Return":" Nothing "},"Examples":["tvSetValue [101, [0], 555];","_ctrl tvSetValue [ [0,0,0], 14];"],"Additional":["tvAdd","tvClear","tvCollapse","tvCount","tvCurSel","tvData","tvDelete","tvExpand","tvPicture","tvSetCurSel","tvSetData","tvSetPicture","tvSort","tvSortByValue","tvText","tvValue"]},{"Name":"tvSort","Desc":" Sorts childrens of given item by data. IDC means id of parent Tree View.\n\nParam reversed is optional. ","Syn":{"Syntax":" _ctrl tvSort [ [path], reversed] ","Params":["_ctrl: Control\n\n","[ [path], reversed]: Array"],"Return":" Nothing "},"Examples":["_ctrl tvSort [ [], false];"],"Additional":["tvAdd","tvClear","tvCollapse","tvCount","tvCurSel","tvData","tvDelete","tvExpand","tvPicture","tvSetCurSel","tvSetData","tvSetPicture","tvSetValue","tvSortByValue","tvText","tvValue"]},{"Name":"tvSortByValue","Desc":" Sorts childrens of given item by value. IDC means id of parent Tree View.\n\nParam reversed is optional. ","Syn":{"Syntax":" _ctrl tvSortByValue [ [path], reversed] ","Params":["_ctrl: Control\n\n","[ [path], reversed]: Array"],"Return":" Nothing "},"Examples":["_ctrl tvSortByValue [ [0], false];"],"Additional":["tvAdd","tvClear","tvCollapse","tvCount","tvCurSel","tvData","tvDelete","tvExpand","tvPicture","tvSetCurSel","tvSetData","tvSetPicture","tvSetValue","tvSort","tvText","tvValue"]},{"Name":"tvText","Desc":" Returns shown text in the item on given path. IDC means id of parent Tree View. ","Syn":{"Syntax":" tvText [idc, [path]] \u003cbr\u003e(Alternate Syntax exists check Read more)","Params":["[idc, [path]]: Array\n\n","idc: Number","[path]: Array - Array containing numbers."],"Return":" String "},"Examples":["tvText [101, [0]];","_ctrl tvText [0,0,0];"],"Additional":["tvAdd","tvClear","tvCollapse","tvCount","tvCurSel","tvData","tvDelete","tvExpand","tvPicture","tvSetCurSel","tvSetData","tvSetPicture","tvSetValue","tvSort","tvSortByValue","tvValue"]},{"Name":"tvValue","Desc":" Returns scalar data from item on given path. IDC means id of parent Tree View. ","Syn":{"Syntax":" tvValue [idc, [path]] \u003cbr\u003e(Alternate Syntax exists check Read more)","Params":["[idc, [path]]: Array\n\n","idc: Number","[path]: Array - Array containing numbers."],"Return":" Number "},"Examples":["tvValue [101, [0]];","_ctrl tvValue [0,0,0];"],"Additional":["tvAdd","tvClear","tvCollapse","tvCount","tvCurSel","tvData","tvDelete","tvExpand","tvPicture","tvSetCurSel","tvSetData","tvSetPicture","tvSetValue","tvSort","tvSortByValue","tvText"]},{"Name":"type","Desc":" Returns a string of a location's class name.","Syn":{"Syntax":" type location ","Params":["location: Location"],"Return":" String "},"Examples":["_locationType = type myLocation"],"Additional":["setType"]},{"Name":"typeName","Desc":" Returns the data type of an expression. \n\nThe type is returned as an all-uppercase string having one of the following values: \"ARRAY\",\"BOOL\",\"CODE\",\"CONFIG\",\"CONTROL\",\"DISPLAY\",\"GROUP\",\"LOCATION\",\"OBJECT\",\n\"SCALAR\",\"SCRIPT\",\n\"SIDE\",\"STRING\",\"TEXT\",\"TEAM_MEMBER\",\"NAMESPACE\". They represent the available data types in ArmA.","Syn":{"Syntax":" String =  typeName anything ","Params":["anything: Anything"],"Return":" String "},"Examples":["_msg = \"hello\"; _result = typeName _msg;  //_result will be \"STRING\"","_unit = player; _result = typeName _unit; //_result becomes \"OBJECT\"","hint typeName 0; //SCALAR\nhint typeName \"\"; //STRING\nhint typeName true; //BOOL\nhint typeName []; //ARRAY\nhint typeName {}; //CODE\nhint typeName objNull; //OBJECT\nhint typeName grpNull; //GROUP\nhint typeName controlNull; //CONTROL\nhint typeName teamMemberNull; //TEAM_MEMBER\nhint typeName displayNull; //DISPLAY\nhint typeName taskNull; //TASK\nhint typeName locationNull; //LOCATION\nhint typeName opfor; //SIDE\nhint typeName parseText \"\"; //TEXT\nhint typeName configFile; //CONFIG\nhint typeName missionNamespace; //NAMESPACE","if (typeName _this != \"ARRAY\") exitWith {\n\u0009hint \"_this is not an array!\"\n}\n//is the same as \nif (typeName _this != typeName []) exitWith {\n\u0009hint \"_this is not an array!\"\n}"],"Additional":["typeOf","isKindOf","isClass","isArray","isNumber","isText","isNil","isNull"]},{"Name":"typeOf","Desc":" Returns the class name of a given object. ","Syn":{"Syntax":" String =  typeOf vehicleName ","Params":["vehicleName: Object"],"Return":" String "},"Examples":["_class = typeOf _mi24"],"Additional":["countType","isKindOf"]},{"Name":"UAVControl","Desc":" Get array with unit connected to vehicle and position in that vehicle.  ","Syn":{"Syntax":" UAVControl uav ","Params":["uav: Object"],"Return":" Array - in format: [unit_object,position_string]"},"Examples":["Example needed"],"Additional":["showUAVFeed","shownUAVFeed","allUnitsUAV","getConnectedUAV","connectTerminalToUAV","isUAVConnected"]},{"Name":"uiNamespace","Desc":" Return the global namespace attached to user interface. ","Syn":{"Syntax":" uiNamespace ","Params":null,"Return":" Namespace "},"Examples":["uiNamespace setVariable [\"LIB_interruptDisplay\", _display];","uiNamespace setVariable [\"myVar\", 46];\nwith uiNamespace do {\n\u0009hint str myVar; //46\n};\n"],"Additional":["Forward Compatibility","parsingNamespace","missionNamespace","with","do"]},{"Name":"uiSleep","Desc":" Suspend execution of script for given uitime.  uiSleep is a sleep method to delay script execution where script time/simulation time is stopped. uiSleep is basically using the system time (uiTime more specifically) and not simulation time. So in the cases where sleep command would get stuck indefinitely, uiSleep can still be used to effectively delay script execution. For example in a mission briefing or an editor or when simulation is paused in general.  ","Syn":{"Syntax":" uiSleep delay ","Params":["delay : Number"],"Return":" Nothing "},"Examples":[" uiSleep 0.5 "],"Additional":["Control Structures","sleep"]},{"Name":"unassignCurator","Desc":" Unassign curator (will destroy both sides of connection). ","Syn":{"Syntax":" unassignCurator curatorObj ","Params":["curatorObj: Object - Curator module."],"Return":" Nothing "},"Examples":["unassignCurator myCurator;"],"Additional":["Curator","assignCurator"]},{"Name":"unassignItem","Desc":" Unassigns existing item and tries to put it into inventory. If there is no space in inventory the item simply disappears. ","Syn":{"Syntax":" unit unassignItem item ","Params":["unit: Object\n\n","item: String"],"Return":" Nothing "},"Examples":["bluforUnit unassignItem \"NVGoggles\";\nbluforUnit removeItem \"NVGoggles\";\nopforUnit unassignItem \"NVGoggles_OPFOR\";\nopforUnit removeItem \"NVGoggles_OPFOR\";\nindependentUnit unassignItem \"NVGoggles_INDEP\";\nindependentUnit removeItem \"NVGoggles_INDEP\";"],"Additional":["assignItem","addItem","removeItem","linkItem","unlinkItem","assignedItems","removeAllAssignedItems"]},{"Name":"unassignTeam","Desc":" Unassigns the unit (in the case of a vehicle its commander unit) from his team. This is equal to unit assignTeam \"MAIN\". ","Syn":{"Syntax":" unassignTeam vehicleName","Params":["vehicleName: Object"],"Return":" Nothing "},"Examples":["unassignTeam _soldier2"],"Additional":["assignTeam","dissolveTeam"]},{"Name":"unassignVehicle","Desc":" Unassigns a unit from whichever vehicle that unit is currently assigned to. If the unit is currently in that vehicle, the group leader will issue an order to disembark. ","Syn":{"Syntax":" unassignVehicle unitName ","Params":["unitName: Object"],"Return":" Nothing "},"Examples":["unassignVehicle player;","{ unassignVehicle _x } forEach crew _vehiclename; Will make all the occupants of a vehicle disembark"],"Additional":["assignAsCargo","assignAsCommander","assignAsDriver","assignAsGunner","assignAsTurret","assignedVehicle","leaveVehicle"]},{"Name":"underwater","Desc":" Return whether object is fully underwater.  ","Syn":{"Syntax":" underwater unit ","Params":["unit: Object"],"Return":" Boolean "},"Examples":["_isSwimming = underwater player;\n"],"Additional":["isTouchingGround"]},{"Name":"uniform","Desc":" Returns name of uniform.  ","Syn":{"Syntax":" uniform unit ","Params":["unit: Object"],"Return":" String "},"Examples":["_uniform = uniform _unit\n"],"Additional":["addUniform","forceAddUniform","isUniformAllowed","removeUniform"]},{"Name":"uniformContainer","Desc":" Returns a cargo container of a unit's uniform. ","Syn":{"Syntax":" uniformContainer unit ","Params":["unit: Object - a soldier"],"Return":" Object - cargo container or \u003cNULL-object\u003e  "},"Examples":["hint str uniformContainer player; //2df7dd00# 163941: dummyweapon.p3d\n","hint str getMagazineCargo uniformContainer player;\n\n[\n\u0009[\"30Rnd_65x39_caseless_mag\"],\n\u0009[3]\n]"],"Additional":["vestContainer","backpackContainer","everyContainer","getChosenCont"]},{"Name":"uniformItems","Desc":" Get array with all items (of any kind, even weapons) from uniform.  ","Syn":{"Syntax":" uniformItems unit ","Params":["unit: Object"],"Return":" Array "},"Examples":["uniformItems player;\n\n[\n\u0009\"FirstAidKit\",\n\u0009\"30Rnd_65x39_caseless_mag\",\n\u0009\"30Rnd_65x39_caseless_mag\",\n\u0009\"30Rnd_65x39_caseless_mag\"\n]"],"Additional":["vestItems","backpackItems"]},{"Name":"uniformMagazines","Desc":"  Get array with all magazines from uniform of the given unit. ","Syn":{"Syntax":" uniformMagazines unit ","Params":["unit : Object"],"Return":" Array "},"Examples":["uniformMagazines player;\n\n[\n\u0009\"6.5mm 30Rnd STANAG Mag(30/30)[id/cr:1/0](3x)\"\n]"],"Additional":["vestMagazines","backpackMagazines","soldierMagazines"]},{"Name":"unitAddons","Desc":" Returns list with addons the unit belongs to. ","Syn":{"Syntax":" unitAddons className  ","Params":["className: String - class name of a unit/vehicle or object"],"Return":" Array - addon names "},"Examples":["hint str unitAddons typeOf player; //[\"A3_Characters_F_BLUFOR\"]"],"Additional":["activateAddons"]},{"Name":"unitBackpack","Desc":" Returns unit's backpack ","Syn":{"Syntax":" unitBackpack unit","Params":["unit: Object"],"Return":" Object "},"Examples":["myBackpack = unitBackpack player","clearMagazineCargo unitBackpack player","player action [\"gear\", unitBackpack player]"],"Additional":["backpackContainer","firstBackpack","backpack","backpackCargo","getBackpackCargo","backpackItems","addBackpack","addBackpackCargo","addBackpackCargoGlobal","removeBackpack","clearBackpackCargo","clearBackpackCargoGlobal","clearAllItemsFromBackpack","loadBackpack","backpackSpaceFor","canAddItemToBackpack","addItemToBackpack","removeItemFromBackpack","everyBackpack"]},{"Name":"unitPos","Desc":" Return the unit position rules.\n\nThe return value is always \"Auto\" unless the unit has gotten a setUnitPos command. In that case the value is the last stance the unit was ordered to.\nAvailable modes are listed at setUnitPos. ","Syn":{"Syntax":" unitPos unit ","Params":["unit: Object"],"Return":" String "},"Examples":["hint str unitPos _unit;"],"Additional":["setUnitPosWeak","setUnitPos","setUnitPosWeak"]},{"Name":"unitReady","Desc":" Check if the unit is ready. Unit is busy when it is given some command like move, until the command is finished. ","Syn":{"Syntax":" Boolean = unitReady unitName","Params":["unitName: Object"],"Return":" Boolean "},"Examples":["_it = unitReady _soldierOne;"],"Additional":["See also needed"]},{"Name":"unitRecoilCoefficient","Desc":" Returns recoil coefficient of a soldier. ","Syn":{"Syntax":" unitRecoilCoefficient soldier ","Params":["soldier: Object"],"Return":" Number "},"Examples":["_myRecoil = unitRecoilCoefficient player"],"Additional":["setUnitRecoilCoefficient"]},{"Name":"units","Desc":" Returns an array with all the units in the group or group of the unit.For a destroyed object an empty array is returned. ","Syn":{"Syntax":" units groupOrunit ","Params":["groupOrunit: Group or Object"],"Return":" Array of Objects "},"Examples":["_myUnitCount = count units group player;","_isInMyGroup = _soldier1 in units player;"],"Additional":["group","allGroups","allUnits","playableUnits","switchableUnits","vehicles"]},{"Name":"unitsBelowHeight","Desc":" Returns units in group/array below passed height. ","Syn":{"Syntax":" units unitsBelowHeight height ","Params":["units: Group or Array of Objects\n\n","height: Number - height above terrain level (ATL)"],"Return":" Array of Objects"},"Examples":[" _allOnGroudUnits = group player unitsBelowHeight 10; "," _units = allUnits unitsBelowHeight 30; "],"Additional":["allUnits","getPosATL","group"]},{"Name":"unlinkItem","Desc":" Unassign and delete existing item from its assigned slot. If item does not exist or is not in the assigned slot, command simply fails.","Syn":{"Syntax":" unit unlinkItem item ","Params":["unit: Object\n\n","item: String"],"Return":" Nothing "},"Examples":["bluforUnit unlinkItem \"NVGoggles\";\nopforUnit unlinkItem \"NVGoggles_OPFOR\";\nindependentUnit unlinkItem \"NVGoggles_INDEP\";"],"Additional":["linkItem","addItem","assignItem","removeItem","unassignItem","assignedItems","removeAllAssignedItems"]},{"Name":"unlockAchievement","Desc":" Unlock the given achievement. ","Syn":{"Syntax":" unlockAchievement name ","Params":["name: String"],"Return":" Boolean "},"Examples":["Example needed"],"Additional":["See also needed"]},{"Name":"unregisterTask","Desc":" Unregister a task type. ","Syn":{"Syntax":" teamMember unregisterTask name ","Params":["teamMember: Team Member\n\n","name: String"],"Return":" Boolean "},"Examples":["player unregisterTask taskName;"],"Additional":["See also needed"]},{"Name":"updateDrawIcon","Desc":" Updates the icon to be shown in 2D editor for the specified editor,object. If maintain size is false,icon will not scale depending on the,scale of the map. If maintain size is a number,the icon will maintain,size if map scale is below that number.  ","Syn":{"Syntax":" map updateDrawIcon [object,string identifier,color,offset,width,height,maintain size?,angle,shadow] ","Params":["map: Control -\n\n","[object,string identifier,color,offset,width,height,maintain size?,angle,shadow]: Array -"],"Return":" Nothing "},"Examples":["Example needed"],"Additional":["See also needed"]},{"Name":"updateMenuItem","Desc":" Sets the text and command for the menu item. index is index as returned from addMenuItem command. command is optional. ","Syn":{"Syntax":" map updateMenuItem [menu item index,text,command] ","Params":["map: Control -\n\n","[menu item index,text,command]: Array -"],"Return":" Nothing "},"Examples":["Example needed"],"Additional":["See also needed"]},{"Name":"updateObjectTree","Desc":" Update the editor object tree. ","Syn":{"Syntax":" updateObjectTree map ","Params":["map: Control -"],"Return":" Nothing "},"Examples":["Example needed"],"Additional":["See also needed"]},{"Name":"useAudioTimeForMoves","Desc":" Switch between elapsed game time and audio time being used as animation timer. Used for audio/animation synchronization. ","Syn":{"Syntax":" soldier useAudioTimeForMoves toggle ","Params":["soldier: Object\n\n","toggle: Boolean"],"Return":" Nothing "},"Examples":["player useAudioTimeForMoves true"],"Additional":["See also needed"]},{"Name":"vectorAdd","Desc":" Adds two 3D vectors. ","Syn":{"Syntax":" vector1 vectorAdd vector2 ","Params":["vector1: Array\n\n","vector2: Array"],"Return":" Array "},"Examples":["hint str (velocity unit1 vectorAdd velocity unit2);"],"Additional":["vectorDiff","vectorCrossProduct","vectorDotProduct","vectorCos","vectorMagnitude","vectorMagnitudeSqr","vectorMultiply","vectorDistance","vectorDistanceSqr","vectorDir","vectorUp","setVectorDir","setVectorUp","setVectorDirAndUp"]},{"Name":"vectorCos","Desc":" Cosine of angle between two 3D vectors. ","Syn":{"Syntax":" vector1 vectorCos vector2 ","Params":["vector1: Array\n\n","vector2: Array"],"Return":" Number "},"Examples":["_cos = getPos player vectorCos [0,0,2];"],"Additional":["vectorAdd","vectorDiff","vectorCrossProduct","vectorDotProduct","vectorMagnitude","vectorMagnitudeSqr","vectorMultiply","vectorDistance","vectorDistanceSqr","vectorDir","vectorUp","setVectorDir","setVectorUp","setVectorDirAndUp","vectorNormalized","vectorFromTo"]},{"Name":"vectorCrossProduct","Desc":" Cross product of two 3D vectors. \nIn layman's terms, if you have a polygon (surface) defined by 3 points, you can find a normal to it (just like terrain surfaceNormal). To invert direction of the normal, swap arguments around. ","Syn":{"Syntax":" vector1 vectorCrossProduct vector2 ","Params":["vector1: [x, y, z] Array\n\n","vector2: [x, y, z] Array"],"Return":" Array -  vector: [x, y, z] \n\n"},"Examples":["_vector = [1,1,1] vectorCrossProduct [2,2,2];","_vectorUp = [0,1,0] vectorCrossProduct [-1,0,0]; //[0,-0,1]"],"Additional":["vectorAdd","vectorDiff","vectorDotProduct","vectorCos","vectorMagnitude","vectorMagnitudeSqr","vectorMultiply","vectorDistance","vectorDistanceSqr","vectorDir","vectorUp","setVectorDir","setVectorUp","setVectorDirAndUp","vectorNormalized","vectorFromTo"]},{"Name":"vectorDiff","Desc":" Subtracts one 3D vector from another. (vector1 - vector2) ","Syn":{"Syntax":" vector1 vectorDiff vector2 ","Params":["vector1: Array\n\n","vector2: Array"],"Return":" Array "},"Examples":["hint str (velocity car vectorDiff velocity bike);"],"Additional":["vectorAdd","vectorCrossProduct","vectorDotProduct","vectorCos","vectorMagnitude","vectorMagnitudeSqr","vectorMultiply","vectorDistance","vectorDistanceSqr","vectorDir","vectorUp","setVectorDir","setVectorUp","setVectorDirAndUp","vectorNormalized","vectorFromTo"]},{"Name":"vectorDir","Desc":" Return object's normalized direction vector in world space ([x,y,z]). \n\n A unit facing North would return [0,1,0]\n\n A unit facing East would return [1,0,0]\n\n A unit facing South would return [0,-1,0]\n\n A unit facing West would return [-1,0,0] ","Syn":{"Syntax":" vectorDir objectName ","Params":["objectName: Object"],"Return":" Array - format Vector3D "},"Examples":["_dirVector = vectorDir _unit;"],"Additional":["vectorDirVisual","vectorUp","setVectorDir","setVectorUp","setVectorDirAndUp","vectorDiff","vectorAdd","vectorMultiply","vectorCrossProduct","vectorDistance","vectorMagnitudeSqr","vectorDistanceSqr","vectorCos","vectorMagnitude","vectorDotProduct","vectorNormalized","vectorFromTo"]},{"Name":"vectorDirVisual","Desc":" Return object's normalized direction vector in world space ([x,y,z]) in render time scope. \n\n A unit facing North would return [0,1,0]\n\n A unit facing East would return [1,0,0]\n\n A unit facing South would return [0,-1,0]\n\n A unit facing West would return [-1,0,0] ","Syn":{"Syntax":" vectorDirVisual objectName ","Params":["objectName: Object"],"Return":" Array - format Vector3D "},"Examples":["_dirVector = vectorDirVisual _unit;"],"Additional":["vectorDir","vectorUpVisual","vectorUp","setVectorDir","setVectorUp","setVectorDirAndUp","vectorDiff","vectorAdd","vectorMultiply","vectorCrossProduct","vectorDistance","vectorMagnitudeSqr","vectorDistanceSqr","vectorCos","vectorMagnitude","vectorDotProduct","vectorNormalized","vectorFromTo"]},{"Name":"vectorDistance","Desc":" Distance between two 3D vectors. ","Syn":{"Syntax":" vector1 vectorDistance vector2 ","Params":["vector1: Array\n\n","vector2: Array"],"Return":" Array "},"Examples":["_euclideanDist = getPosASL player vectorDistance [0,0,0];","(getPosASL _a) vectorDistance (getPosASL _b); /* same as */(getPosATL _a) distance (getPosATL _b);"],"Additional":["vectorAdd","vectorDiff","vectorCrossProduct","vectorDotProduct","vectorCos","vectorMagnitude","vectorMagnitudeSqr","vectorMultiply","vectorDistanceSqr","vectorDir","vectorUp","setVectorDir","setVectorUp","setVectorDirAndUp","distance","vectorNormalized","vectorFromTo"]},{"Name":"vectorDistanceSqr","Desc":" Squared distance between two 3D vectors. ","Syn":{"Syntax":" vector1 vectorDistanceSqr vector2 ","Params":["vector1: Array\n\n","vector2: Array"],"Return":" Array "},"Examples":["_distSqr = getPos player vectorDistanceSqr [0,0,2];"],"Additional":["vectorAdd","vectorDiff","vectorCrossProduct","vectorDotProduct","vectorCos","vectorMagnitude","vectorMagnitudeSqr","vectorMultiply","vectorDistance","vectorDir","vectorUp","setVectorDir","setVectorUp","setVectorDirAndUp","distanceSqr","vectorNormalized","vectorFromTo"]},{"Name":"vectorDotProduct","Desc":" Dot product of two 3D vectors. ","Syn":{"Syntax":" vector1 vectorDotProduct vector2 ","Params":["vector1: Array\n\n","vector2: Array"],"Return":" Number "},"Examples":["_dot = [1,0,1] vectorDotProduct [0,0,2];"],"Additional":["vectorAdd","vectorDiff","vectorCrossProduct","vectorCos","vectorMagnitude","vectorMagnitudeSqr","vectorMultiply","vectorDistance","vectorDistanceSqr","vectorDir","vectorUp","setVectorDir","setVectorUp","setVectorDirAndUp","vectorNormalized","vectorFromTo"]},{"Name":"vectorFromTo","Desc":" Unit vector, equal to direction from vector1 to vector2. In other words this command produces vectorNormalized  between given 2 points. ","Syn":{"Syntax":" vector1 vectorFromTo vector2 ","Params":["vector1: Array\n\n","vector2: Array"],"Return":" Array "},"Examples":["[1,2,3] vectorFromTo [4,5,6]; //[0.57735,0.57735,0.57735]\n\n//is the same as\n\nvectorNormalized ([1,2,3] vectorDiff [4,5,6]); //[0.57735,0.57735,0.57735]\n"],"Additional":["vectorDiff","vectorCrossProduct","vectorDotProduct","vectorCos","vectorMagnitude","vectorMagnitudeSqr","vectorMultiply","vectorDistance","vectorDistanceSqr","vectorDir","vectorUp","setVectorDir","setVectorUp","setVectorDirAndUp","vectorNormalized"]},{"Name":"vectorMagnitude","Desc":"Magnitude of a 3D vector. ","Syn":{"Syntax":" vectorMagnitude vector ","Params":["vector: Array"],"Return":" Number "},"Examples":["_size = vectorMagnitude [0,3,4]; //5"],"Additional":["vectorAdd","vectorDiff","vectorCrossProduct","vectorDotProduct","vectorCos","vectorMagnitudeSqr","vectorMultiply","vectorDistance","vectorDistanceSqr","vectorDir","vectorUp","setVectorDir","setVectorUp","setVectorDirAndUp","vectorNormalized","vectorFromTo"]},{"Name":"vectorMagnitudeSqr","Desc":"Squared magnitude of a 3D vector. ","Syn":{"Syntax":" vectorMagnitudeSqr vector ","Params":["vector: Array"],"Return":" Number "},"Examples":["_sizeSqr = vectorMagnitudeSqr [0,3,4]; //25"],"Additional":["vectorAdd","vectorDiff","vectorCrossProduct","vectorDotProduct","vectorCos","vectorMagnitude","vectorMultiply","vectorDistance","vectorDistanceSqr","vectorDir","vectorUp","setVectorDir","setVectorUp","setVectorDirAndUp","vectorNormalized","vectorFromTo"]},{"Name":"vectorMultiply","Desc":" Multiplies 3D vector by a scalar. ","Syn":{"Syntax":" vector vectorMultiply scalar ","Params":["vector: Array\n\n","scalar: Number"],"Return":" Array "},"Examples":["_newVector = [1,2,3] vectorMultiply 3; //[3,6,9]"],"Additional":["vectorAdd","vectorDiff","vectorCrossProduct","vectorDotProduct","vectorCos","vectorMagnitude","vectorMagnitudeSqr","vectorDistance","vectorDistanceSqr","vectorDir","vectorUp","setVectorDir","setVectorUp","setVectorDirAndUp","vectorNormalized","vectorFromTo"]},{"Name":"vectorNormalized","Desc":" Returns normalized vector (unit vector, vectorMagnitude = 1) of given vector. If given vector is 0 result is a 0 vector as well.  ","Syn":{"Syntax":" vectorNormalized vector ","Params":["vector: Array"],"Return":" Array "},"Examples":["vectorNormalized [12345,7890,38383]; //[0.300481,0.192045,0.934254]\nvectorMagnitude [0.300481,0.192045,0.934254]; //1"],"Additional":["vectorDiff","vectorCrossProduct","vectorDotProduct","vectorCos","vectorMagnitude","vectorMagnitudeSqr","vectorMultiply","vectorDistance","vectorDistanceSqr","vectorDir","vectorUp","setVectorDir","setVectorUp","setVectorDirAndUp","vectorFromTo"]},{"Name":"vectorUp","Desc":" Return object's up vector in world Position coordinates ( [x, y, z] ). ","Syn":{"Syntax":" Array = vectorUp objectName ","Params":["objectName: Object"],"Return":" Array - format Position "},"Examples":["Example needed"],"Additional":["vectorUpVisual","vectorDir","setVectorDir","setVectorUp","setVectorDirAndUp","vectorDiff","vectorAdd","vectorMultiply","vectorCrossProduct","vectorDistance","vectorMagnitudeSqr","vectorDistanceSqr","vectorCos","vectorMagnitude","vectorDotProduct","vectorNormalized","vectorFromTo"]},{"Name":"vectorUpVisual","Desc":" Return object's up vector in world Position coordinates ( [x, y, z] ) in render time scope. ","Syn":{"Syntax":" vectorUpVisual objectName ","Params":["objectName: Object"],"Return":" Array - format Position "},"Examples":["_vUp = vectorUpVisual vehicle player;"],"Additional":["vectorUp","vectorDirVisual","vectorDir","setVectorDir","setVectorUp","setVectorDirAndUp","vectorDiff","vectorAdd","vectorMultiply","vectorCrossProduct","vectorDistance","vectorMagnitudeSqr","vectorDistanceSqr","vectorCos","vectorMagnitude","vectorDotProduct","vectorNormalized","vectorFromTo"]},{"Name":"vehicle","Desc":" Vehicle in which given unit is mounted. If none, unit is returned. ","Syn":{"Syntax":" Object = vehicle unitName ","Params":["unitName: Object"],"Return":" Object "},"Examples":["SQS ? vehicle player != player : hint \"Player is in a vehicle\"","SQF (see Notes)if ( vehicle player != player ) then { hint \"Player is in a vehicle\"; };"],"Additional":["See also needed"]},{"Name":"vehicleChat","Desc":" Type text to vehicle radio channel.\n\nThis function only types text to the list, it does not broadcast the message. If you want the message to show on all computers, you have to execute it on them.\n\nObject parameter must be a vehicle, not a player.\n\nIf you are in a crew seat (i.e. driver, gunner or commander), then it will include that role in the chat name output (Eg: Driver (you_name): \"Message\"). ","Syn":{"Syntax":" vehicleName vehicleChat text ","Params":["vehicleName: Object\n\n","text: String"],"Return":" Nothing "},"Examples":["vehicle player vehicleChat \"Show this text\""],"Additional":["globalChat","groupChat","sideChat"]},{"Name":"vehicleRadio","Desc":" Send message to vehicle radio channel. Message is defined in description.ext. ","Syn":{"Syntax":"  vehicleName vehicleRadio name ","Params":["vehicleName: Object\n\n","name: String"],"Return":" Nothing "},"Examples":["_vehicleOne vehicleRadio \"messageOne\""],"Additional":["See also needed"]},{"Name":"vehicles","Desc":" Returns a list of all vehicles. ","Syn":{"Syntax":" vehicles ","Params":null,"Return":" Array "},"Examples":["_vehicles = vehicles;"],"Additional":["allCurators","allGroups","allDead","playableUnits","switchableUnits","allUnitsUAV","allDeadMen","agents","allUnits"]},{"Name":"vehicleVarName","Desc":" Returns the name of the variable which contains a primary editor reference to this object. This is the variable given in the Insert Unit dialog / name field, in the editor. It can be changed using setVehicleVarName. \nIf object refers to a vehicle that wasn't given a name in the editor, the return value is an empty string, \"\".\nSince it is possible to setVehicleVarName individually on each PC, the value of vehicleVarName returned will be local to the PC on which command is executed. ","Syn":{"Syntax":" vehicleVarName object ","Params":["object: Object"],"Return":" String "},"Examples":["hint vehicleVarName player;"],"Additional":["setVehicleVarName"]},{"Name":"velocity","Desc":" Return velocity (speed vector) of Unit as an array with format [x, z, y].  Units are in metres per second. ","Syn":{"Syntax":" Array = velocity vehicleName ","Params":["vehicleName: Object"],"Return":" Array "},"Examples":["vector = velocity jeep;","? (velocity _plane1 select 2) \u003e 50 : hint \"Aircraft is climbing up too fast!\";"],"Additional":["velocityModelSpace","setVelocity","setVelocityTransformation"]},{"Name":"velocityModelSpace","Desc":" Returns the velocity (speed vector) of the vehicle as an array with format [x, y, z]. Vector is in model space.  ","Syn":{"Syntax":" velocityModelSpace vehicle ","Params":["vehicle: Object"],"Return":" Array "},"Examples":["velocityModelSpace _chopper;\ncomment \"Returns [X (left(-) right(+)), Y (backward(-) forward(+)), Z (down(-) up(+))]\";\n"],"Additional":["velocity","setVelocity","setVelocityTransformation"]},{"Name":"verifySignature","Desc":" Check if file is signed by any key present in game keys folders. Note: On client, it does not check against the keys accepted by server. ","Syn":{"Syntax":" Boolean = verifySignature filename ","Params":["filename: String"],"Return":" Boolean "},"Examples":["verifySignature \"@MyAddon\\Addons\\SomeAddon.pbo\";","verifySignature \"@MyAddon\\Somefnc.dll\";"],"Additional":["ArmA: Addon Signatures"]},{"Name":"vest","Desc":" Returns name of vest.  ","Syn":{"Syntax":" vest unit ","Params":["unit: Object"],"Return":" String "},"Examples":["_myVest = vest player;\n"],"Additional":["removeVest","addVest"]},{"Name":"vestContainer","Desc":" Returns a cargo container of a unit's vest. ","Syn":{"Syntax":" vestContainer unit ","Params":["unit: Object - a soldier"],"Return":" Object - cargo container or \u003cNULL-object\u003e  "},"Examples":["hint str vestContainer player; //2df7d600# 163942: dummyweapon.p3d\n","hint str getMagazineCargo vestContainer player;\n\n[\n\u0009[\n\u0009\u0009\"30Rnd_65x39_caseless_mag\",\n\u0009\u0009\"16Rnd_9x21_Mag\",\n\u0009\u0009\"HandGrenade\",\n\u0009\u0009\"APERSMine_Range_Mag\",\n\u0009\u0009\"SmokeShell\",\n\u0009\u0009\"SmokeShellGreen\",\n\u0009\u0009\"Chemlight_green\"\n\u0009],[\n\u0009\u00092,\n\u0009\u00092,\n\u0009\u00092,\n\u0009\u00093,\n\u0009\u00091,\n\u0009\u00091,\n\u0009\u00092\n\u0009]\n]"],"Additional":["uniformContainer","backpackContainer","everyContainer","getChosenCont"]},{"Name":"vestItems","Desc":" Get array with all items (of any kind, even weapons) from vest.  ","Syn":{"Syntax":" vestItems unit ","Params":["unit: Object"],"Return":" Array "},"Examples":["vestItems player;\n\n[\n\u0009\"30Rnd_65x39_caseless_mag\",\n\u0009\"30Rnd_65x39_caseless_mag\",\n\u0009\"16Rnd_9x21_Mag\",\n\u0009\"16Rnd_9x21_Mag\",\n\u0009\"HandGrenade\",\n\u0009\"HandGrenade\",\n\u0009\"SmokeShell\",\n\u0009\"SmokeShellGreen\",\n\u0009\"Chemlight_green\",\n\u0009\"Chemlight_green\"\n]"],"Additional":["uniformItems","backpackItems"]},{"Name":"vestMagazines","Desc":"  Get array with all magazines from vest of the given unit. ","Syn":{"Syntax":" vestMagazines unit ","Params":["unit : Object"],"Return":" Array "},"Examples":["vestMagazines player;\n\n[\n\u0009\"6.5mm 30Rnd STANAG Mag(30/30)[id/cr:4/0](2x)\",\n\u0009\"9mm 16Rnd Mag(16/16)[id/cr:7/0](2x)\",\n\u0009\"RGO Frag Grenade(1/1)[id/cr:10/0](2x)\",\n\u0009\"Smoke Grenade (White)(1/1)[id/cr:12/0](1x)\",\n\u0009\"Smoke Grenade (Green)(1/1)[id/cr:13/0](1x)\",\n\u0009\"Chemlight (Green)(1/1)[id/cr:14/0](2x)\"\n]"],"Additional":["uniformMagazines","backpackMagazines","soldierMagazines"]},{"Name":"viewDistance","Desc":" Returns the rendering distance. ","Syn":{"Syntax":" viewDistance ","Params":null,"Return":" Number "},"Examples":["hint (\"my view distance is \" + str viewDistance + \" meters\");"],"Additional":["setViewDistance","setTerrainGrid"]},{"Name":"visibleCompass","Desc":" Checks if the player has compass opened and visible ","Syn":{"Syntax":" visibleCompass ","Params":null,"Return":" Boolean "},"Examples":["if (visibleCompass) then {hint \"Compass is visible\"};"],"Additional":["showCompass","shownCompass","visibleGPS","visibleWatch"]},{"Name":"visibleGPS","Desc":" Checks if the player has GPS receiver opened and visible ","Syn":{"Syntax":" visibleGPS ","Params":null,"Return":" Boolean "},"Examples":["if (visibleGPS) then {hint \"GPS is visible\"};"],"Additional":["showGPS","shownGPS","visibleWatch","visibleCompass"]},{"Name":"visibleMap","Desc":" Return true if the main map is shown (active). ","Syn":{"Syntax":" visibleMap ","Params":null,"Return":" Boolean "},"Examples":["if (visibleMap) then {hint \"You're showing the map !\"}"],"Additional":["forceMap","openMap"]},{"Name":"visiblePosition","Desc":" Returns an object's rendered position (z value above surface underneath) in render time scope. Same as getPosVisual ","Syn":{"Syntax":"visiblePosition object ","Params":["object: Object: - name of the object"],"Return":" Array - format Position "},"Examples":["playerRenderedPos = visiblePosition player;"],"Additional":["getPosVisual","getPosATLVisual","getPosASLVisual","visiblePositionASL","position","getPos","getPosATL","getPosASL","getPosASLW"]},{"Name":"visiblePositionASL","Desc":" Returns an object's rendered 3D position ASL (z value above sea level) in render time scope. ","Syn":{"Syntax":"visiblePositionASL object ","Params":["object: Object: - name of the object"],"Return":" Array - format PositionASL "},"Examples":["playerRenderedPosASL = visiblePositionASL player;"],"Additional":["getPosVisual","getPosASLVisual","getPosATLVisual","visiblePosition","position","getPos","getPosATL","getPosASL","getPosASLW"]},{"Name":"visibleWatch","Desc":" Checks if the player has watch opened and visible ","Syn":{"Syntax":" visibleWatch ","Params":null,"Return":" Boolean "},"Examples":["if (visibleWatch) then {hint \"Watch is visible\"};"],"Additional":["showWatch","shownWatch","visibleGPS","visibleCompass"]},{"Name":"waitUntil","Desc":" Suspend execution of function or SQF based script until condition is satisfied.\n\nThis command will loop and call the code inside {} mostly every frame (depends on complexity of condition and overall engine load) until the code returns true. The execution of the rest of the script therefore will be suspended until waitUntil condition is satisfied and the loop is aborted.\n\nBecause of this script suspension use spawn or execVM to safely execute code containing waitUntil. ","Syn":{"Syntax":" waitUntil condition ","Params":["condition: Code"],"Return":" Nothing "},"Examples":["waitUntil { not alive player };","_i = 0; waitUntil { _i = _i + 1; _i \u003e= 100 }; ","waitUntil {sleep 0.1; not alive player };","An on-the-fly custom event handler:\n_myEH = [\"ZoomIn\"] spawn {\n    while { true } do {\n        waitUntil {\n            inputAction (_this select 0) == 1;\n        };\n        diag_log format [\"%1 @ %2\", _this select 0, diag_tickTime];\n    };\n};\nAlthough perhaps better to use onEachFrame, depending on the application."],"Additional":["Control Structures","while"]},{"Name":"waves","Desc":" Return waves value.  ","Syn":{"Syntax":" waves ","Params":null,"Return":" Number "},"Examples":["Example needed"],"Additional":["setWaves"]},{"Name":"waypointAttachedObject","Desc":" Gets the object attached to the waypoint. ","Syn":{"Syntax":" waypointAttachedObject waypoint ","Params":["waypoint:  -"],"Return":" Object "},"Examples":["waypointAttachedObject [groupOne,1]"],"Additional":["waypointAttachObject"]},{"Name":"waypointAttachedVehicle","Desc":" Gets the vehicle attached to the waypoint.\nA vehicle can be attached to a waypoint by\n\ncreating the waypoint on top of the vehicle (in the editor)\n\nusing waypointAttachVehicle ","Syn":{"Syntax":" waypointAttachedVehicle waypoint ","Params":["waypoint: Array - format Waypoint"],"Return":" Object "},"Examples":["waypointAttachedVehicle [groupOne,1]","waypointAttachedVehicle [group player, currentWaypoint group player]"],"Additional":["waypoints","deleteWaypoint","copyWaypoints","setCurrentWaypoint","setWaypointBehaviour","setWaypointCombatMode","setWaypointCompletionRadius","setWaypointDescription","setWaypointFormation","setWaypointHousePosition","setWaypointPosition","setWaypointScript","setWaypointSpeed","setWaypointStatements","setWaypointTimeout","setWaypointType","setWaypointVisible","waypointAttachVehicle","setWaypointLoiterRadius","waypointLoiterRadius","addWaypoint","setWaypointLoiterType","currentWaypoint","attachObject","attachTo","attachedObjects","attachedTo","lightAttachObject","triggerAttachVehicle","attachedObject"]},{"Name":"waypointAttachObject","Desc":" Attaches a static object via it's numeric ID to the given waypoint.\nThe alternative syntax is (at least) available since Arma 2. ","Syn":{"Syntax":" waypoint waypointAttachObject objectID \u003cbr\u003e(Alternate Syntax exists check Read more)","Params":["waypoint: Array - format Waypoint\n\n","objectID: Number"],"Return":" Nothing "},"Examples":["[_grp, 2] waypointAttachObject 1234","_wp = group player addWaypoint [[1907.5,5746.5,0.00144196],0];\n_wp waypointAttachObject ((waypointPosition _wp) nearestObject 66220);"],"Additional":["waypointAttachedObject"]},{"Name":"waypointAttachVehicle","Desc":" Attaches a Unit to the given Waypoint. ","Syn":{"Syntax":" waypoint waypointAttachVehicle vehicleName ","Params":["waypoint: Array - format Waypoint\n\n","vehicleName: Object"],"Return":" Nothing "},"Examples":["[_grp, 2] waypointAttachVehicle vehicle player","[_grp, 2] waypointAttachVehicle _soldier1"],"Additional":["waypoints","deleteWaypoint","copyWaypoints","setCurrentWaypoint","setWaypointBehaviour","setWaypointCombatMode","setWaypointCompletionRadius","setWaypointDescription","setWaypointFormation","setWaypointHousePosition","setWaypointPosition","setWaypointScript","setWaypointSpeed","setWaypointStatements","setWaypointTimeout","setWaypointType","setWaypointVisible","waypointAttachedVehicle","setWaypointLoiterRadius","waypointLoiterRadius","addWaypoint","setWaypointLoiterType","currentWaypoint","attachObject","attachTo","attachedObjects","attachedTo","lightAttachObject","triggerAttachVehicle","attachedObject"]},{"Name":"waypointBehaviour","Desc":" Gets the waypoint behavior. ","Syn":{"Syntax":" waypointBehaviour waypoint ","Params":["waypoint:  -"],"Return":" String "},"Examples":["waypointBehaviour [groupOne,1]"],"Additional":["behaviour description","AIBehaviour","waypoints","setWaypointBehaviour"]},{"Name":"waypointCombatMode","Desc":" Gets the waypoint combat mode. ","Syn":{"Syntax":" waypointCombatMode waypoint ","Params":["waypoint:  -"],"Return":" String "},"Examples":["waypointCombatMode [groupOne,1]"],"Additional":["combat mode description","AI Combat Modes","waypoints","setWaypointCombatMode"]},{"Name":"waypointCompletionRadius","Desc":" Gets the radius around the waypoint where the waypoint is completed. ","Syn":{"Syntax":" waypointCompletionRadius waypoint ","Params":["waypoint:  Array - format Waypoint"],"Return":" Number "},"Examples":["_radius = waypointCompletionRadius [groupOne, 1];"],"Additional":["waypoints","setWaypointCompletionRadius"]},{"Name":"waypointDescription","Desc":" Gets the waypoint description. ","Syn":{"Syntax":" waypointDescription waypoint ","Params":["waypoint:  -"],"Return":" String "},"Examples":["waypointDescription [groupOne,1]"],"Additional":["waypoints","setWaypointDescription"]},{"Name":"waypointFormation","Desc":" Gets the waypoint formation.\n\nPossible values are: \n\n \"NO CHANGE\"\n\n \"COLUMN\"\n\n \"STAG COLUMN\"\n\n \"WEDGE\"\n\n \"ECH LEFT\"\n\n \"ECH RIGHT\"\n\n \"VEE\"\n\n \"LINE\"\n\n \"FILE\"\n\n \"DIAMOND\"\n\n\n","Syn":{"Syntax":" waypointFormation waypoint ","Params":["waypoint:  -"],"Return":" String "},"Examples":["waypointFormation [groupOne,1]"],"Additional":["formations description","waypoints","setWaypointFormation"]},{"Name":"waypointHousePosition","Desc":" Gets the house position assigned to the waypoint. ","Syn":{"Syntax":" waypointHousePosition waypoint ","Params":["waypoint:  -"],"Return":" Number "},"Examples":["waypointHousePosition [groupOne,1]"],"Additional":["waypoints","setWaypointHousePosition"]},{"Name":"waypointLoiterRadius","Desc":" Gets the waypoint loiter radius. Waypoint uses format Waypoint. ","Syn":{"Syntax":"  waypointLoiterRadius Waypoint","Params":["Waypoint: Waypoint"],"Return":"  Number "},"Examples":["_radius = waypointLoiterRadius [groupOne, 1];"],"Additional":["waypoints","deleteWaypoint","copyWaypoints","setCurrentWaypoint","setWaypointBehaviour","setWaypointCombatMode","setWaypointCompletionRadius","setWaypointDescription","setWaypointFormation","setWaypointHousePosition","setWaypointPosition","setWaypointScript","setWaypointSpeed","setWaypointStatements","setWaypointTimeout","setWaypointType","setWaypointVisible","waypointAttachVehicle","waypointAttachedVehicle","setWaypointLoiterRadius","addWaypoint","setWaypointLoiterType","currentWaypoint","waypointSpeed","setWPPos"]},{"Name":"waypointLoiterType","Desc":" Gets the waypoint loiter type. Waypoint uses format Waypoint. ","Syn":{"Syntax":"  waypointLoiterType Waypoint","Params":["Waypoint: Waypoint"],"Return":"  String "},"Examples":["_type = waypointLoiterRadius [groupOne, 1]"],"Additional":["See also needed"]},{"Name":"waypointName","Desc":" Gets the waypoint name.  ","Syn":{"Syntax":" waypointName waypoint ","Params":["waypoint: Waypoint"],"Return":" String "},"Examples":["Example needed"],"Additional":["deleteWaypoint","copyWaypoints","setCurrentWaypoint","setWaypointBehaviour","setWaypointCombatMode","setWaypointCompletionRadius","setWaypointDescription","setWaypointFormation","setWaypointHousePosition","setWaypointPosition","setWaypointScript","setWaypointSpeed","setWaypointStatements","setWaypointTimeout","setWaypointType","setWaypointVisible","waypointAttachVehicle","waypointAttachedVehicle","setWaypointLoiterRadius","waypointLoiterRadius","addWaypoint","setWaypointLoiterType","waypoints","waypointSpeed","setWPPos"]},{"Name":"waypointPosition","Desc":" Get Waypoint's  Position. Note: This function is identical to getWPPos. ","Syn":{"Syntax":" Array = waypointPosition waypoint ","Params":["waypoint: Array - format Waypoint"],"Return":" Array - format Position "},"Examples":["_wPos = waypointPosition [_groupOne, 1];"],"Additional":["waypoints","setWaypointPosition","setWPPos"]},{"Name":"waypoints","Desc":" Returns an array of waypoints for the specified unit/group. ","Syn":{"Syntax":" Array = waypoints groupName ","Params":["groupName: Group"],"Return":" Array of waypoints each in format Waypoint "},"Examples":["waypoints player;","_wPosArray = waypoints group10; \n\ncould return [[EAST 1-1-A,0],[EAST 1-1-A,1],[EAST 1-1-A,2]]"],"Additional":["deleteWaypoint","copyWaypoints","setCurrentWaypoint","setWaypointBehaviour","setWaypointCombatMode","setWaypointCompletionRadius","setWaypointDescription","setWaypointFormation","setWaypointHousePosition","setWaypointPosition","setWaypointScript","setWaypointSpeed","setWaypointStatements","setWaypointTimeout","setWaypointType","setWaypointVisible","waypointAttachVehicle","waypointAttachedVehicle","setWaypointLoiterRadius","waypointLoiterRadius","addWaypoint","setWaypointLoiterType","waypointSpeed","setWPPos","waypointName"]},{"Name":"waypointScript","Desc":" Gets the waypoint script. ","Syn":{"Syntax":" waypointScript waypoint ","Params":["waypoint:  -"],"Return":" String "},"Examples":["waypointScript [groupOne,1]"],"Additional":["waypoints","setWaypointScript"]},{"Name":"waypointShow","Desc":" Gets the waypoint show/hide status.\n\nPossible values are:\n\n \"NEVER\" - never show it\n\n \"EASY\" - show only in cadet mode\n\n \"ALWAYS\" - always show it\n\n \"ERROR\" - when set to any different string \n\n\n ","Syn":{"Syntax":" waypointShow waypoint ","Params":["waypoint: Array - format Waypoint"],"Return":" String - see description "},"Examples":["_wpShow = waypointShow [groupOne,1];"],"Additional":["showWaypoint","waypoints","waypointVisible","setWaypointVisible"]},{"Name":"waypointSpeed","Desc":" Gets the waypoint speed.\n\nPossible values are:\n\n \"UNCHANGED\"\n\n \"LIMITED\"\n\n \"NORMAL\"\n\n \"FULL\"\n\n\n","Syn":{"Syntax":" waypointSpeed waypoint ","Params":["waypoint: Array - format Waypoint"],"Return":" String - see description "},"Examples":["_speed = waypointSpeed [groupOne,1];"],"Additional":["deleteWaypoint","copyWaypoints","setCurrentWaypoint","setWaypointBehaviour","setWaypointCombatMode","setWaypointCompletionRadius","setWaypointDescription","setWaypointFormation","setWaypointHousePosition","setWaypointPosition","setWaypointScript","setWaypointSpeed","setWaypointStatements","setWaypointTimeout","setWaypointType","setWaypointVisible","waypointAttachVehicle","waypointAttachedVehicle","setWaypointLoiterRadius","waypointLoiterRadius","addWaypoint","setWaypointLoiterType","waypoints","setWPPos","waypointName"]},{"Name":"waypointStatements","Desc":" Gets the waypoint statements. ","Syn":{"Syntax":" waypointStatements waypoint ","Params":["waypoint:  -"],"Return":" Array "},"Examples":["waypointStatements [groupOne,1]"],"Additional":["waypoints","setWaypointStatements"]},{"Name":"waypointTimeout","Desc":" Gets the waypoint timeout values. ","Syn":{"Syntax":" waypointTimeout waypoint ","Params":["waypoint:  -"],"Return":" Array "},"Examples":["waypointTimeout [groupOne,1]"],"Additional":["waypoints","setWaypointTimeout"]},{"Name":"waypointTimeoutCurrent","Desc":" Gets the current waypoint timeout or -1 if countdown is not in progress. ","Syn":{"Syntax":" waypointTimeoutCurrent waypoint ","Params":["waypoint: Group"],"Return":" Number "},"Examples":["_timeout = waypointTimeoutCurrent groupOne;"],"Additional":["waypoints","deleteWaypoint","copyWaypoints","setCurrentWaypoint","setWaypointBehaviour","setWaypointCombatMode","setWaypointCompletionRadius","setWaypointDescription","setWaypointFormation","setWaypointHousePosition","setWaypointPosition","setWaypointScript","setWaypointSpeed","setWaypointStatements","setWaypointType","setWaypointVisible","waypointAttachVehicle","waypointAttachedVehicle","setWaypointLoiterRadius","waypointLoiterRadius","addWaypoint","setWaypointLoiterType","setWaypointTimeout"]},{"Name":"waypointType","Desc":" Gets the waypoint type.\n\nType can be:\n\n \"MOVE\"\n\n \"DESTROY\"\n\n \"GETIN\"\n\n \"SAD\"\n\n \"JOIN\"\n\n \"LEADER\"\n\n \"GETOUT\"\n\n \"CYCLE\"\n\n \"LOAD\"\n\n \"UNLOAD\"\n\n \"TR UNLOAD\"\n\n \"HOLD\"\n\n \"SENTRY\"\n\n \"GUARD\"\n\n \"TALK\"\n\n \"SCRIPTED\"\n\n \"SUPPORT\"\n\n \"GETIN NEAREST\"\n\n \"DISMISS\"\n\n \"AND\"\n\n \"OR\"\n\n\n\nMore details at Waypoint types.\n","Syn":{"Syntax":" waypointType waypoint ","Params":["waypoint:  -"],"Return":" String "},"Examples":["waypointType [groupOne,1],\n"],"Additional":["waypoints description","Waypoint types","waypoints","setWaypointType"]},{"Name":"waypointVisible","Desc":" Returns the visibility of the waypoint.\n\nReturns 0 (Number) for a non valid waypoint. ","Syn":{"Syntax":" waypointVisible waypoint ","Params":["waypoint: Array - format Waypoint"],"Return":" Boolean "},"Examples":["_visible = waypointVisible [groupOne, 1];","_visible = waypointVisible [group player, currentWayPoint (group player)];"],"Additional":["waypoints","setWaypointVisible"]},{"Name":"weaponAccessories","Desc":" Get array with all items linked to a given weapon.  ","Syn":{"Syntax":" unit weaponAccessories weapon ","Params":["unit: Object\n\n","weapon: String"],"Return":" Array "},"Examples":["Example needed"],"Additional":["See also needed"]},{"Name":"weaponCargo","Desc":" Get array with weapons from ammo box (or any general weapon holder container).  ","Syn":{"Syntax":" weaponCargo box ","Params":["box: Object"],"Return":" Array - Format: [\"WeaponType1\", \"WeaponType1\", \"WeaponType2\"...]"},"Examples":["hint str weaponCargo backpackContainer player;"],"Additional":["getWeaponCargo","addWeaponCargo","addWeaponCargoGlobal","clearWeaponCargo","clearWeaponCargoGlobal"]},{"Name":"weaponDirection","Desc":" Returns the direction that the vehicle weapon is aiming in.\n\nFor addons the weapon name must be an entry in CfgWeapons.\n\nReturns an array in format [x, y, z] ","Syn":{"Syntax":" vehicleName weaponDirection weaponName ","Params":["vehicleName: Object\n\n","weaponName: String"],"Return":" Array - format Vector3D "},"Examples":["_weaponVectorDir = player weaponDirection currentWeapon player;"],"Additional":["eyeDirection"]},{"Name":"weaponLowered","Desc":" True if given soldier's weapon is lowered.  ","Syn":{"Syntax":" weaponLowered unit ","Params":["unit: Object"],"Return":" Boolean "},"Examples":["Example needed"],"Additional":["See also needed"]},{"Name":"weapons","Desc":" Returns array of names of all Unit's weapons. ","Syn":{"Syntax":" Array = weapons vehicleName ","Params":["vehicleName: Object"],"Return":"  Array of weapon names. "},"Examples":["_wArray = weapons player;"],"Additional":["magazines","weaponsTurret","assignedVehicleRole","Link to game weapons category","weaponState","ArmA:_Weapons"]},{"Name":"weaponsItems","Desc":" Returns an array with subarrays contains class names and also names of connected items of all the vehicle's weapons.\nSince Arma 3 v1.21.124406 it is possible to query weapon holders and ammo crates with this command. ","Syn":{"Syntax":" weaponsItems vehicle ","Params":["vehicle: Object - unit or vehicle"],"Return":" Array "},"Examples":["hint str weaponsItems player;\n\n[\n\u0009[\u0009\u0009\u0009\u0009\u0009\u0009//=PRIMARY=\n\u0009\u0009\"arifle_MX_ACO_pointer_F\",\u0009\u0009//weapon\n\u0009\u0009\"muzzle_snds_H\",\u0009\u0009\u0009//suppressor\n\u0009\u0009\"acc_pointer_IR\",\u0009\u0009\u0009//laser\n\u0009\u0009\"optic_Aco\",\u0009\u0009\u0009\u0009//optics\n\u0009\u0009[\u0009\u0009\u0009\u0009\u0009//loaded magazine\n\u0009\u0009\u0009\"30Rnd_65x39_caseless_mag\",\u0009//mag type\n\u0009\u0009\u000930\u0009\u0009\u0009\u0009//mag ammo count\n\u0009\u0009]\n\u0009],\n\u0009[\u0009\u0009\u0009\u0009\u0009\u0009//=SECONDARY=\n\u0009\u0009\"launch_NLAW_F\",\n\u0009\u0009\"\",\n\u0009\u0009\"\",\n\u0009\u0009\"\",\n\u0009\u0009[\n\u0009\u0009\u0009\"NLAW_F\",\n\u0009\u0009\u00091\n\u0009\u0009]\n\u0009],\n\u0009[\u0009\u0009\u0009\u0009\u0009\u0009//=HANDGUN=\n\u0009\u0009\"hgun_P07_F\",\n\u0009\u0009\"muzzle_snds_L\",\n\u0009\u0009\"\",\n\u0009\u0009\"\",\n\u0009\u0009[\n\u0009\u0009\u0009\"16Rnd_9x21_Mag\",\n\u0009\u0009\u000911\n\u0009\u0009]\n\u0009]\n]\n","hint str weaponsItems vehicle player;\n[\n\u0009[\n\u0009\u0009\"gatling_30mm\",\n\u0009\u0009\"\",\n\u0009\u0009\"\",\n\u0009\u0009\"\",\n\u0009\u0009[\n\u0009\u0009\u0009\"250Rnd_30mm_HE_shells\",\n\u0009\u0009\u0009250\n\u0009\u0009]\n\u0009],\n\u0009[\n\u0009\u0009\"missiles_SCALPEL\",\n\u0009\u0009\"\",\n\u0009\u0009\"\",\n\u0009\u0009\"\",\n\u0009\u0009[\n\u0009\u0009\u0009\"8Rnd_LG_scalpel\",\n\u0009\u0009\u00098\n\u0009\u0009]\n\u0009],\n\u0009[\n\u0009\u0009\"rockets_Skyfire\",\n\u0009\u0009\"\",\n\u0009\u0009\"\",\n\u0009\u0009\"\",\n\u0009\u0009[\n\u0009\u0009\u0009\"38Rnd_80mm_rockets\",\n\u0009\u0009\u000938\n\u0009\u0009]\n\u0009]\n]\n\n"],"Additional":["weaponsItemsCargo","primaryWeaponItems","secondaryWeaponItems","handgunItems","addPrimaryWeaponItem","addSecondaryWeaponItem","addHandgunItem","primaryWeapon","secondaryWeapon","handgunWeapon"]},{"Name":"weaponsItemsCargo","Desc":"Returns an array with subarrays contains class names and also names of connected items of all the vehicle's cargo weapons like [['arifle_MX_ACO_pointer_F','','acc_pointer_IR','optic_Aco',['30Rnd_65x39_caseless_mag',29]]]. ","Syn":{"Syntax":" weaponsItemsCargo vehicle ","Params":["vehicle: Object"],"Return":" Array "},"Examples":["weaponsItemsCargo vehicle player;","weaponsItemsCargo _weaponholder;"],"Additional":["weaponsItems"]},{"Name":"weaponState","Desc":" Returns the current weapon state as an array of strings in the following format [WeaponName, MuzzleName, ModeName, MagazineName, AmmoCount] (AmmoCount is Number). ","Syn":{"Syntax":" weaponState unitName \u003cbr\u003e(Alternate Syntax exists check Read more)","Params":["unitName: Object"],"Return":" Array: [\"m16a4\",\"m16a4\",\"Single\",\"30Rnd_556x45_Stanag\",29] "},"Examples":["_weaponStatePlayer = weaponState player;","_weaponStateVehiclePlayer = weaponState [ vehicle player,[0]];","_SecondPositionOfThefirstTurret = weaponState [ vehicle player,[0,0,1]];"],"Additional":["weapons"]},{"Name":"weaponsTurret","Desc":" Returns all weapons of given turret. Use turret path [-1] for driver's turret. ","Syn":{"Syntax":" vehicle weaponsTurret turretPath","Params":["vehicle: Object\n\n","turretPath: Array"],"Return":" Array of Strings "},"Examples":["_weapons = vehicle player weaponsTurret [0,0]","_weapons = _tank weaponsTurret [0]","_driverWeapon = _ka50pilot weaponsTurret [-1]","_weaponsForAnyTurrentPosition = (vehicle player) weaponsTurret ((assignedVehicleRole player) select 1)"],"Additional":["addMagazineTurret","magazinesTurret","removeMagazinesTurret","removeMagazineTurret","weapons","assignedVehicleRole","addWeaponTurret","removeWeaponTurret","turretLocal"]},{"Name":"west","Desc":" West side. ","Syn":{"Syntax":" west ","Params":null,"Return":" Side "},"Examples":["SQS:?((side _unit) == west) : hint \"This is a western unit!\"","SQF:if ((side _unit) == west) then {\n    hint \"This is a western unit!\";\n};"],"Additional":["side","east","resistance","civilian"]},{"Name":"WFSideText","Desc":" Returns the unlocalized text value of an object's side / a group's side or a side as:\n\n\n \"East\" \n\n \"West\"\n\n \"Resistance\"\n\n \"Civilian\"\n\n \"Unknown\" ","Syn":{"Syntax":" WFSideText objectOrGroupOrSide ","Params":["objectOrGroupOrSide: Object, Group or Side"],"Return":" String - unlocalized text value of objectOrGroupOrSide's Side "},"Examples":["WFSideText player;","WFSideText group player;","WFSideText west"],"Additional":["side","localize","isLocalized"]},{"Name":"while","Desc":" Repeats Code while condition is true. A part of while do construct. ","Syn":{"Syntax":" while condition ","Params":["condition: Code"],"Return":" While Type "},"Examples":["while {a \u003c b} do {a = a + 1};","A practical example: Repair all members of a group to such a level that they are able to stand up: {\n    while {!canStand _x \u0026\u0026 alive _x} do {\n        _x setDamage (damage _x - 0.01);\n    };\n} forEach units group unitname;"],"Additional":["Control Structures","waitUntil","for do","for forspec"]},{"Name":"wind","Desc":" Returns the current wind vector (in m/s) as array [x, z, y]. ","Syn":{"Syntax":" wind ","Params":null,"Return":" Array "},"Examples":["_windarray = wind;"],"Additional":["setWind","windDir"]},{"Name":"windDir","Desc":" Returns the current wind azimut.  ","Syn":{"Syntax":" windDir ","Params":null,"Return":" Number "},"Examples":["Example needed"],"Additional":["wind"]},{"Name":"windStr","Desc":" Returns the current wind strength.  ","Syn":{"Syntax":" windStr ","Params":null,"Return":" Number "},"Examples":["10 setWindStr (0.5 * windStr);"],"Additional":["setWindStr","gusts","setGusts","setWind","setWindDir","setWindForce","wind","windDir"]},{"Name":"with","Desc":" Execute the code inside the given namespace. ","Syn":{"Syntax":" with nameSpace do code","Params":["namespace: Namespace\n\n","code: Code"],"Return":" Anything "},"Examples":["with missionNamespace do {global = global + 1;};"],"Additional":["Forward Compatibility","missionNamespace","uiNamespace","parsingNamespace"]},{"Name":"worldName","Desc":" Return the name of the currently loaded world.  ","Syn":{"Syntax":"String =  worldName ","Params":null,"Return":" String "},"Examples":["_name = worldName"],"Additional":["See also needed"]},{"Name":"worldToModel","Desc":" Converts position from world space to object model space. ","Syn":{"Syntax":" Array =  objectName worldToModel worldPos ","Params":["objectName: Object\n\n","worldPos: Array - format PositionAGL"],"Return":" Array "},"Examples":["Example needed"],"Additional":["worldToModelVisual","modelToWorld"]},{"Name":"worldToModelVisual","Desc":" Converts position from world space to object model space in render time scope.  ","Syn":{"Syntax":" objectName worldToModelVisual worldPos ","Params":["objectName: Object\n\n","worldPos: Array - format PositionAGL"],"Return":" Array "},"Examples":["unit worldToModelVisual position tank;"],"Additional":["worldToModel","modelToWorldVisual","modelToWorld"]},{"Name":"worldToScreen","Desc":" Converts position in world space into screen (UI) space. If a specified position is not within the current screen view, an empty array is returned. ","Syn":{"Syntax":" worldToScreen position ","Params":["position: Array - World position 2D [x,y] or 3D [x,y,z] (z is ignored)"],"Return":" Array - Screen position [x,y] (see SafeZone for more info) "},"Examples":["_screenPos = worldToScreen getPos soldier1;","_screenPos = worldToScreen (player modelToWorld [0,10,0]);"],"Additional":["screenToWorld","SafeZone"]},{"Name":"BIS_fnc_3Dcredits","Desc":" Displays structured text in 3D world.\n\nGUI layer for indicator is 2733.","Syn":{"Syntax":" [text,position,minDis,fadeDis] call BIS_fnc_3Dcredits  ","Params":["text: Structured Text\n\n","position: Array in format Position","minDis (Optional): Number - distance in which text is displayed (default is 20)","fadeDis (Optional): Number - distance in which text starts fading again (default is 1.5)"],"Return":" Nothing "},"Examples":["[\"\u003ct size='2'\u003eHello World\u003c/t\u003e\", getPos helloWorld, 15, 0] spawn BIS_fnc_3Dcredits;","[\"\u003cimg size='2' image='img\\myImage.paa'/\u003e\u003cbr /\u003eSome text on the second line\", getPos someObject] spawn BIS_fnc_3Dcredits;"],"Additional":["call","Functions Library"]},{"Name":"BIS_fnc_AAN","Desc":" Function that adds an AAN overlay to the screen, with one headline and a rolling text on the bottom. ","Syn":{"Syntax":" [parseText \"Headline\", parseText \"Rolling Text\"] spawn BIS_fnc_AAN;","Params":["Structured Text - Structured text for the Headline and Rolling Text."],"Return":" Nothing "},"Examples":["0 = [parseText \"AAN live in Takistan\", parseText \"Weather coming up hot and steamy - Takistan shelled again from border area\"] spawn BIS_fnc_AAN;"],"Additional":["call","parseText"]},{"Name":"BIS_fnc_absSpeed","Desc":" \n//------------------\n// Purpose: This function returns the absolute speed of a vehicle in km/h\n// Arguments: vehicle\n// Return: float\n//\n// Revision History:\n// 26/11/06 0.1 - First cut\n//------------------\n\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 2","1.00"],"Additional":null},{"Name":"BIS_fnc_activateAddons","Desc":" /*\n\n\u0009Description:\n\u0009Activate addons upon mission start.\n\u0009Doesn't work when the mission is already running.\n\n\u0009Parameter(s):\n\u0009\u00090: ARRAY of STRINGs - addon clases from CfgPatches or object classes from CfgVehicles\n\n\u0009Returns:\n\u0009ARRAY of STRINGS - activated addons\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_addClassOO","Desc":" /*\n\u0009File: fn_addClassOO.sqf\n\n\u0009Description:\n\u0009Registering a class for the OO scripting shell\n\n\u0009Parameter(s):\n\u0009_this: String (class in CfgOO)\n\u0009\n\u0009Returns:\n\u0009-\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_addCommMenuItem","Desc":" Add communication menu to the given unit.\n\nThe item will be available in the Communication menu and visualized in comm menu icon area.","Syn":{"Syntax":" [owner,itemClass] call BIS_fnc_addCommMenuItem; ","Params":["owner: Object - object to which the item belongs to\n\n","itemClass: String - CfgCommunicationMenu class"],"Return":" Number - item ID, used in BIS_fnc_removeCommMenuItem "},"Examples":["_supportHeli = [player,\"Support_Request_CAS_Heli\"] call BIS_fnc_addCommMenuItem;"],"Additional":["call","BIS_fnc_removeCommMenuItem","Arma 3 Communication_Menu"]},{"Name":"BIS_fnc_addCuratorAreaFromTrigger","Desc":" /*\n\n\u0009Description:\n\u0009Add curator editing / camera area based on triggers\n\n\u0009Parameter(s):\n\u0009\u00090: OBJECT - curator logic\n\u0009\u00091: ARRAY - list of triggers\n\u0009\u00092: checked position (for supported data types, see BIS_fnc_position)\n\u0009\u00093: BOOL - true to use a trigger nearest to the position, false to use all triggers which the position is in\n\u0009\u00094: BOOL - true to add editing area\n\u0009\u00094: BOOL - true to add camera area\n\n\u0009Returns:\n\u0009BOOL\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.16"],"Additional":null},{"Name":"BIS_fnc_addCuratorChallenge","Desc":" /*\n\n\u0009Description:\n\u0009Add challenges for curator to complete\n\n\u0009Parameter(s):\n\u0009\u00090: OBJECT - curator\n\u0009\u00091 (Optional): ARRAY - list of supported challenges from CfgCuratorChallenges (default: all challenges)\n\u0009\u00092 (Optional): NUMBER - number of added challenges (default: 3)\n\u0009\u00093 (Optional): CODE - condition for challenges to remain active {default: true}\n\u0009\u00094 (optional):\n\u0009\u0009\u0009CODE or [CODE,STRING] - code executed upon completing all challenges and reward description\n\u0009\u0009\u0009Arguments passed to the code are:\n\u0009\u0009\u0009\u00090: OBJECT - curator\n\u0009\u0009\u0009\u00091: NUMBER - number of previously completed challenges by given curator\n\u0009\u0009\u0009\u00092: STRING - parent task ID\n\u0009\u00095 (Optional): STRING - parent task ID\n\n\u0009Returns:\n\u0009STRING - ID of parent task under which all challenge tasks are\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.16"],"Additional":null},{"Name":"BIS_fnc_addCuratorIcon","Desc":" /*\n\n\u0009Description:\n\u0009Add an icon displayed in curator interface\n\n\u0009Parameter(s):\n\u0009\u00090: OBJECT - curator module\n\u0009\u00091: ARRAY - icon params (see drawIcon3D scripting command for its format)\n\u0009\u00092 (Optional) - true to show the icon in the map\n\u0009\u00092 (Optional) - true to show the icon in 3D scene\n\n\u0009Returns:\n\u0009NUMBER - icon ID, used in BIS_fnc_removeCuratorIcon\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.16"],"Additional":null},{"Name":"BIS_fnc_addEvidence","Desc":" /*******************************************************************************\n *\n *\u0009version: \u0009\u00091.0\n *\u0009name:\u0009\u0009\u0009Add evidence\n *\u0009description:\u0009add an evidnce value to global campaign variable \u0009\n *\u0009paramater:\u0009\u0009evidence variable name (defined in init.sqf of campaign\n \u0009\u0009\u0009\u0009\u0009mission C1) or simply number (scalar)\n *\u0009return value:\u0009none \u0009\n * \n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 2","1.00"],"Additional":null},{"Name":"BIS_fnc_addRespawnInventory","Desc":" Add a respawn inventory for respawn menu.\n\nAvailable loadouts are defined in CfgRespawnInventory in Description.ext.\n ","Syn":{"Syntax":" [\u003ctarget\u003e,\u003cinventory\u003e] call BIS_fnc_addRespawnInventory; \u003cbr\u003e(Alternate Syntax exists check Read more)","Params":["target: Receiver of the respawn loadout\n\n Namespace - use missionNamespace to add the loadout to everyone\n\n Side\n\n Group\n\n Object\n\n\n\n"," Namespace - use missionNamespace to add the loadout to everyone\n"," Side\n"," Group\n"," Object\n","inventory: String - CfgRespawnInventory class"],"Return":" Array in format [target,id] (used in BIS_fnc_removeRespawnInventory) "},"Examples":["[west, \"WEST1\"] call BIS_fnc_addRespawnInventory;","myRespawnInventory = [missionNamespace,\"ATSniper\"] call BIS_fnc_addRespawnInventory;"],"Additional":["call","BIS_fnc_removeRespawnInventory","Arma 3 Respawn"]},{"Name":"BIS_fnc_addRespawnPosition","Desc":" Add a respawn position for respawn menu. ","Syn":{"Syntax":" [\u003ctarget\u003e,\u003cposition\u003e] call BIS_fnc_addRespawnPosition; ","Params":["target: Receiver of the respawn position\n\nNamespace - use missionNamespace to add the position to everyone\n\nSide\n\nGroup\n\nObject\n\n\n\n","position:\n\nArray - format Position\n\nObject - specific object. When some crew positions are available and unlocked, players will be respawned on them, otherwise they will appear around the object.\n\nString - marker name"],"Return":" Array - format [target,id] (used in BIS_fnc_removeRespawnPosition) "},"Examples":["[west, myRespawnAPC] call BIS_fnc_addRespawnPosition;","myRespawn = [missionNamespace,\"arena\"] call BIS_fnc_addRespawnPosition;"],"Additional":["call","BIS_fnc_removeRespawnPosition","Arma 3 Respawn"]},{"Name":"BIS_fnc_addScore","Desc":" Adds a set amount of points to the score of a unit (MP only) ","Syn":{"Syntax":" [object, number] call BIS_fnc_addScore ","Params":["Object - Unit to add score to.\n\n","Number - Number of points (score) to add to unit."],"Return":" Number - Score added to unit "},"Examples":["[player,20] call BIS_fnc_addScore;"],"Additional":["call","addScore"]},{"Name":"BIS_fnc_addScriptedEventHandler","Desc":" /*\n\n\u0009Description:\n\u0009Add scripted event handler\n\n\u0009Parameter(s):\n\u0009\u00090: NAMESPACE, OBJECT, GROUP or LOCATION - namespace in which handler is saved\n\u0009\u00091: STRING - handler name\n\u0009\u00092: CODE or STRING - code executed upon calling\n\n\u0009Returns:\n\u0009NUMBER - handler ID\n*/\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_addStackedEventHandler","Desc":" Stack an event handler. Possible event handlers are:\n\n \"onEachFrame\"\n\n \"onPlayerConnected\"\n\n \"onPlayerDisconnected\"\n\n \"onMapSingleClick\"\n\n \"onPreloadStarted\"\n\n \"onPreloadFinished\" ","Syn":{"Syntax":" [key, event, code, arguments] call BIS_fnc_addStackedEventHandler; ","Params":["key: String - unique identifier\n\n","event: String - event handler type, see Description","code: String or Code","arguments: Anything - arguments to make available in code"],"Return":" String "},"Examples":["[\"someId\", \"onEachFrame\", {\n\u0009hintSilent str time;\n}] call BIS_fnc_addStackedEventHandler;","[\"someId\", \"onEachFrame\", {\n\u0009hintSilent str _this;\n}, \"Hello world!\"] call BIS_fnc_addStackedEventHandler;"],"Additional":["call","BIS_fnc_removeStackedEventHandler"]},{"Name":"BIS_fnc_addSupportLink","Desc":" /*\n\n\u0009Description:\n\u0009Adds support types during a mission.\n\n\u0009Parameter(s):\n\u0009_this select 0: OBJECT - Requester unit\n\u0009_this select 1: OBJECT - Requester module\n\u0009_this select 2: OBJECT - Provider module\n\n\u0009Returns:\n\u0009nothing\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_addToPairs","Desc":" /*\n\n\u0009Description:\n\u0009Adds given value to pair array, stored under unique key.\n\n\u0009If value is found:\n\u0009a) both values are scalars: values are added and stored as a single scalar\n\u0009b) one or both values are array: values are added and stored as a single array\n\u0009c) anything else: an array is created and both values are stored there\n\n\u0009Remarks:\n\u0009Function by default modifies the input array. This can be overrriden by setting '_copyArray' param to true.\n\n\u0009Syntax:\n\u0009_pairs:array = [_pairs:array,_key:string,_value:number,_copyArray:bool] call BIS_fnc_addToPairs;\n\n\u0009Example:\n\u0009[[\"apple\",3],[\"pear\",12]] = [[[\"apple\",3],[\"pear\",2]],\"pear\",10] call BIS_fnc_addToPairs;\n\u0009[[\"apple\",1],[\"pear\",2]] = [[[\"apple\",3],[\"pear\",2]],\"apple\",-2] call BIS_fnc_addToPairs;\n\u0009[[\"greetings\",[\"Hello!\",\"Hi!\"]],[\"rudewords\",\"\"]] = [[[\"greetings\",\"Hello!\"],[\"rudewords\",\"\"]],\"greetings\",\"Hi!\"] call BIS_fnc_addToPairs;\n*/\n\n#define SCALAR\u0009\u0009(typeName 123)\n#define ARRAY\u0009\u0009(typeName [])\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","0.76"],"Additional":null},{"Name":"BIS_fnc_addVirtualBackpackCargo","Desc":" /*\n\n\u0009Description:\n\u0009Add virtual backpacks to an object (e.g., ammo box).\n\u0009Virtual items can be selected in the Arsenal.\n\n\u0009Parameter(s):\n\u0009\u00090: OBJECT - objct to which backpacks will be added\n\u0009\u00091: STRING or ARRAY of STRINGs - backpack class(es) to be added\n\u0009\u00092 (Optional): BOOL - true to add backpacks globally (default: false)\n\u0009\u00093 (Optional): BOOL - true to add Arsenal action (default: true)\n\n\u0009Returns:\n\u0009ARRAY of ARRAYs - all virtual items within the object's space in format [\u003citems\u003e,\u003cweapons\u003e,\u003cmagazines\u003e,\u003cbackpacks\u003e]\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_addVirtualItemCargo","Desc":" /*\n\n\u0009Description:\n\u0009Add virtual items to an object (e.g., ammo box).\n\u0009Virtual items can be selected in the Arsenal.\n\n\u0009Parameter(s):\n\u0009\u00090: OBJECT - objct to which items will be added\n\u0009\u00091: STRING or ARRAY of STRINGs - item class(es) to be added\n\u0009\u00092 (Optional): BOOL - true to add items globally (default: false)\n\u0009\u00093 (Optional): BOOL - true to add Arsenal action (default: true)\n\n\u0009Returns:\n\u0009ARRAY of ARRAYs - all virtual items within the object's space in format [\u003citems\u003e,\u003cweapons\u003e,\u003cmagazines\u003e,\u003cbackpacks\u003e]\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_addVirtualMagazineCargo","Desc":" /*\n\n\u0009Description:\n\u0009Add virtual magazines to an object (e.g., ammo box).\n\u0009Virtual items can be selected in the Arsenal.\n\n\u0009Parameter(s):\n\u0009\u00090: OBJECT - objct to which magazines will be added\n\u0009\u00091: STRING or ARRAY of STRINGs - magazine class(es) to be added\n\u0009\u00092 (Optional): BOOL - true to add magazines globally (default: false)\n\u0009\u00093 (Optional): BOOL - true to add Arsenal action (default: true)\n\n\u0009Returns:\n\u0009ARRAY of ARRAYs - all virtual items within the object's space in format [\u003citems\u003e,\u003cweapons\u003e,\u003cmagazines\u003e,\u003cbackpacks\u003e]\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_addVirtualWeaponCargo","Desc":" /*\n\n\u0009Description:\n\u0009Add virtual weapons to an object (e.g., ammo box).\n\u0009Virtual items can be selected in the Arsenal.\n\n\u0009Parameter(s):\n\u0009\u00090: OBJECT - objct to which weapons will be added\n\u0009\u00091: STRING or ARRAY of STRINGs - weapon class(es) to be added\n\u0009\u00092 (Optional): BOOL - true to add weapons globally (default: false)\n\u0009\u00093 (Optional): BOOL - true to add Arsenal action (default: true)\n\n\u0009Returns:\n\u0009ARRAY of ARRAYs - all virtual items within the object's space in format [\u003citems\u003e,\u003cweapons\u003e,\u003cmagazines\u003e,\u003cbackpacks\u003e]\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_addWeapon","Desc":" Adds a weapon to the specified unit, with magazine classnames taken from the weapon's config (in CfgWeapons).\nThis function does not remove magazines nor weapons prior to adding the new weapon, so that still has to be done manually. ","Syn":{"Syntax":" [unit, \"weaponClassName\", 1, 0] call BIS_fnc_addWeapon;","Params":["Object - Unit to add weapon to.\n\n","String - Weapon Classname (found in CfgWeapons).","Number - Amount of magazines.","Number - Index of magazine name that should be used, OR:\nString - Magazine name to be used.\nOptional parameter, default 0. Found in magazines={} array."],"Return":" String - Primary(!) muzzle name of weapon. "},"Examples":["newGun = [player, \"arifle_SDAR_F\", 6] call BIS_fnc_addWeapon; // Adds 6 dual-purpose magazines and the underwater gun to the player.","newGun = [bluforUnit, \"arifle_Mk20_F\", 2, 1] call BIS_fnc_addWeapon; // Adds 2 30 Rnd Stanag Tracer (Red) magazines to bluforUnit, with an Mk20_F.","newGun = [player, \"arifle_Mk20_F\", 2, \"30Rnd_556x45_Stanag_Tracer_red\"] call BIS_fnc_addWeapon; // Alternative syntax of second example, with magazine name written out."],"Additional":["call","addWeapon","selectWeapon"]},{"Name":"BIS_fnc_advHint","Desc":" Shows advanced hint to player.","Syn":{"Syntax":" [classes, duration1, condition1, duration2, condition2, showing, onlyFullHint, onlyOnce] call BIS_fnc_advHint; ","Params":["classes: Array - Array in format [\"hint main class\",\"hint class\"]\n\n","duration1: Number (Optional) - Duration of short hint in seconds","condition1: String (Optional) - Condition for hiding of short hint","duration2: Number (Optional) - Duration of full hint in seconds","condition2: String (Optional) - Condition for hiding of full hint","showing: Boolean (Optional) - True shows hint even if tutorial hints are disabled in game settings (!!!not implemented yet!!!)","onlyFullHint: Boolean (Optional) - True shows full hint without using of short hint","onlyOnce: Boolean (Optional) - Show the hint in mission only once (true) or multiple times (false)"],"Return":" Nothing  "},"Examples":["[[\"Common\", \"GPS\"]] call BIS_fnc_advHint;"],"Additional":["call","Advanced Hints (Field Manual)"]},{"Name":"BIS_fnc_advHintArg","Desc":" /*\n\u0009File: advHintArg.sqf\n\n\u0009Description:\n\u0009Advanced hint arguments preprocess.\n\n\u0009Parameter(s):\n\u0009_this select 0: Array - arguments\n\u0009_this select 1: String - HTML color code (for highlighted text)\n\u0009_this select 2; String (optional) - Class of hint (in case of warning or error is used in logged info)\n\u0009\n\u0009Returned value:\n\u0009Array with arguments\n*/\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_advHintCall","Desc":" /*\n\u0009File: advHintCall.sqf\n\n\u0009Description:\n\u0009Advanced hint call, creates hint itself\n\n\u0009Parameter(s):\n\u0009_this select 0: Bool - True for full text, false for small hint notification\n\u0009This function gets parameters from variable BIS_fnc_advHint_hint:\n\u0009BIS_fnc_advHint_hint select 0: String - Class of hint\n\u0009BIS_fnc_advHint_hint select 1: String - Structured text of full hint\n\u0009BIS_fnc_advHint_hint select 2: String - Structured text of short hint\n\u0009BIS_fnc_advHint_hint select 3: Number - Duration of short hint in seconds\n\u0009BIS_fnc_advHint_hint select 4: String - Condition for hiding of short hint (default: \"false\")\n\u0009BIS_fnc_advHint_hint select 5: Number - Duration of full hint in seconds\n\u0009BIS_fnc_advHint_hint select 6: String - Condition for hiding of full hint (default: \"false\")\n\u0009BIS_fnc_advHint_hint select 7: Bool - True shows directly full hint (default: false)\n\u0009BIS_fnc_advHint_hint select 8: Bool - True for using of sound (default: true)\n\n\u0009Returned value:\n\u0009None\n*/\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_advHintCredits","Desc":" /*\n\u0009File: advHintCredits.sqf\n\n\u0009Description:\n\u0009Advanced hint credits preprocessor.\n\n\u0009Parameter(s):\n\u0009None.\n\u0009\n\u0009Returned value:\n\u0009String - credits.\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_alignTabs","Desc":" /*\n\n\u0009Description:\n\u0009Align two columns divided by tabs\n\n\u0009Parameter(s):\n\u0009\u00090: ARRAY in format\n\u0009\u0009\u0009[\n\u0009\u0009\u0009\u0009[\"left column 1\",\"righ column 1\"],\n\u0009\u0009\u0009\u0009[\"left column 2\",\"righ column 2\"],\n\u0009\u0009\u0009\u0009...\n\u0009\u0009\u0009]\n\n\u0009Returns:\n\u0009STRING\n*/\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_allSynchronizedObjects","Desc":" /*\n\n\u0009Description:\n\u0009Return all synchronized objects, including those synced to synced and so on.\n\n\u0009Parameter(s):\n\u0009\u00090: OBJECT - starting object\n\u0009\u00091: STRING or ARRAY of STRINGs (Optional) - object types on which searching stops\n\n\u0009Returns:\n\u0009ARRAY of OBJECTs\n*/\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_ambientAnim","Desc":" /*\n\n\u0009Description:\n\u0009Play set of ambient animations on given unit.\n\n\u0009Remarks:\n\u0009* Can handle several different anims and auto-switching between them.\n\u0009* Detects nearby units with the same animation set and tries to select different animations.\n\u0009* A game logic is created on units position and animated unit is then attached to it, to prevent possible problems, like player pushing units around.\n\u0009* The unit can be snapped to a set snappoint to prevent game from repositioning the unit.\n\u0009\u0009* The snappoint is automatically detected, snap distance is 2 meters (in top-down view, ignoring vertical info).\n\u0009\u0009* To position unit vertically, move its snappoint up/down.\n\u0009\u0009* A snappoint is a (cyan colored) helper \"Sign_Pointer_Cyan_F\".\n\u0009\u0009* This is extremely handy if the unit needs to be placed near object(s) - like on chair near a table.\n\n\u0009Parameter(s):\n\u00090: OBJECT - unit the anim \u0026 gear changes are going to be applied to\n\u00091: STRING - animation set id, describing what the unit's action looks like.\n\u0009   \u003e \"STAND\"\u0009\u0009- standing still, slightly turning to the sides, with rifle weapon\n\u0009   \u003e \"STAND_IA\"\u0009\u0009- standing still, slightly turning to the sides, with rifle weapon\n\u0009   \u003e \"STAND_U1-3\"\u0009- standing still, slightly turning to the sides, no weapon\n\u0009   \u003e \"WATCH1-2\"\u0009\u0009- standing and turning around, with rifle weapon\n\u0009   \u003e \"GUARD\"\u0009\u0009- standing still, like on guard with hands behing the body\n\u0009   \u003e \"LISTEN_BRIEFING\"  - standing still, hands behind back, recieving briefing / commands, no rifle.\n\u0009   \u003e \"LEAN_ON_TABLE\"\u0009- standing while leaning on the table\n\u0009   \u003e \"LEAN\"\u0009\u0009- standing while leaning (on wall)\n\u0009   \u003e \"BRIEFING\"\u0009\u0009- standing, playing ambient briefing loop with occasional random moves\n\u0009   \u003e \"BRIEFING_POINT_LEFT\"\u0009- contains 1 extra pointing animation, pointing left \u0026 high\n\u0009   \u003e \"BRIEFING_POINT_RIGHT\"\u0009- contains 1 extra pointing animation, pointing right \u0026 high\n\u0009   \u003e \"BRIEFING_POINT_TABLE\"\u0009- contains 1 extra pointing animation, pointing front \u0026 low, like at table\n\u0009   \u003e \"SIT1-3\"\u0009\u0009- sitting on chair or bench, with rifle weapon\n\u0009   \u003e \"SIT_U1-3\"\u0009\u0009- sitting on chair or bench, without weapon\n\u0009   \u003e \"SIT_AT_TABLE\"\u0009- sitting @ table, hands on table\n\u0009   \u003e \"SIT_HIGH1-2\" \u0009- sitting on taller objects like a table or wall, legs not touching the ground. Needs a rifle!\n\u0009   \u003e \"SIT_LOW\"\u0009\u0009- sitting on the ground, with weapon.\n\u0009   \u003e \"SIT_LOW_U\"\u0009- sitting on the ground, without weapon.\n\u0009   \u003e \"SIT_SAD1-2\"\u0009- sitting on a chair, looking very sad.\n\u0009   \u003e \"KNEEL\"\u0009\u0009- kneeling, with weapon.\n\u0009   \u003e \"PRONE_INJURED_U1-2\" - laying wounded, back on the ground, wothout weapon\n\u0009   \u003e \"PRONE_INJURED\"\u0009- laying wounded \u0026 still, back on the ground, with or without weapon\n\u0009   \u003e \"KNEEL_TREAT\"\u0009- kneeling while treating the wounded\n\u0009   \u003e \"REPAIR_VEH_PRONE\"\u0009- repairing vehicle while laying on the ground (under the vehicle)\n\u0009   \u003e \"REPAIR_VEH_KNEEL\"\u0009- repairing vehicle while kneeling (like changing a wheel)\n\u0009   \u003e \"REPAIR_VEH_STAND\"\u0009- repairing/cleaning a vehicle while standing\n\n\u00092: STRING - equipment level id, describing how heavily is the unit equipped.\n\u0009   \u003e \"NONE\"  \u0009\u0009- no goggles, headgear, vest, weapon\n\u0009   \u003e \"LIGHT\"  \u0009\u0009- no goggles, headgear, vest\n\u0009   \u003e \"MEDIUM\" \u0009\u0009- no goggles, headgear\n\u0009   \u003e \"FULL\"  \u0009\u0009- no goggles\n\u0009   \u003e \"ASIS\"  \u0009\u0009- no touches to the gear\n\u0009   \u003e \"RANDOM\" (default)\u0009- gear is randomized according to the animation set\n\n\u00093: OBJECT \u0009- object unit to snap to; function won't try to search for the closest snappoint and will use this snappoint instead\n\u00094: BOOL\u0009\u0009- function will try to interpolate into the ambient animation, if the interpolateTo link exists\n\u0009\u0009\u0009- it is not officialy supported, so it's disabled by default\n\u0009\u0009\u0009- works only for transitions from (some) default A3 stances to sets \"STAND\", \"SIT_LOW\" and \"KNEEL\"\n\n\u0009Returns:\n\u0009-\n\n\u0009Example:\n\u0009[this,\"SIT_HIGH2\"] call BIS_fnc_ambientAnim;\n*/\n\n//surpress the debuglog output\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_ambientAnimCombat","Desc":" /*\n\n\u0009Description:\n\u0009Play set of ambient animations on given unit AND allows the unit to leave the ambient state and engage enemy or move away.\n\n\u0009Remarks:\n\u0009* Function controls BIS_fnc_ambientAnim; check that function [Remarks] section for more info of how to use it.\n\u0009* Unit automatically leaves the animation loop if there is an enemy in 300m he knows about.\n\n\u0009Parameter(s):\n\u00090: OBJECT - unit the anim \u0026 gear changes are going to be applied to\n\u00091: STRING (optional, default \"STAND\") - animation set id, describing what the unit's action looks like.\n\u0009   \u003e \"STAND\" \u0009\u0009\u0009- standing still, slightly turning to the sides. Needs a rifle!\n\u0009   \u003e \"STAND_IA\"\u0009\u0009\u0009- default a3 animations for standing, rifle lowered\n\u0009   \u003e \"SIT_LOW\"\u0009\u0009\u0009- sitting on the ground, with weapon.\n\u0009   \u003e \"KNEEL\"\u0009\u0009\u0009- kneeling, with weapon.\n\u0009   \u003e \"LEAN\"\u0009\u0009\u0009- standing while leaning (on wall)\n\u0009   \u003e \"WATCH\"/\"WATCH1\"/\"WATCH2\"\u0009- standing and turning around\n\n\u00092: STRING (optional, default \"RANDOM\") - equipment level id, describing how heavily is the unit equipped.\n\u0009   \u003e \"NONE\"  \u0009\u0009- no goggles, headgear, vest, weapon\n\u0009   \u003e \"LIGHT\"  \u0009\u0009- no goggles, headgear, vest\n\u0009   \u003e \"MEDIUM\" \u0009\u0009- no goggles, headgear\n\u0009   \u003e \"FULL\"  \u0009\u0009- no goggles\n\u0009   \u003e \"ASIS\" (default)\u0009- no touches to the gear\n\u0009   \u003e \"RANDOM\" \u0009\u0009- gear is randomized according to the animation set\n\n\u00093: CODE or STRING (optional, default {false}) - condition that if true frees the unit from the animation loop\n\n\u00094: STRING (optional, default \"COMBAT\") - behaviour the unit should go to, when freed.\n\n\u0009Returns:\n\u0009-\n\n\u0009Example:\n\u0009[this,\"STAND\",\"FULL\",{(player distance _this) \u003c 5}] call BIS_fnc_ambientAnimCombat;\n*/\n\n//do the immediate operations ----------------------------------------------------------------------\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_ambientAnimGetParams","Desc":" /*\n\n\u0009Description:\n\u0009Feeds params of given animset to BIS_fnc_ambientAnim.\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_ambientBlacklist","Desc":" /*\n\n\u0009Description:\n\u0009Check if area is blacklisted.\n\u0009Blacklist triggers are to be named 'bis_ambientBlacklist_#', where # is number from 0 to 99.\n\n\u0009Parameter(s):\n\u0009_this select 0:\u0009BIS_fnc_position compatible position - check if position is blacklisted\n\u0009\u0009\u0009NUMBER - initialize blacklisted areas\n\n\u0009Returns:\n\u0009BOOL - true when in blacklisted area\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Take On Helicopters","1.00"],"Additional":null},{"Name":"BIS_fnc_ambientBlacklistAdd","Desc":" /*\n\n\u0009Description:\n\u0009Add a new ambient blacklist trigger\n\n\u0009Parameter(s):\n\u0009_this select 0:\u0009OBJECT - trigger\n\n\u0009Returns:\n\u0009BOOL - true when added correctly\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Take On Helicopters","1.00"],"Additional":null},{"Name":"BIS_fnc_ambientBoats","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Take On Helicopters","1.00"],"Additional":null},{"Name":"BIS_fnc_ambientFlyby","Desc":" Spawns an air unit that moves from point A to point B, never engaging nor being engaged. It is set as captive and will despawn once it reaches it's destination. ","Syn":{"Syntax":" [[0,0,0],[100,100,100],100,\"NORMAL\",\"B_Heli_Light_01_F\",WEST] call BIS_fnc_ambientFlyby; ","Params":["Array - Array containing start position where air unit spawns. Format [x,y,z].\n\n","Array - Array containing end position where air unit moves to and despawns. Format [x,y,z].","Number - Height at which air unit will spawn and fly.","String - String detailing speed at which air unit travels. Possible values \"LIMITED\", \"NORMAL\" and \"FULL\".","String - Vehicle classname of air unit to spawn. Viewable in CfgVehicles.","Side - Side which vehicle belongs to."],"Return":" Boolean - True if function executed successfully. "},"Examples":["ambientFly = [[200,200,200],[250,250,250]] call BIS_fnc_ambientFlyBy; // This spawns a Littlebird that flies from position 200,200,200 to 250,250,250 at height 100 and Normal speed.","ambientFly = [getposATL player, getposATL opforUnit, 400, \"FULL\", \"B_Heli_Light_01_Armed_F\", WEST] call BIS_fnc_ambientFlyBy;"],"Additional":["call","See also needed"]},{"Name":"BIS_fnc_ambientHelicopters","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Take On Helicopters","1.00"],"Additional":null},{"Name":"BIS_fnc_ambientPlanes","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Take On Helicopters","1.00"],"Additional":null},{"Name":"BIS_fnc_ambientPostprocess","Desc":" /*\n\n\u0009Description:\n\u0009Initialize default postprocess effects\n\n\u0009Parameter(s):\n\u0009_this select 0:\u0009STRING - world name (default: current world)\n\u0009_this select 1:\u0009STRING or BOOL - post-process type or true for all of them (default: true)\n\n\u0009Returns:\n\u0009ARRAY - list of initialized effects with values\n*/\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Take On Helicopters","1.00"],"Additional":null},{"Name":"BIS_fnc_animalBehaviour","Desc":" /*\n\n\u0009Description:\n\u0009Animal behaviour control. Called by Animals_F\\Data\\Scripts\\main.fsm.\n\u0009\n\u0009Parameter(s):\n\u0009_this select 0:\u0009OBJECT - Controlled animal.\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_animalSiteSpawn","Desc":" /*\n\u0009File: fn_animalSiteSpawn.sqf\n\n\u0009Description:\n\u0009Spawn of animals in animal sites.\n\n\u0009Parameter(s):\n\u0009_this select 0: Object - Site.\n\u0009_this select 1: Array - Spawned config classes.\n\u0009_this select 2: Number - Animals are spawned/deleted when the player is close/far to the site than this distance (in meters).\n\n\u0009Returned value:\n\u0009None\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_animateTaskWaypoint","Desc":" Plays an animation that pushes the active task waypoint up and down. ","Syn":{"Syntax":" param call BIS_fnc_animateTaskWaypoint; ","Params":["Object - Unit that should have animations played."],"Return":" Nothing "},"Examples":["[player] call BIS_fnc_animateTaskWaypoint;"],"Additional":["call","See also needed"]},{"Name":"BIS_fnc_animType","Desc":" Function that returns a categorized array using a single string with the animation name. ","Syn":{"Syntax":" param call BIS_fnc_animType; ","Params":["String - Animation name."],"Return":" Array - Sorted arrays within an array with details about animation. "},"Examples":["animType = [\"AmovPsitMstpSrasWrflDnon\"] call BIS_fnc_animType; // Returns [[\"Action\",\"Move\"],[\"Pose\",\"Sit\"],[\"Movement\",\"Stop\"],[\"Stance\",\"Raised\"],[\"Hand item\",\"Rifle\"],[\"Direction\",\"Not specified\"]]"],"Additional":["call","See also needed"]},{"Name":"BIS_fnc_animViewer","Desc":" /*\n\n\u0009Description:\n\u0009Splendid animation viewer\n\n\u0009Parameter(s):\n\u0009\u00090 (Optional): ARRAY - Forced animation in format [\u003cunit class\u003e, \u003canimation class\u003e]\n\n\u0009Returns: N/A\n*/\n\n#define A3\n//#define DZ\n\n//--- RscDisplayAnimViewer\n#define IDC_RSCDISPLAYANIMVIEWER_TITLE\u0009\u00091000\n#define IDC_RSCDISPLAYANIMVIEWER_BACKGROUND\u00091001\n#define IDC_RSCDISPLAYANIMVIEWER_DESCRIPTION\u00091100\n#define IDC_RSCDISPLAYANIMVIEWER_MISC\u0009\u00091500\n#define IDC_RSCDISPLAYANIMVIEWER_ACTION\u0009\u00092100\n#define IDC_RSCDISPLAYANIMVIEWER_POSE\u0009\u00092101\n#define IDC_RSCDISPLAYANIMVIEWER_MOVEMENT\u00092102\n#define IDC_RSCDISPLAYANIMVIEWER_STANCE\u0009\u00092103\n#define IDC_RSCDISPLAYANIMVIEWER_ITEM\u0009\u00092104\n#define IDC_RSCDISPLAYANIMVIEWER_SOLDIER\u00092106\n#define IDC_RSCDISPLAYANIMVIEWER_BUTTONCLOSE\u00092700\n\n#define IDC_RSCDISPLAYANIMVIEWER_MOUSEAREA\u0009999\n#define IDC_RSCDISPLAYANIMVIEWER\u0009\u00091320\n\n#define DIK_ESCAPE          0x01\n#define DIK_X               0x2D\n#define DIK_C               0x2E\n#define DIK_V               0x2F\n#define DIK_MINUS           0x0C\n#define DIK_EQUALS          0x0D\n\n#define CONTROL\u0009(_display displayctrl _idc)\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_areEqual","Desc":" /************************************************************\n\u0009Are Equal\n\nParameters: [anything1, anything2, anything3, ...]\n\nTwo or more elements can be passed.\n\nThis returns true if all of the passed data elements are of the same\ntype and value.\n\nNOTES:\n\n-This function is an improvement over the == operator, because\nit can handle any data type in any combination.\n\n-For arrays, it returns true if both arrays hold the same elements\nin the same order.\n\n-If both values are undefined / nil / null, then this function will return\ntrue.\n\n-WARNING: EXTREMELY large strings (\u003e4k) or compiled code (from\na file, for example) might not be properly compared, if they are\nonly different near the end of the file.\n\n************************************************************/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 2","1.00"],"Additional":null},{"Name":"BIS_fnc_areFriendly","Desc":" Function that takes two Sides and compares them, returning whether they're friendly or not. ","Syn":{"Syntax":" [side,side] call BIS_fnc_areFriendly; ","Params":["Side - First side, will be compared to second side.\n\n","Side - Second side, will be compared to first side."],"Return":" Boolean - True if sides are friendly to eachother, false if not. "},"Examples":["areFriendly = [WEST, EAST] call BIS_fnc_areFriendly; //Compares WEST and EAST and checks if they are friendly to eachother. "],"Additional":["call","getFriend"]},{"Name":"BIS_fnc_arithmeticMean","Desc":" /************************************************************\n\u0009Arithmetic Mean\n\nReturns the arithmetic mean (average) of an array of numbers\n************************************************************/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 2","1.00"],"Additional":null},{"Name":"BIS_fnc_arrayCompare","Desc":" \n//------------------\n// Purpose: This function checks if two arrays are containing the same elements in the same order\n// Arguments: [array1, array2]\n// Return: boolean\n//\n// Revision History:\n// 24/11/06 0.1 - First cut\n// 8 Feb 08 - [Andrew] Deprecated this function; it has been superceded by BIS_fnc_areEqual\n//            which can compare ALL data types (this one fails with certain types)\n//------------------\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 2","1.00"],"Additional":null},{"Name":"BIS_fnc_arrayFindDeep","Desc":" \n//------------------\n// Purpose: This function searches an element in an array and returns the first occurence\n// Arguments: [array, element]\n// Return: anything\n//\n// Revision History:\n// 24/11/06 0.1 - First cut\n//------------------\n\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 2","1.00"],"Additional":null},{"Name":"BIS_fnc_arrayInsert","Desc":" /************************************************************\n\u0009Array Insert\n\nParameters: [base array, insert array, index]\nReturs: [array]\n\nInserts the elements of one array into another, at a specified\nindex.\n\nNeither arrays are touched by reference, a new array is returned.\n\nExample: [[0,1,2,3,4], [\"a\",\"b\",\"c\"], 1] call BIS_fnc_arrayInsert\nReturns: [0,\"a\",\"b\",\"c\",1,2,3,4]\n************************************************************/\n\n//extract parameters\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 2","1.00"],"Additional":null},{"Name":"BIS_fnc_arrayPop","Desc":" /************************************************************\n\u0009Array Pop\n\nThis function removes the last (rightmost) element of an array and returns it.\nThe array is passed by reference so changes inside the function will be reflected\noutside of it.\n\nExample:\narray = [1,2,3,4]\nelement = array call BIS_fnc_arrayPop\n\narray is now [1,2,3]\nelement is now 4\n************************************************************/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 2","1.00"],"Additional":null},{"Name":"BIS_fnc_arrayPush","Desc":" /************************************************************\n\u0009Array Push\n\nThis function adds an element to the end of an array and returns the array.\nThe array is passed by reference so changes inside the function will be reflected\noutside of it.\n\nExample:\narray = [1,2,3]\n[array, 4] call BIS_fnc_arrayPush\narray2 = [[5,6,7], [8]] call BIS_fnc_arrayPush\n\narray is now [1,2,3,4]\narray2 is now [5,6,7,[8]]\n************************************************************/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki)\n\n\n\n\n \n\n Use pushBack instead.\n ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 2","1.00"],"Additional":null},{"Name":"BIS_fnc_arrayPushStack","Desc":" /************************************************************\n\u0009Array Push Stack\n\nThis function is similar to the array push function; however,\nit pushes the contents of an array onto the stack array.\n\nExample:\n\nExample:\narray = [1,2,3]\n[array, [4,5,6]] call BIS_fnc_arrayPushStack\n\narray2 = [[5,6,7], [8,[9],10]] call BIS_fnc_arrayPushStack\n\narray is now [1,2,3,4,5,6]\narray2 is now [5,6,7,8,[9],10]\n************************************************************/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 2","1.00"],"Additional":null},{"Name":"BIS_fnc_arrayShift","Desc":" /************************************************************\n\u0009Array Shift\n\nThis function removes the first (leftmost) element of an array and returns it.\nThe array is passed by reference so changes inside the function will be reflected\noutside of it.\n\nExample:\narray = [1,2,3,4]\nelement = [array] call BIS_fnc_arrayShift\n\narray is now [2,3,4]\nelement is now 1\n************************************************************/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 2","1.00"],"Additional":null},{"Name":"BIS_fnc_arrayShuffle","Desc":" /*\n\u0009\n\u0009Description:\n\u0009This returns a new array with randomized order of elements from input array\n\u0009\n\u0009Parameters:\n\u0009_this: ARRAY\n\u0009\n\u0009Returns:\n\u0009ARRAY\n\u0009\n\u0009Example:\n\u0009[1, 2, 3] call BIS_fnc_arrayShuffle\n\u0009Returns: [2, 3, 1] (For example)\n*/\n\n//The container\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","0.58"],"Additional":null},{"Name":"BIS_fnc_arrayUnShift","Desc":" /************************************************************\n\u0009Array UnShift\n\nThis function adds an element to the beginning of an array and returns the array.\nThe array is passed by reference so changes inside the function will be reflected\noutside of it.\n\nExample:\narray = [2,3,4]\n[array, 1] call BIS_fnc_ArrayUnshift\narray2 = [[6,7,8], 5] call BIS_fnc_ArrayUnshift\n\narray is now [1,2,3,4]\narray2 is now [5,6,7,8]\n************************************************************/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 2","1.00"],"Additional":null},{"Name":"BIS_fnc_arsenal","Desc":" /*\n\u0009Author: Karel Moricky\n\n\u0009Description:\n\u0009Splendid arsenal viewer\n\n\u0009Parameter(s):\n\n\u0009\u00090: STRING - mode\n\u0009\u00091: ANY - params (see below)\n\n\u0009Modes:\n\u0009\u0009\"Open\" - Open the Arsenal\n\u0009\u0009\u00090 (Optional): BOOL - true to open full Arsenal, with all categories and items available (default: false)\n\n\u0009\u0009\"Preload\" - Preload item configs for Arsenal (without preloading, configs are parsed the first time Arsenal is opened)\n\u0009\u0009\u0009No params\n\n\u0009\u0009\"AmmoboxInit\" - Add virtual ammobox. Action to access the Arsenal will be added automatically on all clients.\n\u0009\u0009\u00090: OBJECT - ammobox\n\u0009\u0009\u00091 (Optional): BOOL - true to make all weapons and items in the game available in the box (default: false)\n\u0009\u0009\u00092 (Optional): Condition for showing the Arsenal action (default: {true})\n\u0009\u0009\u0009\u0009      Passed arguments are the same as in addAction condition, i.e., _target - the box, _this - caller\n\n\u0009\u0009\"AmmoboxExit\" - Remove virtual ammobox\n\u0009\u0009\u00090: OBJECT - ammobox\n\n\n\u0009Returns:\n\u0009NOTHING\n */\n ","Syn":{"Syntax":" [mode,params] call BIS_fnc_arsenal ","Params":null,"Return":" "},"Examples":["[\"Open\",true] spawn BIS_fnc_arsenal;//Using call crashes the game","[\"Preload\"] call BIS_fnc_arsenal; ","[\"AmmoboxInit\",[ammobox,true,{true}]] spawn BIS_fnc_arsenal;//applies arsenal to object \"ammobox\" and includes all items.","[\"AmmoboxExit\",ammobox] spawn BIS_fnc_arsenal//Doesnt work"],"Additional":["call","Arsenal"]},{"Name":"BIS_fnc_assignPlayerRole","Desc":" /*\n\n\u0009Description:\n\u0009Ensures the player can only get in the specific vehicle role\n\n\u0009Parameter(s):\n\u0009_this select 0: vehicle (Object)\n\u0009_this select 1: role (String)\n\u0009_this select 2: index / path (Scalar or Array)\n\n\u0009Returns:\n\u0009Bool\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Take On Helicopters","1.00"],"Additional":null},{"Name":"BIS_fnc_baseWeapon","Desc":" Determines base weapon class, with no attachments. ","Syn":{"Syntax":" [\"weaponName\"] call BIS_fnc_baseWeapon; ","Params":["String - Weapon classname."],"Return":" String - Weapon classname that features no attachments. "},"Examples":["newGun [\"arifle_Mk20_MRCO_pointer_F\"] call BIS_fnc_baseWeapon; // Returns \"arifle_Mk20_F\""],"Additional":["call","See also needed"]},{"Name":"BIS_fnc_basicBackpack","Desc":" Determines basic backpack with no equipment present (ie empty). ","Syn":{"Syntax":" [\"backPackClassName\"] call BIS_fnc_basicBackpack; ","Params":["String - Backpack classname."],"Return":" String - Returns classname of base backpack. "},"Examples":["baseBackpack = [\"b_assaultpack_rgr_medic\"] call BIS_fnc_basicBackpack; // Returns \"b_assaultpack_rgr\", the base class. "],"Additional":["call","See also needed"]},{"Name":"BIS_fnc_basicTask","Desc":" /*%FSM\u003cCOMPILE \"C:\\BIS\\fsmeditor\\missionTask.cfg, BIS_fnc_basicTask\"\u003e*/\n/*%FSM\u003cHEAD\u003e*/\n/*\nitem0[] = {\"ATTACK\",0,250,-125.000000,-125.000000,-25.000000,-75.000000,0.000000,\"ATTACK\"};\nitem1[] = {\"New\",4,218,0.000000,-125.000000,100.000000,-75.000000,0.000000,\"New\"};\nitem2[] = {\"Existing\",4,218,0.000000,-50.000000,100.000000,0.000000,0.000000,\"Existing\"};\nitem3[] = {\"Add_a_new_task\",2,250,125.000000,-125.000000,225.000000,-75.000000,0.000000,\"Add a new task\"};\nitem4[] = {\"Change_task_stat\",2,4346,125.000000,-50.000000,225.000000,0.000000,0.000000,\"Change\" \\n \"task state\"};\nitem5[] = {\"Task_ID___defined\",-1,250,-125.000000,-300.000000,-25.000000,-150.000000,0.000000,\"Task ID\" \\n \"\" \\n \"(defined\" \\n \"by state name)\"};\nitem6[] = {\"Condition_and_Code\",-1,250,0.000000,-300.000000,225.000000,-150.000000,0.000000,\"Condition and Code\" \\n \"\" \\n \"Pre-set variables:\" \\n \"\" \\n \"_task:\" \\n \"   Task ID\" \\n \"\" \\n \"_taskState:\" \\n \"   Current task state.\" \\n \"   Empty string when task doesn't exist.\"};\nversion=1;\nclass LayoutItems\n{\n\u0009class Item5\n\u0009{\n\u0009\u0009class ItemInfo\n\u0009\u0009{\n\u0009\u0009\u0009FontFace=\"Arial\";\n\u0009\u0009\u0009FontHeight=8;\n\u0009\u0009\u0009lStyle=1;\n\u0009\u0009};\n\u0009};\n\u0009class Item6\n\u0009{\n\u0009\u0009class ItemInfo\n\u0009\u0009{\n\u0009\u0009\u0009FontFace=\"Arial\";\n\u0009\u0009\u0009FontHeight=8;\n\u0009\u0009\u0009lStyle=1;\n\u0009\u0009\u0009Align=0;\n\u0009\u0009};\n\u0009};\n};\nlink0[] = {0,1};\nlink1[] = {0,2};\nlink2[] = {1,3};\nlink3[] = {2,4};\nglobals[] = {25.000000,1,0,0,16777215,640,480,1,9,6316128,1,-190.499237,297.867096,129.645691,-343.086792,584,623,1};\nwindow[] = {0,-1,-1,-1,-1,993,225,1313,225,1,602};\n*//*%FSM\u003c/HEAD\u003e*/\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_blackIn","Desc":" /*\n\n\u0009Description:\n\u0009Unregister a black screen. When none other black screen is registered, fade it out.\n\n\u0009Parameter(s):\n\u00090: _id:string - black screen id used for registration\n\u00091: _smooth:bool (optional, default: true) - should fade smoothly?\n\n\u0009Remarks:\n\u0009* Screen id is case sensitive.\n\u0009* If a function requires a black screen, use it's name as an id.\n\n\u0009Returns:\n\u0009nil\n\n\u0009Example:\n\u0009[\"BIS_ScreenSetup\"] call BIS_fnc_blackIn;\n*/\n\n#define FADE_SPEED\u00092\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_blackOut","Desc":" /*\n\n\u0009Description:\n\u0009Register a black screen. Start the black screen when the first request is registered.\n\n\u0009Parameter(s):\n\u00090: _id:string - black screen id used for registration\n\u00091: _smooth:bool (optional, default: true) - should fade smoothly?\n\n\u0009Remarks:\n\u0009* Screen id is case sensitive.\n\u0009* If a function requires a black screen, use it's name as an id.\n\n\u0009Returns:\n\u0009nil\n\n\u0009Example:\n\u0009[\"BIS_ScreenSetup\"] call BIS_fnc_blackOut;\n*/\n\n#define FADE_SPEED\u00092\n\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_bleedTickets","Desc":" Function that handles bleeding ticket system. Tickets are set beforehand using BIS_fnc_respawnTickets. ","Syn":{"Syntax":" [[WEST,EAST,RESISTANCE,CIVILIAN], 0.5, 3, 5] call BIS_fnc_bleedTickets; ","Params":["Array - Array of sides that should be affected by bleed tickets. Optional parameter, default is all sides.\n\n","Number - Dominance ratio, values from 0 to 1. Determines how much of a sector a side must hold for bleeding tickets to start. Optional parameter, default is 0.5 (ie half a sector).","Number - Amount of tickets bled every step. Optional parameter, default value 3.","Number - Delay in seconds between every bleeding step. Optional parameter, default value 5."],"Return":" Boolean "},"Examples":["[] call BIS_fnc_bleedTickets; // Uses all default values to start the system.","[[WEST,EAST], 1, 1, 10] call BIS_fnc_bleedTickets; // Starts the system with WEST and EAST involved, bleeding one ticket every ten seconds if one side holds the whole sector."],"Additional":["call","BIS_fnc_addScriptedEventHandler"]},{"Name":"BIS_fnc_bloodEffect","Desc":" Adds the bleeding effect post-processing effect to the players screen.  ","Syn":{"Syntax":" [10] call BIS_fnc_bloodEffect; ","Params":["Number - Duration in (milli?)seconds in which effect should be visible."],"Return":" Nothing "},"Examples":["[10] call BIS_fnc_bloodEffect; // Adds the blood effect for 10 (milli)seconds."],"Additional":["call","See also needed"]},{"Name":"BIS_fnc_boundingBoxCorner","Desc":" /*\n\u0009File: fn_boundingBoxCorner.sqf\n\n\u0009Description:\n\u0009Returns position of all four bounfing box corners\n\n\u0009Parameter(s):\n\u0009_this: Object\n\n\u0009Returns:\n\u0009Array in format [pos1,pos2,pos3,pos4]\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 2: Operation Arrowhead","1.00"],"Additional":null},{"Name":"BIS_fnc_boundingBoxDimensions","Desc":" /*\n\u0009File: fn_boundingBoxDimensions.sqf\n\n\u0009Description:\n\u0009Returns the sizes of the three dimension of an object's bounding box.\n\n\u0009Parameter(s):\n\u0009_this: Object (object)\n\u0009\n\u0009Returns:\n\u0009Array (dimensions)\n\u0009\u00090: x\n\u0009\u00091: y\n\u0009\u00092: z\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 2: Operation Arrowhead","1.00"],"Additional":null},{"Name":"BIS_fnc_boundingBoxMarker","Desc":" /*\n\u0009File: fn_boundingBoxMarker.sqf\n\n\u0009Description:\n\u0009Creates marker on object with size of objects' bounding box.\n\n\u0009Parameter(s):\n\u0009_this: Object\n\n\u0009Returns:\n\u0009String (marker)\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 2: Operation Arrowhead","1.00"],"Additional":null},{"Name":"BIS_fnc_boundingCircle","Desc":" /*\n\u0009File: fn_boundingCircle.sqf\n\n\u0009Description:\n\u0009Returns size of bounding circle (calculated from X and Y coordinates)\n\n\u0009Parameter(s):\n\u0009_this: Object\n\n\u0009Returns:\n\u0009Number\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 2: Operation Arrowhead","1.00"],"Additional":null},{"Name":"BIS_fnc_briefingAnimate","Desc":" /*\n\u0009\n\u0009Description:\n\u0009Animate briefing markers.\n\u0009\n\u0009Parameters:\n\u0009\u0009_this select 0: STRING - Marker to animate.\n\u0009\u0009_this select 1: NUMBER - Marker ID.\n\u0009\u0009_this select 2: NUMBER - Commit time.\n\u0009\n\u0009Returns:\n\u0009Nothing.\n*/\n\n// Determine the marker, its ID \u0026 the commit time\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_briefingInit","Desc":" /*\n\u0009\n\u0009Description:\n\u0009Initialize animated briefing markers.\n\u0009\n\u0009Parameters:\n\u0009\u0009_this: STRING - Marker to initialize.\n\u0009\n\u0009Returns:\n\u0009Nothing.\n*/\n\n// Determine the marker\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_buildingPositions","Desc":" Get all available positions within a building or structure. ","Syn":{"Syntax":" param call BIS_fnc_buildingPositions; ","Params":["param: Object\n\n","param: Number"],"Return":" Array "},"Examples":["[_building] call BIS_fnc_buildingPositions;","[_building, _maxNumberOfPositions] call BIS_fnc_buildingPositions;"],"Additional":["call","buildingPos","buildingExit"]},{"Name":"BIS_fnc_call","Desc":" Execute given code with or without parameter. ","Syn":{"Syntax":" [params, code] spawn BIS_fnc_call; ","Params":["params: Anything - function arguments\n\n","functionCode: Code - function code"],"Return":" Nothing "},"Examples":["Show a message for the current player.\n[[\"Hello\"], {hint _this select 0}] spawn BIS_fnc_call;","Show a message to all connected players.\n[[[\"Hello\"], {hint _this select 0}], \"BIS_fnc_call\", true, false, false] spawn BIS_fnc_MP;"],"Additional":["call","BIS_fnc_spawn","BIS_fnc_execVM","BIS_fnc_execFSM","BIS_fnc_execRemote"]},{"Name":"BIS_fnc_callScriptedEventHandler","Desc":" /*\n\n\u0009Description:\n\u0009Call scripted event handlers\n\n\u0009Parameter(s):\n\u0009\u00090: NAMESPACE, OBJECT, GROUP or LOCATION - namespace in which handler is saved\n\u0009\u00091: STRING - handler name\n\u0009\u00092: ARRAY - arguments passed to the code\n\u0009\u00093 (Optional): BOOL - true to expect returned value from all codes\n\n\u0009Returns:\n\u0009ARRAY - list of returned values\n*/\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_camera","Desc":" /*\n\n\u0009Description:\n\u0009Splendid config viewer\n\n\u0009Parameter(s):\n\u0009_this select 0: STRING - Parent display (when you need to run the viewer from editor)\n\n\u0009Returns:\n\u0009NOTHING\n*/\n\n#define DIK_ESCAPE          0x01\n#define DIK_1               0x02\n#define DIK_2               0x03\n#define DIK_3               0x04\n#define DIK_4               0x05\n#define DIK_5               0x06\n#define DIK_6               0x07\n#define DIK_7               0x08\n#define DIK_8               0x09\n#define DIK_9               0x0A\n#define DIK_0               0x0B\n#define DIK_MINUS           0x0C    /* - on main keyboard */\n#define DIK_EQUALS          0x0D\n#define DIK_BACK            0x0E    /* backspace */\n#define DIK_TAB             0x0F\n#define DIK_Q               0x10\n#define DIK_W               0x11\n#define DIK_E               0x12\n#define DIK_R               0x13\n#define DIK_T               0x14\n#define DIK_Y               0x15\n#define DIK_U               0x16\n#define DIK_I               0x17\n#define DIK_O               0x18\n#define DIK_P               0x19\n#define DIK_LBRACKET        0x1A\n#define DIK_RBRACKET        0x1B\n#define DIK_RETURN          0x1C    /* Enter on main keyboard */\n#define DIK_LCONTROL        0x1D\n#define DIK_A               0x1E\n#define DIK_S               0x1F\n#define DIK_D               0x20\n#define DIK_F               0x21\n#define DIK_G               0x22\n#define DIK_H               0x23\n#define DIK_J               0x24\n#define DIK_K               0x25\n#define DIK_L               0x26\n#define DIK_SEMICOLON       0x27\n#define DIK_APOSTROPHE      0x28\n#define DIK_GRAVE           0x29    /* accent grave */\n#define DIK_LSHIFT          0x2A\n#define DIK_BACKSLASH       0x2B\n#define DIK_Z               0x2C\n#define DIK_X               0x2D\n#define DIK_C               0x2E\n#define DIK_V               0x2F\n#define DIK_B               0x30\n#define DIK_N               0x31\n#define DIK_M               0x32\n#define DIK_COMMA           0x33\n#define DIK_PERIOD          0x34    /* . on main keyboard */\n#define DIK_SLASH           0x35    /* / on main keyboard */\n#define DIK_RSHIFT          0x36\n#define DIK_MULTIPLY        0x37    /* * on numeric keypad */\n#define DIK_LMENU           0x38    /* left Alt */\n#define DIK_SPACE           0x39\n#define DIK_CAPITAL         0x3A\n#define DIK_F1              0x3B\n#define DIK_F2              0x3C\n#define DIK_F3              0x3D\n#define DIK_F4              0x3E\n#define DIK_F5              0x3F\n#define DIK_F6              0x40\n#define DIK_F7              0x41\n#define DIK_F8              0x42\n#define DIK_F9              0x43\n#define DIK_F10             0x44\n#define DIK_NUMLOCK         0x45\n#define DIK_SCROLL          0x46    /* Scroll Lock */\n#define DIK_NUMPAD7         0x47\n#define DIK_NUMPAD8         0x48\n#define DIK_NUMPAD9         0x49\n#define DIK_SUBTRACT        0x4A    /* - on numeric keypad */\n#define DIK_NUMPAD4         0x4B\n#define DIK_NUMPAD5         0x4C\n#define DIK_NUMPAD6         0x4D\n#define DIK_ADD             0x4E    /* + on numeric keypad */\n#define DIK_NUMPAD1         0x4F\n#define DIK_NUMPAD2         0x50\n#define DIK_NUMPAD3         0x51\n#define DIK_NUMPAD0         0x52\n#define DIK_DECIMAL         0x53    /* . on numeric keypad */\n#define DIK_OEM_102         0x56    /* \u003c \u003e | on UK/Germany keyboards */\n#define DIK_F11             0x57\n#define DIK_NUMPADENTER     0x9C    /* Enter on numeric keypad */\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_cameraOld","Desc":" //--- Classic camera script, enhanced by Karel Moricky, 2010/03/19\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_camFollow","Desc":" #define CAMUPDATE \\\n\u0009private [\"_fov\"];\\\n\u0009_distance = _camera distance _cameraTarget;\\\n\u0009_fov = (10 / (_distance)) min 0.7 max 0.01;\\\n\u0009_camera campreparetarget _cameraTarget;\\\n\u0009_camera campreparefov _fov;\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Take On Helicopters","1.00"],"Additional":null},{"Name":"BIS_fnc_changeSupportRadioChannel","Desc":" /*\n\n\u0009Description:\n\u0009Changes the radio channel for Support module-related protocol.\n\n\u0009Parameter(s):\n\u0009_this select 0: SIDE - Affected side\n\u0009_this select 1: ANY - Channel setting\n\n\u0009Returns:\n\u0009nothing\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_cinemaBorder","Desc":" /*\n\n\u0009Description:\n\u0009Moves camera borders.\n\n\u0009Parameter(s):\n\u0009\u0009_this select 0: NUMBER - Mode (0 - in, 1 - out)\n\u0009\u0009_this select 1: NUMBER - Duration in seconds (default - 1.5)\n\u0009\u0009_this select 2: BOOL - Play sound (default - true)\n\u0009\u0009_this select 3: BOOL - lock 1st person view (default - false)\n\n\u0009Returns:\n\u0009Nothing\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_classMagazine","Desc":" /*\n\u0009File: fn_magazineClass.sqf\n\n\u0009Description:\n\u0009Returns class of magazine given by string.\n\u0009\n\u0009Parameter(s):\n\u00091: \u003cstring\u003e magazine\n\u0009\n\u0009Returns:\n\u0009\u003cconfig class\u003e magazine class readed from config (test success with isClass)\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 2","1.00"],"Additional":null},{"Name":"BIS_fnc_classWeapon","Desc":" /*\n\u0009File: fn_classWeapon.sqf\n\n\u0009Description:\n\u0009Returns class of weapon given by string.\n\u0009\n\u0009Parameter(s):\n\u00091: \u003cstring\u003e weapon\n\u0009\n\u0009Returns:\n\u0009\u003cconfig class\u003e weapon class readed from config (test success with isClass)\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 2","1.00"],"Additional":null},{"Name":"BIS_fnc_codePerformance","Desc":" Measures how much time it takes to execute given expression. Results may vary based on overall performance; use this function to compare alternative scripting approaches rather than to measure specific values.\n\nIn Arma 3, window with results is opened afterwards.\n\nNOTE: For best results restart your client before conducting tests. This function uses diag_tickTime which loses its precision the longer the client runs from restart.\n\n\n ","Syn":{"Syntax":" [expression(String),Any([parameters]),cycles(Number)] call BIS_fnc_codePerformance; ","Params":["expression: String - tested expression\n\n","Any (Optional): Param(s) - passed into code (default: [])","cycles (Optional): Number - Number of cycles (default: 10000)"],"Return":" Nothing "},"Examples":["testArray = [];\n[\"testArray = testArray + [1];\"] call BIS_fnc_codePerformance;\ntestArray = [];\n[\"testArray set [count testArray,1];\"] call BIS_fnc_codePerformance;\n\nCompare two methods of adding elements into array"],"Additional":["call","See also needed"]},{"Name":"BIS_fnc_colorConfigToRGBA","Desc":" /*\n\n\u0009Description:\n\u0009Converts config color format to RGBA array of numbers.\n\u0009[\"0.5 + 0.25\",0,0,1] becomes [0.75,0,0,1]\n\n\u0009Parameter(s):\n\u00090: ARRAY - color in RGBA format\n\n\u0009Returns:\n\u0009ARRAY\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_colorRGBAtoHTML","Desc":" /*\n\n\u0009Description:\n\u0009Converts RGBA color format to HTML color format\n\u0009[0,0,0,1] became \"#ff000000\"\n\u0009Alpha value in field will be ignored.\n\n\u0009Returns:\n\u0009String\n*/\n\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_colorRGBAtoTexture","Desc":" /*\n\n\u0009Description:\n\u0009Converts RGB color format to procedural texture.\n\u0009[0,0,0,1] becomes \"#(argb,8,8,3)color(0,0,0,1)\"\n\n\u0009Parameter(s):\n\u00090: ARRAY - color in RGBA format\n\n\u0009Returns:\n\u0009String\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_colorRGBtoHTML","Desc":" /*\n\n\u0009Description:\n\u0009Converts RGB color format to HTML color format\n\u0009[0,0,0,1] became \"#000000\"\n\u0009Alpha value in field will be ignored.\n\n\u0009Returns:\n\u0009String\n*/\n\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 2","1.00"],"Additional":null},{"Name":"BIS_fnc_commsMenuCreate","Desc":" /*\n\u0009File: fn_commsMenuCreate.sqf\n\n\u0009Description:\n\u0009Creates the global communications menu, if it's not already created.\n\u0009All entries are invisible by default.\n\u0009Unhide appropriate sections by using BIS_fnc_commsMenuToggleVisibility.\n\n\u0009Parameter(s):\n\u0009-\n\u0009\n\u0009Returns:\n\u0009Success flag (Boolean)\n*/\n\n//Does the comms menu already exist?\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 2","1.00"],"Additional":null},{"Name":"BIS_fnc_commsMenuToggleAvailability","Desc":" /*\n\u0009File: fn_commsMenuToggleAvailability.sqf\n\n\u0009Description:\n\u0009Enables or disables certain sections of the global communications menu.\n\n\u0009Parameter(s):\n\u0009_this select 0: index (Scalar) or list of indices (Array of Scalars) or section name (String)\n\u0009\u0009\"som\" - SecOps section\n\u0009\u0009\"wf\" - Warfare section\n\u0009_this select 1: mode (Scalar)\n\u0009\u00090 - disable\n\u0009\u00091 - enable\n\u0009\n\u0009Returns:\n\u0009Success flag (Boolean)\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 2","1.00"],"Additional":null},{"Name":"BIS_fnc_commsMenuToggleVisibility","Desc":" /*\n\u0009File: fn_commsMenuToggleVisibility.sqf\n\n\u0009Description:\n\u0009Shows or hides certain sections of the global communications menu.\n\n\u0009Parameter(s):\n\u0009_this select 0: index (Scalar) or list of indices (Array of Scalars) or section name (String)\n\u0009\u0009\"som\" - SecOps section\n\u0009\u0009\"wf\" - Warfare section\n\u0009_this select 1: mode (Scalar)\n\u0009\u00090 - hide\n\u0009\u00091 - show\n\u0009\n\u0009Returns:\n\u0009Success flag (Boolean)\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 2","1.00"],"Additional":null},{"Name":"BIS_fnc_completedCuratorChallengesCount","Desc":" /*\n\n\u0009Description:\n\u0009Return number of completed curator challenges\n\n\u0009Parameter(s):\n\u0009\u00090: OBJECT - curator\n\n\u0009Returns:\n\u0009NUMBER\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.16"],"Additional":null},{"Name":"BIS_fnc_conditionalSelect","Desc":" /************************************************************\n\u0009Conditional Select\n\nParameters: [array, {condition}]\n\nThis returns a sub-array of elements that satisfy a specific condition.\nThe originally passed array is NOT modified!\n\nThe function takes, in order, every element of the passed array,\nevaluates it in the condition, and, if the condition is true, adds\nit to the return array.\n\nIn the condition, the currently tested element is assigned to\nthe variable \"_x\".\n\nCare must be taken that the condition won't cause errors. For\nexample, if your condition assumes all elements are numbers,\nerrors will occur if your array includes strings.\n\nThis function is similar to the \"count\" command, only it returns\nthe elements of the array that satisfy the condition, rather\nthan simply returning the count.\n\nExample: [[10,0,8,2,6,4], {_x \u003e 5}] call BIS_fnc_conditionalSelect\nReturns: [10,8,6]\n\nExample: [[10,true,8,player], {typename _x == \"STRING\"}] call BIS_fnc_conditionalSelect\nReturns: []\n\n************************************************************/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 2","1.00"],"Additional":null},{"Name":"BIS_fnc_configPath","Desc":" /*\n\n\u0009Description:\n\u0009Return config path to given entry.\n\n\u0009Parameter(s):\n\u0009\u00090: CONFIG or ARRAY or STRING\n\u0009\u00091 (Optional): ARRAY or STRING or CONFIG - type of returned value (default: ARRAY)\n\n\u0009Returns:\n\u0009\u0009ARRAY - list of classes (e.g., [\"configfile\",\"CfgVehicles\"])\n\u0009\u0009STRING - composed path (e.g., \"configfile \u003e\u003e 'CfgVehicles'\")\n\u0009\u0009CONFIG - system path (e.g., configfile \u003e\u003e \"CfgVehicles\")\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_configviewer","Desc":" /*\n\n\u0009Description:\n\u0009Splendid config viewer\n\n\u0009Parameter(s):\n\u0009\u00090 (Optional): DISPLAY - parent display (mission display by default)\n\u0009\u00091 (Optional): CONFIG - root config (all configs displayed by default)\n\u0009\u00092 (Optional): BOOL - true to display OK button. Script will then wait until viewer is closed and return selected class and param\n\u0009\u00093 (Optional): CODE - executed upon selecting a class. Has to return STRING, which will be shown as structured text instead of params.\n\u0009\u00093 (Optional): CODE - executed upon adding a class to list. Returned value (STRING) is item text. Empty string will skip the item.\n\u0009\u00095 (Optional): TEXT - custom header. Use %1 to refer to original name (\"Splendid Config Viewer\")\n\n\u0009Returns:\n\u0009ARRAY\n\u0009\u0009- when OK button is not displayed, empty array is returned\n\u0009\u0009- when OK button is displayed, array of currently selected entries in format [class (CONFIG), param (STRING)] is returned.\n*/\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 2: Operation Arrowhead","1.00"],"Additional":null},{"Name":"BIS_fnc_consolidateArray","Desc":" /*\n\n\u0009Description:\n\u0009Finds duplicities in array of strings and consolidates it to the array of sub-arrays, where:\n\u0009id 0: string\n\u0009id 1: occurrence count\n\n\u0009Syntax:\n\u0009_cosolidated:array = _strings:array call BIS_fnc_consolidateArray;\n\n\u0009Example:\n\u0009[[\"apple\",3],[\"pear\",2]] = [\"apple\",\"apple\",\"pear\",\"pear\",\"apple\"] call BIS_fnc_consolidateArray;\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","0.76"],"Additional":null},{"Name":"BIS_fnc_convertUnits","Desc":" /*\n\n\u0009Description:\n\u0009Converts values to a target system of units.\n\n\u0009Parameter(s):\n\u0009_this select 0: source value (Scalar)\n\u0009_this select 1: source unit (Scalar)\n\u0009\u00090: m (meters)\n\u0009\u00091: km (kilometers)\n\u0009\u00092: ms (meters per second)\n\u0009\u00093: kmh (kilometers per hour)\n\u0009\u00094: ft (feet)\n\u0009\u00095: mi (miles)\n\u0009\u00096: fts (feet per second)\n\u0009\u00097: mph (miles per hour)\n\u0009\u00098: nm (nautical miles)\n\u0009\u00099: kts (knots)\n\u0009_this select 2: destination unit (Scalar) [optional - default: detected system of units]\n\u0009_this select 3: destination mode (Scalar) [optional - default: 0]\n\u0009\u00090: destination value (Scalar)\n\u0009\u00091: destination text long (String) \"5 meters\" e.g.\n\u0009\u00092: destination text short (String) \"5 m\" e.g.\n\u0009_this select 4: destination precision factor (Scalar) [optional - default: 1 (uses rounding)]\n\u0009\u0009-1: no changes to converted value\n\n\u0009Returns:\n\u0009converted value (Scalar or String)\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Take On Helicopters","1.00"],"Additional":null},{"Name":"BIS_fnc_countdown","Desc":" /*\n\n\u0009Description:\n\u0009Trigger countdown\n\n\u0009Parameter(s):\n\u0009\u00090: NUMBER - countdown in seconds\n\u0009\u00091: BOOL - true to set the value globally\n\n\u0009Returns:\n\u0009NUMBER\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.02"],"Additional":null},{"Name":"BIS_fnc_counter","Desc":" /*\n\n\u0009Description:\n\u0009Modify givem counter (create it if doesn't exist yet)\n\n\u0009Parameter(s):\n\u0009_this select 0:\n\u0009\u0009STRING - variable name of counter\n\u0009\u0009ARRAY in format [variableName,nameSpace], where nameSpace can be object, group or missionNameSpace/uiNameSpace\n\u0009_this select 1 (Optional): NUMBER - added value\n\u0009_this select 2 (Optional): NUMBER - modulo value\n\n\u0009Returns:\n\u0009NUMBER - counter's value\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Take On Helicopters","1.00"],"Additional":null},{"Name":"BIS_fnc_createLogRecord","Desc":" /*\n\n\u0009Description:\n\u0009Create diary record in unified \"Log\" subject (create it when it doesn't exist yet)\n\n\u0009Parameter(s):\n\u0009\u00090: OBJECT - owner\n\u0009\u00091: STRING - title\n\u0009\u00092: STRING - text\n\n\u0009Returns:\n\u0009STRING\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_createmenu","Desc":" /*\n\u0009File: fn_createMenu.sqf\n\n\u0009Description:\n\u0009Create custom commanding menu (with multiple pages if necessary).\n\n\u0009Parameter(s):\n\u0009\u0009_this select 0 - STRING or ARRAY - Name of menu or [Name, Context sensitive]\n\u0009\u0009_this select 1 - STRING - Variable in which will be menu params stored (as variable_0, variable_1, ...)\n\u0009\u0009_this select 2 - ARRAY - Array with menu items (can be either [items] or [[items],[itemNames],[itemEnable]] if you want to set custom params (names, enable values))\n\u0009\u0009_this select 3 - STRING - Name of submenu which will open when item is activated. Name of selected item is passed to string as %1\n\u0009\u0009_this select 4 - STRING - Expression which is executed when item is activated. Name of selected item is passed to string as %1, ID is %2.\n\u0009\u0009_this select 5 - ANYTHING (Optional) - params passed to expression. Whole argument is passed as %3\n\u0009\u0009_this select 6 - BOOLEAN - False to hide number shortcuts\n\n\u0009Returned value(s):\n\u0009\u0009True\n\u0009\u0009\n\u0009Example:\n\u0009  c = [\"first\",\"second\"]; [\"Menu\", \"b\", c, \"\",\"hint 'ahoj'\"] call BIS_FNC_createmenu; showCommandingMenu \"#USER:b_0\"  \n\u0009  c = [[\"firstData\",\"secondData\"],[\"First\",\"Second\"]]; [\"Menu\", \"b\", c, \"\",\"hint (str '%1' + str '%2' + str '%3')\"] call BIS_FNC_createmenu;  showCommandingMenu \"#USER:b_0\";  \n\u0009  see news:g7p3po$gik$1@new-server.localdomain\n*/\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 2","1.00"],"Additional":null},{"Name":"BIS_fnc_createObjectOO","Desc":" /*\n\u0009File: fn_createObjectOO.sqf\n\n\u0009Description:\n\u0009Instantiating an object of a certain class\n\n\u0009Parameter(s):\n\u0009_this select 0: String (class name)\n\u0009_this select 1: Array (optional parameters for constructor)\n\u0009\n\u0009Returns:\n\u0009created Logic object: Object\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_credits","Desc":" Opens credits, identical to those found in main menu (ArmA3). Present in ArmA3. ","Syn":{"Syntax":" [] spawn BIS_fnc_credits; ","Params":["Nothing - No parameters needed."],"Return":" Nothing "},"Examples":["0 = [] spawn BIS_fnc_credits;"],"Additional":["call","See also needed"]},{"Name":"BIS_fnc_credits_movie","Desc":" /*\n\u0009File: fn_credits_movie.sqf\n\n\u0009Description:\n\u0009Movie credits function.\n\n\u0009Parameter(s):\n\u0009_this select 0: Display - Display for credits.\n\u0009_this select 1: Number - Mode: 0 for end of credits, 1 for start of credits.\n\u0009\n\u0009Returned value:\n\u0009None\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_credits_movieConfig","Desc":" /*\n\u0009File: fn_credits_movieConfig.sqf\n\n\u0009Description:\n\u0009Movie credits config preprocessor.\n\n\u0009Parameter(s):\n\u0009_this select 0: Number - Index of item in config (CfgCredits \u003e\u003e CreditsMovie \u003e\u003e item)\n\u0009\n\u0009Returned value:\n\u0009_array: Array\n\u0009_array select 0: String - Position name (and tags) as structured text.\n\u0009_array select 1: String - Names (and tags) as structured text.\n\u0009_array select 2: Number - Required space coeficient (numberOfNames * textSizeCoef), -1 if config entry doesn't exist\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_credits_movieSupport","Desc":" /*\n\u0009File: fn_credits_movieSupport.sqf\n\n\u0009Description:\n\u0009Movie credits supporters preprocessor.\n\n\u0009Parameter(s):\n\u0009None.\n\u0009\n\u0009Returned value:\n\u0009_array: Array\n\u0009_array select 0: String - Position name (and tags) as structured text.\n\u0009_array select 1: String - Names (and tags) as structured text - 1st paragraph.\n\u0009_array select 2: String - Names (and tags) as structured text - 2nd paragraph.\n\u0009_array select 3: String - Names (and tags) as structured text - 3rd paragraph.\n\u0009_array select 4: Number - Required space coeficient (numberOfNamesInOneParagraph * textSizeCoef)\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_crewCount","Desc":" Function that counts amount of seats, both for crew and cargo seats. ","Syn":{"Syntax":" param call BIS_fnc_crewCount; ","Params":["String - Classname of vehicle.\n\n","Boolean - True if cargo seats should be included (see notes)"],"Return":" Number - Amount of seats in vehicle. "},"Examples":["crewCount = [\"B_Heli_Light_01_F\",false] call BIS_fnc_crewCount; // Counts all available seats excluding cargo slots. Returns 6 (see notes).","crewCount = [\"B_Heli_Transport_01_F\",true] call BIS_fnc_crewCount; // Counts all available seats including cargo slots. Returns 12."],"Additional":["call","See also needed"]},{"Name":"BIS_fnc_crossProduct","Desc":" /************************************************************\n\u0009Cross Product\n\u0009\nReturns the cross product of two 3D vectors.\n************************************************************/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki)\n\n\n\n\n \n\n Use vectorCrossProduct instead.\n ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 2","1.00"],"Additional":null},{"Name":"BIS_fnc_crows","Desc":" Spawns flock of crows circling the area. ","Syn":{"Syntax":" [position,areaSize,number,height] call BIS_fnc_crows  ","Params":["position: Array (in format position) or Object (object position) or String (marker position)\n\n","areaSize (Optional): Number - area radius","number (Optional): Number of crows","height (Optional): Number - height in which crows flies"],"Return":" Array - List of spawned crows "},"Examples":["bis_crows = [BIS_scientist, 20, 8, 20] call BIS_fnc_crows;"],"Additional":["call","Functions Library"]},{"Name":"BIS_fnc_ctrlFitToTextHeight","Desc":" /*\n\u0009\n\u0009Description:\n\u0009Resize structured text control to fit its text height\n\u0009\n\u0009Parameters:\n\u0009\u00090: CONTROL\n\u0009\u00091: NUMBER - height offset (default is 0)\n\u0009\u00092: NUMBER - commit time (default is 0)\n\u0009\n\u0009Returns:\n\u0009NUMBER - text height\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_ctrlSetScale","Desc":" /*\n\u0009\n\u0009Description:\n\u0009Scale a control while maintaining its centering\n\u0009\n\u0009Parameters:\n\u0009\u00090: CONTROL\n\u0009\u00091: NUMBER - scale (default is 1)\n\u0009\u00092: NUMBER - commit time (default is 0)\n\u0009\n\u0009Returns:\n\u0009ARRAY - final position\n*/\n\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_ctrlTextHeight","Desc":" /*\n\n\u0009Description:\n\u0009Resize control according to it's text\n\n\u0009Parameter(s):\n\u0009_this select 0: CONTROL\n\n\u0009Returns:\n\u0009BOOL - true\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Take On Helicopters","1.00"],"Additional":null},{"Name":"BIS_fnc_curatorAttachObject","Desc":" /*\n\n\u0009Description:\n\u0009Attach an object on another one under cursor\n\n\u0009Parameter(s):\n\u0009\u00090: OBJECT - object\n\n\u0009Returns:\n\u0009BOOL\n*/\n\n\n#define HEIGHT\u00092\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.16"],"Additional":null},{"Name":"BIS_fnc_curatorAttributes","Desc":" /*\n\n\u0009Description:\n\u0009Return attributes available for given entity\n\n\u0009Parameter(s):\n\u0009\u00090: OBJECT - curator\n\u0009\u00091: OBJECT or GROUp or ARRAY or STRING - checked entity\n\n\u0009Returns:\n\u0009ARRAY of STRINGs\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.16"],"Additional":null},{"Name":"BIS_fnc_curatorAutomatic","Desc":" /*\n\n\u0009Description:\n\u0009Spawn units based on curator settings.\n\u0009Used when curator role is not taken.\n\n\u0009Parameter(s):\n\u0009\u00090: OBJECT - curator (costs and coefficients will be read from it)\n\u0009\u00091: ARRAY of SIDEs - sides of placed units\n\u0009\u00092: NUMBER - cheat coefficient (1 means default costs, 0.5 means 50% values; allows spawning of more units)\n\u0009\u00093: NUMBER - infantry probability (probabilities are compared together, the ones with higher number have better chance of spawning)\n\u0009\u00094: NUMBER - ground vehicles probability\n\u0009\u00095: NUMBER - aircrafts probability\n\u0009\u00096: NUMBER - marine probability\n\n\u0009Returns:\n\u0009ARRAY of GROUPs\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.16"],"Additional":null},{"Name":"BIS_fnc_curatorAutomaticPositions","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.16"],"Additional":null},{"Name":"BIS_fnc_curatorChallengeDestroyVehicle","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.16"],"Additional":null},{"Name":"BIS_fnc_curatorChallengeFindIntel","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.16"],"Additional":null},{"Name":"BIS_fnc_curatorChallengeFireWeapon","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.16"],"Additional":null},{"Name":"BIS_fnc_curatorChallengeGetInVehicle","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.16"],"Additional":null},{"Name":"BIS_fnc_curatorChallengeIlluminate","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.16"],"Additional":null},{"Name":"BIS_fnc_curatorChallengeSpawnLightning","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.16"],"Additional":null},{"Name":"BIS_fnc_curatorHint","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.16"],"Additional":null},{"Name":"BIS_fnc_curatorObjectEdited","Desc":" /*\n\n\u0009Description:\n\u0009Code executed when curator object is edited (i.e., moved or rotated).\n\u0009When a soldier or a vehicle is moved high above ground, create a parachute for them\n\n\u0009Parameter(s):\n\u0009\u00090: OBJECT - curator module\n\u0009\u00091: OBJECT - edited object\n\n\u0009Returns:\n\u0009BOOL\n*/\n\n#define EHVAR\u0009\"BIS_fnc_curatorObjectEdited_eh\"\n#define PARAVAR\u0009\"BIS_fnc_curatorObjectEdited_para\"\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.16"],"Additional":null},{"Name":"BIS_fnc_curatorObjectPlaced","Desc":" /*\n\n\u0009Description:\n\u0009Code executed when curator object is placed.\n\n\u0009Parameter(s):\n\u0009\u00090: OBJECT - curator module\n\u0009\u00091: OBJECT - edited object\n\n\u0009Returns:\n\u0009BOOL\n*/\n\n//--- Simplified argument loading to save performance\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.16"],"Additional":null},{"Name":"BIS_fnc_curatorObjectRegistered","Desc":" /*\n\n\u0009Description:\n\u0009Register \"curatorObjectRegistered\" handler.\n\u0009Cost of vehicles with crews will be automatically calculated based on vehicle + crew cost.\n\n\u0009Parameter(s):\n\u0009\u00090: OBJECT - curator module\n\u0009\u00091: CODE - handler code, passed arguments are [\u003ccurator:Object\u003e,\u003cclasses:Array\u003e]\n\n\u0009Returns:\n\u0009BOOL\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.16"],"Additional":null},{"Name":"BIS_fnc_curatorObjectRegisteredTable","Desc":" /*\n\n\u0009Description:\n\u0009Register objects costs from table.\n\u0009Export a table into spreadsheet using BIS_fnc_exportCuratorCostTable and use the result as param for this function.\n\n\u0009Parameter(s):\n\u0009\u00090: OBJECT - curator\n\u0009\u00091: ARRAY of ARRAYs in format [\u003ccost:Number\u003e,\u003cshow:Bool\u003e]\n\n\u0009Returns:\n\u0009BOOL\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.16"],"Additional":null},{"Name":"BIS_fnc_curatorPinged","Desc":" /*\n\n\u0009Description:\n\u0009Show effects when player pings curator.\n\u0009Icon and entity list highlighting is handled by engine.\n\n\u0009Parameter(s):\n\u0009\u00090: OBJECT - curator module\n\u0009\u00091: OBJECT - player\n\n\u0009Returns:\n\u0009BOOL\n*/\n\n//--- Terminate when not enough thime passed since the last ping\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.16"],"Additional":null},{"Name":"BIS_fnc_curatorRespawn","Desc":" /*\n\n\u0009Description:\n\u0009Restore unit for curators after respawn.\n\u0009When curator owner, it will transfer ownership to the new unit.\n\u0009When editable by curator, it will remove the dead unit and register the new one.\n\n\u0009Parameter(s):\n\u0009\u00090: OBJECT - new unit\n\u0009\u00091: OBJECT - old (dead) unit\n\n\u0009Returns:\n\u0009BOOL\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.16"],"Additional":null},{"Name":"BIS_fnc_curatorSayMessage","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.16"],"Additional":null},{"Name":"BIS_fnc_curatorVisionModes","Desc":" /*\n\n\u0009Description:\n\u0009Return allowed curator vision modes\n\n\u0009Parameter(s):\n\u0009\u00090: OBJECT - curator\n\n\u0009Returns:\n\u0009ARRAY of NUMBERs\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.16"],"Additional":null},{"Name":"BIS_fnc_curatorWaypointPlaced","Desc":" /*\n\n\u0009Description:\n\u0009Code executed when curator waypoint is placed.\n\n\u0009Parameter(s):\n\u0009\u00090: OBJECT - curator module\n\u0009\u00091: ARRAY - edited waypoint\n\n\u0009Returns:\n\u0009BOOL\n*/\n\n//--- Simplified argument loading to save performance\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.16"],"Additional":null},{"Name":"BIS_fnc_customGPS","Desc":" Replaces GPS frame.\n\nThe following line must be defined in mission Description.ext:\n\nonMinimapScript[] = {\"BIS_fnc_customGPS_Spawn\"};\nonMinimapScript[] = {\"BIS_fnc_customGPS_Spawn\"};","Syn":{"Syntax":"onMinimapScript[] = {\"BIS_fnc_customGPS_Spawn\"};\u003cbr\u003e(Alternate Syntax exists check Read more)","Params":null,"Return":""},"Examples":["[\"ca\\missions_pmc\\data\\ui_gps_ca.paa\", -0.05, 0.16] call BIS_fnc_customGPS;"],"Additional":["call","Functions Library"]},{"Name":"BIS_fnc_customGPSvideo","Desc":" Plays in-game video in GPS frame.\n\nIf BIS fnc customGPS changed GPS texture, it's used.\n\nGUI layer for GPS is 19.","Syn":{"Syntax":" [path,sizeCoef] call BIS_fnc_customGPSvideo  ","Params":["path: String - full path to image file\n\n","sizeCoef (Optional): Number - screen size coeficient (default is 1)"],"Return":" Script - script which terminates itself once video ends "},"Examples":["_script = [\"\\ca\\video_pmc\\CP00_Reynolds_b.ogv\",1.04] spawn BIS_fnc_customGPSvideo;\nwaitUntil {scriptDone _script};"],"Additional":["call","Functions Library"]},{"Name":"BIS_fnc_customGPSVideo","Desc":" /*\n\n\u0009Description:\n\u0009Plays in-game video in GPS frame.\n\n\u0009Parameter(s):\n\u0009_this select 0: STRING - Video\n\n\u0009Returns:\n\u0009True\n*/\n\n#define GPS_DISPLAY\u0009(uinamespace getvariable \"BIS_RscMissionScreen_customGPSvideo\")\n#define GPS_CONTENT\u0009(GPS_DISPLAY displayctrl 1100)\n#define GPS_FRAME\u0009(GPS_DISPLAY displayctrl 1101)\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 2: Operation Arrowhead","1.00"],"Additional":null},{"Name":"BIS_fnc_cutDecimals","Desc":" Function that rounds specified number to specified amount of decimals. ","Syn":{"Syntax":" param call BIS_fnc_cutDecimals; ","Params":["Number - Decimal number to round.\n\n","Number - Amount of decimals to round to (starts with 0)."],"Return":" Number - Rounded number. "},"Examples":["cutDecimals = [33.3333,1] call BIS_fnc_cutDecimals; // returns 33.3"],"Additional":["call","See also needed"]},{"Name":"BIS_fnc_damageChanged","Desc":" /*\n\u0009File: fn_damageChanged.sqf\n\n\u0009Description:\n\u0009Handle effects caused by changing of damage.\n\n\u0009Parameter(s):\n\u0009None.\n\n\u0009Returned value:\n\u0009None.\n*/\n\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_damagePulsing","Desc":" /*\n\u0009File: fn_damagePulsing.sqf\n\n\u0009Description:\n\u0009Pulsing damage effect.\n\n\u0009Parameter(s):\n\u0009None.\n\n\u0009Returned value:\n\u0009None. \n*/\n\n//------------------------Total damage PULSING--------------------------------------------------\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_dbClassCheck","Desc":" //\n/*\n\n\u0009Description:\n\u0009Check if class exists Scripted Database.\n\n\u0009Parameter(s):\n\u0009_this select 0: ARRAY - Database array\n\u0009_this select 1: ARRAY - Path\n\n\u0009Returns:\n\u0009BOOLEAN - True if class exists\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Take On Helicopters","1.00"],"Additional":null},{"Name":"BIS_fnc_dbClassId","Desc":" //\n/*\n\n\u0009Description:\n\u0009Converts string to class definition.\n\n\u0009Parameter(s):\n\u0009_this: STRING (converts to)\n\u0009or\n\u0009_this select 0: STRING (converts from)\n\n\u0009Returns:\n\u0009STRING\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Take On Helicopters","1.00"],"Additional":null},{"Name":"BIS_fnc_dbClassIndex","Desc":" //\n/*\n\n\u0009Description:\n\u0009Returns indexes leading to given class.\n\n\u0009Parameter(s):\n\u0009_this select 0: ARRAY - Database array\n\u0009_this select 1: ARRAY - Path\n\n\u0009Returns:\n\u0009ARRAY - List of index values\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Take On Helicopters","1.00"],"Additional":null},{"Name":"BIS_fnc_dbClassList","Desc":" //\n/*\n\n\u0009Description:\n\u0009Returns all classes withing class.\n\n\u0009Parameter(s):\n\u0009_this select 0: ARRAY - Database array\n\u0009_this select 1: ARRAY - Path\n\n\u0009Returns:\n\u0009ARRAY - List of classnames\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Take On Helicopters","1.00"],"Additional":null},{"Name":"BIS_fnc_dbClassRemove","Desc":" /*\n\n\u0009Description:\n\u0009Remove class from Scripted Database.\n\n\u0009Parameter(s):\n\u0009_this select 0: ARRAY - Database array\n\u0009_this select 1: ARRAY - Path\n\n\u0009Returns:\n\u0009BOOLEAN - True if class was removed\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Take On Helicopters","1.00"],"Additional":null},{"Name":"BIS_fnc_dbClassReturn","Desc":" //\n/*\n\n\u0009Description:\n\u0009Returns content of given class.\n\n\u0009Parameter(s):\n\u0009_this select 0: ARRAY - Database array\n\u0009_this select 1: ARRAY - Path\n\n\u0009Returns:\n\u0009ARRAY - Class content\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Take On Helicopters","1.00"],"Additional":null},{"Name":"BIS_fnc_dbClassSet","Desc":" //\n/*\n\n\u0009Description:\n\u0009Add class to Scripted Database.\n\n\u0009Parameter(s):\n\u0009_this select 0: ARRAY - Database array\n\u0009_this select 1: ARRAY - Path\n\n\u0009Returns:\n\u0009BOOLEAN - True if class was added\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Take On Helicopters","1.00"],"Additional":null},{"Name":"BIS_fnc_dbConfigPath","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Take On Helicopters","1.00"],"Additional":null},{"Name":"BIS_fnc_dbImportConfig","Desc":" //\n/*\n\n\u0009Description:\n\u0009Copy config classes and adds them to Scripted Database.\n\n\u0009Parameter(s):\n\u0009_this select 0: ARRAY - Database array\n\u0009_this select 1: ARRAY - Path\n\u0009_this select 2: CONFIG - Config path\n\n\u0009Returns:\n\u0009BOOLEAN - True if copied\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Take On Helicopters","1.00"],"Additional":null},{"Name":"BIS_fnc_dbImportXML","Desc":" /*\n\n\u0009Description:\n\u0009Import XML file into Scripted Database\n\n\u0009Parameter(s):\n\u0009_this: STRING - path to .xml file\n\n\u0009Returns:\n\u0009ARRAY - database\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Take On Helicopters","1.00"],"Additional":null},{"Name":"BIS_fnc_dbisClass","Desc":" //\n/*\n\n\u0009Description:\n\u0009Checks if string is class definition.\n\n\u0009Parameter(s):\n\u0009_this select 0: STRING\n\n\u0009Returns:\n\u0009BOOLEAN\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Take On Helicopters","1.00"],"Additional":null},{"Name":"BIS_fnc_dbisValue","Desc":" //\n/*\n\n\u0009Description:\n\u0009Checks if string is value definition.\n\n\u0009Parameter(s):\n\u0009_this select 0: STRING\n\n\u0009Returns:\n\u0009BOOLEAN\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Take On Helicopters","1.00"],"Additional":null},{"Name":"BIS_fnc_dbPrint","Desc":" //\n/*\n\n\u0009Description:\n\u0009Copy Scripted Database content into clipoboard for evaluation.\n\u0009Text will be formatted as config.\n\n\u0009Parameter(s):\n\u0009_this select 0: ARRAY - Database array\n\u0009_this select 1: NUMBER (optional) - Number of tabs\n\n\u0009Returns:\n\u0009STRING - printed text\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Take On Helicopters","1.00"],"Additional":null},{"Name":"BIS_fnc_dbSymbolClass","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Take On Helicopters","1.00"],"Additional":null},{"Name":"BIS_fnc_dbSymbolValue","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Take On Helicopters","1.00"],"Additional":null},{"Name":"BIS_fnc_dbValueCheck","Desc":" //\n/*\n\n\u0009Description:\n\u0009Check if value exists Scripted Database.\n\n\u0009Parameter(s):\n\u0009_this select 0: ARRAY - Database array\n\u0009_this select 1: ARRAY - Path\n\n\u0009Returns:\n\u0009BOOLEAN - True if value exists\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Take On Helicopters","1.00"],"Additional":null},{"Name":"BIS_fnc_dbValueId","Desc":" //\n/*\n\n\u0009Description:\n\u0009Converts string to value definition.\n\n\u0009Parameter(s):\n\u0009_this: STRING (converts to)\n\u0009or\n\u0009_this select 0: STRING (converts from)\n\n\u0009Returns:\n\u0009STRING\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Take On Helicopters","1.00"],"Additional":null},{"Name":"BIS_fnc_dbValueIndex","Desc":" //\n/*\n\n\u0009Description:\n\u0009Returns indexes leading to given value.\n\n\u0009Parameter(s):\n\u0009_this select 0: ARRAY - Database array\n\u0009_this select 1: ARRAY - Path\n\n\u0009Returns:\n\u0009ARRAY - List of index values\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Take On Helicopters","1.00"],"Additional":null},{"Name":"BIS_fnc_dbValueList","Desc":" //\n/*\n\n\u0009Description:\n\u0009Returns all values withing class.\n\n\u0009Parameter(s):\n\u0009_this select 0: ARRAY - Database array\n\u0009_this select 1: ARRAY - Path\n\n\u0009Returns:\n\u0009ARRAY - List of value names\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Take On Helicopters","1.00"],"Additional":null},{"Name":"BIS_fnc_dbValueRemove","Desc":" //\n/*\n\n\u0009Description:\n\u0009Remove value from Scripted Database.\n\n\u0009Parameter(s):\n\u0009_this select 0: ARRAY - Database array\n\u0009_this select 1: ARRAY - Path\n\n\u0009Returns:\n\u0009BOOLEAN - True if value was removed\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Take On Helicopters","1.00"],"Additional":null},{"Name":"BIS_fnc_dbValueReturn","Desc":" //\n/*\n\n\u0009Description:\n\u0009Returns content of given value.\n\n\u0009Parameter(s):\n\u0009_this select 0: ARRAY - Database array\n\u0009_this select 1: ARRAY - Path\n\n\u0009Returns:\n\u0009ARRAY - Value content\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Take On Helicopters","1.00"],"Additional":null},{"Name":"BIS_fnc_dbValueSet","Desc":" //\n/*\n\n\u0009Description:\n\u0009Add value to Scripted Database.\n\n\u0009Parameter(s):\n\u0009_this select 0: ARRAY - Database array\n\u0009_this select 1: ARRAY - Path\n\u0009_this select 2: ARRAY - Value\n\n\u0009Returns:\n\u0009BOOLEAN - True if value was added\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Take On Helicopters","1.00"],"Additional":null},{"Name":"BIS_fnc_deleteInventory","Desc":" /*\n\n\u0009Description:\n\u0009Delete loadout saved using BIS_fnc_saveInventory\n\n\u0009Parameter(s):\n\u0009\u00090: OBJECT - unit of which loadout will be saved\n\u0009\u00091: ARRAY in format\n\u0009\u0009\u00090: NAMESPACE or GROUP or OBJECT - target in which namespace the loadout is saved\n\u0009\u0009\u00091: STRING - loadout name\n\n\u0009Returns:\n\u0009BOOL\n*/\n\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_deleteTask","Desc":" /*\n\u0009\n\u0009Description:\n\u0009Delete task\n\u0009\n\u0009Parameters:\n\u0009\u00090: STRING - Task ID\n\u0009\u00091: Removed task owners (optional, the task will be removed for all existing owners by default)\n\u0009\u0009\u0009BOOL - true to useall playable units\n\u0009\u0009\u0009OBJECT - specific object\n\u0009\u0009\u0009GROUP - all objects in the group\n\u0009\u0009\u0009SIDE - all objects of the given side\n\u0009\u0009\u0009ARRAY - collection of above types\n\n\u0009Returns:\n\u0009BOOL\n*/\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.06"],"Additional":null},{"Name":"BIS_fnc_destroyCity","Desc":" Destroys building in given area based on input seed. ","Syn":{"Syntax":" [position,areaSize,seed,blacklist] call BIS_fnc_destroyCity  ","Params":["position: Array (in format position) or Object (object position) or String (marker position)\n\n","areaSize (Optional): Number - area diameter (default is 1000)","seed (Optional): Number - random seed (default is 1138)","blacklist (Optional): Array of blacklisted objects (default is an empty array)"],"Return":" Boolean - true when completed "},"Examples":["[\"destroyBase\", 500, 42, [bis_vila]] call bis_fnc_destroyCity;"],"Additional":["call","Functions Library"]},{"Name":"BIS_fnc_diagAAR","Desc":" #define AAR_VERSION\u0009\u00091.02\n#define GUI_MAP\u0009\u0009\u0009(_display displayctrl 2201)\n#define GUI_BACKGROUND\u0009\u0009(_display displayctrl 1000)\n#define GUI_TIMELINE\u0009\u0009(_display displayctrl 1900)\n#define GUI_TOP\u0009\u0009\u0009(_display displayctrl 1100)\n#define GUI_LIST_MISSIONS\u0009(_display displayctrl 2100)\n#define GUI_LIST_SESSIONS\u0009(_display displayctrl 2101)\n#define GUI_IDC\u0009\u0009\u0009(_display displayctrl _idc)\n#define PROFILE_AAR_VARNAME\u0009\"BIS_fnc_diagAAR_data\"\n#define PROFILE_AAR\u0009\u0009(profilenamespace getvariable [PROFILE_AAR_VARNAME,[]])\n\n#define ID_META_VERSION\u0009\u00090\n#define ID_META_SEED\u0009\u00091\n#define ID_META_PLAYER\u0009\u00092\n#define ID_META_PLAYERNAME\u00093\n#define ID_META_UNITS\u0009\u00094\n#define ID_META_DELAY\u0009\u00095\n\n#define ID_VAR_UNIT\u0009\u00090\n#define ID_TYPEOF\u0009\u00091\n#define ID_SIDE\u0009\u0009\u00092\n#define ID_DAMAGE\u0009\u00093\n#define ID_POSITION\u0009\u00094\n#define ID_DIRECTION\u0009\u00095\n#define ID_COMMANDER\u0009\u00096\n\n#define RGB_SELECTED\u0009\u00091,0,0\n#define RGB_DISABLED\u0009\u00090,0,0\n#define COLOR_SELECTED\u0009\u0009[RGB_SELECTED,1]\n#define COLOR_SELECTED_FADED\u0009[RGB_SELECTED,0.1]\n#define COLOR_DISABLED\u0009\u0009[RGB_DISABLED,0.4]\n#define COLOR_DISABLED_FADED\u0009[RGB_DISABLED,0.05]\n#define COLOR_DEATH\u0009\u0009[0,0,0,1]\n#define ICON_SIZE\u0009\u000932\n\n//--- Function called before display - create display and terminate\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_diagAARrecord","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_diagAnim","Desc":" /*\n\u0009File: fn_diagAnim.sqf\n\n\u0009Description:\n\u0009Displays or logs animation states:\n\u0009 * animChanged - when action is performed (only to debug.log);\n\u0009 * animDone - when animation chain that was sterted by action is finished (only to debug.log);\n\u0009 * animStateChanged - each animation state changes (ie.  animationState _who != _former_animationState_of_who) (debug.log + globalchat).\n\u0009 \n\u0009\n\u0009Parameter(s):\n\u00091: (optional) \u003cobject\u003e subject\n\u0009\u0009\n\u0009Returns:\n\u0009\u003c\u003e nothing\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 2","1.00"],"Additional":null},{"Name":"BIS_fnc_diagBulletCam","Desc":" /*\n\n\u0009Description:\n\u0009Every time a given unit fires, bullet cam is created.\n\n\u0009Parameter(s):\n\u0009\u00090: OBJECT - unit on which firing is tracked\n\n\u0009Returns:\n\u0009BOOL\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_diagConfig","Desc":" /*\n\n\u0009Description:\n\u0009Prints config entries.\n\n\u0009Parameter(s):\n\u0009\u00090: CONFIG - config class which will be searched (default: configFile)\n\u0009\u00091: STRING or ARRAY - entry name(s) whose values will be printed\n\u0009\u00092: STRING - scan mode, can be one of following:\n\u0009\u0009\u0009\"controls\" - recursively scans controls in root, class controls, class controlsBackground and in RscControlsGroup controls (type = 15).\n\u0009\u0009\u0009\"turrets\" - recursively scans vehicles's turrets.\n\u0009\u0009\u0009\"weapons\" - scans weapon muzzles and modes.\n\u0009\u0009\u0009(default) - scans just class roots.\n\n\u0009Returns:\n\u0009STRING\n\n\u0009Results are printed to debug log and wiki compatible table is copied to clipboard.\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_diagFindMissingAuthors","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_diagHit","Desc":" /*\n\n\u0009Description:\n\u0009Tracks received wounds\n\n\u0009Parameter(s): None\n\n\u0009Returns:\n\u0009BOOL\n*/\n\n//--- No diagnostic in empty missions\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_diagKey","Desc":" /*\n\n\u0009Description:\n\u0009Tracks pressed keys\n\n\u0009Parameter(s): None\n\n\u0009Returns:\n\u0009BOOL\n*/\n\n\n//--- No diagnostic in empty missions\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_diagKeyLayout","Desc":" /*\n\n\u0009Description:\n\u0009Exports default key layout to wiki template.\n\n\u0009Parameter(s):\n\u0009_this select 0: STRING - category, can be one of following\n\u0009\u0009\"\" - all controls in game\n\u0009\u0009\"All\"\n\u0009\u0009\"BasicInfantryControls\"\n\u0009\u0009\"Car\"\n\u0009\u0009\"Air\"\n\u0009\u0009\"Helicopter\"\n\u0009\u0009\"Submarine\"\n\u0009\u0009\"Buldozer\"\n\u0009\u0009\"UserActions\"\n\u0009_this select 1: STRING - selection method, can be one of following\n\u0009\u0009\"\" - single tap\n\u0009\u0009\"double\" - double tap\n\u0009\u0009\"LCtrl\" - with left control pressed\n\u0009\u0009\"RCtrl\" - with right control pressed\n\u0009\u0009\"LShift\" - with left shift pressed\n\u0009\u0009\"RShift\" - with right shift pressed\n\n\u0009Returns:\n\u0009STRING - wiki export text (also copied to clipboard)\n*/\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_diagKeyTest","Desc":" /*\n\u00090 - Log all categories\n\u00091 - Log Uncategorized\n\u00092 - Log unassigned\n\u00093 - Log undefined\n\u00094 - Log localized names\n*/\n\n#define UserActionDesc ()\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_diagKnownAsTarget","Desc":" /*\n\u0009File: fn_diagKnownAsTarget.sqf\n\n\u0009Description:\n\u0009Visualize and profile which units know about one specific unit and how much they do.\n\u0009Calling function again stops diagnostics.\n\u0009\n\u0009Parameter(s):\n\u0009_this select 0: profile unit (Object) [default player]\n\u0009_this select 1: radius (Scalar - meters) [default 1000m]\n\u0009\n\u0009Returns:\n\u0009-\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_diagKnownTargets","Desc":" /*\n\u0009File: fn_diagKnownTargets.sqf\n\n\u0009Description:\n\u0009Visualize and profile which units one specific unit knows about and how much.\n\u0009Calling function again stops diagnostics.\n\n\u0009Parameter(s):\n\u0009_this select 0: profile unit (Object) [default player]\n\u0009_this select 1: radius (Scalar - meters) [default 1000m]\n\u0009\n\u0009Returns:\n\u0009-\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_diagLoop","Desc":" /*\n\n\u0009Description:\n\u0009Runs scripted loop. Repeated call terminates previous loops.\n\n\u0009Parameter(s):\n\u0009\u00090: CODE - code to be executed\n\u0009\u00091: NUMBER - delay between calls (default: 0.1)\n\n\u0009Returns:\n\u0009SCRIPT - spawn handle\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_diagMacros","Desc":" /*\n\n\u0009Description:\n\u0009Exports config macros.\n\n\u0009Parameter(s):\n\u0009\u00090: CONFIG or ARRAY - config container to be searched (e.g. configFile \u003e\u003e \"CfgVehicles\") or list of classes or classnames\n\u0009\u00091: ARRAY - list of macro names to be used (e.g. [\"MAPSIZE\",\"NAMESOUND\"])\n\u0009\u00092 (Optional): STRING - macro category name (when param 0 is CONFIG, its classname is used by default - e.g. \"CfgVehicles\")\n\n\u0009Returns:\n\u0009STRING\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_diagMacrosAuthor","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_diagMacrosMapSize","Desc":" /*\n\n\u0009Description:\n\u0009Prints mapSize values based on real object size and copies it to clipboard.\n\u0009Mission has to be running on order to get the values.\n\n\u0009Parameter(s):\n\u0009\u00090: CONFIG or ARRAY - either config container, or list of classes or classnames\n\u0009\u00091: STRING - output mode, can be on of following:\n\u0009\u0009\u0009\"wiki\" - wiki table\n\u0009\u0009\u0009\"config\" - #define macros with model dimension values\n\u0009\u0009\u0009\"config_current\" - #define macros with current config values\n\u0009\u00092: ARRAY - list of classnames which will be excluded from the scan\n\n\u0009Returns:\n\u0009STRING\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_diagMacrosNameSound","Desc":" /*\n\n\u0009Description:\n\u0009Detects vehicle types and prints their radio protocol definitions to clipboard\n\n\u0009Parameter(s): N/A\n\n\u0009Returns:\n\u0009STRING\n*/\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_diagMacrosVerify","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_diagMissionPositions","Desc":" /*\n\n\u0009Description:\n\u0009Displays positions of units from all missions\n\n\u0009Parameter(s):\n\u00090: CONFIG - config path which will be scanned (default: configfile \u003e\u003e \"CfgMissions\")\n\u00091: (Optional): BOOL - when true, displays all units, otherwise just player positions (default: false)\n\u00092: (Optional): BOOL - when true, scan will perceive the main folder as campaign (required when param 0 is direct path to campaign)\n\n\u0009Returns:\n\u0009BOOL\n*/\n\n#define ICON_SIZE\u000926\n#define DELETE_CONFIG\u0009diag_mergeconfigfile [\"O:\\arma3\\A3\\Functions_F\\Diagnostic\\fn_diagMissionPositions_delete.cfg\"];\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_diagMissionWeapons","Desc":" /*\n\n\u0009Description:\n\u0009Lists all weapons and magazines available in a mission.\n\n\u0009Parameter(s):\n\u0009\u00090: BOOL (Optional) - True to copy the result into clipboard (default: false)\n\n\u0009Returns:\n\u0009ARRAY\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_diagPreview","Desc":" /*\n\n\u0009Description:\n\u0009Previews selected classes from given container\n\n\u0009Parameter(s):\n\u0009_this select 0: STRING - class container. Can be: \"CfgVehicles\", \"CfgWeapons\"\n\u0009_this select 1: STRING - parent class of created objects (e.g. \"Car\" or \"Rifle\")\n\u0009_this select 2 (Optional): NUMBER - distance between created objects (default: 10m)\n\u0009_this select 3 (Optional): ARRAY - initial position\n\n\u0009Returns:\n\u0009ARRAY - list of created classes\n*/\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_diagPreviewCycle","Desc":" /*\n\n\u0009Description:\n\u0009Previews selected class from the list.\n\u0009When cheat1 is activated, classnames will be shown instead of display names\n\n\u0009Parameter(s):\n\u0009_this select 0: STRING - class container. Can be: \"CfgVehicles\", \"CfgWeapons\"\n\u0009_this select 1: ARRAY - position of the previewed object\n\u0009_this select 2: ARRAY - vector of previewed object in format [pitch,bank]\n\u0009_this select 3 (Optional): DISPLAY - parent display\n\n\u0009Returns:\n\u0009BOOL\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_diagPreviewVehicleCrew","Desc":" /*\n\n\u0009Description:\n\u0009Creates vehicles with their crew\n\n\u0009Parameter(s):\n\u0009\u00090: STRING - vehicle class\n\u0009\u00091: ARRAY - number of vehicles in format [rows,columns], total count being rows x columns\n\u0009\u00092: NUMBER - distance between vehicles\n\n\u0009Returns:\n\u0009NOTHING\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_diagRadio","Desc":" /*\n\n\u0009Description:\n\u0009Tracks played radio sentences\n\n\u0009Parameter(s): None\n\n\u0009Returns:\n\u0009BOOL\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_diagVehicleIcons","Desc":" /*\n\n\u0009Description:\n\u0009Previews all vehicle icons on map\n\n\u0009Parameter(s):\n\u0009\u00090: STRING (Optional) - Parent class of scanned vehicles (default \"All\")\n\u0009\u00091: ARRAY (Optional) - Position of the fist icon, others will be layered on top of it (default: [100,100], i.e. bottom left corner)\n\u0009\u00092: CONTROL (Optional) - Map on which markers are displayed (default value: main map)\n\n\u0009Returns:\n\u0009BOOL\n*/\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_diagWiki","Desc":" /*\n\n\u0009Description:\n\u0009Scans specific config folder and outputs the values in wiki format.\n\n\u0009Parameter(s):\n\u0009_this: STRING - Mode, can be one of following:\n\u0009\u0009RscMapControl_icons\n\u0009\u0009RscMapControl_colors\n\u0009\u0009RscMapControl_fonts\n\u0009\u0009IslandMap_icons\n\u0009\u0009IslandMap_colors\n\u0009\u0009CfgLocationTypes\n\u0009\u0009CfgMarkers\n\u0009\u0009CfgMarkerBrushes\n\u0009\u0009CfgMarkerColors\n\u0009\u0009CfgVehicleIcons\n\u0009\u0009CfgDiary_Icons\n\u0009\u0009CfgWrapperUI_Cursors\n\u0009\u0009Anims_aimPrecision\n\u0009\u0009RadioProtocol_Select\n\u0009\u0009RadioProtocol_Sent\n\u0009\u0009RadioProtocol_Words\n\u0009\u0009RadioProtocol_Stats\n\u0009\u0009RadioProtocol_Variables\n\u0009\u0009CfgVehicles_identityTypes\n\u0009\u0009CfgVehicles_speechVariants\n\u0009\u0009CfgVehicles_mapSize\n\u0009\u0009CfgActions\n\u0009\u0009CfgActions_CfgVehicles\n\n\u0009Returns:\n\u0009STRING\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_diaryHints","Desc":" #define DIARY_CATEGORY\u0009\"BIS_fnc_diaryHints\"\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Take On Helicopters","1.00"],"Additional":null},{"Name":"BIS_fnc_diaryMaps","Desc":" #define DIARY_CATEGORY\u0009\"BIS_fnc_diaryMaps\"\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Take On Helicopters","1.00"],"Additional":null},{"Name":"BIS_fnc_dirIndicator","Desc":" Direction indicator.GUI layer for indicator is 17.","Syn":{"Syntax":" [center,related object,color,sizeCoef] call BIS_fnc_dirIndicator  ","Params":["center: Object - center\n\n","related object: Object to which indicator points to","color (Optional): Array in format Color","sizeCoef (Optional): Number - size coeficient (default is same as height of command bar)"],"Return":" Nothing "},"Examples":["[player, TheBoss, [0.706, 0.0745, 0.0196, 1]] call BIS_fnc_dirIndicator;"],"Additional":["call","Functions Library"]},{"Name":"BIS_fnc_dirtEffect","Desc":" /*\n\u0009File: fn_dirtEffect.sqf\n\n\u0009Description:\n\u0009Dirt (texture) postprocess.\n\n\u0009Parameter(s):\n\u0009_this select 0: Object - Unit who gets the damage.\n\u0009_this select 1: Number - Damage given unit by explosion.\n\u0009\n\u0009Returned value:\n\u0009None.\n*/\n\n//TEST\n// hint format [\"Hit by: %1\", BIS_hitArray select 4];\n\n//Script displays dust PP according to damage obtained from near explosion\n//takes array from \"Explosion\" event handler, that is registered in FSM PP\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_dirTo","Desc":" Function which returns vector direction from pos1 to pos2.\n\n","Syn":{"Syntax":" [param1, param2] call BIS_fnc_dirTo ","Params":["param1 - vector starting point, Position or Object\n\n","param1 - vector ending point, Position or Object"],"Return":" Number "},"Examples":["sets unit1 in the direction of unit2\nunit1 setDir [unit1, unit2] call BIS_fnc_dirTo"],"Additional":["call","BIS_fnc_help"]},{"Name":"BIS_fnc_disableSaving","Desc":" /*\n\u0009\n\u0009Description:\n\u0009Controls the disabling of saving, stacking each request to prevent saving being enabled too early.\n\u0009\n\u0009Parameters:\n\u0009\u0009_this: STRING - Unique string ID\n\u0009\n\u0009Returns:\n\u0009True if successful, false if not.\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_displayClouds","Desc":" #define DISPLAY\u0009\u0009(uinamespace getvariable 'hsim_RscClouds')\n#define CONTROL\u0009\u0009(DISPLAY displayctrl _idc)\n#define RSC_LAYER\u0009759\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Take On Helicopters","1.00"],"Additional":null},{"Name":"BIS_fnc_displayColorGet","Desc":" Loads custom color settings from CfgUIDefault.\n\nIf variables are not stored in profileNamespace yet, function will declare them. ","Syn":{"Syntax":" [tag,variable] call BIS_fnc_displayColorGet; \u003cbr\u003e(Alternate Syntax exists check Read more)","Params":["tag: String - Tag defined in CfgUIDefault\n\n","variable: String - Variable defined in CfgUIDefault \u003e\u003e Variables"],"Return":" Array - in format Color "},"Examples":["[\"GUI\",\"BCG_RGB\"] call BIS_fnc_displayColorGet;\nReturns menu color"],"Additional":["call","See also needed"]},{"Name":"BIS_fnc_displayColorSet","Desc":" Applies custom color settings to given Display.\n\nDisplay must be already using color macros, function will just refresh the values according to current color settings. ","Syn":{"Syntax":" [displayClass,display,commitTime,code] call BIS_fnc_displayColorSet; ","Params":["displayClass: Config - Display classname\n\n","display: Display","commitTime (Optional): Number - Commit time","code (Optional): Code - Code executed for every control element (which is passed as _this)"],"Return":" Boolean "},"Examples":["[configFile \u003e\u003e (GUI_classes select _foreachindex),_x] call bis_fnc_displayColorSet;","[\n\u0009configfile \u003e\u003e _class,\n\u0009_display,\n\u00090,\n\u0009{\n\u0009\u0009_this ctrlSetFade 0;\n\u0009\u0009_this ctrlCommit 0.5;\n\u0009}\n] call bis_fnc_displayColorSet;"],"Additional":["call","See also needed"]},{"Name":"BIS_fnc_displayControls","Desc":" /*\n\n\u0009Description:\n\u0009Return all controls of given display class\n\n\u0009Parameter(s):\n\u0009_this select 0: CONFIG - display config\n\u0009_this select 1: NUMBER or CONFIG or STRING - type of returned values (control configs, their names or IDCs; default: configfile))\n\u0009_this select 2: BOOL - true to search content of controls group (default: true)\n\n\u0009Returns:\n\u0009ARRAY\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Take On Helicopters","1.00"],"Additional":null},{"Name":"BIS_fnc_displayLoading","Desc":" Loading Screens init. ","Syn":{"Syntax":" [onLoad,id] call BIS_fnc_displayLoading; ","Params":["onLoad: Array - params provided by onLoad UI Event Handler\n\n","id: Number - id of loading screen. Used only for debugging."],"Return":" Nothing "},"Examples":["([_this,##ID##] call (uinamespace getvariable 'bis_fnc_displayLoading')"],"Additional":["call","Loading Screens"]},{"Name":"BIS_fnc_displayMission","Desc":" /*\n\n\u0009Description:\n\u0009Returns main display of current mission/intro/outro.\n\n\u0009Parameter(s):\n\u0009NOTHING\n\n\u0009Returns:\n\u0009DISPLAY\n*/\n\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Take On Helicopters","1.00"],"Additional":null},{"Name":"BIS_fnc_displayName","Desc":" /*\n\n\u0009Description:\n\u0009Return displayName of given class. Return class if displayName not defined.\n\n\u0009Parameter(s):\n\u0009_this: CONFIG\n\n\u0009Returns:\n\u0009STRING\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Take On Helicopters","1.00"],"Additional":null},{"Name":"BIS_fnc_displayResize","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Take On Helicopters","1.00"],"Additional":null},{"Name":"BIS_fnc_distance2D","Desc":" /************************************************************\n\u0009Distance 2D\n\nParameters: [object or position 1, object or position 2]\n\nReturns the distance between the two objects or positions\n\"as the crow flies\" (ignoring elevation)\nExample: [player, getpos dude] call BIS_fnc_distance2D\n************************************************************/\n\n//return squared distance between _pos1 and _pos2\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 2","1.00"],"Additional":null},{"Name":"BIS_fnc_distance2Dsqr","Desc":" /************************************************************\n\u0009Distance 2D Squared\n\nParameters: [object or position 1, object or position 2]\n\nReturns the SQUARE of the distance between the two objects or\npositions \"as the crow flies\" (ignoring elevation).\nWorking in the squared domain is a little faster than using the\nfn_distance2D function.\n\nExample: [player, getpos dude] call  BIS_fnc_distance2Dsqr\n************************************************************/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 2","1.00"],"Additional":null},{"Name":"BIS_fnc_dotProduct","Desc":" /************************************************************\n\u0009Dot Product\n\u0009\nReturns the dot product of two vectors.\nThe vectors can have any number of elements (2, 3, etc), but\nthey must have the same number.\n************************************************************/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki)\n\n\n\n\n \n\n Use vectorDotProduct instead.\n ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 2","1.00"],"Additional":null},{"Name":"BIS_fnc_drawAO","Desc":" Draws a dashed line around the outer edges of a trigger. ","Syn":{"Syntax":" [[triggerName],''distance''] call BIS_fnc_drawAO; ","Params":["Array - List of triggers that indicate AO.\n\nTrigger - Single trigger's name that indicates AO. Alternative if only one AO is used.\n\n\n\n","Number - Number that decides distance between each new line drawn. (Optional, default 50)"],"Return":" Nothing "},"Examples":["[Trigger1] call BIS_fnc_drawAO; // Draws a dashed line around trigger1's outer edge, with 50m between each line.","[Trigger1,10] call BIS_fnc_drawAO; // Draws a dashed line around trigger1's outer edge, with 10m between each line.","[[Trigger1,Trigger2]] call BIS_fnc_drawAO; // Draws dashed lines around multiple triggers, useful for multiple AOs in one mission."],"Additional":["call","See also needed"]},{"Name":"BIS_fnc_drawCuratorDeaths","Desc":" /*\n\n\u0009Description:\n\u0009Show skull unit for curator when the unit dies.\n\n\u0009Parameter(s):\n\u0009\u00090: OBJECT - unit\n\n\u0009Returns:\n\u0009BOOL\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.16"],"Additional":null},{"Name":"BIS_fnc_drawCuratorLocations","Desc":" /*\n\n\u0009Description:\n\u0009Label every vilage, town and city in curator interface\n\n\u0009Parameter(s):\n\u0009\u00090: OBJECT - curator module\n\n\u0009Returns:\n\u0009BOOL\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.16"],"Additional":null},{"Name":"BIS_fnc_drawCuratorRespawnMarkers","Desc":" /*\n\n\u0009Description:\n\u0009Create a curator icon on every respawn marker\n\n\u0009Parameter(s):\n\u0009\u00090: OBJECT - curator module\n\u0009\u00091: ARRAY of SIDEs \n\n\u0009Returns:\n\u0009BOOL\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.16"],"Additional":null},{"Name":"BIS_fnc_drawMinefields","Desc":" /*\n\n\u0009Description:\n\u0009Draw minefields on the map\n\u0009Dynamically calculated from all mines positions\n\u0009Distinguishes AP and AT minefields\n\n\u0009Parameter(s):\n\u0009NONE\n\n\u0009Returns:\n\u0009NONE\n*/\n\n//--- Script already running - terminate and send command to refresh the loop\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_drawRespawnPositions","Desc":" /*\n\n\u0009Description:\n\u0009Draw respawn positions on the map (added by BIS_fnc_addRespawnPosition)\n\n\u0009Parameter(s):\n\u0009\u00090: BOOL - true to start drawing, false to end it\n\n\u0009Returns:\n\u0009NONE\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_dynamicText","Desc":" /*\n\u0009File: credits.sqf\n\n\u0009Description:\n\u0009Dynamic opening credits\n\n\u0009Parameter(s):\n\u0009_this select 0: Text\n\u0009_this select 1: (Optional) X coordinates\n\u0009_this select 2: (Optional) Y coordinates\n\u0009_this select 3: (Optional) Duration\n\u0009_this select 4: (Optional) Fadein time\n\u0009_this select 5: (Optional) Delta Y\n\u0009_this select 6: (Optional) Resource layer\n*/\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 2: Operation Arrowhead","1.00"],"Additional":null},{"Name":"BIS_fnc_earthquake","Desc":" /*\n\u0009\n\u0009Description:\n\u0009Earthquake simulation - now just camera shake and sound\n\u0009\n\u0009Parameter(s):\n\u0009_this select 0:\u0009INT - intensity {1,2,3,4}\u0009\n\u0009\n\u0009Returns:\n\u0009NONE\n\u0009\n*/\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_effectFired","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_effectFiredArtillery","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_effectFiredFlares","Desc":" /*ArmA 2 flares, by Maddmatt\n*/\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_effectFiredHeliRocket","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_effectFiredLongSmoke","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_effectFiredRifle","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_effectFiredRocket","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_effectFiredSmokeLauncher","Desc":" /*ArmA 2 smokscreen, by Maddmatt\nUses code from VBS2 Smoke launcher by Philipp Pilhofer (raedor) \u0026 Andrew Barron\n*/\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_effectFiredSmokeLauncher_boat","Desc":" /*ArmA 2 smokscreen, by Maddmatt\nUses code from VBS2 Smoke launcher by Philipp Pilhofer (raedor) \u0026 Andrew Barron\n*/\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_effectKilled","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_effectKilledAirDestruction","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_effectKilledAirDestructionStage2","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_effectKilledSecondaries","Desc":" //Small secondary fuel explosions\n//By Maddmatt for ArmA 2\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_effectPlankton","Desc":" /*\n\u0009File: fn_effectPlankton.sqf\n\n\u0009Description:\n\u0009Plankton particle effect. Function must be started for any plankton in the water.\n\n\u0009Parameter(s):\n\u0009None.\n\n\u0009Returned value:\n\u0009None.\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_enableSaving","Desc":" /*\n\u0009\n\u0009Description:\n\u0009Controls the enabling of saving. Will only enable saving if there are no remaining requests for disabled saving.\n\u0009\n\u0009Parameters:\n\u0009\u0009_this: STRING - Unique string ID\n\u0009\n\u0009Returns:\n\u0009True if successful, false if not.\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_endLoadingScreen","Desc":" /*\n\n\u0009Description:\n\u0009Unregister a loading screen. When none other remains, end the loading.\n\n\u0009Parameter(s):\n\u0009\u00090: STRING - screen ID, used in BIS_fnc_endLoadingScreen\n\n\u0009Returns:\n\u0009BOOL - true when unregistered\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","0.58"],"Additional":null},{"Name":"BIS_fnc_endMission","Desc":" Ends mission with a fade effect. ","Syn":{"Syntax":" [(endName,isVictory,fadeType)] spawn BIS_fnc_endMission; ","Params":["endName (Opional): String - end type, as used in endMission command (default: \"end1\")\n\n","isVictory (Opional): Boolean - true to successful end, false for failed end (default: true)","fadeType (Optional): Boolean or Number - true for signature closing shot. When number, simple fade to black of given duration is used."],"Return":" Boolean "},"Examples":["\"end1\" call BIS_fnc_endMission;","[\"epicFail\",false,2] call BIS_fnc_endMission;"],"Additional":["call","Debriefing"]},{"Name":"BIS_fnc_endMissionServer","Desc":" /*\n\n\u0009Description:\n\u0009End the mission on all computers.\n\n\u0009Parameter(s):\n\u0009\u00090: STRING - end type. Can be custom or one of dynamically calculated ones:\n\u0009\u0009\u0009\"Won\" - show \"MISSION COMPLETED\" to everyone\n\u0009\u0009\u0009\"Lost\" - show \"MISSION FAILED\" to everyone\n\u0009\u0009\u0009\"SideScore\" - show \"YOUR SIDE WON\" to side with largest score\n\u0009\u0009\u0009\"GroupScore\" - show \"YOUR GROUP WON\" to group with largest score\n\u0009\u0009\u0009\"PlayerScore\" - show \"YOUR WON\" to player with largest score\n\n\u0009Returns:\n\u0009BOOL\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_enemyDetected","Desc":" /*\n\n\u0009Description:\n\u0009Return true if unit knows about nearby enemy unit or driven vehicle.\n\n\u0009Parameter(s):\n\u0009_this: unit that is inspected\n\n\u0009Returns:\n\u0009_knowsAboutEnemy:bool\n\n\u0009Example:\n\u0009_knowsAboutEnemy:bool = _unit call BIS_fnc_enemyDetected;\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_enemySides","Desc":" /*\n\n\u0009Description:\n\u0009Returns sides enemy to the given side / object\n\n\u0009Parameter(s):\n\u00090: SIDE or OBJECT\n\n\u0009Returns:\n\u0009ARRAY of SIDEs\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_enemyTargets","Desc":" /*\n\n\u0009Description:\n\u0009Return list of nearby enemy targets for given unit.\n\n\u0009Parameter(s):\n\u0009_this: unit that is inspected\n\n\u0009Returns:\n\u0009_targets:array (empty array if unit doesn't know about any enemy)\n\n\u0009Example:\n\u0009_targets:array = _unit call BIS_fnc_getEnemyTargets;\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_error","Desc":" Log error message and display it (bottom of the UI). If it's called from a function, it'll include the function name before your content.  \n\nOutput is: \"profileName/log: ERROR: \u003cyour content\u003e\"","Syn":{"Syntax":" [param1,param2,...,param10] call BIS_fnc_error; ","Params":["param1: String - Logged message (formatted)\n\n","param2 - param10: Anything"],"Return":" String - displayed message "},"Examples":["[\"Player is too far away (%1)\",player distance dude] call BIS_fnc_error;"],"Additional":["call","See also needed"]},{"Name":"BIS_fnc_errorMsg","Desc":" /*\n\n\u0009Description:\n\u0009Display error window\n\n\u0009Parameter(s):\n\u0009_this select 0: STRING - Formatted message\n\u0009_this select n (Optional): ANY - additional parameters\n\n\u0009Returns:\n\u0009NOTHING\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Take On Helicopters","1.00"],"Additional":null},{"Name":"BIS_fnc_establishingShot","Desc":" /*\n\n\u0009Description:\n\u0009Play a fake UAV observational sequence which serves as an establishing shot.\n\n\u0009Parameters:\n\u0009\u0009_this select 0: OBJECT or ARRAY - Target position/object\n\u0009\u0009_this select 1: STRING - Text to display\n\u0009\u0009_this select 2 (Optional): NUMBER - Altitude (in meters)\n\u0009\u0009_this select 3 (Optional): NUMBER - Radius of the circular movement (in meters)\n\u0009\u0009_this select 4 (Optional): NUMBER - Viewing angle (in degrees)\n\u0009\u0009_this select 5 (Optional): NUMBER - Direction of camera movement (0: anti-clockwise, 1: clockwise, default: random)\n\u0009\u0009_this select 6 (Optional): ARRAY -\u0009Objects/positions/groups to display icons over\n\u0009\u0009\u0009\u0009\u0009\u0009\u0009Syntax: [[icon, color, target, size X, size Y, angle, text, shadow]]\n\u0009\u0009_this select 7 (Optional): NUMBER - Mode (0: normal (default), 1: world scenes)\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_estimatedTimeLeft","Desc":" /*\n\n\u0009Description:\n\u0009Set mission countdown.\n\n\u0009Parameter(s):\n\u0009\u00090: NUMBER - remaining time in seconds\n\n\u0009Returns:\n\u0009estimatedEndServerTime\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_execFSM","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_execRemote","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_executeStackedEventHandler","Desc":" /*\n\u0009\n\u0009Description:\n\u0009This function executes the stacked items, should not be called independently\n\u0009\n\u0009Parameter(s):\n\u0009_this select 0:\u0009STRING\u0009- The onXxx event handler\n\u0009\n\u0009Returns:\n\u0009BOOLEAN - TRUE\n*/\n//Parameters\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_execVM","Desc":"execVM desired script with desired argument(s). This function is only really useful when combined with BIS_fnc_MP to execute a script remotely. ","Syn":{"Syntax":" filename call BIS_fnc_execVM \u003cbr\u003e(Alternate Syntax exists check Read more)","Params":["filename: String"],"Return":" Script - script handle, which can be used to determine (via scriptDone) when the script has finished. "},"Examples":["\"Bonus\\initializeExtras.sqf\" call BIS_fnc_execVM;","[player,\"reposition.sqf\"] call BIS_fnc_execVM;","[[[_param1, _param2], \"addBonus.sqf\"], \"BIS_fnc_execVM\", true] call BIS_fnc_MP;"],"Additional":["call","BIS_fnc_execFSM","BIS_fnc_execRemote","BIS_fnc_spawn","BIS_fnc_call"]},{"Name":"BIS_fnc_exportCfgGroups","Desc":" /*\n\n\u0009Description:\n\u0009Export group or object composition for use in CfgGroups. The result will be copied to clipboard.\n\n\u0009Parameter(s):\n\u0009\u00090: position (for supported types see BIS_fnc_position). Screen center is used by default\n\u0009\u00091: objects to be saved. Currently selected objects in curator are used by default\n\u0009\u0009\u0009ARRAY of OBJECTs - specific objects to be saved\n\u0009\u0009\u0009array in format used by nearEntities, which automatically get nearby objects\n\u0009\u0009\u0009\u00090: STRING or ARRAY of STRINGS - object types\n\u0009\u0009\u0009\u00091: NUMBER - radius in metres\n\n\u0009Returns:\n\u0009STRING\n*/\n\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_exportCfgHints","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_exportCfgMagazines","Desc":" /*\n\n\u0009Description:\n\u0009Export list of addons for Community Wiki\n\u0009http://community.bistudio.com/wiki/Category:Arma_3:_Assets\n\n\u0009Parameter(s):\n\u0009\u00090: ARRAY of STRINGs - list of CfgPatches classes\n\n\u0009Returns:\n\u0009BOOL\n*/\n\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_exportCfgPatches","Desc":" /*\n\n\u0009Description:\n\u0009Export list of addons for Community Wiki\n\u0009http://community.bistudio.com/wiki/Category:Arma_3:_Assets\n\n\u0009Parameter(s):\n\u0009\u00090: ARRAY of STRINGs - list of CfgPatches classes\n\n\u0009Returns:\n\u0009BOOL\n*/\n\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_exportCfgVehicles","Desc":" Export list of objects for Community Wiki (Assets). ","Syn":{"Syntax":" [mode,sides,classes,useAI] call BIS_fnc_exportCfgVehicles; \u003cbr\u003e(Alternate Syntax exists check Read more)","Params":["mode: String - mode\n\n \"config\" - copy the objects table to clipboard\n\n \"screenshots\" - create objects one by one and take their screenshot. Works only on \"Render\" terrain.\n\n \"screenshotsTest\" - create objects one by one without taking screen (to verify everything is ok)\n\n\n\n"," \"config\" - copy the objects table to clipboard\n"," \"screenshots\" - create objects one by one and take their screenshot. Works only on \"Render\" terrain.\n"," \"screenshotsTest\" - create objects one by one without taking screen (to verify everything is ok)\n","sides: Array - Array of Sides - only objects of these sides will be used","classes: Array - Arrayof Strings- list of CfgPatches classes. Only objects belonging to these addons will be used","useAI: Boolean - true to use only AI units (soldiers, vehicles), false to use empty ones"],"Return":" Boolean "},"Examples":["[] call BIS_fnc_exportCfgVehicles;","[\"config\", [3], [\"A3_Characters_F_Beta\",\"A3_Characters_F_EPA\",\"A3_Characters_F_EPB\"], true] call BIS_fnc_exportCfgVehicles;"],"Additional":["call","See also needed"]},{"Name":"BIS_fnc_exportCfgWeapons","Desc":" /*\n\n\u0009Description:\n\u0009Export list of weapons for Community Wiki\n\u0009http://community.bistudio.com/wiki/Category:Arma_3:_Assets\n\n\u0009Parameter(s):\n\u0009\u00090: STRING - mode\n\u0009\u0009\u0009\"Weapon\", \"VehicleWeapon\", \"Item\" - specific item type, based on BIS_fnc_itemType\n\u0009\u0009\u0009\"screenshots\" - create items one by one and take their screenshot. Works only on \"Render\" terrain.\n\u0009\u0009\u0009\"screenshotsTest\" - create items one by one without taking screen (to verify everything is ok)\n\n\u0009\u00091: ARRAY of STRINGs - list of CfgPatches classes. Only weapons belonging to these addons will be used doesn't work, ToDo)\n\n\u0009Returns:\n\u0009BOOL\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_exportCuratorCostTable","Desc":" /*\n\n\u0009Description:\n\u0009Generate spreadsheet with object classes and copy it to clipboard.\n\u0009The table will generate export code to be used in BIS_fnc_curatorObjectRegisteredTable\n\n\u0009Parameter(s):\n\u0009\u00090 (Optional): ARRAY of STRINGs - supported addons (classes from CfgPatches). When empty, all preloaded addons will be added. Use empty string to export just the cost calculation.\n\u0009\u00091 (Optional): STRING - format, can be \"ods\" or \"xls\"\n\u0009\u00092 (Optional): STRING - name of sheet with cost calculation. When empty, the calculation will be inserted on top of the table\n\u0009\u00093 (Optional): ARRAY of SIDEs or NUMBERs - filter only objects of listed sides or side IDs. Supported sides are west, east, resistance, civilian, sideUnknown and sideLogic\n\u0009\u00094 (Optional): CODE - condition for class to be listed. Config path to the class is passed as an argument (default: {true})\n\u0009\u00095 (Optional): CODE - default cost, must return STRING. When empty string is returned, no default cost will be used (default: {\"\"})\n\n\u0009Returns:\n\u0009BOOL\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.16"],"Additional":null},{"Name":"BIS_fnc_exportFunctionsToWiki","Desc":" /*\n\n\u0009Description:\n\u0009Export function descriptions to Community Wiki.\n\u0009Exported text will be copied to clipboard in XML format.\n\u0009Import it to wiki using https://community.bistudio.com/wiki?title=Special:Import\n\u0009If the page already exists, it will be replaced only when timestamp is newer.\n\n\u0009Parameter(s):\n\u0009\u00090: ARRAY - functions filter in format [\u003ctags\u003e,\u003ccategories\u003e,\u003cfunctions\u003e]\n\u0009\u0009\u0009tags: STRING or ARRAY of STRINGs - CfgFunctions tags (e.g., \"BIS\"). Use empty string for all of them.\n\u0009\u0009\u0009categories: STRING or ARRAY of STRINGs - categories (e.g., \"Debug\"). Use empty string for all of them.\n\u0009\u0009\u0009functions: STRING or ARRAY of STRINGs - specific function names (e.g., \"BIS_fnc_log\"). Use empty string for all of them.\n\u0009\u00091 (Optional) STRING - timestamp in format \"2013-09-12T16:00:00Z\"\n\n\u0009Returns:\n\u0009STRING - exported text\n\n\u0009Example:\n\u0009Export all functions:\u0009\u0009[] spawn bis_fnc_exportFunctionsToWiki;\n\u0009Export all Array functions:\u0009[\"\",\"Arrays\"] spawn bis_fnc_exportFunctionsToWiki;\n\u0009Export specific functions:\u0009[\"\",\"\",[\"BIS_fnc_log\",\"BIS_fnc_param\"]] spawn bis_fnc_exportFunctionsToWiki;\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_exportGroupFormations","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_exportInventory","Desc":" /*\n\n\u0009Description:\n\u0009Export unit's loadout\n\n\u0009Parameter(s):\n\u0009\u00090: OBJECT - unit of which loadout will be export\n\u0009\u00091: STRING - export type\n\u0009\u0009\u0009\"script\" - scripting commands, target is referred to as _unit\n\u0009\u0009\u0009\"init\" - scripting commands, target is referred to as this\n\u0009\u0009\u0009\"config\" - CfgVehicles attributes\n\u0009\u00092: BOOL - true to export identity (face, voice and insignia)\n\n\u0009Returns:\n\u0009STRING - SQF code\n*/\n\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_exportMapToBiTXT","Desc":" /*\n\n\u0009Description:\n\u0009Export terrain height map to BiTXT (Universal Bistudio TXT) file, which can be imported to Object Builder.\n\u0009Output is copied to clipboard.\n\n\u0009Parameter(s):\n\u0009\u00090 (Optional): NUMBER - object resolution, i.e, number of points per side (default: 64)\n\u0009\u00091 (Optional): NUMBER - object size in metres (default: 10)\n\u0009\u00092 (Optional): NUMBER - vertical coefficient. All Z coordinates will be multiplied by this number to highlight hills and mountains (default: 2)\n\n\u0009Returns:\n\u0009STRING - file output\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_fadeEffect","Desc":" /*\n\n\u0009Description:\n\u0009Easily carry out complex fading. Default values will be used if parameters aren't defined or set to nil.\n\n\u0009Parameter(s):\n\u0009_this select 0 (Optional): NUMBER - 0: fade out, 1: fade in\n\u0009_this select 1 (Optional): STRING - \"BLACK\": black fade, \"WHITE\": white fade\n\u0009_this select 2 (Optional): NUMBER - Duration of the fade in seconds\n\u0009_this select 3 (Optional): NUMBER - 1: blur while fading, 0: don't use blur\n\u0009_this select 4 (Optional): STRING - String of the music track you wish to play (will only work with fading in)\n\u0009_this select 5 (Optional): STRING - Ending you wish to use (will only work with fading out)\n\u0009_this select 6 (Optional): NUMBER - Use 0: failMission, 1: endMission\n\n\u0009Returns:\n\u0009Nothing.\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_fatigueEffect","Desc":" /*\n\u0009File: fn_fatigueEffect.sqf\n\n\u0009Description:\n\u0009Effects for high fatigue values.\n\n\u0009Parameter(s):\n\u0009None.\n\n\u0009Returned value:\n\u0009None.\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_feedbackInit","Desc":" /*\n\u0009File: fn_feedbackInit.sqf\n\n\u0009Description:\n\u0009Init function for feedback system. Declaration of variables, eventhandlers, etc.\n\n\u0009Parameter(s):\n\u0009None.\n\n\u0009Returned value:\n\u0009None. \n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_feedbackMain","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_filterString","Desc":" /*\n\n\u0009Description:\n\u0009Removes characters from a string based on the list of allowed characters.\n\n\u0009Parameter(s):\n\u0009_this select 0: STRING - Filtered text\n\u0009_this select 1 (Optional): STRING - Filter (default: A-Z, a-z, 0-9 and \"_\")\n\n\u0009Returns:\n\u0009STRING\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_findExtreme","Desc":" /*\n\u0009File: fn_findExtreme.sqf\n\n\u0009Description:\n\u0009Returns the minimum or maximum value in an Array.\n\n\u0009Parameter(s):\n\u0009_this select 0: Array (array)\n\u0009_this select 1: Scalar (mode)\n\u0009\u00090: minimum\n\u0009\u00091: maximum\n\u0009\n\u0009Returns:\n\u0009Scalar (extreme)\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 2: Operation Arrowhead","1.00"],"Additional":null},{"Name":"BIS_fnc_findInPairs","Desc":" /*\n\n\u0009Description:\n\u0009Searches the associative array for the 1st occurance of the key string and returns it's index.\n\n\u0009Syntax:\n\u0009_index:number = [_associativeArray:array,_key:string] call BIS_fnc_findInPairs;\n\n\u0009Example:\n\u00090 = [[[\"apple\",3],[\"pear\",2]],\"apple\"] call BIS_fnc_findInPairs;\n\n\u0009Returns:\n\u0009* if found: index (starting from 0)\n\u0009* if not found: -1\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","0.76"],"Additional":null},{"Name":"BIS_fnc_findNestedElement","Desc":" /*\n\u0009File: fn_findNestedElement.sqf\n\n\u0009Description:\n\u0009Function to find item in nested arrays and return a path to the first match.\n\u0009\n\u0009Example:\n\u0009_array = [[1, 2], [3, 4]];\n\u0009_path = [_array, 3] call BIS_fnc_findNestedElement; //Expected result: [1, 0]\n\n\u0009Parameter(s):\n\u0009_this select 0: Array\n\u0009_this select 1: queried element (Any Value)\n\u0009\n\u0009Returns:\n\u0009Array path to the element\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 2","1.00"],"Additional":null},{"Name":"BIS_fnc_findOverwatch","Desc":" /*\n\u0009File: fn_findOverwatch.sqf\n\n\u0009Description:\n\u0009Function which selects a position that provides overwatch\n\u0009onto another position.\n\n\u0009Parameter(s):\n\u0009_this select 0: the target position (position)\n\u0009_this select 1: maximum distance from target in meters (optional)\n\u0009_this select 2: minimum distance from target in meters (optional)\n\u0009_this select 3: minimum height in relation to target in meters (optional)\n\u0009_this select 4: position to start looking from, if different from target pos (optional)\n*/\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_findSafePos","Desc":" /*\n\u0009File: findSafePos.sqf\n\n\u0009Description:\n\u0009Function to retrieve and dynamic position in the world according to several parameters.\n\n\u0009Parameter(s):\n\u0009_this select 0: center position (Array)\n\u0009\u0009\u0009\u0009\u0009\u0009Note: passing [] (empty Array), the world's safePositionAnchor entry will be used.\n\u0009_this select 1: minimum distance from the center position (Number)\n\u0009_this select 2: maximum distance from the center position (Number)\n\u0009\u0009\u0009\u0009\u0009\u0009Note: passing -1, the world's safePositionRadius entry will be used.\n\u0009_this select 3: minimum distance from the nearest object (Number)\n\u0009_this select 4: water mode (Number)\n\u0009\u0009\u0009\u0009\u0009\u00090: cannot be in water\n\u0009\u0009\u0009\u0009\u0009\u00091: can either be in water or not\n\u0009\u0009\u0009\u0009\u0009\u00092: must be in water\n\u0009_this select 5: maximum terrain gradient (average altitude difference in meters - Number)\n\u0009_this select 6: shore mode (Number):\n\u0009\u0009\u0009\u0009\u0009\u00090: does not have to be at a shore\n\u0009\u0009\u0009\u0009\u0009\u00091: must be at a shore\n\u0009_this select 7: (optional) blacklist (Array of Arrays):\n\u0009\u0009\u0009\u0009\u0009\u0009(_this select 7) select X: Top-left and bottom-right coordinates of blacklisted area (Array)\n\u0009_this select 8: (optional) default positions (Array of Arrays):\n\u0009\u0009\u0009\u0009\u0009\u0009(_this select 8) select 0: default position on land (Array)\n\u0009\u0009\u0009\u0009\u0009\u0009(_this select 8) select 1: default position on water (Array)\n\u0009\n\u0009Returns:\n\u0009Coordinate array with a position solution.\n\u0009\n\u0009TODO:\n\u0009* Maybe allow passing several combinations of position, min and max dist ... so that you can \n\u0009avoid several things?\n\u0009* Interpretation of minDist / maxDist is wrong. It's not true distance that is used. Too bad?\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 2","1.00"],"Additional":null},{"Name":"BIS_fnc_finishCuratorChallenge","Desc":" /*\n\n\u0009Description:\n\u0009Return number of completed curator challenges\n\n\u0009Parameter(s):\n\u0009\u00090: OBJECT - curator\n\u0009\u00091: ARRAY in format [\u003cchallengeClass\u003e,\u003ccurator\u003e]\n\u0009\u00092: STRING - task state\n\n\u0009Returns:\n\u0009BOOL\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.16"],"Additional":null},{"Name":"BIS_fnc_fixDate","Desc":" /*\n\n\u0009Description:\n\u0009Checks the array with date data and makes sure, the values are within the boundries.\n\n\u0009Parameter(s):\n\u0009_this: ARRAY - date array [year, month, day, hour, minute]\n\n\u0009Example:\n\u0009_fixedDate = [2033,-2,89,25,75] call BIS_fnc_fixDate;\n\n\u0009Returns:\n\u0009ARRAY - fixed date array [year, month, day, hour, minute]\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.10"],"Additional":null},{"Name":"BIS_fnc_flamesEffect","Desc":" /*\n\u0009File: fn_flamesEffect.sqf\n\n\u0009Description:\n\u0009Flames (texture) postprocess.\n\n\u0009Parameter(s):\n\u0009None.\n\n\u0009Returned value:\n\u0009None. \n*/\n\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_flies","Desc":" Spawns flies around position.\n","Syn":{"Syntax":" [position,interval,areaSize] call BIS_fnc_flies  ","Params":["position: Array (in format position)\n\n","interval (Optional): Number - particle refresh time (default is 0.1)","areaSize (Optional): Number - area radius (default is 1)"],"Return":" Array - List of particle source objects "},"Examples":["_flies = [position deadBody, 0.05, 1.5] call BIS_fnc_flies;"],"Additional":["call","Functions Library"]},{"Name":"BIS_fnc_forceCuratorInterface","Desc":" /*\n\n\u0009Description:\n\u0009Force curator interface, so user cannot exit it by pressing Zeus key\n\n\u0009Parameter(s):\n\u0009\u00090: BOOL - true to force the interafce\n\u0009\u00091 (Optional): BOOL - true to keep trying until the interface is actually opened\n\n\u0009Returns:\n\u0009BOOL\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.16"],"Additional":null},{"Name":"BIS_fnc_forceEnd","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_formatCuratorChallengeObjects","Desc":" /*\n\n\u0009Description:\n\u0009Format the list of objects compatible with curator challenge to be displayed in the task descriptipon.\n\n\u0009Parameter(s):\n\u0009\u0009ARRAY of STRINGs - CfgVehicle classes\n\n\u0009Returns:\n\u0009STRING\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.16"],"Additional":null},{"Name":"BIS_fnc_fps","Desc":" /*\n\u0009File: fpsMeasurement.sqf\n\n\u0009Description:\n\u0009Function to measure fps. Spawns code running for given time.\n\n\u0009Parameter(s):\n\u0009_this select 0: scalar - time, length of measurement\n\u0009_this select 1: string - identification of measurement (will be printed to screen)\n\u0009_this select 2: scalar - (optional) sleep time - time to wait before measurement starts\n\n\u0009Returns:\n\u0009_handle to spawned script (-\u003e can be used to waitUntil {scriptDone _handle};)\n\n  Warning - do not use console during fps measurement - it stops time \u003c- fixed?\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 2","1.00"],"Additional":null},{"Name":"BIS_fnc_friendlySides","Desc":" /*\n\n\u0009Description:\n\u0009Returns sides allied to the given side / object\n\n\u0009Parameter(s):\n\u00090: SIDE or OBJECT\n\n\u0009Returns:\n\u0009ARRAY of SIDEs\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_FTLmanager","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 2: Operation Arrowhead","1.00"],"Additional":null},{"Name":"BIS_fnc_functionMeta","Desc":" /*\n\n\u0009Description:\n\u0009Returns function's meta data\n\n\u0009Parameter(s):\n\u0009_this: STRING - function name (if not defined, name of parent function is used)\n\n\u0009Returns:\n\u0009STRING\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_functionPath","Desc":" Returns path to function file. ","Syn":{"Syntax":" functionName call BIS_fnc_functionPath; ","Params":["functionName: String - function name (if not defined, name of parent function is used)"],"Return":" String "},"Examples":["_path = \"BIS_fnc_wpLand\" call BIS_fnc_functionPath;"],"Additional":["call","See also needed"]},{"Name":"BIS_fnc_functionsDebug","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Take On Helicopters","1.00"],"Additional":null},{"Name":"BIS_fnc_GC","Desc":" Sends an entity to the garbage collection queue. Replaces Arma 2 Garbage Collector. ","Syn":{"Syntax":" entity spawn GC; ","Params":["entity: Object or Group or String (marker) or Array (array of entities)"],"Return":" Boolean - true if function was executed successfuly "},"Examples":["[dude1] spawn BIS_fnc_GC;","[dude1, group dude1, \"marker1\"] spawn BIS_fnc_GC;"],"Additional":["call","See also needed"]},{"Name":"BIS_fnc_GCinit","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Take On Helicopters","1.00"],"Additional":null},{"Name":"BIS_fnc_genericSentence","Desc":" Play generic sentence with probablity set by bis_genericSentenceMode variable (0.5 = 50%, 1 = 100%) ","Syn":{"Syntax":" [class,(speaker,delay,canRepeat)] call BIS_fnc_genericSentence; ","Params":["class: String - sentence name (from class RadioProtocol_EN_H)\n\n","speaker (Optional): Object or Code - sentence speaker (when code, speaker is it's returned value). Default is 2nd crew member.","delay (Optional): Number - delay from previous generic sentence: When negative, sentence is played always.","canRepeat (Optional): Boolean - true to allow repeating same sentence"],"Return":" Boolean - true if sentence was played "},"Examples":["[\"FeedbackFlightNegativeHeightTooHigh\"] call bis_fnc_genericSentence;","[\"FeedbackFlightNegativeSpeedTooSlow\",nil,5,true] call bis_fnc_genericSentence;"],"Additional":["call","Generic Sentences"]},{"Name":"BIS_fnc_genericSentenceInit","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Take On Helicopters","1.00"],"Additional":null},{"Name":"BIS_fnc_geometricMean","Desc":" /************************************************************\n\u0009Geometric Mean\n\nReturns the geometric mean (weighted average) of an array of numbers\n************************************************************/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 2","1.00"],"Additional":null},{"Name":"BIS_fnc_getCfgData","Desc":" /*\n\n\u0009Description:\n\u0009Smart-return number, text or array value from config.\n\n\u0009Remark(s):\n\u0009* Can by called 2 ways:\n\u0009\u0009* 1st way (general) works for any config.\n\u0009\u0009* 2nd way is for comfortable working with mission description.ext.\n\n\u0009Parameter(s):\n\u0009\u0009_this: CFG\n\u0009\u0009_this: ARRAY of STRINGS - missionConfigFile classes and an attribute.\n\n\u0009Example:\n\n\u0009* 1st way of calling:\n\n\u0009\u0009_value = (configfile \u003e\u003e \"BulletBubbles\" \u003e\u003e \"BulletBubbles1\") call BIS_fnc_getCfgData;\n\u0009\u0009_value = (missionconfigfile \u003e\u003e \"Hubs\" \u003e\u003e \"A1\" \u003e\u003e \"QuickStart\" \u003e\u003e \"trigger\") call BIS_fnc_getCfgData;\n\n\u0009* 2nd way of calling:\n\n\u0009\u0009_value = [\"Hubs\",\"A1\",\"QuickStart\",\"trigger\"] call BIS_fnc_getCfgData;\n\n\u0009Returns:\n\u0009\u0009STRING or NUMBER or ARRAY or nil (if value not found)\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_getCfgDataArray","Desc":" /*\n\n\u0009Description:\n\u0009Get an array from cfg. If the retrieved value is not an array, retype it to an array.\n\n\u0009Remark(s):\n\u0009* Can by called 2 ways:\n\u0009\u0009* 1st way (general) works for any config.\n\u0009\u0009* 2nd way is for comfortable working with mission description.ext.\n\n\u0009Parameter(s):\n\u0009\u0009_this: CFG\n\u0009\u0009_this: ARRAY of STRINGS - missionConfigFile classes and an attribute.\n\n\u0009Example:\n\n\u0009* 1st way of calling:\n\n\u0009\u0009_value = (missionconfigfile \u003e\u003e \"Hubs\" \u003e\u003e \"A1\" \u003e\u003e \"position\") call BIS_fnc_getCfgDataArray;\n\n\u0009* 2nd way of calling:\n\n\u0009\u0009_value = [\"Hubs\",\"A1\",\"position\"] call BIS_fnc_getCfgDataArray;\n\n\u0009Returns:\n\u0009\u0009ARRAY or nil\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_getCfgDataBool","Desc":" /*\n\n\u0009Description:\n\u0009Get a number defined in cfg and retype it into a bool. Everything bigger then 0 is true, otherwise it's false.\n\n\u0009Remark(s):\n\u0009* Can by called 2 ways:\n\u0009\u0009* 1st way (general) works for any config.\n\u0009\u0009* 2nd way is for comfortable working with mission description.ext.\n\n\u0009Parameter(s):\n\u0009\u0009_this: CFG\n\u0009\u0009_this: ARRAY of STRINGS - missionConfigFile classes and an attribute.\n\n\u0009Example:\n\n\u0009* 1st way of calling:\n\n\u0009\u0009_value = (missionconfigfile \u003e\u003e \"Characters\" \u003e\u003e \"Default\" \u003e\u003e \"equipAdjust\") call BIS_fnc_getCfgDataBool;\n\n\u0009* 2nd way of calling:\n\n\u0009\u0009_value = [\"Characters\",\"Default\",\"equipAdjust\"] call BIS_fnc_getCfgDataBool;\n\n\u0009Returns:\n\u0009\u0009BOOL\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_getCfgDataObject","Desc":" /*\n\n\u0009Description:\n\u0009Get the object defined in cfg by its name (global variable).\n\n\u0009Remark(s):\n\u0009* Can by called 2 ways:\n\u0009\u0009* 1st way (general) works for any config.\n\u0009\u0009* 2nd way is for comfortable working with mission description.ext.\n\n\u0009Parameter(s):\n\u0009\u0009_this: CFG\n\u0009\u0009_this: ARRAY of STRINGS - missionConfigFile classes and an attribute.\n\n\u0009Example:\n\n\u0009* 1st way of calling:\n\n\u0009\u0009_value = (missionconfigfile \u003e\u003e \"Hubs\" \u003e\u003e \"A1\" \u003e\u003e \"QuickStart\" \u003e\u003e \"trigger\") call BIS_fnc_getCfgDataObject;\n\n\u0009* 2nd way of calling:\n\n\u0009\u0009_value = [\"Hubs\",\"A1\",\"QuickStart\",\"trigger\"] call BIS_fnc_getCfgDataObject;\n\n\u0009Returns:\n\u0009\u0009OBJECT or OBJNULL\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_getCfgDataPool","Desc":" /*\n\n\u0009Description:\n\u0009* Get array of attribute values out of the parent config class.\n\u0009* Attributes need to be in this format: \"_n\", where n is an index number (starting from 0).\n\u0009* If any discrepancy in indexing is detected, loading will stop and only the correctly indexed values will be returned.\n\u0009* Max. index supported is 99.\n\u0009* If more then 9 attributes used, 0-9 need to use leading zeroes.\n\n\u0009CFG example:\n\n\u0009class Timeline\n\u0009{\n\u0009\u0009class StageA\n\u0009\u0009{\n\u0009\u0009\u0009_0[] = {2035,7,7,04,30};\n\u0009\u0009\u0009_1[] = {2035,7,7,06,15};\n\u0009\u0009\u0009_2[] = {2035,7,7,18,35};\n\u0009\u0009\u0009_3[] = {2035,7,8,09,05};\n\u0009\u0009\u0009_4[] = {2035,7,8,13,25};\n\u0009\u0009\u0009_5[] = {2035,7,8,17,10};\n\u0009\u0009\u0009_6[] = {2035,7,8,21,40};\n\u0009\u0009\u0009_7[] = {2035,7,9,19,55};\n\u0009\u0009};\n\u0009};\n\n\n\u0009Remark(s):\n\u0009* Can by called 2 ways:\n\u0009\u0009* 1st way (general) works for any config.\n\u0009\u0009* 2nd way is for comfortable working with mission description.ext.\n\n\u0009Parameter(s):\n\u0009\u0009_this: CFG\n\u0009\u0009_this: ARRAY of STRINGS - missionConfigFile classes.\n\n\u0009Example:\n\n\u0009* 1st way of calling:\n\n\u0009\u0009_array = (configfile \u003e\u003e \"BulletBubbles\" \u003e\u003e \"BulletBubbles1\") call BIS_fnc_getCfgData;\n\u0009\u0009_array = (missionconfigfile \u003e\u003e \"Timeline\" \u003e\u003e \"StageA\") call BIS_fnc_getCfgData;\n\n\u0009* 2nd way of calling:\n\n\u0009\u0009_array = [\"Timeline\",\"StageA\"] call BIS_fnc_getCfgData;\n\n\u0009Returns:\n\u0009\u0009ARRAY or nil, if parent class is not found\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_getCfgIsClass","Desc":" /*\n\n\u0009Description:\n\u0009Return true if it's a class.\n\n\u0009Remark(s):\n\u0009* Can by called 2 ways:\n\u0009\u0009* 1st way (general) works for any config.\n\u0009\u0009* 2nd way is for comfortable working with mission description.ext.\n\n\u0009Parameter(s):\n\u0009\u0009_this: CFG\n\u0009\u0009_this: ARRAY of STRINGS - missionConfigFile classes and an attribute.\n\n\u0009Example:\n\n\u0009* 1st way of calling:\n\n\u0009\u0009_isClass = (missionconfigfile \u003e\u003e \"Hubs\" \u003e\u003e \"A1\" \u003e\u003e \"QuickStart\") call Bis_fnc_getCfgIsClass;\n\n\u0009* 2nd way of calling:\n\n\u0009\u0009_isClass = [\"Hubs\"] call Bis_fnc_getCfgIsClass;\n\n\u0009Returns:\n\u0009\u0009BOOL - true if it's a class\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_getCfgSubClasses","Desc":" /*\n\n\u0009Description:\n\u0009Return all child classes of given class.\n\n\u0009Remark(s):\n\u0009* Can by called 2 ways:\n\u0009\u0009* 1st way (general) works for any config.\n\u0009\u0009* 2nd way is for comfortable working with mission description.ext.\n\n\u0009Parameter(s):\n\u0009\u0009_this: CFG\n\u0009\u0009_this: ARRAY of STRINGS - missionConfigFile classes and an attribute.\n\n\u0009Example:\n\n\u0009* 1st way of calling:\n\n\u0009\u0009_subclasses = (missionconfigfile \u003e\u003e \"Hubs\" \u003e\u003e \"A1\" \u003e\u003e \"QuickStart\") call Bis_fnc_getCfgSubClasses;\n\n\u0009* 2nd way of calling:\n\n\u0009\u0009_subclasses = [\"Hubs\"] call Bis_fnc_getCfgSubClasses;\n\n\u0009Returns:\n\u0009\u0009ARRAY (of STRINGS with sub-classes names)\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_getFactions","Desc":" /*\n\u0009File: getFactions.sqf\n\n\u0009Description:\n\u0009Gets list of current factions\n\n\u0009Parameter(s):\n\u0009_this: Nothing, Object or String\n\u0009\u0009Nothing - list of all factions is returned.\n\u0009\u0009Object - Index number of objects faction is returned.\n\u0009\u0009String - Index number of given faction is returned.\n\u0009\u0009Array - When empty, sides of all factions are returned, otherwise side of first element is returned.\n\n*/\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 2","1.00"],"Additional":null},{"Name":"BIS_fnc_getFromPairs","Desc":" /*\n\n\u0009Description:\n\u0009Searches the associative array for the 1st occurance of the key string and returns the value associated with it.\n\n\u0009Syntax:\n\u0009_value = [_associativeArray:array,_key:string,_defaultValue] call BIS_fnc_getFromPairs;\n\n\u0009Example:\n\u00092 = [[[\"apple\",3],[\"pear\",2]],\"pear\"] call BIS_fnc_getFromPairs;\n\n\u0009Returns:\n\u0009* if found: value stored under the key\n\u0009* if not found: nil or _defaultValue\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.02"],"Additional":null},{"Name":"BIS_fnc_getIDC","Desc":" /*\n\n\u0009Description:\n\u0009Returns IDC of given display\n\n\u0009Parameter(s):\n\u0009_this select 0: CONFIG - config path to display\n\u0009_this select 1: STRING - control name\n\n\u0009Returns:\n\u0009NUMBER - IDC\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Take On Helicopters","1.00"],"Additional":null},{"Name":"BIS_fnc_getIDD","Desc":" /*\n\n\u0009Description:\n\u0009Returns IDD of given display\n\n\u0009Parameter(s):\n\u0009_this select 0: CONFIG - config path to display\n\n\u0009Returns:\n\u0009NUMBER - IDD\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Take On Helicopters","1.00"],"Additional":null},{"Name":"BIS_fnc_getLineDist","Desc":" \n//------------------\n// Purpose: This function returns the distance between two sections of a straight line\n// Arguments: [start section 1, length section 1, start section 2, length section 2]\n// Return: float\n//\n// Revision History:\n// 10/11/06 0.1 - First cut\n//------------------\n\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 2","1.00"],"Additional":null},{"Name":"BIS_fnc_getParamValue","Desc":" /*\n\n\u0009Description:\n\u0009Return value of mission param defined in Description.ext\n\n\u0009Parameter(s):\n\u0009\u00090: STRING - param class\n\u0009\u00091 (Optional): NUMBER - default value used when the param is not found\n\n\u0009Returns:\n\u0009NUMBER\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_getPitchBank","Desc":" /************************************************************\n\u0009Get Pitch and Bank\n\nParameters: object\nReturns: [pitch, bank]\n\nReturns the pitch and bank of an object, in degrees.\n\nYaw can be found using the getdir command.\n\nPitch is 0 when the object is level; 90 when pointing straight\nup; and -90 when pointing straight down.\n\nBank is 0 when level; 90 when the object is rolled to the right,\n-90 when rolled to the left, and 180 when rolled upside down.\n\nThe bank returned by this command is not fully accurate, it\ncan be off by up to 5% or so (depending on pitch), due to an unknown bug.\n************************************************************/\n\n\n//extract parameters\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 2","1.00"],"Additional":null},{"Name":"BIS_fnc_getRespawnInventories","Desc":" /*\n\n\u0009Description:\n\u0009Return respawn inventories available for the given unit\n\n\u0009Parameter(s):\n\u0009\u00090: OBJECT, GROUP, SIDE or NAMESPACE\n\u0009\u00091 (Optional): BOOL - true to show even inventories disabled by curator\n\n\u0009Returns:\n\u0009ARRAY\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_getRespawnMarkers","Desc":" /*\n\n\u0009Description:\n\u0009Return all respawn markers\n\n\u0009Parameter(s):\n\u0009\u00090: SIDE - side to which markers belongs to\n\u0009\u00091: BOOL - true to return vehicle respawn markers\n\n\u0009Returns:\n\u0009ARRAY\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_getRespawnPositions","Desc":" /*\n\n\u0009Description:\n\u0009Return scripted respawn positions available for the given unit\n\n\u0009Parameter(s):\n\u0009\u00090: OBJECT, GROUP, SIDE or NAMESPACE\n\n\u0009Returns:\n\u0009ARRAY\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_getServerVariable","Desc":" /*\n\n\u0009Description:\n\u0009Fetch a variable saved on server.\n\u0009Used when you want to share variables only to specific clients to prevent large traffic.\n\u0009Must be called in scheduled environment because communication with server takes some time.\n\n\u0009Parameter(s):\n\u0009\u00090: NAMESPACE or OBJECT or GROUP - variable name space\n\u0009\u00091: STRING - variable name\n\u0009\u00092: ANY - default used when variable value is nil\n\n\u0009Returns:\n\u0009ANY - variable value\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_getTurrets","Desc":" /*\n\n\u0009Description:\n\u0009Return vehicle turrets\n\n\u0009Parameter(s):\n\u0009\u00090: OBJECT or STRING (classname)\n\u0009\u00091: CONFIG or ARRAY - output type (array of config paths or IDs)\n\n\u0009Returns:\n\u0009ARRAT of CONFIGs or ARRAYs\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_getUnitByUid","Desc":" /*\n\n\u0009Description:\n\u0009Returns object belonging to given UID\n\n\u0009Parameter(s):\n\u00090: STRING - The UID of object\n\n\u0009Returns:\n\u0009OBJECT\n*/\n// Parameters\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_getUnitInsignia","Desc":" Get a unit's uniform insignia placed with BIS_fnc_setUnitInsignia ","Syn":{"Syntax":" [ object ] call BIS_fnc_getUnitInsignia; ","Params":["Target:: Object - Object to return insignia from."],"Return":" string - Path to texture "},"Examples":["_texture = [ player ] call BIS_fnc_getUnitInsignia"],"Additional":["call","BIS_fnc_setUnitInsignia","Arma 3 Unit Insignia"]},{"Name":"BIS_fnc_getVirtualBackpackCargo","Desc":" /*\n\n\u0009Description:\n\u0009Get virtual backpacks to an object (e.g., ammo box).\n\u0009Virtual items can be selected in the Arsenal.\n\n\u0009Parameter(s):\n\u0009\u00090: OBJECT\n\n\u0009Returns:\n\u0009ARRAY of ARRAYs - all virtual items within the object's space in format [\u003citems\u003e,\u003cweapons\u003e,\u003cmagazines\u003e,\u003cbackpacks\u003e]\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_getVirtualItemCargo","Desc":" /*\n\n\u0009Description:\n\u0009Get virtual items to an object (e.g., ammo box).\n\u0009Virtual items can be selected in the Arsenal.\n\n\u0009Parameter(s):\n\u0009\u00090: OBJECT\n\n\u0009Returns:\n\u0009ARRAY of ARRAYs - all virtual items within the object's space in format [\u003citems\u003e,\u003cweapons\u003e,\u003cmagazines\u003e,\u003cbackpacks\u003e]\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_getVirtualMagazineCargo","Desc":" /*\n\n\u0009Description:\n\u0009Get virtual magazines to an object (e.g., ammo box).\n\u0009Virtual items can be selected in the Arsenal.\n\n\u0009Parameter(s):\n\u0009\u00090: OBJECT\n\n\u0009Returns:\n\u0009ARRAY of ARRAYs - all virtual items within the object's space in format [\u003citems\u003e,\u003cweapons\u003e,\u003cmagazines\u003e,\u003cbackpacks\u003e]\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_getVirtualWeaponCargo","Desc":" /*\n\n\u0009Description:\n\u0009Get virtual weapons to an object (e.g., ammo box).\n\u0009Virtual items can be selected in the Arsenal.\n\n\u0009Parameter(s):\n\u0009\u00090: OBJECT\n\n\u0009Returns:\n\u0009ARRAY of ARRAYs - all virtual items within the object's space in format [\u003citems\u003e,\u003cweapons\u003e,\u003cmagazines\u003e,\u003cbackpacks\u003e]\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_greatestNum","Desc":" /************************************************************\n\u0009Find Greatest Number\n\nParameters: [number set]\nReturns: number\n\nReturns the highest number out of the passed set.\n\nExample: [1,5,10] call BIS_fnc_greatestNum\n\u0009returns 1\n************************************************************/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 2","1.00"],"Additional":null},{"Name":"BIS_fnc_groupIndicator","Desc":" //--- Function called before display - create display and terminate\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_groupVehicles","Desc":" /*\n\n\u0009Description:\n\u0009Returns all vehicles a group possesses, assigned vehicles can be included\n\n\u0009Parameter(s):\n\u0009_this select 0:\u0009GROUP or OBJECT\u0009- The unit or group to check, if unit is given it's group is then used\n\u0009_this select 1:\u0009BOOLEAN\u0009\u0009- If assigned vehicles should also be returned (vehicles that unit's may not be inside of but assigned to)\n\u0009\n\u0009Returns:\n\u0009ARRAY - List of all vehicles in control/assigned to the group, empty if group has none\n*/\n//Parameters\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","0.76"],"Additional":null},{"Name":"BIS_fnc_GUIbackground","Desc":" /*\n\n\u0009Description:\n\u0009Creates GUI background\n\n\u0009Parameter(s):\n\u0009_this select 0: ARRAY - background position in format [x,y,w,h]\n\n\u0009Returns:\n\u0009DISPLAY\n*/\n\n#define DISPLAY_CLASS\u0009\"RscCommonBackground\"\n#define DISPLAY\u0009\u0009_display\n#define DISPLAY_UI\u0009(uinamespace getvariable DISPLAY_CLASS)\n#define CONTROL\u0009\u0009(DISPLAY displayctrl _idc)\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Take On Helicopters","1.00"],"Additional":null},{"Name":"BIS_fnc_GUIeditor","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Take On Helicopters","1.00"],"Additional":null},{"Name":"BIS_fnc_guiEffectTiles","Desc":" Used in dialogs to animate background UAV tiles. See notes for a full working example. ","Syn":{"Syntax":" [display] call BIS_fnc_guiEffectTiles; ","Params":["Display: Display - Display to animate"],"Return":" Boolean "},"Examples":["[ findDisplay 49] call BIS_fnc_guiEffectTiles //display 49 - pause menu"],"Additional":["call","createDialog","findDisplay","User Interface Event Handlers"]},{"Name":"BIS_fnc_GUIgrid","Desc":" /*\n\u0009Author: Karel Moricky\n\n\u0009Description:\n\u0009Returns grid params and stores it into uiNameSpace\n\n\u0009Parameter(s):\n\u0009_this select 0: STRING - category name\n\u0009_this select 1: STRING - grid name\n\n\u0009Returns:\n\u0009ARRAY - format [[x,y,w,h],gridW,gridH]\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Take On Helicopters","1.00"],"Additional":null},{"Name":"BIS_fnc_GUIgridToProfile","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Take On Helicopters","1.00"],"Additional":null},{"Name":"BIS_fnc_GUIhint","Desc":" /*\n\n\u0009Description:\n\u0009Creates advanced hintC dialog\n\n\u0009Parameter(s):\n\u0009_this select 0: ARRAY in format\n\u0009\u0009[text,picture]\n\u0009\u0009\u0009* text: STRING - hint text\n\u0009\u0009\u0009* picture: STRING - picture\n\u0009\u0009[item1,item2...] - Listbox item ARRAYs in format\n\u0009\u0009\u0009[itemText,itemDescription,picture,icon]\n\u0009\u0009\u0009\u0009* itemText: STRING - Text displayed in listbox\n\u0009\u0009\u0009\u0009* itemDescription (Optional): STRING - text displayed after clicking on item\n\u0009\u0009\u0009\u0009* picture (Optional): STRING - picture displayed after clicking on item\n\u0009\u0009\u0009\u0009* icon (Optional): STRING - icon displayed in listbox left from text\n\u0009_this select 1 (Optional): STRING - hint header\n\u0009_this select 2 (Optional): ARRAY - [STRING,CODE,NUMBER] - text on left button (when \"\", button is hidden), code executed upon clicking and fade out delay. If only text is present, button is disabled.\n\u0009_this select 3 (Optional): ARRAY - [STRING,CODE,NUMBER] - STRING - text on right button and code executed upon clicking\n\u0009_this select 4 (Optional): ARRAY - [STRING,CODE,NUMBER] - STRING - text on middle button and code executed upon clicking\n\u0009_this select 5 (Optional): NUMBER or ARRAY - width or [width,height] of picture (in grid coordinates). Width \u003e 17 means only picture is used.\n\n\u0009Returns:\n\u0009ARRAY - [endState(,lbId)]\n\u0009\u0009* endState: NUMBER - 1 when clicked on right button, -1 when clicked on left button, 0 when escaped\n\u0009\u0009* lbId: NUMBER - selected listbox item (when listbox was used)\n*/\n\n#define DISPLAY_CLASS\u0009'Hsim_RscDisplayCommonHint_guiHint'\n#define DISPLAY_CONFIG\u0009(configfile \u003e\u003e \"RscDisplayCommonHint\")\n#define DISPLAY\u0009\u0009(uinamespace getvariable DISPLAY_CLASS)\n#define CONTROL\u0009\u0009(DISPLAY displayctrl _idc)\n\n#define CONTROL_FADEINTIME\u00090.3\n#define CONTROL_FADEIN \\\n\u0009CONTROL ctrlsetfade 1; \\\n\u0009CONTROL ctrlcommit 0; \\\n\u0009CONTROL ctrlsetfade 0; \\\n\u0009CONTROL ctrlcommit CONTROL_FADEINTIME;\n\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Take On Helicopters","1.00"],"Additional":null},{"Name":"BIS_fnc_guiMessage","Desc":" Shows customized native message box to user ","Syn":{"Syntax":" [message, (header, position, isCancel, parent, pause)] call BIS_fnc_guiMessage; \u003cbr\u003e(Alternate Syntax exists check Read more)","Params":[" Take On Helicopters\n\n","message:\nString - message\nStructured Text - message\nArray - listbox, every item is defined as String (enabled) or String in Array (disabled)\n\nWhen variable BIS_fnc_guiMessage_cursel is defined and is Number, item with index equal to the variable will be selected by default.","header (Optional): String or Structured Text - header text","position (Optional): Array - position in format [x,y,w,h]","isCancel (Optional): Boolean or Array - true to display cancel button or array with button texts [okText,cancelText]","parent (Optional): Display - parent display","pause (Optional): Boolean - true to pause simulation when message window is open"],"Return":" Array - [endState, (lbId)]\n\n endState: Boolean - true when clicked OK button, false when escaped or clicked on Cancel button\n\n lbId: Number - selected listbox item (when listbox was used)\n\n\nReturned only after message box is closed."},"Examples":["[\"Hello World\"] spawn BIS_fnc_guiMessage;","[\"Message\",\"Header\",nil,true] spawn BIS_fnc_guiMessage;\nResult:\n","[[\"Enabled Item\",[\"Disabled Item\"]],\"Header\"] spawn BIS_fnc_guiMessage;","_result = [\"Are you sure?\", \"Confirm\", true, true] call BIS_fnc_guiMessage; // Arma 3"],"Additional":["call","See also needed"]},{"Name":"BIS_fnc_GUImessage","Desc":" /*\n\n\u0009Description:\n\u0009Displays message window\n\n\u0009Parameter(s):\n\u0009\u00090: STRING or STRUCTURED TEXT - message body\n\u0009\u00091: STRING - message header\n\u0009\u00092:\n\u0009\u0009\u0009BOOL - enable/disable \"OK\" button\n\u0009\u0009\u0009TEXT - set \"OK\" button's text (enabling it automatically)\n\u0009\u00093:\n\u0009\u0009\u0009BOOL - enable/disable \"Cancel\" button\n\u0009\u0009\u0009TEXT - set \"Cancel\" button's text (enabling it automatically)\n\u0009\u00094: DISPLAY - parent display\n\u0009\u00095: BOOL - when true, function will try to use control inherited from 'RscMessageBox' in display instead of creating a new one\n\u0009\u00096: BOOL - true to pause the game, false to let it running\n\n\u0009Returns:\n\u0009\u0009BOOL - true if \"OK\" button was activated, false if \"Cancel\" was activated or user pressed \"Escape\" key.\n*/\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Take On Helicopters","1.00"],"Additional":null},{"Name":"BIS_fnc_GUInewsfeed","Desc":" /*\n\n\u0009Description:\n\u0009Load newsfeed\n\n\u0009Parameter(s):\n\u0009_this select 0: DISPLAY - display where newsfeed with idc 1101 is\n\n\u0009Returns:\n\u0009BOOL - true when online\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Take On Helicopters","1.00"],"Additional":null},{"Name":"BIS_fnc_halo","Desc":" /*\n\u0009File: fn_HALO.sqf\n\n\u0009Description:\n\u0009High Altitude Low Opening\n\n\u0009Parameter(s):\n\u0009_this:\u0009ARRAY\u0009- starts HALO jump directly\n\u0009\u0009OBJECT\u0009- waits until unit in array is out of vehicle\n\n\u0009Returns:\n\u0009Nothing\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 2: Operation Arrowhead","1.00"],"Additional":null},{"Name":"BIS_fnc_halt","Desc":" Halts current function and all it's parents and logs an error message. ","Syn":{"Syntax":" [param1,param2,...,param10] call bis_fnc_halt; ","Params":["param1: String - Logged message (formatted).\n\n","param2 - param10: Anything"],"Return":" Boolean "},"Examples":["[\"You are now supposed to be %1\",rank player] call bis_fnc_halt;"],"Additional":["call","See also needed"]},{"Name":"BIS_fnc_healing","Desc":" /*\n\u0009File: fn_healing.sqf\n\n\u0009Description:\n\u0009Healing postprocess.\n\n\u0009Parameter(s):\n\u0009None.\n\n\u0009Returned value:\n\u0009None. \n*/\n\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_healthEffects","Desc":" /*\n\n\u0009Description:\n\u0009Effects when player is hit.\n\n\u0009Parameter(s): Sent by \"handleDamage\" event handler\n\n\u0009Returns:\n\u0009BOOL\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_helicopterCanFly","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Take On Helicopters","1.00"],"Additional":null},{"Name":"BIS_fnc_helicopterDamage","Desc":" /*\n\n\u0009Description:\n\u0009Handling EH-based helicopter damage\n\n\u0009Parameter(s):\n\u0009_this: EH arguments (Array)\n\n\u0009Returns:\n\u0009Bool\n*/\n\n//TODO: use new EH which returns actualt hitpoint names?\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Take On Helicopters","1.00"],"Additional":null},{"Name":"BIS_fnc_helicopterGetHitpoints","Desc":" /*\n\n\u0009Description:\n\u0009Return all hitpoints for a helicopter.\n\n\u0009Parameter(s):\n\u0009_this: helicopter (Object)\n\n\u0009Returns:\n\u0009Array of Strings\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Take On Helicopters","1.00"],"Additional":null},{"Name":"BIS_fnc_helicopterSeat","Desc":" /*\n\n\u0009Description:\n\u0009Check if unit sits on right or left seat\n\n\u0009Parameter(s):\n\u0009_this: OBJECT - Unit\n\n\u0009Returns:\n\u0009NUMBER\n\u0009\u0009-1 - not in a vehicle\n\u0009\u00090 - left\n\u0009\u00091 - right\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Take On Helicopters","1.00"],"Additional":null},{"Name":"BIS_fnc_helicopterSeatMove","Desc":" /*\n\n\u0009Description:\n\u0009Plays cockpit animation.\n\n\u0009Parameter(s):\n\u0009_this select 0: OBJECT - Unit\n\u0009_this select 1: STRING - Animation description\n\n\u0009Returns:\n\u0009STRING - animation name\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Take On Helicopters","1.00"],"Additional":null},{"Name":"BIS_fnc_helicopterType","Desc":" /*\n\n\u0009Description:\n\u0009Returns helicopter type\n\n\u0009Parameter(s):\n\u0009_this: OBJECT - Helicopter\n\n\u0009Returns:\n\u0009NUMBER\n\u0009\u0009-1 - Not recognized\n\u0009\u00090 - Light\n\u0009\u00091 - Medium\n\u0009\u00092 - Heavy\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Take On Helicopters","1.00"],"Additional":null},{"Name":"BIS_fnc_help","Desc":" Shows Function Library viewer, which contains list of all available functions, both official and unofficial.\n\n\n\u0009\u0009\n\u0009\u0009\u0009\n\u0009\u0009\u0009\nArma 2\n\n\u0009\u0009\u0009\n\u0009\u0009\n\u0009\u0009\n\u0009\u0009\u0009\n\u0009\u0009\u0009\nTake On Helicopters\n\n\u0009\u0009\u0009\n\u0009\u0009\n\n","Syn":{"Syntax":" [] call BIS_fnc_help  ","Params":null,"Return":" Nothing "},"Examples":["[] call bis_fnc_help"],"Additional":["call","Arma 2 Functions Library","Take On Helicopters Function Library"]},{"Name":"BIS_fnc_HUDLimits","Desc":" /*\n\n\u0009Description:\n\u0009Set HUD limits and prevents overwriting existing values\n\n\u0009Parameter(s):\n\u0009_this select 0: ARRAY - speed limit [priority,min,max,]\n\u0009_this select 1: ARRAY - altitude limit [priority,min,max]\n\u0009_this select 2: ARRAY - direction limit [priority,min,max,target]\n\n\u0009Returns:\n\u0009ARRAY - current value of HUDMovementLevels\n\n\u0009Note:\n\u0009* priority\n\u0009\u0009* default value is 0, which means no limits were assigned\n\u0009\u0009* using 0 as priority will hide the limits, no matter the priorities\n\u0009\u0009* same or higher priority will replace currently set priority\n\u0009\u0009* using negative value will reset the values, if absolute value is same or higher than current level\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Take On Helicopters","1.00"],"Additional":null},{"Name":"BIS_fnc_importImageLinks","Desc":" /*\n\n\u0009Description:\n\u0009Imports CfgVehicles image links from Community Wiki (https://community.bistudio.com/)\n\n\u00091) Run the script. It will copy a text into clipboard\n\u00092) Start a new Community Wiki page and paste the text into edit field\n\u00093) Preview the page (don't save it)\n\u00094) Copy the resulting text and use it in your scripts\n\n\u0009Parameter(s):\n\u0009NONE\n\n\u0009Returns:\n\u0009BOOL\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.08"],"Additional":null},{"Name":"BIS_fnc_inAngleSector","Desc":" \n//------------------\n// Purpose: Checks if a position lies within an angle sector\n// Arguments: [\u003ccenter position\u003e,\u003ccenter angle of sector\u003e,\u003csector width\u003e,\u003cposition\u003e]\n// Return: boolean\n//\n/*\n\u0009Returns true if \u003cposition\u003e lies within the sector defined by \u003ccenter position\u003e,\n\u0009\u003ccenter angle of sector\u003e and \u003csector width\u003e. Use this function to determine if\n\u0009a position lies within a certain angle from another position (ie the \u003ccenter position\u003e). \n\u0009Example:\n\u0009[position player,getdir player,30,position enemy_tank] call BIS_fnc_inAngleSector\n\u0009will return true if the vehicle named enemy_tank is within 30 degrees of where the player is pointing.\n*/\n// Revision History:\n// 09/01/08 0.1 - First cut VBS2\n//------------------\n\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 2","1.00"],"Additional":null},{"Name":"BIS_fnc_incapacitatedEffect","Desc":" /*\n\u0009File: fn_incapacitatedEffect.sqf\n\n\u0009Description:\n\u0009Do not use - WIP.\n\n\u0009Parameter(s):\n\u0009-\n\n\u0009Returned value:\n\u0009-\n*/\n\n//-----------------INCAPACITATED PPs-----------------------------------------\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_indicateBleeding","Desc":" /*\n\u0009File: fn_indicateBleeding.sqf\n\n\u0009Description:\n\u0009Do not use - WIP.\n\n\u0009Parameter(s):\n\u0009-\n\n\u0009Returned value:\n\u0009-\n*/\n\n\n//-----------------Bleeding - show PP in the corners of the screen instead of health guy---------------------------------------------------------------------------------\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_infoText","Desc":" /*\n\u0009File: infoText.sqf\n\n\u0009Description:\n\u0009Info with some ffect.\n\n\u0009Parameter(s):\n\u0009_this: Array containing lines of text (String)\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 2: Operation Arrowhead","1.51"],"Additional":null},{"Name":"BIS_fnc_initCuratorAttribute","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.16"],"Additional":null},{"Name":"BIS_fnc_initExpo","Desc":" /*\n\n\u0009Description:\n\u0009Disable parts of the main menu during public presentation.\n\u0009Press Ctrl+Shift+U to toggle the lock.\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_initIntelObject","Desc":" /*\n\n\u0009Description:\n\u0009Init intel object.\n\u0009It will add \"Take\" action on it.\n\u0009When a player activates it, he and all players on his side will receive a diary item defined by curator.\n\n\u0009Parameter(s):\n\u0009NONE\n\n\u0009Returns:\n\u0009BOOL\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_initModules","Desc":" /*\n\n\u0009Description:\n\u0009Wait until all modules using module framework are initialized\n\u0009\n\u0009Parameter(s): \n\u0009\u00090: ARRAY of OBJECTs - modules to be activated\n\u0009\n\u0009Returns:\n\u0009BOOL\n*/\n\n//--- Create groups for module categories\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_initMultiplayer","Desc":" /*\n\n\u0009Description:\n\u0009Multiplayer mission init, executed automatically upon mission start.\n\n\u0009Parameter(s):\n\u0009None\n\n\u0009Returns:\n\u0009NOTHING\n*/\n\n//--- Execute MP functions\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_initParams","Desc":" /*\n\n\u0009Description:\n\u0009Initialize mission params\n\n\u0009Parameter(s):\n\u0009NONE\n\n\u0009Returns:\n\u0009BOOL\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_initPlayable","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_initRespawn","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_initRespawnBackpack","Desc":" /*\n\n\u0009Description:\n\u0009Init respawn backpack.\n\u0009Whover \"assembles\" it will receive a new respawn position.\n\u0009When backpack object has 'respawnNearbyPlayers' attribute set to 1, nearby player will receive the respawn as well.\n\n\u0009Parameter(s):\n\u0009NONE\n\n\u0009Returns:\n\u0009BOOL\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_initVirtualUnit","Desc":" /*\n\n\u0009Description:\n\u0009Initialize virtual unit\n\u0009Disable it, turn the camera upwards and save its correct side\n\n\u0009Parameter(s):\n\u0009\u00090: OBJNULL\n\n\u0009Returns:\n\u0009BOOL\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_inString","Desc":" /*\n\u0009File: inString.sqf\n\u0009\n\u0009Description:\n\u0009Find a string within a string.\n\u0009\n\u0009Parameter(s):\n\u0009_this select 0: \u003cstring\u003e string to be found\n\u0009_this select 1: \u003cstring\u003e string to search from\n\u0009_this select 2 (Optional): \u003cboolean\u003e search is case sensitive (default: false)\n\u0009\n\u0009Returns:\n\u0009Boolean (true when string is found).\n\u0009\n\u0009How to use:\n\u0009_found = [\"string\", \"String\", true] call BIS_fnc_inString;\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_InstructorFigure","Desc":" /*******************************************************************************\n\u0009Version:\u0009\u00090.1\n\u0009Name:\u0009\u0009\u0009Instructor Figure\n\u0009DESCRIPTION:\u0009www.  \n\u0009PARAMETERS:\u0009\u00091) function called - string, list of functions:\n\u0009\u0009\u0009\u0009\u0009\u0009- Init\n\u0009\u0009\u0009\u0009\u0009\u0009- Destroy\n\u0009\u0009\u0009\u0009\u00092) parameter for the function\n\u0009\u0009\u0009\u0009\u0009For more informations see https://wiki.bistudio.com/index.php/A3_InstructorFigure\n\u0009RETURNED VALUE:\u0009depends on the function called\n\u0009\n\u0009TODO:\u0009        + PlayTopic\n\u0009\u0009\u0009\u0009\u0009+ Fade out New Intel text\n\u0009\u0009\u0009\u0009\u0009+ wait for TAB press\n\u0009\u0009\u0009\u0009\u0009+ use functions for dynamic text\n\u0009\u0009\u0009\u0009\u0009- kbTell support\n\u0009\u0009\u0009\u0009\u0009\u0009- logging\n\u0009\u0009\u0009\u0009\u0009\u0009+ rework data structure (add, remove, search)\n\u0009\u0009\u0009\u0009\u0009\u0009- ContainerExists function\n\u0009\u0009\u0009        + display only if difficulty is low\n\u0009\u0009\u0009\u0009\u0009+ disableSerialization\n\u0009\u0009\u0009\u0009\u0009+ GetTopics should return array, not just debuglog info\n\u0009\u0009\u0009\u0009\u0009+ deny play more than one topic in a time\n\u0009\u0009\u0009\u0009\u0009+ Localize\n\u0009\u0009\u0009\u0009\u0009+ check and fix return values of functions\n\u0009\u0009\u0009\u0009\u0009+ correct debuglog informations\n\u0009\u0009\u0009\u0009\u0009- deny addtopic during playing\n\u0009\u0009\u0009\u0009\u0009+ safe work with BIS_GroupCommunication - dont overwrite user menus\n\u0009\u0009\u0009\u0009\u0009+ remove INSTRUCTOR FIGURE from BIS_GroupCommunication  \n\u0009\u0009\u0009\u0009\u0009+ PlayTopicRandom - rule exceeding selection of a previous sentence\n*******************************************************************************/\n\n//Variables\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_interpolateWeather","Desc":" /*\n\n\u0009Description:\n\u0009Interpolate weather (overcast and fog) according to 2 boundry dates and their weather conditions.\n\n\u0009Parameter(s):\n\u0009_this select 0: array\u0009- _date1 \u0009[_year1,_month1,_day1,_hour1,_min1]\n\u0009_this select 1: array\u0009- _weather1\u0009[_overcast1,_fog1]\n\u0009_this select 2: array\u0009- _date2 \u0009[_year2,_month2,_day2,_hour2,_min2]\n\u0009_this select 3: array\u0009- _weather2\u0009[_overcast2,_fog2]\n\u0009_this select 4: array\u0009- _subjectDate \u0009[_year,_month,_day,_hour,_min] (default: current date)\n\n\u0009Returns:\n\u0009[_interpolatedOvercast,_interpolatedFog]\n\n\u0009Example:\n\u0009[_overcast,_fog] = [[2035,1,5,24,00],[0.1,0.5],[2035,1,10,24,00],[0.3,0.2],[2035,1,7,24,00]] call BIS_fnc_interpolateWeather;\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_inTrigger","Desc":" //\n/*\n\u0009File: inTrigger.sqf\n\n\u0009Description:\n\u0009Detects whether is position within trigger area.\n\n\u0009Parameter(s):\n\u0009\u0009_this select 0: OBJECT or ARRAY - Trigger or trigger area\n\u0009\u0009_this select 1: ARRAY or OBJECT - Position\n\u0009\u0009_this select 2 (Optional): BOOL - true for scalar result (distance from border)\n\n\u0009Returns:\n\u0009Boolean (true when position is in area, false if not).\n*/\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 2","1.00"],"Additional":null},{"Name":"BIS_fnc_inv","Desc":" /*\n\u0009File: fn_inv.sqf\n\n\u0009Description:\n\u0009Returns inventory contents of given vehicle (unit).\n\u0009\n\u0009Note: for vehicles it returns mounted gun and its ammo, not cargo weapons and ammo.\n\n\u0009Parameter(s):\n\u00091: \u003cobject\u003e vehicle or unit \n\u0009\n\u0009Returns:\n\u0009\u003carray\u003e weapons and magazines\n*/\n\n//putWeaponPool object\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 2","1.00"],"Additional":null},{"Name":"BIS_fnc_invAdd","Desc":" /*\n\u0009File: fn_invAdd.sqf\n\n\u0009Description:\n\u0009Adds item to inventory - checks if there is room for it. Checks if add was done by engine.\n\n\u0009Parameter(s):\n\u00091: \u003cobject\u003e unit\n\u00092: \u003cstring | config class\u003e inventory item (weapon | magazine | other item) - name or class\n\n\u0009Returns:\n\u0009\u003cbool\u003e true if successfully added to inventory\n\u0009or\n\u0009when forcing add - \u003carray\u003e list of removed items (TODO: indicate fail to add)\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 2","1.00"],"Additional":null},{"Name":"BIS_fnc_invCodeToArray","Desc":" /*\n\u0009File: fn_invSlotsEmpty.sqf\n\n\u0009Description:\n\u0009Converts inventory code (used in configs) to array with numbers for weapons and magazines (and their counts).\n\u0009\u0009\n\u0009Parameter(s):\n\u00091: \u003cscalar | empty\u003e config code\n\u0009\n\u0009Returns:\n\u0009\u003carray\u003e items (slots) numbers\n\u0009\n\u0009\n\u0009Function:\n\u0009 input (result of): [1  +  4  + 12*  256  + 2* 4096  +  2  + 8* 16  + 12*131072]\u0009 \n\u0009 output: [1,1,1,8,12,2,0,12]\n\u0009  - means: 1 x WeaponSlotPrimary, 1 x WeaponSlotHangun, ... , 12 x WeaponSlotInventory\n\u0009  \n\u0009 input: []\n\u0009 output: [0,0,0,0,0,0,0,0]\n\n*/\n\n\n//returned array gives numbers of following:\n//mirrored from core config: cfg\\Bin\\cfgWeapons.hpp\n#define WeaponSlotPrimary        1        // primary weapons\n#define WeaponSlotHandGun        2        // HandGun\n#define WeaponSlotSecondary        4        // secondary weapons\n#define WeaponSlotHandGunItem        16 // HandGun magazines\n#define WeaponSlotItem                256        // items\n#define WeaponSlotBinocular        4096        // binocular\n#define WeaponHardMounted        65536\n#define WeaponSlotInventory 131072 // inventory items\n\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 2","1.00"],"Additional":null},{"Name":"BIS_fnc_invRemove","Desc":" /*\n\u0009File: fn_invRemove.sqf\n\n\u0009Description:\n\u0009Removes from inventory. Given number of items. Returns actually removed items count.\n\u0009\n\u0009Parameter(s):\n\u00091: \u003cobject\u003e unit\n\u00092: \u003cstring | config class\u003e inventory item (weapon | magazine | other item) - name or class\n\u00093: \u003cscalar\u003e how items with given name/class much to remove\n\u0009\n\u0009Returns:\n\u0009\u003cnumber\u003e number of successfully removed items\n\u0009\n\u0009Note: 2nd parameter is string that is both weapon and magazine, we handle as weapon (you you want to handle as magazine - handle magazine classname for it)\u0009\n*/\n\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 2","1.00"],"Additional":null},{"Name":"BIS_fnc_invSlots","Desc":" /*\n\u0009File: fn_invSlots.sqf\n\n\u0009Description:\n\u0009Returns config inventory slots of given unit (total numbers of available slots in array).\n\u0009\n\u0009Parameter(s):\n\u00091: \u003cobject\u003e unit \n\u0009\n\u0009Returns:\n\u0009\u003carray\u003e array with total available slots of all types that are given by config\n\u0009\n\u0009\n\u0009Function:\n\u0009 input: [player] call BIS_fnc_invSlotsEmpty;\n\u0009 partial result - from config (class \"USMC_rifleman\"):\u0009weaponSlots = \"1  +  4  + 12*  256  + 2* 4096  +  2  + 8* 16  + 12*131072\"\n\u0009 output: [1,1,1,8,12,2,0,12]\n\u0009  - means: 1 x WeaponSlotPrimary, 1 x WeaponSlotHangun, ... , 12 x WeaponSlotInventory\n\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 2","1.00"],"Additional":null},{"Name":"BIS_fnc_invSlotsEmpty","Desc":" /*\n\u0009File: fn_invSlotsEmpty.sqf\n\n\u0009Description:\n\u0009Returns empty inventory slots of given unit.\n\u0009\n\u0009Parameter(s):\n\u00091: \u003cobject\u003e unit \n\u0009\n\u0009Returns:\n\u0009\u003carray\u003e numbers of empty slots\n\u0009\u0009\n\u0009Example:\n\u0009 [player] call BIS_fnc_invSlotsEmpty;\u0009 \u0009 \n\u0009 -\u003e [1,1,1,8,12,2,0,12] (means: 1 x WeaponSlotPrimary, 1 x WeaponSlotHangun, ... , 12 x WeaponSlotInventory - see BIS_FNC_invCodeToArray for code definition)\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 2","1.00"],"Additional":null},{"Name":"BIS_fnc_invSlotType","Desc":" /*\n\u0009File: fn_invSlotType.sqf\n\n\u0009Description:\n\u0009Returns slots taken by given item (given in config).\n\n\u0009Parameter(s):\n\u00091: \u003cstring | config class | empty\u003e inventory item given by name or by config class\n\u0009\n\u0009Returns:\n\u0009\u003carray\u003e array - numbers representing slots taken by given item (one item can take more slots of same or different type)\n\u0009              - empty if type 0 or not found\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 2","1.00"],"Additional":null},{"Name":"BIS_fnc_invString","Desc":" /*\n\u0009File: fn_inv.sqf\n\n\u0009Description:\n\u0009Returns inventory contents of given vehicle (unit).\n\u0009\n\u0009Note: for vehicles it returns mounted gun and its ammo, not cargo weapons and ammo.\n\n\u0009Parameter(s):\n\u00091: \u003cobject\u003e vehicle or unit \n\u0009\n\u0009Returns:\n\u0009\u003carray\u003e weapons and magazines\n*/\n\n//putWeaponPool object\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 2","1.00"],"Additional":null},{"Name":"BIS_fnc_isBuildingEnterable","Desc":" Check whether a building or structure has available positions defined within model. ","Syn":{"Syntax":" param call BIS_fnc_isBuildingEnterable; ","Params":["param: Object\n\n","param: Number"],"Return":" Array "},"Examples":["[_building] call BIS_fnc_isBuildingEnterable;","[_building, _minNumberOfPositions] call BIS_fnc_isBuildingEnterable;"],"Additional":["call","See also needed"]},{"Name":"BIS_fnc_isCampaign","Desc":" /*\n\u0009\n\u0009Description:\n\u0009Check to see if a mission is being run in a campaign.\n\u0009\n\u0009Returns:\n\u0009True if being run in a campaign, false if not.\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_isCurator","Desc":" /*\n\n\u0009Description:\n\u0009Return if given object is curator logic\n\n\u0009Parameter(s):\n\u0009\u00090: OBJECT\n\n\u0009Returns:\n\u0009BOOL\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.16"],"Additional":null},{"Name":"BIS_fnc_isCuratorEditable","Desc":" /*\n\n\u0009Description:\n\u0009Return if given object is editable by player (when he's curator)\n\n\u0009Parameter(s):\n\u0009\u00090: OBJECT\n\n\u0009Returns:\n\u0009BOOL\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.16"],"Additional":null},{"Name":"BIS_fnc_isDemo","Desc":" /*\n\n\u0009Description:\n\u0009Returns true when game version is demo\n\n\u0009Parameter(s):\n\u0009None\n\n\u0009Returns:\n\u0009BOOL\n*/\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_isForcedCuratorInterface","Desc":" /*\n\n\u0009Description:\n\u0009Return if curator interface is forced (user cannot leav it by pressing Zeus key)\n\n\u0009Parameter(s):\n\u0009NONE\n\n\u0009Returns:\n\u0009BOOL - true when forced\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.16"],"Additional":null},{"Name":"BIS_fnc_isInFrontOf","Desc":" \n//------------------\n// Purpose: This function checks, if a object is in front of another object\n// Arguments: [object1, object2, offset (\u003e 0 if position of object1 is not the front of object1)]\n// Return: boolean\n//\n// Revision History:\n// 20/11/06 0.1 - First cut\n// 24/11/06 0.1 - added offset\n//------------------\n\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 2","1.00"],"Additional":null},{"Name":"BIS_fnc_isInsideArea","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_isInZoom","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_isLeapYear","Desc":" /*\n\n\u0009Description:\n\u0009Returns true if given year is a leap year, otherwise false.\n\n\u0009Parameter(s):\n\u0009_this: SCALAR - year; a non-decimal number\n\n\u0009Example:\n\u0009_isLeapYear = 2035 call BIS_fnc_isLeapYear;\n\n\u0009Returns:\n\u0009BOOL - is given year a leap year or not?\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.10"],"Additional":null},{"Name":"BIS_fnc_isLoading","Desc":" /*\n\n\u0009Description:\n\u0009Check if a loading screen is opened\n\n\u0009Parameter(s): NONE\n\n\u0009Returns:\n\u0009BOOL\n*/\n\n//--- Exclude RscDisplayClient (IDD = 18) which is not standard loading display\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_isLocalized","Desc":" /*\n\n\u0009Description:\n\u0009Checks if given key name exists in ingame localisation database.\n\n\u0009Parameter(s):\n\u0009_this: STRING\n\n\u0009Returns:\n\u0009BOOL\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Take On Helicopters","1.00"],"Additional":null},{"Name":"BIS_fnc_isPosBlacklisted","Desc":" /*\n\u0009File: isPosBlacklisted.sqf\n\n\u0009Description:\n\u0009Function checks a blacklist and sees if the given position is on it or not.\n\u0009\n\u0009Parameter(s):\n\u0009_this select 0: position (Array)\n\u0009_this select 1: blacklist (Array or Object/Trigger)\n\u0009\n\u0009Returns:\n\u0009Is the position blacklisted or not (Boolean)\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 2","1.00"],"Additional":null},{"Name":"BIS_fnc_isUnitVirtual","Desc":" /*\n\n\u0009Description:\n\u0009Return if unit is virtual (used for example for Zeus players)\n\n\u0009Parameter(s):\n\u0009\u00090: OBJNULL\n\n\u0009Returns:\n\u0009BOOL\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_itemType","Desc":" /*\n\n\u0009Description:\n\u0009Return item category and type. Recognized types are:\n\n\u0009\u0009Weapon / VehicleWeapon\n\u0009\u0009\u0009AssaultRifle\n\u0009\u0009\u0009BombLauncher\n\u0009\u0009\u0009Cannon\n\u0009\u0009\u0009GrenadeLauncher\n\u0009\u0009\u0009Handgun\n\u0009\u0009\u0009Launcher\n\u0009\u0009\u0009MachineGun\n\u0009\u0009\u0009Magazine\n\u0009\u0009\u0009MissileLauncher\n\u0009\u0009\u0009Mortar\n\u0009\u0009\u0009RocketLauncher\n\u0009\u0009\u0009Shotgun\n\u0009\u0009\u0009Throw\n\u0009\u0009\u0009Rifle\n\u0009\u0009\u0009SubmachineGun\n\u0009\u0009\u0009SniperRifle\n\u0009\u0009VehicleWeapon\n\u0009\u0009\u0009Horn\n\u0009\u0009\u0009CounterMeasuresLauncher\n\u0009\u0009\u0009LaserDesignator\n\u0009\u0009Item\n\u0009\u0009\u0009AccessoryMuzzle\n\u0009\u0009\u0009AccessoryPointer\n\u0009\u0009\u0009AccessorySights\n\u0009\u0009\u0009Binocular\n\u0009\u0009\u0009Compass\n\u0009\u0009\u0009FirstAidKit\n\u0009\u0009\u0009GPS\n\u0009\u0009\u0009LaserDesignator\n\u0009\u0009\u0009Map\n\u0009\u0009\u0009Medikit\n\u0009\u0009\u0009MineDetector\n\u0009\u0009\u0009NVGoggles\n\u0009\u0009\u0009Radio\n\u0009\u0009\u0009Toolkit\n\u0009\u0009\u0009UAVTerminal\n\u0009\u0009\u0009VehicleWeapon\n\u0009\u0009\u0009Unknown\n\u0009\u0009\u0009UnknownEquipment\n\u0009\u0009\u0009UnknownWeapon\n\u0009\u0009\u0009Watch\n\u0009\u0009Equipment\n\u0009\u0009\u0009Glasses\n\u0009\u0009\u0009Headgear\n\u0009\u0009\u0009Vest\n\u0009\u0009\u0009Uniform\n\u0009\u0009\u0009Backpack\n\u0009\u0009Magazine\n\u0009\u0009\u0009Artillery\n\u0009\u0009\u0009Bullet\n\u0009\u0009\u0009CounterMeasures\n\u0009\u0009\u0009Flare\n\u0009\u0009\u0009Grenade\n\u0009\u0009\u0009Laser\n\u0009\u0009\u0009Missile\n\u0009\u0009\u0009Rocket\n\u0009\u0009\u0009Shell\n\u0009\u0009\u0009ShotgunShell\n\u0009\u0009\u0009SmokeShell\n\u0009\u0009\u0009UnknownMagazine\n\u0009\u0009Mine\n\u0009\u0009\u0009Mine\n\u0009\u0009\u0009MineBounding\n\u0009\u0009\u0009MineDirectional\n\n\u0009Parameter(s):\n\u0009\u00090: STRING - item class\n\n\u0009Returns:\n\u0009ARRAY in format [category,type]\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.08"],"Additional":null},{"Name":"BIS_fnc_jukebox","Desc":" /*\n\n\u0009Description:\n\u0009Plays music, depending on the player groups status\n\n\u0009Parameter(s):\n\u0009_this select 0:\u0009STRING \u0009- The sub-function to call\n\u0009_this select 1:\u0009ARRAY \u0009- Parameters to be sent to sub-function\n\u0009\n\u0009Returns:\n\u0009Dependent on sub-function\n*/\n\n#define DEFAULT_VOLUME \u0009\u00090.2\n#define DEFAULT_TRANSITION\u00095\n#define DEFAULT_RADIUS\u0009\u0009500\n#define DEFAULT_EXECUTIONRATE\u00095\n#define DEFAULT_NOREPEAT\u0009true\n\n//Parameters\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.08"],"Additional":null},{"Name":"BIS_fnc_kbCanSpeak","Desc":" /*\n\n\u0009Description:\n\u0009Check if person is not locked by some conversation\n\n\u0009Parameter(s):\n\u0009_this: OBJECT - checked person\n\n\u0009Returns:\n\u0009BOOL - true if he can speak\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Take On Helicopters","1.00"],"Additional":null},{"Name":"BIS_fnc_kbCreateDummy","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Take On Helicopters","1.00"],"Additional":null},{"Name":"BIS_fnc_kbIsSpeaking","Desc":" /*\n\n\u0009Description:\n\u0009Check if speaker is locked for different conversation\n\n\u0009Parameter(s):\n\u0009_this: OBJECT\n\n\u0009Returns:\n\u0009BOOL - true if locked\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Take On Helicopters","1.00"],"Additional":null},{"Name":"BIS_fnc_kbMenu","Desc":" /*\n\n\u0009Description:\n\u0009Opens conversation menu. Script terminates itself when menu selection is finished.\n\n\u0009Parameter(s):\n\u0009_this select 0: ARRAY or STRING - List of responses (of type ARRAY) or Menu name\n\u0009\u0009Responses are in format:\n\u0009\u0009_response select 0: STRING or ANY - Display name when STRING, otherwise used as default option when menu is closed without selecting anything.\n\u0009\u0009_response select 1:\n\u0009\u0009\u0009STRING - expression\n\u0009\u0009\u0009ARRAY - BIS_fnc_kbTell params\n\n\u0009Returns:\n\u0009NUMBER - ID of select option\n*/\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Take On Helicopters","1.00"],"Additional":null},{"Name":"BIS_fnc_kbPriority","Desc":" /*\n\n\u0009Description:\n\u0009Set conversation priority. Conversations with priority not in the list won't be played\n\n\u0009Parameter(s):\n\u0009_this:\n\u0009\u0009ARRAY - List of priorities. Empty array will just return current value.\n\u0009\u0009NUMBER\n\u0009\u0009\u0009\u003e0 - add priority to already existing list\n\u0009\u0009\u0009\u003c0 - remove priority from already existing list\n\u0009\u0009\u0009Priority 0 cannot be tempered with\n\n\u0009Returns:\n\u0009ARRAY - List of priorities\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Take On Helicopters","1.00"],"Additional":null},{"Name":"BIS_fnc_kbSentence","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Take On Helicopters","1.00"],"Additional":null},{"Name":"BIS_fnc_kbSkip","Desc":" /*\n\n\u0009Description:\n\u0009Skip conversation. Currently played sentence will be finished\n\n\u0009Parameter(s):\n\u0009_this select 0: STRING - Topic name\n\u0009_this select 1 (Optional): STRING - container name (default: current mission ID)\n\n\u0009Returns:\n\u0009NUMBER\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Take On Helicopters","1.00"],"Additional":null},{"Name":"BIS_fnc_kbTell","Desc":" /*\n\n\u0009Description:\n\u0009Plays conversation. Script terminates itself when conversation is finished.\n\n\u0009Parameter(s):\n\u0009_this select 0: STRING - Topic name\n\u0009_this select 1 (Optional): STRING - container name (default: current mission ID)\n\u0009_this select 2 (Optional): ARRAY - section to be played. Elements can be:\n\u0009\u0009* STRING - \"variant\" - play specific variant\n\u0009\u0009* ARRAY\n\u0009\u0009\u0009* [startingSentence,(endingSentence)] - play al sentences between specific start and end\n\u0009\u0009\u0009\u0009startingSentence can be in format:\n\u0009\u0009\u0009\u0009\u0009* STRING - full sentence name (example: 04_intro_team_PLA_0\")\n\u0009\u0009\u0009\u0009\u0009* ARRAY - [\u003cactorID\u003e(,\u003csentenceID\u003e)] (example: [\"PLA\",0] or just [\"PLA_0\"])\n\u0009\u0009\u0009\u0009\u0009* BOOL - true to play random sentence, false to play first sentence\n\u0009\u0009\u0009\u0009\u0009* default - first sentence\n\u0009\u0009\u0009\u0009endingSentence can be in format:\n\u0009\u0009\u0009\u0009\u0009* STRING - full sentence name (example: 04_intro_team_PLA_0\")\n\u0009\u0009\u0009\u0009\u0009* ARRAY - [\u003cactorID\u003e(,\u003csentenceID\u003e)] (example: [\"PLA\",0] or just [\"PLA_0\"])\n\u0009\u0009\u0009\u0009\u0009* BOOL - true to play only one sentence, false if continue to last sentence\n\u0009\u0009\u0009\u0009\u0009* default - last sentence\n\u0009\u0009* (default: play everything)\n\u0009_this select 3 (Optional): BOOL or STRING or OBJECT or CODE - true to force radio, name of custom radio channel, listener's channel, returned value of code\n\u0009_this select 4 (Optional): CODE - code executed at the start of every sentence (arguments are same as in kbAddTopic event handler) (default: {})\n\u0009\u0009\u0009\u0009   ARRAY - code with arguments in format [code,arguments]\n\u0009_this select 5 (Optional):\n\u0009\u0009ARRAY - replacement units for those defined in .bikb file (in chronological order)\n\u0009\u0009BOOL - when true, dummy logics will be created for all actor units which doesn't exist (default: false or value of 'bis_fnc_kbTell_createDummy' variable)\n\u0009_this select 6 (Optional): NUMBER - music and sound volumes will be multiplied by this value when conversation starts (default: 0.1)\n\u0009_this select 7 (Optional): BOOL - true to disable radio protocol message while the conversation is playing (default: true)\n\n\u0009Returns:\n\u0009NOTHING\n*/\n//Todo: priority kbTell stppoing current conversation, split into several functions (config loading)\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Take On Helicopters","1.00"],"Additional":null},{"Name":"BIS_fnc_kbTellLocal","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Take On Helicopters","1.00"],"Additional":null},{"Name":"BIS_fnc_kbTopicConfig","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Take On Helicopters","1.00"],"Additional":null},{"Name":"BIS_fnc_keyCode","Desc":" /*\n\n\u0009Description:\n\u0009Returns DIK code of a given key\n\n\u0009Parameter(s):\n\u0009_this:\n\u0009\u0009STRING - key name\n\u0009\u0009NUMBER - key code\n\u0009\u0009BOOL - return array of key definitions\n\n\u0009Returns:\n\u0009\u0009STRING - key name\n\u0009\u0009NUMBER - key code\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_keypointsExport","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Take On Helicopters","1.00"],"Additional":null},{"Name":"BIS_fnc_keypointsExportFromKML","Desc":" /*\n\n\u0009Description:\n\u0009Imports and marks positions from KLM file.\n\n\u0009Parameter(s):\n\u0009_this: STRING - path to .kml file\n\n\u0009Returns:\n\u0009STRING - config output (also copied to clipboard)\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Take On Helicopters","1.00"],"Additional":null},{"Name":"BIS_fnc_KMLimport","Desc":" /*\n\n\u0009Description:\n\u0009Read positions from KLM file.\n\u0009Recommended to execute in loading screen.\n\n\u0009Parameter(s):\n\u0009_this: STRING - path to .kml file\n\n\u0009Returns:\n\u0009ARRAY of ARRAYs in format [positionXYZ, folder, name, description]\n*/\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Take On Helicopters","1.00"],"Additional":null},{"Name":"BIS_fnc_limitSupport","Desc":" /*\n\n\u0009Description:\n\u0009Limits support runs during a mission.\n\n\u0009Parameter(s):\n\u0009_this select 0: OBJECT - Requester module\n\u0009_this select 1: STRING - Support type:\n\u0009\u0009\"Artillery\"\n\u0009\u0009\"Transport\"\n\u0009\u0009\"CAS_Heli\"\n\u0009\u0009\"CAS_Bombing\"\n\u0009\u0009\"Drop\"\n\u0009_this select 2: NUMBER - Support run limit\n\u0009\u0009-1: Unlimited\n\n\u0009Returns:\n\u0009nothing\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_linearConversion","Desc":" /*\n\u0009File: fn_linearConversion.sqf\n\n\u0009Description:\n\u0009Linear conversion of a value from one set to another.\n\n\u0009Parameter(s):\n\u0009_this select 0: Array (originalSet)\n\u0009\u0009Note: should be two elements [minimumValue, maximumValue]\n\u0009_this select 1: Scalar (originalValue)\n\u0009_this select 2: Array (newSet)\n\u0009\u0009Note: should be two elements [minimumValue, maximumValue]\n\u0009\n\u0009Returns:\n\u0009Scalar (newValue)\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 2: Operation Arrowhead","1.00"],"Additional":null},{"Name":"BIS_fnc_listCuratorPlayers","Desc":" /*\n\n\u0009Description:\n\u0009Returns list of playable units with access to curator\n\n\u0009Returns:\n\u0009ARRAY - list of units\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.16"],"Additional":null},{"Name":"BIS_fnc_listPlayers","Desc":" /*\n\n\u0009Description:\n\u0009Returns list of playable units\n\n\u0009Returns:\n\u0009ARRAY - list of units\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 2","1.00"],"Additional":null},{"Name":"BIS_fnc_liveFeed","Desc":" /*\n\u0009\n\u0009Description:\n\u0009Display a live feed.\n\u0009\n\u0009Parameters:\n\u0009\u0009_this select 0: OBJECT or ARRAY - Live feed source\n\u0009\u0009_this select 1: OBJECT or ARRAY - Live feed target\n\u0009\u0009_this select 2: OBJECT - Player that will see the feed\n\u0009\u0009_this select 3 (Optional): NUMBER - Live feed effects (-1: reset, 0: normal (default), 1: night vision, 2: thermal imaging)\n\u0009\n\u0009Returns:\n\u0009True if successful, false if not.\n*/\n\n// Doesn't need to be run on a dedicated server\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_liveFeedEffects","Desc":" /*\n\u0009\n\u0009Description:\n\u0009Add effects to a live feed.\n\u0009\n\u0009Parameters:\n\u0009\u0009_this (Optional): NUMBER - Live feed effects (-1: reset, 0: normal (default), 1: night vision, 2: thermal imaging)\n\u0009\n\u0009Returns:\n\u0009True if successful, false if not.\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_liveFeedModuleEffects","Desc":" /*\n\u0009\n\u0009Description:\n\u0009Add effects to a live feed via a module.\n\u0009\n\u0009Parameters:\n\u0009\u0009_this: OBJECT - Live Feed - Effects module\n*/\n\n// They ran me on a dedicated server. I stopped their function.\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_liveFeedModuleInit","Desc":" /*\n\u0009\n\u0009Description:\n\u0009Display a live feed via a module.\n\u0009\n\u0009Parameters:\n\u0009\u0009_this: OBJECT - Live Feed - Init module\n*/\n\n// Need not be run on dedicated servers\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_liveFeedModuleSetSource","Desc":" /*\n\u0009\n\u0009Description:\n\u0009Set a live feed's source via a module.\n\u0009\n\u0009Parameters:\n\u0009\u0009_this: OBJECT - Live Feed - Set Source module\n*/\n\n// \u003cinsert smart comment about dedicated servers here\u003e\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_liveFeedModuleSetTarget","Desc":" /*\n\u0009\n\u0009Description:\n\u0009Set a live feed's target via a module.\n\u0009\n\u0009Parameters:\n\u0009\u0009_this: OBJECT - Live Feed - Set Target module\n*/\n\n// On dedicated servers, player is not you\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_liveFeedSetSource","Desc":" /*\n\u0009\n\u0009Description:\n\u0009Set the source of a live feed.\n\u0009\n\u0009Parameters:\n\u0009\u0009_this: OBJECT or ARRAY - Live feed source. Can be an array in the format [object, [x, y, z]]\n\u0009\n\u0009Returns:\n\u0009True if successful, false if not.\n*/\n\n// Dedicated servers need not apply\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_liveFeedSetTarget","Desc":" /*\n\u0009\n\u0009Description:\n\u0009Set the target of a live feed.\n\u0009\n\u0009Parameters:\n\u0009\u0009_this: OBJECT or ARRAY - Live feed target\n\u0009\n\u0009Returns:\n\u0009True if successful, false if not.\n*/\n\n// One does not simply run on a dedicated server\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_liveFeedTerminate","Desc":" /*\n\u0009\n\u0009Description:\n\u0009Terminate a live feed.\n\u0009\n\u0009Returns:\n\u0009True if successful, false if not.\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_loadClass","Desc":" /*\n\n\u0009Description:\n\u0009Searches for class in mission, campaign and then in global config file.\n\u0009\n\u0009Parameter(s):\n\u0009\u00090: ARRAY of STRINGs - path\n\u0009\u00091: COFNIG - default path used in case when the original one is not found\n\u0009\n\u0009Returns:\n\u0009CONFIG\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_loadEntry","Desc":" /*\n\n\u0009Description:\n\u0009Searches for config entry in mission, campaign and then in global config file.\n\u0009\n\u0009Parameter(s):\n\u0009\u00090: ARRAY of STRINGs - path\n\u0009\u00091: COFNIG - default path used in case when the original one is not found\n\u0009\n\u0009Returns:\n\u0009ARRAY or NUMBER or STRING\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_loadFunctions","Desc":" /*\n\n\u0009Description:\n\u0009Compile scripts and save them into globally available functions.\n\n\u0009Parameter(s):\n\u0009\u00090: STRING - script path\n\u0009\u00091: STRING - variable prefix\n\u0009\u00092: ARRAY - list of variables to be declared. Elements can be of following types:\n\u0009\u0009\u0009variable: STRING - variable is (prefix + variable), loaded from (path + variable + \".sqf\")\n\u0009\u0009\u0009[variable:STRING,fileName:STRING] - variable is (prefix  variable), loaded from (path + fileName + \".sqf\")\n\u0009\u00093: BOOL - true for global persistent execution on all clients\n\n\u0009Returns:\n\u0009BOOL\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_loadInventory","Desc":" Adds a predefined loadout (either via CfgVehicles, CfgRespawnInventory, or a custom inventory saved via BIS_fnc_saveInventory) to a specified unit. ","Syn":{"Syntax":" param call BIS_fnc_loadInventory; ","Params":["Object - Unit to receive the loadout.\n\n","Config - Config entry of loadout found in either CfgVehicles or CfgRespawnInventory, OR:\n\n Array in format Namespace, Group, Object or String - usable with inventories saved via BIS_fnc_saveInventory.","Array - Array of Strings that define what part of the loadout to ignore. Example \"weapons\", \"uniform\". Optional parameter."],"Return":" Boolean "},"Examples":["loadout = [player,configfile \u003e\u003e \"CfgVehicles\" \u003e\u003e \"B_Soldier_SL_F\"] call BIS_fnc_loadInventory; // Gives loadout of BLUFOR Squad Leader to player unit."],"Additional":["call","BIS_fnc_saveInventory","BIS_fnc_exportInventory","BIS_fnc_deleteInventory"]},{"Name":"BIS_fnc_localize","Desc":" /*\n\n\u0009Description:\n\u0009Checks if text is localization key and if so, return the localized text.\n\n\u0009Parameter(s):\n\u0009_this: STRING\n\n\u0009Returns:\n\u0009STRING\n*/\n\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_locationDescription","Desc":" /*\n\n\u0009Description:\n\u0009Return location description (e.g. \"east of Kavala)\n\n\u0009Parameter(s):\n\u0009\u00090: See BIS_fnc_position\n\n\u0009Returns:\n\u0009STRING\n*/\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_locations","Desc":" Creates or registers location logics (used in various modules, like Ambient Civilians, Ambient Civilian Vehicles or Warfare 2).\n\nUpon registering, function will set following variables into location logic's variable space:\n\n\"class\" - unique class of location (either BIS_loc_\u003cconfigname\u003e or BIS_loc_custom_\u003cID\u003e)\n\n\"name\" - name of location from config or setName command. If none is defined, class is used\n\n\"type\" - config type\n\n\"neighbors\" - config defined neighbor locations\n\n\n\nIf you're registering currently existing object and some of variables above is already stored in it, it won't be replaced.\n","Syn":{"Syntax":" [type(s),area,debug] call BIS_fnc_locations  \u003cbr\u003e(Alternate Syntax exists check Read more)","Params":["type(s): String or Array of strings\n\n","area: Array in format [center,distance]","debug: (Optional): Boolean"],"Return":" Array - List of registered locations "},"Examples":["[\"CityCenter\",[position player,1000]] call bis_fnc_locations;","[[\"acityc_dolina\"]] call bis_fnc_locations;","[[myLocation1,myLocation2],[],true] call bis_fnc_locations;"],"Additional":["call","Functions Library"]},{"Name":"BIS_fnc_locWeaponInfo","Desc":" /*\n\n\u0009Description:\n\u0009Checks length of weapon info texts.\n\n\u0009Parameter(s):\n\u0009NONE\n\n\u0009Returns:\n\u0009BOOL\n*/\n\n//--- Function called before display - create display and terminate\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_log","Desc":" Log debug message. ","Syn":{"Syntax":" param call BIS_fnc_log; ","Params":["param: Anything"],"Return":" Boolean "},"Examples":["diag_tickTime call BIS_fnc_log;","[daytime, overcast, fog] call BIS_fnc_log;","(name player) call BIS_fnc_log;"],"Additional":["call","See also needed"]},{"Name":"BIS_fnc_logFormat","Desc":" Display debug message. ","Syn":{"Syntax":" [Text, \u003cParameters\u003e] call BIS_fnc_logFormat; ","Params":["Text: String - Formatted message or first param\n\n","Parameters: Any Value - Optional, additional parameters"],"Return":" Boolean - true when done "},"Examples":["[\"my message goes here\"] call BIS_fnc_logFormat;"],"Additional":["call","See also needed"]},{"Name":"BIS_fnc_loop","Desc":" Loop stacked code/function with timing and conditional control. Code and conditions are executed in non-scheduled environment. ","Syn":{"Syntax":" param call BIS_fnc_loop; \u003cbr\u003e(Alternate Syntax exists check Read more)","Params":["Sub-Function: String \n\n\"initialize\" - Initializes game loop (not required if AUTO_INITIALIZE is set to true)\n\n\"terminate\" - Terminates game loop (not required if AUTO_TERMINATE is set to true)\n\n\"itemAdd\" - Adds an item to loop\n\n\"itemRemove\" - Remove item from loop with id \"uniqueId\"\n\n\n\n","\"initialize\" - Initializes game loop (not required if AUTO_INITIALIZE is set to true)\n","\"terminate\" - Terminates game loop (not required if AUTO_TERMINATE is set to true)\n","\"itemAdd\" - Adds an item to loop\n","\"itemRemove\" - Remove item from loop with id \"uniqueId\"\n","Parameters: Array"],"Return":" Nothing "},"Examples":["//Hints time every five seconds\n[\"itemAdd\", [\"uniqueId\", { hint str time; }, 5]] call BIS_fnc_loop;","//Removes stacked loop with id of uniqueId\n[\"itemRemove\", [\"uniqueId\"]] call BIS_fnc_loop;","//Hints time every frame after BIS_variable is assigned\n[\"itemAdd\", [\"uniqueId\", { hint str time; }, nil, nil, { !isNil { BIS_variable } }]] call BIS_fnc_loop;","//Hints time every five seconds after BIS_variable is assigned\n[\"itemAdd\", [\"uniqueId\", { hint str time; }, 5, \"seconds\", { !isNil { BIS_variable } }]] call BIS_fnc_loop;","//Hints time every frame\n[\"itemAdd\", [\"uniqueId\", { hint str time; }]] call BIS_fnc_loop;","//Remove item from loop with id \"uniqueId\"\n[\"itemRemove\", [\"uniqueId\"]] call BIS_fnc_loop;"],"Additional":["call","See also needed"]},{"Name":"BIS_fnc_lowestNum","Desc":" /************************************************************\n\u0009Find Lowest Number\n\nParameters: [number set]\nReturns: number\n\nReturns the lowest number out of the passed set.\n\nExample: [1,5,10] call BIS_fnc_lowestNum\n\u0009returns 1\n************************************************************/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 2","1.00"],"Additional":null},{"Name":"BIS_fnc_magnitude","Desc":" /************************************************************\n\u0009Magnitude\n\nReturns the magnitude of an array of numbers (a vector).\nThe vector can have any number of elements (2, 3, etc).\n************************************************************/\n\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki)\n\n\n\n\n \n\n Use vectorMagnitude instead.\n ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 2","1.00"],"Additional":null},{"Name":"BIS_fnc_magnitudeSqr","Desc":" /************************************************************\n\u0009Magnitude\n\nReturns the magnitude of an array of numbers (a vector).\nThe vector can have any number of elements (2, 3, etc).\n************************************************************/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki)\n\n\n\n\n \n\n Use vectorMagnitudeSqr instead.\n ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 2","1.00"],"Additional":null},{"Name":"BIS_fnc_manageCuratorAddons","Desc":" /*\n\n\u0009Description:\n\u0009Make addons available to curators when provided condition is true.\n\n\u0009Parameter(s):\n\u0009\u00090: OBJECT or ARRAY of OBJECTs - curator(s)\n\u0009\u00091: STRING or ARRAY of STRINGs - CfgPatches classes\n\u0009\u00092: CODE - unlock condition\n\u0009\u00093: STRING - notification text\n\n\u0009Returns:\n\u0009BOOL\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.16"],"Additional":null},{"Name":"BIS_fnc_manageCuratorChallenges","Desc":" /*\n\n\u0009Description:\n\u0009Handle repeated curator challenges.\n\u0009When rewards defined in the argument are exceeded, refilling points bar fill be offered instead.\n\n\u0009Parameter(s):\n\u0009\u00090: OBJECT - curator\n\u0009\u00091 (Optional): ARRAY - list of supported challenges from CfgCuratorChallenges (default: all challenges)\n\u0009\u00092 (Optional): NUMBER - number of added challenges (default: 3)\n\u0009\u00093 (Optional): ARRAY of ARRAYs in format [\u003ccode\u003e,\u003cdescription\u003e] - rewards and their descriptions\n\u0009\u00094 (Optional): ARRAY of ARRAYs in format [\u003ccode\u003e,\u003cdescription\u003e] - default reward (used when previous rewards are exhausted)\n\u0009Returns:\n\u0009BOOL\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.16"],"Additional":null},{"Name":"BIS_fnc_mapSize","Desc":" /*\n\n\u0009Description:\n\u0009Returns map size.\n\n\u0009Parameter(s):\n\u0009\u00090 (Optional): STRING - world name (current world used as default)\n\n\u0009Returns:\n\u0009NUMBER\n*/\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_markerCreate","Desc":" /*\n\n\u0009Description:\n\u0009Creates marker with given params.\n\u0009Reads config to recognize settings - use for quick debugging only.\n\n\u0009Parameter(s):\n\u0009_this: ARRAY of values:\n\u0009\u0009STRING - one of type, color, brush or shape. If no corresponding class is found, value is used as marker text\n\u0009\u0009ARRAY\n\u0009\u0009\u0009[STRING(,ANY,ANY,...)] - marker name with optional arguments\n\u0009\u0009\u0009[NUMBER] - marker size [a,a]\n\u0009\u0009\u0009[NUMBER,NUMBER] - marker size [x,y]\n\u0009\u0009\u0009[NUMBER,NUMBER,NUMBER] - marker position [x,y,z]\n\u0009\u0009OBJECT - object's position\n\u0009\u0009NUMBER - marker dir\n\u0009\u0009BOOL - marker locality (true if global)\n\n\u0009Returns:\n\u0009STRING - created marker\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Take On Helicopters","1.00"],"Additional":null},{"Name":"BIS_fnc_markerParams","Desc":" /*\n\n\u0009Description:\n\u0009Returns marker params in format compatible with BIS_fnc_markerCreate\n\n\u0009Parameter(s):\n\u0009_this: STRING - marker name\n\n\u0009Returns:\n\u0009ARRAY - marker params\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Take On Helicopters","1.00"],"Additional":null},{"Name":"BIS_fnc_markerPath","Desc":" /*\n\n\u0009Description:\n\u0009Creater marker(s) between two points\n\n\u0009Parameter(s):\n\u0009_this select 0: start (value type see _this select 1)\n\u0009_this select 1: end\n\u0009\u0009ARRAY - position [x,y] or [x,y,z] or waypoint position [GROUP,NUMBER]\n\u0009\u0009OBJECT - object's position\n\u0009\u0009LOCATION - location's position\n\u0009\u0009STRING - marker's position\n\u0009_this select 2 (Optional): NUMBER - distance between markers.\n\u0009\u0009When value is negative, line marker is used instead with thickness of this value\n\u0009_this select 3 (Optional): ARRAY - marker params (see BIS_fnc_markerCreate for details)\n\n\u0009Returns:\n\u0009ARRAY - list of created markers\n*/\n\n//--- Marker settings\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Take On Helicopters","1.00"],"Additional":null},{"Name":"BIS_fnc_markerToTrigger","Desc":" /*\n\u0009File: markerToTrigger.sqf\n\u0009\n\u0009Description:\n\u0009Makes an existing or new marker cover a trigger area.\n\u0009\n\u0009Parameter(s):\n\u0009_this select 0: \u003cstring\u003e marker name - if no marker uses the name, a marker will be created\n\u0009_this select 1: \u003cobject\u003e trigger that will be covered by the marker\n\u0009_this select 2 (Optional): \u003cboolean\u003e changes are local (default: false)\n\u0009\n\u0009Returns:\n\u0009Marker name (string). Returns empty string if a marker couldn't be moved or created.\n\u0009\n\u0009How to use:\n\u0009_marker = [\"marker1\", trigger1] call BIS_fnc_markerToTrigger;\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_markWaypoints","Desc":" /*\n\n\u0009Description:\n\u0009Creates a marker on each uncompleted waypoint and marks it checked after completing that WP.\n\u0009Note: \"On Activation\" WP code is used for handling the markers; if this code is overwritten during the course, it can break this functionality\n\n\u0009Parameter(s):\n\u0009_this select 0: OBJECT - unit who will have its waypoints marked\n\u0009_this select 1 (Optional, use \"\" for default): STRING - text of hint shown after completing a waypoint, %1 is used for WP number (default \"\")\n\u0009_this select 2 (Optional, use [] for default): ARRAY of STRINGS - marker text format for [uncompleted, completed] waypoints, %1 is used for WP number (default [\"%1\", \"%1\"])\n\u0009_this select 3 (Optional, use [] for default): ARRAY of STRINGS - marker icon for [uncompleted, completed] waypoints (default [\"mil_circle\", \"mil_circle\"])\n\u0009_this select 4 (Optional, use [] for default): ARRAY of STRINGS - marker color for [uncompleted, completed] waypoints (default [\"ColorRed\", \"ColorGreen\"])\n\u0009_this select 5 (Optional, use [] for default): ARRAY of NUMBERS - marker size for [uncompleted, completed] waypoints (default [0.75, 0.75])\n\n\u0009Returns:\n\u0009NOTHING\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_maxDiffArray","Desc":" /*\n\u0009File: maxDifArray.sqf\n\n\u0009Description:\n\u0009Function to return the maximum difference between all values in an array.\n\n\u0009Parameter(s):\n\u0009_this select 0: Array of Numbers\n\u0009\n\u0009Returns:\n\u0009Biggest difference - Number\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 2","1.00"],"Additional":null},{"Name":"BIS_fnc_mirrorCuratorSettings","Desc":" /*\n\n\u0009Description:\n\u0009Mirror settings from once curator to another\n\n\u0009Parameter(s):\n\u0009\u00090: OBJECT or ARRAY of OBJECTs - curators(s) from which settings are taken from\n\u0009\u00091: OBJECT or ARRAY of OBJECTs - curators(s) to which settings are applied to\n\u0009\u00092: ARRAY of STRINGs - copied modes, can be \"addons\", \"objects\" and/or \"coefs\"\n\u0009\u00093: BOOL - true to share settings both ways, false to make second curator slave to the first one\n\n\u0009Returns:\n\u0009BOOL\n*/\n\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.16"],"Additional":null},{"Name":"BIS_fnc_miscanim","Desc":" /*******************************************************************************\n *\n *\u0009version: \u00091.0\n *\u0009name:\u0009\u0009misc anim script\n *\u0009description:\u0009setting up the animations with correct positions for object - choose correct performance. For ex. fixingTowingTractor (read the description)\n *\u0009parameters:\u0009described bellow\u0009\n *\u0009return value:\u0009nothing\n *\u0009  \n ******************************************************************************/\n//TODO: help to debuglog - list of anims and description\n//TODO: waiting for animation done -\u003e WaitUntil{_who, [\"sitUnarm_R_idleLoop\", \"sitRfl_R_BidleLoop\"] call _CheckIfAnimDone};\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 2","1.00"],"Additional":null},{"Name":"BIS_fnc_missileLaunchPositionFix","Desc":" \n/*\n\n\u0009Description:\n\u0009Workaround fix for ATGM/SAM launch positions\n\n\u0009Parameter(s):\n\u0009\u00090: OBJECT - vehicle\n\u0009\u00091: OBJECT - projectile\n\u0009\u00092: STRING - selection to adjust missile's position to\n\u0009\u00093: STRING - type of projectile that should be adjusted\n\n\u0009Returns:\n\u0009\u0009BOOL - success\n\u0009\u0009\n\u0009Example:\n\u0009\u0009[_vehicle,_missile,\"missile_move\",\"MissileBase\"] call BIS_fnc_missileLaunchPositionFix\n*/\n\n\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_missionConversations","Desc":" /*\n\n\u0009Description:\n\u0009Header function of local mission conversations\n\n\u0009Parameter(s):\n\u0009\u00090: STRING - unique mode\n\u0009\u00091 (Optional): ANY - additional params\n\n\u0009Returns:\n\u0009BOOL\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_missionConversationsLocal","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_missionFlow","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_missionHandlers","Desc":" #define VAR_RELOADS\u0009(missionname + \"_reloads_\" + str ismultiplayer)\n\n//--- Mission end type and rating\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_missionRespawnType","Desc":" /*\n\n\u0009Description:\n\u0009Return respawn type defined in Description.ext\n\n\u0009Parameter(s):\n\u0009\u00090: NUMBER or STRING - defines type of returned value\n\n\u0009Returns:\n\u0009NUMBER or STRING - respawn type ID (e.g., 1) or name (e.g., \"BIRD\")\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_missionTasks","Desc":" /*\n\n\u0009Description:\n\u0009Header function of local mission tasks.\n\u0009Automatically declares following variables:\n\u0009\u0009_taskID: STRING\n\u0009\u0009_taskState: STRING\n\u0009\u0009_taskExists: BOOL\n\n\u0009Parameter(s):\n\u0009\u00090: STRING - unique mode\n\u0009\u00091 (Optional): ANY - additional params\n\u0009\u00092 (Optional): CODE - specific task function (default: \"BIS_fnc_missionTasksLocal\")\n\n\u0009Returns:\n\u0009BOOL\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_missionTasksLocal","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_missionTimeLeft","Desc":" /*\n\n\u0009Description:\n\u0009Returns time in seconds until the mission end.\n\u0009Remaining time can be set using 'estimatedTimeLeft' command or using BIS_fnc_countdown\n\n\u0009Parameter(s): None\n\u0009\n\u0009Returns:\n\u0009NUMBER - time in seconds. -1 when no time was set yet.\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_moduleAI","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_moduleAmmo","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_moduleAnimals","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_moduleArsenal","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_moduleBleedTickets","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_moduleBootcampStage","Desc":" /*\n\n\u0009Description:\n\u0009Change the current Stage in Bootcamp MP Guided Mode\n\n\u0009Parameter(s):\n\u0009http://community.bistudio.com/wiki/Arma_3_Modules\n\n\u0009Returns:\n\u0009NONE\n*/\n\n// Parameters\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_moduleCAS","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_moduleChat","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_moduleCombatGetIn","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_moduleCountdown","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_moduleCoverMap","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_moduleCreateDiaryRecord","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_moduleCreateProjectile","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_moduleCurator","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_moduleCuratorAddAddons","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_moduleCuratorAddCameraArea","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_moduleCuratorAddEditableObjects","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_moduleCuratorAddEditingArea","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_moduleCuratorAddEditingAreaPlayers","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_moduleCuratorAddIcon","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_moduleCuratorAddPoints","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_moduleCuratorSetAttributes","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_moduleCuratorSetCamera","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_moduleCuratorSetCoefs","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_moduleCuratorSetCostsDefault","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_moduleCuratorSetCostsSide","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_moduleCuratorSetCostsVehicleClass","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_moduleCuratorSetEditingAreaType","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_moduleCuratorSetObjectCost","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_moduleDamage","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_moduleDate","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_moduleDiary","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_moduleDoorOpen","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_moduleEffectsBubbles","Desc":" /*\n\u0009File: fn_moduleEffectsBubblesCore.sqf\n\n\u0009Description:\n\u0009Module function. Creates underwater bubble effect on defined place (called usually by BIS_fnc_moduleEffectsEmitterCreator).\n\n\u0009Parameter(s):\n\u0009_this select 0 (Object) - Module logic.\n\u0009\n\u0009Returned value:\n\u0009None.\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_moduleEffectsEmitterCreator","Desc":" /*\n\u0009File: fn_moduleEffectsEmitterCreator.sqf\n\n\u0009Description:\n\u0009Module function. Creates particle emitters and calls effect function.\n\n\u0009Parameter(s):\n\u0009_this select 0 (Object) - Module logic.\n\u0009_this select 1 (String) - Function name.\n\u0009_this select 2 (Number) - Optional - Number of emitters.\n\u0009\n\u0009Returned value:\n\u0009None.\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_moduleEffectsFire","Desc":" /*\n\u0009File: fn_moduleEffectsFire.sqf\n\n\u0009Description:\n\u0009Module function. Creates fire on position of module (called usually by BIS_fnc_moduleEffectsEmitterCreator).\n\n\u0009Parameter(s):\n\u0009_this select 0 (Object) - Module logic.\n\u0009\n\u0009Returned value:\n\u0009None.\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_moduleEffectsPlankton","Desc":" /*\n\u0009File: fn_moduleEffectsPlankton.sqf\n\n\u0009Description:\n\u0009Module function.  Creates underwater plankton effect around player (called usually by BIS_fnc_moduleEffectsEmitterCreator).\n\n\u0009Parameter(s):\n\u0009_this select 0 (Object) - Module logic.\n\u0009\n\u0009Returned value:\n\u0009None.\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_moduleEffectsShells","Desc":" /*\n\u0009File: fn_moduleEffectsShells.sqf\n\n\u0009Description:\n\u0009Module function. Creates empty ammo cartridges on position of the module logic.\n\n\u0009Parameter(s):\n\u0009_this select 0 (Object) - Module logic.\n\u0009\n\u0009Returned value:\n\u0009None.\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_moduleEffectsSmoke","Desc":" /*\n\u0009File: fn_moduleEffectsSmoke.sqf\n\n\u0009Description:\n\u0009Module function. Creates smoke on position of module (called usually by BIS_fnc_moduleEffectsEmitterCreator).\n\n\u0009Parameter(s):\n\u0009_this select 0 (Object) - Module logic.\n\u0009\n\u0009Returned value:\n\u0009None.\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_moduleEndMission","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_moduleExecute","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_moduleFDCPClear","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_moduleFDCPIn","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_moduleFDCPOut","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_moduleFDFadeMarker","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_moduleFDSkeetDestruction","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_moduleFDStatsClear","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_moduleFiringDrill","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_moduleFriendlyFire","Desc":" //scriptName \"Functions\\systems\\fn_modulefriendlyfire.sqf\";\n/*******************************************************************************\n\u0009Version:\u0009\u00090.1\n\u0009Name:\u0009\u0009\u0009Friendly Fire\n\u0009DESCRIPTION:\u0009www.  \n\u0009PARAMETERS:\u0009\u00091) function called - string, list of functions:\n\u0009\u0009\u0009\u0009\u0009\u0009- Init\n\u0009\u0009\u0009\u0009\u0009\u0009- Destroy\n\u0009\u0009\u0009\u0009\u00092) parameter for the function\n\u0009\u0009\u0009\u0009\u0009For more informations see https://\n\u0009RETURNED VALUE:\u0009depends on the function called\n\u0009\n\u0009TODO:\u0009        + AddUnitToFriendlyFire \n\u0009\u0009\u0009\u0009\u0009+ RemoveUnitFromFriendlyFire - will need to change data structure - must remember eventhandlers :-( \n\u0009\u0009\u0009\u0009\u0009+ CheckRenegadeStatus\n\u0009\u0009\u0009\u0009\u0009- StopChecking the status (pause?)\n\u0009\u0009\u0009\u0009\u0009- RemoveEventhandlers on Destroy - will need to change data structure - must remember eventhandlers :-(\n\u0009\u0009\u0009\u0009\u0009+ change calling of execVM \"fn_moduleFriendlyFire.sqf\"\n\u0009\u0009\u0009\u0009\u0009- Display a warning message if player will shoot a civilian \n\u0009\u0009\u0009\u0009\u0009- handle deleted units (clear array from NULL-OBJECT)\n*******************************************************************************/\n\n//Functions interface\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_moduleFuel","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_moduleGenericRadio","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_moduleGroupID","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_moduleHandle","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_moduleHealth","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_moduleHint","Desc":" /*\n\n\u0009Description:\n\u0009Show a hint to all players of side\n\n\u0009Parameter(s):\n\u0009http://community.bistudio.com/wiki/Arma_3_Modules\n\n\u0009Returns:\n\u0009NONE\n*/\n\n// Parameters\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_moduleHQ","Desc":" /*\n\n\u0009Description:\n\u0009Register or return side HQ speaker\n\u0009\n\u0009Parameter(s):\n\u0009\u00090:\n\u0009\u0009\u0009OBJECT - register the HQ\n\u0009\u0009\u0009SIDE - return HQ of the side\n\u0009\n\u0009Returns:\n\u0009OBJECT - the HQ\n*/\n\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_moduleInit","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_moduleLightning","Desc":" /*\n\n\u0009Description:\n\u0009Zeus lightning strike\n\n\u0009Parameter(s):\n\u0009http://community.bistudio.com/wiki/Arma_3_Modules\n\n\u0009Returns:\n\u0009NONE\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_moduleMine","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_moduleMissionName","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_moduleMode","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_moduleModules","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_moduleMPTypeDefense","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_moduleMPTypeGameMaster","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_moduleMPTypeSectorControl","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_moduleMPTypeSeize","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_moduleObjective","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_moduleObjectiveFind","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_moduleObjectiveGetIn","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_moduleObjectiveMove","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_moduleObjectiveRaceCP","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_moduleObjectiveRaceFinish","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_moduleObjectiveRaceStart","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_moduleObjectiveSector","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_moduleObjectiveTarget","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_modulePositioning","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_modulePoster","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_modulePostprocess","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_moduleProjectile","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_modulePunishment","Desc":" /*\n\n\u0009Description:\n\u0009Make a unit play a punishment animation\n\n\u0009Parameter(s):\n\u0009http://community.bistudio.com/wiki/Arma_3_Modules\n\n\u0009Returns:\n\u0009NONE\n*/\n\n// Parameters\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_moduleRadioChannelCreate","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_moduleRank","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_moduleRating","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_moduleRemoteControl","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_moduleRespawnInventory","Desc":" /*\n\n\u0009Description:\n\u0009Set respawn loadouts a curator can assign to players\n\n\u0009Parameter(s):\n\u0009\u00090: OBJECT - curator logic\n\u0009\u00091: BOOL - true to make all loadouts availale, false to base them on units the curator can place\n\n\u0009Returns:\n\u0009BOOL\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_moduleRespawnPosition","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_moduleRespawnTickets","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_moduleRespawnVehicle","Desc":" /*\n\n\u0009Description:\n\u0009Set vehicle respawn, compatible both with SP and MP.\n\n\u0009Parameter(s):\n\u0009\u00090: OBJECT - vehicle\n\u0009\u00091:\n\u0009\u0009\u0009NUMBER - respawn delay in seconds (default is 0)\n\u0009\u0009\u0009BOOL - true to remove vehicle respawn (further params are ignored), false to check if the vehicle is marked for respawn\n\u0009\u00092: NUMBER - how long until the vehicle is automatically respawned after its crew leaves it (default is -1, i.e., disabled)\n\u0009\u00093: NUMBER - number of time the vehicle can be respawned (default is -1, i.e., unlimited)\n\u0009\u00094: CODE - code executed upon respawn. Passed arguments are [\u003cnewVehicle\u003e,\u003coldVehicle\u003e]. The old vehicle is deleted only after this code is completed.\n\u0009\u00095: POSITION - type of respawn position:\n\u0009\u0009\u00090 = where it started\n\u0009\u0009\u00091 = where it was destroyed\n\u0009\u0009\u00092 = on vehicle's side respawn marker (e.g., \"respawn_vehicle_west\")\n\u0009\u0009\u00093 = on BLUFOR respawn marker\n\u0009\u0009\u00094 = on OPFOR respawn marker\n\u0009\u0009\u00095 = on Independent respawn marker\n\u0009\u0009\u00096 = on Civilian respawn marker\n\u0009\u0009\u00097 = on side respawn marker of unit which destroyed the vehicle\n\u0009\u00096: NUMBER - position selection type (0 = random, 1 = newest, 2 = oldest)\n\u0009\u00097: NUMBER - type of old vehicle deletion (0 = don't delete, 1 = delete, 2 = delete with an explosion effect)\n\u0009\u00098: BOOL - true to show notifcation when the vehicle is respawned\n\n\u0009Returns:\n\u0009BOOL\n*/\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_moduleSaveGame","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_moduleSector","Desc":" /*\n\n\u0009Description:\n\u0009Initialize a sector module. Can be also used to get sector parameters.\n\n\u0009--- Get all sectors ---\n\u0009Parameter(s):\n\u0009\u00090: BOOL\n\n\u0009Returns:\n\u0009ARRAY of OBJECTs\n\n\u0009--- Get number of sectors held by a side ---\n\u0009Parameter(s):\n\u0009\u00090: SIDE\n\n\u0009Returns:\n\u0009NUMBER - number of sectors owned by the side\n\n\u0009--- Set sector owner ---\n\u0009Parameter(s):\n\u0009\u00090: OBJECT - sector module\n\u0009\u00091: SIDE\n\n\u0009Returns:\n\u0009BOOL\n\n\u0009--- Initialize ---\n\u0009Parameter(s):\n\u0009\u00090: OBJECT - sector module\n\n\u0009Returns:\n\u0009NOTHING\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","0.76"],"Additional":null},{"Name":"BIS_fnc_moduleSFX","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_moduleShowHide","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_moduleSimulationManager","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_moduleSkill","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_moduleSkiptime","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_moduleSound","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_moduleStrategicMapImage","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_moduleStrategicMapInit","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_moduleStrategicMapMission","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_moduleStrategicMapOpen","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_moduleStrategicMapORBAT","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_moduleTaskCreate","Desc":" /*\n\u0009\n\u0009Description:\n\u0009Create Task module function\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_moduleTaskSetDescription","Desc":" /*\n\u0009\n\u0009Description:\n\u0009Set Task Description module function\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_moduleTaskSetDestination","Desc":" /*\n\u0009\n\u0009Description:\n\u0009Set Task Destination module function\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_moduleTaskSetState","Desc":" /*\n\u0009\n\u0009Description:\n\u0009Set Task State module function\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_moduleTimeTrial","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_moduleTracers","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_moduleTrident","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_moduleTriggers","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_moduleTTCPClear","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_moduleTTCPIn","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_moduleTTCPOut","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_moduleTTCPTrigger","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_moduleTTCPTriggerBehind","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_moduleTTStatsClear","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_moduleUnits","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_moduleUnlockArea","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_moduleUnlockObject","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_moduleVolume","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_moduleWeather","Desc":" /*\n\n\u0009Description:\n\u0009Set overcast and fog\n\n\u0009Parameter(s):\n\u0009\u00090: STRING - mode, can be one of following\n\n\u0009\u0009\u0009\"enableDelay\" - enable delayed activation (i.e., weather changes are not applied manually and have to be confirmed by mission)\n\u0009\u0009\u0009\u00091: BOOL - true to enbale, false to disable\n\u0009\u0009\u0009\u0009Returns: Nothing\n\u0009\u0009\n\u0009\u0009\u0009\"isDelayEnabled\"\n\u0009\u0009\u0009\u0009Returns: true if delayed activation is enabled, otherwise false\n\n\u0009\u0009\u0009\"commit\" - apply weather changes\n\u0009Returns:\n\u0009Nothing\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_moduleZoneProtection","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_moduleZoneRestriction","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_monthDays","Desc":" /*\n\n\u0009Description:\n\u0009Returns number of days in given month. Takes in account for leap year.\n\n\u0009Parameter(s):\n\u0009_this select 0: SCALAR - year; a non-decimal number\n\u0009_this select 1: SCALAR - month; a non-decimal number between 1-12\n\n\u0009Example:\n\u0009_days = [2035,7] call BIS_fnc_monthDays;\n\n\u0009Returns:\n\u0009SCALAR - number of days in given month\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.10"],"Additional":null},{"Name":"BIS_fnc_moveAction","Desc":" /*\n\n\u0009Description:\n\u0009Return current move action (used in playAction, playActionNow and switchAction)\n\n\u0009Parameter(s):\n\u0009\u00090: OBJECT\n\u0009\u00091 (Optional): BOOL - true to return config path of the action, false to return just the action name (default: false)\n\n\u0009Returns:\n\u0009STRING or ARRAY\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_moveIn","Desc":" /*\n\n\u0009Description:\n\u0009Moves a unit into vehicle. Compatible with assignedVehicleRole output.\n\n\u0009Parameter(s):\n\u0009_this select 0: OBJECT - vehicle\n\u0009_this select 1: OBJECT - unit\n\u0009_this select 2: ARRAY - role in format [name] or [name,position]\n\n\u0009Returns:\n\u0009BOOL - true if moved in succesfully\n*/\n#define BIS_FNC_MOVEIN_ERROR_NOSPACE \\\n\u0009[\"No positions of type '%1' empty in %2\",_roleName,_veh] call bis_fnc_error; \\\n\u0009false\n\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Take On Helicopters","1.00"],"Additional":null},{"Name":"BIS_fnc_moveToRespawnPosition","Desc":" /*\n\n\u0009Description:\n\u0009Move a unit to the respawn position.\n\n\u0009Parameter(s):\n\u0009\u00090: OBJECT\n\u0009\u00091:\n\u0009\u0009\u0009STRING - move to marker position\n\u0009\u0009\u0009OBJECT - move inside a vehicle (when seats are empty and not locked) or around it\n\u0009\u0009\u0009ARRAY - move to precise [X,Y,Z] position\n\n\u0009Returns:\n\u0009BOOL\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_MP","Desc":" Send function for remote execution (and executes locally if conditions are met) . ","Syn":{"Syntax":" [params, functionName, target, isPersistent] call BIS_fnc_MP; \u003cbr\u003e(Alternate Syntax exists check Read more)","Params":["params: Anything - function arguments\n\n","functionName: String - function name","target:\n\n Object - function will be executed only where unit is local [default: everyone]\n\n Array - array of objects\n\n Boolean - true to execute on each machine (including the one where the function was called from), false to execute it on server only\n\n Number - function will be executed only on client with the given owner ID\n\n Side - function will be executed only on clients where the player is on the specified side\n\n Group - function will be executed only on clients where the player is in the specified group\n"," Object - function will be executed only where unit is local [default: everyone]\n"," Array - array of objects\n"," Boolean - true to execute on each machine (including the one where the function was called from), false to execute it on server only\n"," Number - function will be executed only on client with the given owner ID\n"," Side - function will be executed only on clients where the player is on the specified side\n"],"Return":" Group - function will be executed only on clients where the player is in the specified group"},"Examples":["[\"Imma spamming your log!\",\"BIS_fnc_log\"] call BIS_fnc_MP;\nLogs a message for every player who's currently joined.","[[\"Hello World\"],\"BIS_fnc_guiMessage\",nil,true ] call BIS_fnc_MP;\nSend a message containing \"Hello World\" to every player, including the ones who joins later using JIP.","[[[],\"playerConnected.sqf\"],\"BIS_fnc_execVM\",false,true ] call BIS_fnc_MP;\nExecutes playerConnected.sqf script on server every time a player joins the game."],"Additional":["call","BIS_fnc_MPexec"]},{"Name":"BIS_fnc_MPexec","Desc":" /*\n\n\u0009Description:\n\u0009Execute received remote execution\n\n\u0009Parameter(s):\n\u0009_this select 0: STRING - Packet variable name (always \"BIS_fnc_MP_packet\")\n\u0009_this select 1: ARRAY - Packet value (sent by BIS_fnc_MP function; see it's description for more details)\n\u0009\n\u0009Returns:\n\u0009BOOL - true if function was executed successfuly\n*/\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Take On Helicopters","1.00"],"Additional":null},{"Name":"BIS_fnc_music","Desc":" /*\n\u0009File: fn_music.sqf\n\n\u0009Description:\n\u0009Jukebox\n\n\u0009Parameter(s):\n\u0009_this:\u0009ARRAY\u0009- list of used songs (Optional)\n\u0009\u0009NUMBER\u0009- delay between tracks (Optional)\n\n\u0009Returns:\n\u0009Nothing\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 2: Operation Arrowhead","1.00"],"Additional":null},{"Name":"BIS_fnc_nearestHelipad","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Take On Helicopters","1.00"],"Additional":null},{"Name":"BIS_fnc_nearestNum","Desc":" /************************************************************\n\u0009Find Nearest Number\n\nParameters: [[number set], target number]\nReturns: number\n\nReturns the number out of the set which is closest to the target number\n\nExample: [[1,5,10], 4] call BIS_fnc_nearestNum\n\u0009returns 5\n************************************************************/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 2","1.00"],"Additional":null},{"Name":"BIS_fnc_nearestPosition","Desc":" /*\n\u0009File: nearestPosition.sqf\n\n\u0009Description:\n\u0009Function to find the nearest Object or position from a list, \n\u0009when compared to a given Object or position.\n\n\u0009Parameter(s):\n\u0009_this select 0: Array of Objects, Locations, Groups, markers (String) and / or positions (Array)\n\u0009_this select 1: Comparator Object, Location, Group, marker (String) or position (Array)\n\u0009\n\u0009Notes:\n\u0009[*] For type Group the position of its leader is used.\n\u0009\n\u0009Returns:\n\u0009Object / Location / Group / marker (String) or position (Array) which is nearest to the comparator\n*/\n\n//Valid parameter count\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 2","1.00"],"Additional":null},{"Name":"BIS_fnc_nearestRoad","Desc":" /*\n\n\u0009Description:\n\u0009Find the nearest road segment to certain position, within given radius\n\n\u0009Parameter(s):\n\u0009_this select 0:\u0009ARRAY\u0009- The center position\n\u0009_this select 1:\u0009NUMBER\u0009- The distance from center position\n\u0009_this select 2:\u0009ARRAY\u0009- List of blacklisted road objects\n\u0009\n\u0009Returns:\n\u0009OBJECT\u0009- Nearest road object on success\n\u0009NULL\u0009- If no road object is found within given radius\n*/\n//Parameters\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","0.76"],"Additional":null},{"Name":"BIS_fnc_neutralizeUnit","Desc":" /*\n\n\u0009Description:\n\u0009Neutralize an object by intrinsic means\n\u0009\u0009- soldiers are blowed up by mine\n\u0009\u0009- vehicles are shelled by artillery\n\u0009\u0009- air units are hit by AA missile\n\u0009\u0009- underwater units are simply killed\n\n\u0009Parameter(s):\n\u0009\u00090: OBJECT\n\n\u0009Returns:\n\u0009BOOL\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_noFlyZone","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Take On Helicopters","1.00"],"Additional":null},{"Name":"BIS_fnc_noFlyZonesCreate","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Take On Helicopters","1.00"],"Additional":null},{"Name":"BIS_fnc_noFlyZonesExport","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Take On Helicopters","1.00"],"Additional":null},{"Name":"BIS_fnc_numberDigits","Desc":" /*\n\n\u0009Description:\n\u0009Break number into array of digits\n\n\u0009Example:\n\u0009123456 \u003e [1,2,3,4,5,6]\u0009\n\n\u0009Parameter(s):\n\u0009_this: NUMBER\n\n\u0009Returns:\n\u0009ARRAY\n*/\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Take On Helicopters","1.00"],"Additional":null},{"Name":"BIS_fnc_numberText","Desc":" /*\n\n\u0009Description:\n\u0009Convert a number into string (avoiding scientific notation)\n\n\u0009Parameter(s):\n\u0009_this: NUMBER\n\n\u0009Returns:\n\u0009STRING\n*/\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Take On Helicopters","1.00"],"Additional":null},{"Name":"BIS_fnc_objectHeight","Desc":" /*\n\n\u0009Description:\n\u0009Return object height defined by it's bounding box and ev. offset/fix.\n\n\u0009Parameter(s):\n\u0009_this:object \u0009- input/evaluated object\n\n\u0009Returns:\n\u0009_height:scalar\u0009- height of the evaluated object\n\n\u0009Example:\n\u0009_height = _object call BIS_fnc_objectHeight;\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_ObjectsGrabber","Desc":" /*\n\u0009File: objectGrabber.sqf\n\n\u0009Description:\n\u0009Converts a set of placed objects to an object array for the DynO mapper.\n\u0009Places this information in the debug output for processing.\n\n\u0009Parameter(s):\n\u0009_this select 0: position of the anchor point (Array)\n\u0009_this select 1: size of the covered area (Scalar)\n\u0009_this select 2: grab object orientation? (Boolean) [default: false]\n\u0009\n\u0009Returns:\n\u0009Ouput text (String)\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 2","1.00"],"Additional":null},{"Name":"BIS_fnc_objectSide","Desc":" /*\n\n\u0009Description:\n\u0009Returns object side as defined in config (i.e., not affected by dynamic changing)\n\n\u0009Parameter(s):\n\u00090: OBJECT\n\u00091: BOOL - false (default) to return actual object side, true to return the default one (set in config)\n\n\u0009Returns:\n\u0009SIDE\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_ObjectsMapper","Desc":" /*\n\u0009File: objectMapper.sqf\n\n\u0009Description:\n\u0009Takes an array of data about a dynamic object template and creates the objects.\n\n\u0009Parameter(s):\n\u0009_this select 0: position of the template - Array [X, Y, Z]\n\u0009_this select 1: azimuth of the template in degrees - Number \n\u0009_this select 2: objects for the template - Array / composition class - String / tag list - Array\n\u0009_this select 3: (optional) randomizer value (how much chance each object has of being created. 0.0 is 100% chance) - Number\n\n\u0009Returns:\n\u0009Created objects (Array)\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 2","1.00"],"Additional":null},{"Name":"BIS_fnc_objectType","Desc":" /*\n\n\u0009Description:\n\u0009Return object category and type. Recognized types are:\n\n\u0009\u0009Soldier\n\u0009\u0009\u0009AT\n\u0009\u0009\u0009Civilian\n\u0009\u0009\u0009Diver\n\u0009\u0009\u0009Infantry\n\u0009\u0009\u0009Medic\n\u0009\u0009\u0009MG\n\u0009\u0009\u0009Officer\n\u0009\u0009\u0009Pilot\n\u0009\u0009\u0009Sniper\n\u0009\u0009\u0009SpecialForces\n\u0009\u0009\u0009UAVPilot\n\u0009\u0009Vehicle / VehicleAutonomous\n\u0009\u0009\u0009Car\n\u0009\u0009\u0009Helicopter\n\u0009\u0009\u0009Motorcycle\n\u0009\u0009\u0009Plane\n\u0009\u0009\u0009Ship\n\u0009\u0009\u0009StaticWeapon\n\u0009\u0009\u0009Submarine\n\u0009\u0009\u0009TrackedAPC\n\u0009\u0009\u0009Tank\n\u0009\u0009\u0009WheeledAPC\n\u0009\u0009Logic\n\u0009\u0009\u0009Logic\n\u0009\u0009\u0009Module\n\u0009\u0009Object\n\u0009\u0009\u0009Ammobox\n\u0009\u0009\u0009Animal\n\u0009\u0009\u0009Backpack\n\u0009\u0009\u0009Camera\n\u0009\u0009\u0009Church\n\u0009\u0009\u0009Effect\n\u0009\u0009\u0009Fire\n\u0009\u0009\u0009Flag\n\u0009\u0009\u0009Helipad\n\u0009\u0009\u0009House\n\u0009\u0009\u0009Marker\n\u0009\u0009\u0009Mine\n\u0009\u0009\u0009Parachute\n\u0009\u0009\u0009Seagull\n\u0009\u0009\u0009Sound\n\u0009\u0009\u0009Target\n\u0009\u0009\u0009Thing\n\u0009\u0009\u0009Trigger\n\u0009\u0009\u0009UnknownObject\n\u0009\u0009\u0009VASI\n\u0009\u0009\u0009Wreck\n\n\u0009Parameter(s):\n\u0009\u00090: STRING - item class\n\n\u0009Returns:\n\u0009ARRAY in format [category,type]\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.08"],"Additional":null},{"Name":"BIS_fnc_objectVar","Desc":" /*\n\n\u0009Description:\n\u0009Return an unique object variable.\n\u0009The variable is preserved after unit respawn.\n\n\u0009Parameter(s):\n\u0009\u00090: OBJECT\n\u0009\u00091 (Optional): STRING - variable name (number will be added behind it)\n\n\u0009Returns:\n\u0009STRING\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_onDiaryChanged","Desc":" /*\n\n\u0009Description:\n\u0009Register code to be executed when diary item changes.\n\n\u0009Arguments passed into code are:\n\u0009\u00090: DISPLAY - map display\n\u0009\u00091: BOOL - true if clicked on subject list, false when on record list (clicking on subject may also trigger record)\n\u0009\u00092: STRING - subject name\n\u0009\u00093: STRING - record name\n\u0009\u00094: ANY - passed arguments (index of onDiaryChanged code when no custom arguments were used)\n\n\u0009Parameter(s):\n\u0009_this:\n\u0009\u0009CODE\n\u0009\u0009ARRAY - code with custom arguments in format [CODE,ARG1,ARG2,...]\n\u0009\u0009NUMBER - remove code of given index\n\n\u0009Returns:\n\u0009NUMBER - index of onDiaryChanged code\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_onEnd","Desc":" /*\n\n\u0009Description:\n\u0009Register code to be executed after mission end.\n\n\u0009Parameter(s):\n\u0009_this:\n\u0009\u0009CODE\n\u0009\u0009ARRAY - code with custom arguments in format [CODE,ARG1,ARG2,...]\n\u0009\u0009NUMBER - remove code of given index\n\n\u0009Returns:\n\u0009NUMBER - index of onEnd code\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Take On Helicopters","1.00"],"Additional":null},{"Name":"BIS_fnc_onLoad","Desc":" /*\n\n\u0009Description:\n\u0009Register code to be executed after mission load.\n\u0009Replaced by \"loaded\" mission event handler, function now exists only because of backward compatibility\n\n\u0009Parameter(s):\n\u0009_this:\n\u0009\u0009CODE\n\u0009\u0009NUMBER - remove code of given index\n\n\u0009Returns:\n\u0009NUMBER - index of onLoad code\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Take On Helicopters","1.00"],"Additional":null},{"Name":"BIS_fnc_onPlayerConnected","Desc":" /*\n\n\u0009Description:\n\u0009Executes a function on server every time a player connects the mission.\n\u0009Passed arguments are [player:Object,arguments]\n\n\u0009Parameter(s):\n\u0009\u00090: STRING or CODE - function variable or code to be executed\n\u0009\u00091: ANY - optional arguments passed to the function\n\u0009\n\u0009Returns:\n\u0009BOOL\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_ORBATAddGroupOverlay","Desc":" /*\n\n\u0009Description:\n\u0009Register texture(s) to be displayed over CfgORBAT group.\n\n\u0009Parameter(s):\n\u0009\u00090: CONFIG - path to group in CfgORBAT.\n\u0009\u00091: STRING - texture\n\u0009\u00092: ARRAY - color in format [R,G,B,A]\n\u0009\u00093: NUMBER - original icon width multiplier\n\u0009\u00094: NUMBER - original icon height multiplier\n\u0009\u00095: NUMBER - angle\n\u0009\u00096: STRING - text\n\u0009\u00097: BOOL - shadow\n\n\u0009Returns:\n\u0009NUMBER - overlay ID (used by BIS_fnc_ORBATRemoveGroupOverlay)\n*/\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_ORBATAnimate","Desc":" /*\n\n\u0009Description:\n\u0009Animate an ORBAT viewer.\n\n\u0009Parameter(s):\n\u0009\u00090: (Optional) CONFIG or ARRAY - either config path to target group, or offset position [X,Y] from structure center.\n\u0009\u0009\u0009\u0009\u0009\u0009When empty, view is reset to original level where whole structure is visible.\n\u0009\u00091: (Optional): NUMBER - zoom in range 0 (maximum zoom) to 1 (minimum zoom).\n\u0009\u00092: (Optional): NUMBER - commit time in seconds\n\n\u0009Returns:\n\u0009BOOL - true when animation is applied\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_ORBATConfigPreview","Desc":" //--- Open config viewer\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_ORBATGetGroupParams","Desc":" /*\n\n\u0009Description:\n\u0009Return group params from CfgORBAT\n\n\u0009Parameter(s):\n\u0009\u00090: CONFIG - path to group in CfgORBAT\n\n\u0009Returns:\n\u0009ARRAY\n*/\n\n\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_ORBATOpen","Desc":" /*\n\n\u0009Description:\n\u0009Show ORBAT viewer.\n\n\u0009Parameter(s):\n\u0009\u00090: CONFIG - path to displayed structure, e.g. configfile \u003e\u003e \u003e\u003e CfgORBAT \u003e\u003e 7thInfantry \u003e\u003e 1stBCT\n\u0009\u00091 (Optional): DISPLAY - parent display of the viewer\n\u0009\u00092 (Optional): ARRAY - list of tags. Searching will stop on groups which doesn't contain at least one of the tags (default: no tags)\n\u0009\u00093 (Optional): NUMBER - number of tier displayed (default: unlimited)\n\u0009\u00094 (Optional): ARRAY - array of arrays in format [group class (CONFIG),action performed upon clicking on group icon (CODE)]\n\n\u0009Returns:\n\u0009DISPLAY\n*/\n#define GROUPPARAMS_COUNT\u000912\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_ORBATRemoveGroupOverlay","Desc":" /*\n\n\u0009Description:\n\u0009Unregister texture(s) to be displayed over CfgORBAT group.\n\n\u0009Parameter(s):\n\u0009\u00090: CONFIG - path to group in CfgORBAT.\n\u0009\u00091: NUMBER - overlay ID returned by BIS_fnc_ORBATAddGroupOverlay\n\n\u0009Returns:\n\u0009BOOL - true if overlay entry no longer exists\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_ORBATSetGroupFade","Desc":" /*\n\n\u0009Description:\n\u0009Set fade value of CfgORBAT group and all groups below it.\n\n\u0009Parameter(s):\n\u0009\u00090: CONFIG - path to group in CfgORBAT. If only this parameter is passed, visibility settings for the group are removed.\n\u0009\u00091: NUMBER - alpha (0 = transparent, 1 = full color)\n\u0009\u00092: NUMBER - commit time in seconds\n\n\u0009Returns:\n\u0009BOOL\n*/\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_ORBATSetGroupParams","Desc":" /*\n\n\u0009Description:\n\u0009Override group params from CfgORBAT.\n\n\u0009Parameter(s):\n\u0009\u00090: NUMBER or STRING - ID (e.g., 1 to result in \"1st\", or a specific string)\n\u0009\u00091: STRING - size as a class from CfgChainOfCommand \u003e Sizes (e.g., \"Platoon\")\n\u0009\u00092: STRING - type as a class from CfgChainOfCommand \u003e Types (e.g., \"Infantry\")\n\u0009\u00093: STRING - side as a class from CfgChainOfCommand \u003e Sides (e.g., \"West\")\n\u0009\u00094: STRING - name. Passed arguments are: %1 - ID, %2 - type, %3 - size)\n\u0009\u00095: STRING - short name. Passed arguments are: %1 - ID, %2 - type, %3 - size)\n\u0009\u00096: STRING - texture. Can be link to a file or a class from CfgMarkers\n\u0009\u00097: NUMBER - texture size coeficient. 1 is the default size\n\u0009\u00098: STRING - insignia displayed in tooltip and in the ORBAT viewer background\n\u0009\u00099: ARRAY - texture color in format RGBA\n\u0009\u000910: STRING - commander name. Can be the name directly or a class from CfgWorlds \u003e GenericNames\n\u0009\u000911: STRING - commander rank.\n\u0009\u000912: STRING - description\n\u0009\u000913: ARRAY - assets. Items are ARRAYs in format [vehicleClass:STRING,count:NUMBER]\n\n\u0009Returns:\n\u0009BOOL\n*/\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_ORBATTooltip","Desc":" /*\n\n\u0009Description:\n\u0009Show group tooltip.\n\n\u0009Parameter(s):\n\u0009\u00090:\n\u0009\u0009\u0009CONFIG - group from CfgORBAT\n\u0009\u0009\u0009ARRAY - group params returned by BIS_fnc_ORBATGetGroupParams\n\u0009\u00091: CONTROL - tooltip control\n\u0009\u00092: ARRAY - mouse position in format [x,y]\n\n\u0009Returns:\n\u0009BOOL\n*/\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_ordinalNumber","Desc":" /*\n\n\u0009Description:\n\u0009Return number as ordinal number (e.g. 1 become \"1st\")\n\n\u0009Parameter(s):\n\u0009\u00090: NUMBER\n\u0009\u00091 (Optional): STRING - language (default: current game language)\n\u0009\u00092 (Optional): BOOL - true for feminine gender, false for masculine (default: false)\n\n\u0009Returns:\n\u0009STRING\n*/\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_overviewAuthor","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Take On Helicopters","1.00"],"Additional":null},{"Name":"BIS_fnc_overviewDifficulty","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Take On Helicopters","1.00"],"Additional":null},{"Name":"BIS_fnc_overviewMission","Desc":" #define CONTROL_SHOW(CONTROL) \\\n\u0009CONTROL ctrlshow true; \\\n\u0009CONTROL ctrlsetfade 0; \\\n\u0009CONTROL ctrlcommit 0;\n\n#define CONTROL_HIDE(CONTROL) \\\n\u0009CONTROL ctrlshow false; \\\n\u0009CONTROL ctrlsetfade 1; \\\n\u0009CONTROL ctrlcommit 0;\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Take On Helicopters","1.00"],"Additional":null},{"Name":"BIS_fnc_overviewTerrain","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Take On Helicopters","1.00"],"Additional":null},{"Name":"BIS_fnc_overviewTimeTrial","Desc":" /*\n\n\u0009Description:\n\u0009Returns the dynamically composed overview text for Time Trial scenarios\n\n\u0009Parameter(s):\n\u0009_this: scenario class name\n\n\u0009Returns:\n\u0009Overview: StructuredText\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Take On Helicopters","1.00"],"Additional":null},{"Name":"BIS_fnc_packStaticWeapon","Desc":" /*\n\u0009File: fn_packStaticWeapon.sqf\n\n\u0009Description:\n\u0009Function which uses a weapon team to pack a static weapon such\n\u0009as the HMG or Mortar. Requires three personnel in the team as\n\u0009a minimum (leader, gunner, assistant).\n\n\u0009Parameter(s):\n\u0009_this select 0: the support team group (group)\n\u0009_this select 1: the weapon (option if weapon registered as \"supportWeaponSetup\" variable)\n*/\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_param","Desc":" Load a script parameter. See Functions Library (Arma 3) for detailed description. ","Syn":{"Syntax":" [input,index,(defaultValue,dataTypes,requiredCount)] call BIS_fnc_param; ","Params":["input: Array - list of params\n\n","index: Number - selected index","defaultValue (Optional): Anything - default param (used when param is missing or of wrong type). You can overload default value by setting 'BIS_fnc_\u003cfunctionName\u003e_\u003cindex\u003e'","dataTypes (Optional): Array - list of allowed type examples (e.g. [\"\",[],0,objNull])","requiredCount (Optional): Number - If value is Array, checks if it has required number of elements"],"Return":" Anything "},"Examples":["_target = [_this, 0, objNull, [objNull,[]], [2,3]] call BIS_fnc_param;\n\n If (_this select 0) is not defined, default objnull is used.\n\n If (_this select 0) is defined, but is neither of type Object nor Array, error message is logged and default objNull is used.\n\n If (_this select 0) and is Array, but it's count is neither 2 nor 3, error message is logged and default objNull is used.","_answer = [_this, 1, 42] call BIS_fnc_param;\n\n If (_this select 1) is not defined, default 42 is used.\n\n No limit for data types or number of elements exists."],"Additional":["call","BIS_fnc_paramIn"]},{"Name":"BIS_fnc_paramCountdown","Desc":" /*\n\n\u0009Description:\n\u0009Set side mission time\n\n\u0009Parameter(s):\n\u0009NUMBER - time (in seconds)\n\n\u0009Returns:\n\u0009BOOL\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_paramDaytime","Desc":" /*\n\n\u0009Description:\n\u0009Set time of the day\n\n\u0009Parameter(s):\n\u0009NUMBER - hour\n\n\u0009Returns:\n\u0009ARRAY - date\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_paramGuerFriendly","Desc":" /*\n\n\u0009Description:\n\u0009Set relationship between Independents and remaining sides\n\n\u0009Parameter(s):\n\u0009NUMBER - side relation\n\u0009\u0009-1: Nobody\n\u0009\u00090: OPFOR\n\u0009\u00091: BLUFOR\n\u0009\u00092: Everybody\n\n\u0009Returns:\n\u0009BOOL\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_paramIn","Desc":" #define DISABLE_REWRITE\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki)\n","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Take On Helicopters","1.00"],"Additional":null},{"Name":"BIS_fnc_paramRespawnTickets","Desc":" /*\n\n\u0009Description:\n\u0009Set side respawn tickets\n\n\u0009Parameter(s):\n\u0009NUMBER - respawn tickets\n\n\u0009Returns:\n\u0009BOOL\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_paramWeather","Desc":" Sets overcast using BIS_fnc_setOvercast. ","Syn":{"Syntax":" [0] call BIS_fnc_paramWeather; ","Params":["Number - Overcast value. Multiplied by 0.01 inside the function. Default value is current overcast value."],"Return":" Number - Overcast value (ranging from 0 to 1). "},"Examples":["overCastValue = [1] call BIS_fnc_paramWeather;"],"Additional":["call","BIS_fnc_setOvercast","overcast","setOvercast"]},{"Name":"BIS_fnc_parseNumber","Desc":" /*\n\n\u0009Description:\n\u0009Return number from expression\n\n\u0009Parameter(s):\n\u0009_this: NUMBER or STRING or CODE or CONFIG\n\n\u0009Returns:\n\u0009NUMBER\n*/\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 2","1.00"],"Additional":null},{"Name":"BIS_fnc_phoneticalWord","Desc":" /*\n\n\u0009Description:\n\u0009Convert number to NATO phonetical alphabet word (e.g. 2 becomes \"Bravo\")\n\n\u0009Parameter(s):\n\u0009\u00090: NUMBER\n\n\u0009Returns:\n\u0009STRING\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_PIP","Desc":" Displays Picture in Picture. ","Syn":{"Syntax":" [renderTarget, cameraParams, (vehicle, replace)] call bis_fnc_PIP; ","Params":["renderTarget: String - render target\n\n","cameraParams:\nObject - existing camera\nArray - camera params in format [position,target].\nposition: Array in format Position3D or attachTo [object,position]\ntarget: Object or Array in format Position3D (same as camPrepareTarget)","vehicle (Optional): Object - helicopter to which action is added (to memory point \"action_screen1\")","vehicle (Optional): Boolean - true to replace existing PIP on same target (default: true)"],"Return":" Object - camera "},"Examples":["[\"rendertarget0\",[[heli1,heli1 selectionposition \"slingload0\"],cargo1],heli1,false] call BIS_fnc_PIP;","[\"rendertarget0\",_myCamera] call BIS_fnc_PIP;"],"Additional":["call","See also needed"]},{"Name":"BIS_fnc_playEndMusic","Desc":" /*\n\n\u0009Description:\n\u0009Play mission end music (when it's nearing the end)\n\n\u0009Parameter(s):\n\u0009\u00090: BOOL - true to play it, false to stop playing\n\n\u0009Returns:\n\u0009BOOL\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_playerName","Desc":" /*\n\n\u0009Description:\n\u0009Return current profile's name\n\n\u0009Parameter(s):\n\u0009NOTHING\n\n\u0009Returns:\n\u0009STRING\n*/\n\n//--- Function is obsolete, it now links directly to the scripting command\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Take On Helicopters","1.00"],"Additional":null},{"Name":"BIS_fnc_playerSideFaction","Desc":" /*\n\n\u0009Description:\n\u0009Return representative faction of the given side.\n\u0009Faction of the first detected player is used.\n\n\u0009Parameter(s):\n\u00090: SIDE\n\n\u0009Returns:\n\u0009STRING - CfgFactionClasses class\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.06"],"Additional":null},{"Name":"BIS_fnc_playMusic","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_playSound","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_playVideo","Desc":" Plays in-game video.\n\nGUI layer for video is 25.\n\nScript terminates itself when video stops.\n","Syn":{"Syntax":" [path,size,color] spawn BIS_fnc_playVideo  ","Params":["path: String - full path to OGV file\n\n","size (Optional): Array in format [x, y, w, h]","color (Optional): Array in format Color"],"Return":" Nothing "},"Examples":["_video = [\"\\ca\\video_pmc\\CP00_intro.ogv\"] spawn BIS_fnc_playVideo;\nwaitUntil {scriptDone _video};"],"Additional":["call","Functions Library"]},{"Name":"BIS_fnc_posDegtoUTM","Desc":" /*\n\n\u0009Description:\n\u0009Generate a UTM Zone, Easting and Northing from lat and long fields. It uses NAD83 constants.\n\n\u0009Parameter(s):\n\u0009_this select 0: NUMBER - longtitude (X)\n\u0009_this select 1: NUMBER - latitude (Y)\n\u0009_this select 2 (Optional): NUMBER - forced zone\n\n\u0009Returns:\n\u0009ARRAY - [easting,northing,zone]\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Take On Helicopters","1.00"],"Additional":null},{"Name":"BIS_fnc_posDegToWorld","Desc":" Convert latitude/longtitude coordinates into game world position.\n\nWorld config has to contain following settings to convert the position correctly.\n // Required for scripting\n mapSize = 61440; //--- Can differ from mapArea size, as ingame world can be resized\n mapZone = 10; //--- UTM zone\n mapArea[] = { //--- lon/lat coordinates (not in UTM to assure .kml precision)\n \u0009-122.754367782585,47.3272454065969,\u0009//--- Bottom Left\n \u0009-121.930117859276,47.8753494907418\u0009//--- Top Right\n };\n ","Syn":{"Syntax":" [latitude,longtitude] call BIS_fnc_posDegToWorld; ","Params":["latitude: Number\n\n","longtitude - Number"],"Return":" Array - [northing,easting,zone] "},"Examples":["[47.63959,-122.127249] call BIS_fnc_posDegToWorld;"],"Additional":["call","See also needed"]},{"Name":"BIS_fnc_position","Desc":" /*\n\n\u0009Description:\n\u0009Return position\n\n\u0009Parameter(s):\n\u0009_this:\n\u0009\u0009ARRAY - position in format [x,y] or [x,y,z]\n\u0009\u0009OBJECT - object\n\u0009\u0009GROUP - group leader\n\u0009\u0009LOCATION - location\n\u0009\u0009STRING - marker\n\u0009\u0009CODE - result of code\n\n\u0009Returns:\n\u0009ARRAY - position in format [x,y] or [x,y,z]\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Take On Helicopters","1.00"],"Additional":null},{"Name":"BIS_fnc_PosToGrid","Desc":" /*\n\u0009File: PosToGrid.sqf\n\n\u0009Description:\n\u0009Converts array position to map grid position.\n\u0009The function is obsolete, is now replaced by engine command mapGridPosition\n\n\u0009Parameter(s):\n\u0009_this: Object, Array in format position or String with marker name\n\n\u0009Returns:\n\u0009Array in format [\"X\",\"Y\"]\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 2","1.00"],"Additional":null},{"Name":"BIS_fnc_posUTMToDeg","Desc":" Generate Lat and Long fields from UTM Zone, Easting and Northing. It uses NAD83 constants. ","Syn":{"Syntax":" [northing, easting, zone, (hemisphere)] call BIS_fnc_posUTMToDeg; ","Params":["northing: Number\n\n","easting - Number","zone - Number","hemisphere - String - \"N\" or \"S\" (default: \"N\")"],"Return":" Array - [longtitude,latitude] "},"Examples":["[5273702,560561,10] call BIS_fnc_posUTMToDeg;"],"Additional":["call","See also needed"]},{"Name":"BIS_fnc_preload","Desc":" /*\n\n\u0009Description:\n\u0009Start automatic loading screen upon mission start.\n\u0009On client, it will finish only when server is finished.\n\n\u0009Parameter(s):\n\u0009None\n\n\u0009Returns:\n\u0009BOOL\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_prepareAO","Desc":" /*\n\n\u0009Description:\n\u0009Spawns random patrols and/or vehicles in trigger areas with proper names. Side selected in the triggers \"Activation\" listbox will determine the side of the spawned asset(s).\n\u0009Supported trigger names:\n\u0009- GEN_infantry: spawns random infantry patrol with sentry waypoints (NOTE: only circular trigger supported, min. axis should be 500m)\n\u0009- GEN_patrolVeh: spawns a random vehicle. If a civilian unit is synchronized with the trigger, its waypoint will be used by the spawned vehicle\n\u0009\u0009- you can specify the vehicle type by typing one of the following into the trigger's \"On Act.\" field:\n\u0009\u0009\u0009- car\n\u0009\u0009\u0009- apc\n\u0009\u0009\u0009- tank\n\u0009- GEN_ammo: spawns a random number of ammoboxes. You can get and idea of the shape this composition will have by making this trigger rectangular with dimensions 5mx1m. You can also specify the amount of crates spawned by using Min. and Max. Timeout values (supported range is 1 - 6 crates).\n\u0009- GEN_civilCar: spawns a random empty civil car\n\n\u0009Parameter(s):\n\u0009_this: NUMBER - enemy presence density index used for random footpatrols (default: 1)\n\n\u0009Returns:\n\u0009NOTHING\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_progressLoadingScreen","Desc":" /*\n\n\u0009Description:\n\u0009Progress scripted loading screen. The value will be preserved even when a new screen is opened.\n\n\u0009Parameter(s):\n\u0009\u00090: NUMBER - progress, in range \u003c0,1\u003e\n\n\u0009Returns:\n\u0009NUMBER - progress value\n*/\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_quotations","Desc":" /*\n\u0009\n\u0009Description:\n\u0009Display a quotation video.\n\u0009\n\u0009Parameters:\n\u0009\u0009_this select 0: STRING - Path to quotation video file.\n\u0009\u0009_this select 1: STRING - String, localized or not, used for subtitles.\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_radialRed","Desc":" /*\n\u0009File: fn_radialRed.sqf\n\n\u0009Description:\n\u0009Red radial postprocess (hit damage, fire damage).\n\n\u0009Parameter(s):\n\u0009_this select 0: Object - Unit who gets damage\n\u0009_this select 1: String - Body part which gets damage\n\u0009_this select 2: Number - Damage\n\u0009_this select 3: Object - Shooter - requested only if (_this select 1) is not empty string\n\n\u0009Returned value:\n\u0009\n\u0009Note: \n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_radialRedOut","Desc":" /*\n\u0009File: fn_radialRedOut.sqf\n\n\u0009Description:\n\u0009Red radial postprocess (fire damage) is removed.\n\n\u0009Parameter(s):\n\u0009None.\n\n\u0009Returned value:\n\u0009None.\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_radioSetChannel","Desc":" /*\n\n\u0009Description:\n\u0009Set a specific or random music channel.\n\n\u0009Parameter(s):\n\u0009_this select 0: channel (String)\n\u0009_this select 1: next (Bool)\n\u0009_this select 2: override (Bool)\n\n\u0009Returns:\n\u0009Bool\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Take On Helicopters","1.00"],"Additional":null},{"Name":"BIS_fnc_radioSetPlaylist","Desc":" /*\n\n\u0009Description:\n\u0009Set a specific or random music playlist.\n\n\u0009Parameter(s):\n\u0009_this select 0: \n\n\u0009Returns:\n\u0009Bool\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Take On Helicopters","1.00"],"Additional":null},{"Name":"BIS_fnc_radioSetTrack","Desc":" /*\n\n\u0009Description:\n\u0009Set a specific or random music track.\n\n\u0009Parameter(s):\n\u0009_this select 0: track (String)\n\u0009_this select 1: override (Bool)\n\u0009_this select 2: Bool (first track? -\u003e start randomly within the track)\n\n\u0009Returns:\n\u0009Array (duration (s): Scalar, start time (s): Scalar)\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Take On Helicopters","1.00"],"Additional":null},{"Name":"BIS_fnc_randomIndex","Desc":" /************************************************************\n\u0009Random Index\n\nParameters: array\n\nThis returns a random integer representing an index in the passed array.\n\nExample: [1,2,3] call BIS_fnc_selectRandom\nReturns: 0, 1, or 2\n************************************************************/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 2","1.00"],"Additional":null},{"Name":"BIS_fnc_randomInt","Desc":" /************************************************************\n\u0009Random Integer\n\nParameters: [bound 1, bound 2]\n\nReturns a random integer between the two passed numbers (inclusive).\n\nExample: [1,3] BIS_fnc_randomInt OR [3,1] call BIS_fnc_randomInt\nReturns: 1, 2, or 3\n************************************************************/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 2","1.00"],"Additional":null},{"Name":"BIS_fnc_randomNum","Desc":" /************************************************************\n\u0009Random Number\n\nParameters: [bound 1, bound 2]\n\nReturns a random number between the two passed numbers (inclusive).\n\nExample: [1,3] BIS_fnc_randomNum OR [3,1] call BIS_fnc_randomNum\nReturns: a number between 1 and 3\n************************************************************/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 2","1.00"],"Additional":null},{"Name":"BIS_fnc_randomPos","Desc":" /*\n\n\u0009Description:\n\u0009Selects random position of given params within given area\n\n\u0009Parameter(s):\n\u0009_this select 0 (Optional): ARRAY - whitelist of elements:\n\u0009\u0009ARRAY - [center,radius]\n\u0009\u0009OBJECT - trigger\n\u0009\u0009STRING - one of following tags:\n\u0009\u0009\u0009\"water\" - all water surfaces\n\u0009\u0009\u0009\"ground\" - all ground surfaces\n\u0009\u0009\u0009\"out\" - area outside of map area\n\u0009\u0009Default value - map area\n\u0009_this select 1 (Optional): ARRAY - blacklist (same rules are for whitelist)\n\u0009\u0009Default value: [\"water\",\"out\"]\n\u0009_this select 2 (Optional): CODE - custom condition\n\n\u0009Returns:\n\u0009ARRAY - [x,y,z]\n*/\n\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Take On Helicopters","1.00"],"Additional":null},{"Name":"BIS_fnc_randomPosTrigger","Desc":" /*\n\n\u0009Description:\n\u0009Selects random position withing trigger area\n\n\u0009Parameter(s):\n\u0009_this select 0:\n\u0009\u0009OBJECT - trigger (automatically sets area param)\n\u0009\u0009ARRAY - position\n\u0009\u0009STRING - marker\n\u0009_this select 1:\n\u0009\u0009NUMBER - radius around position set in param 0.\n\u0009\u0009ARRAY - trigger settings in format of triggerArea command\n\n\u0009Returns:\n\u0009ARRAY - [x,y,z]\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Take On Helicopters","1.00"],"Additional":null},{"Name":"BIS_fnc_rankParams","Desc":" /*\n\n\u0009Description:\n\u0009Return information about military rank.\n\n\u0009Parameter(s):\n\u00090:\n\u0009\u0009NUMBER - rank ID\n\u0009\u0009STRING - rank system name (e.g. \"PRIVATE\", \"CORPORAL\", ...)\n\u0009\u0009OBJECT - person whos rank is checked\n\u00091: STRING - requited data, can be one of following:\n\u0009\u0009\"displayName\" - full localized name (e.g. \"Major\")\n\u0009\u0009\"displayNameShort\" - short localized name (e.g. \"Maj.\")\n\u0009\u0009\"classname\" - system name (e.g. \"MAJOR\")\n\u0009\u0009\"texture\" - path to rank insignia\n\n\u0009Returns:\n\u0009STRING\n*/\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_recompile","Desc":" /*\n\n\u0009Description:\n\u0009Recompiles all functions\n*/\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 2","1.00"],"Additional":null},{"Name":"BIS_fnc_refreshCommMenu","Desc":" /*\n\n\u0009Description:\n\u0009Refresh the communication menu variable\n\n\u0009Parameter(s): None\n\n\u0009Returns:\n\u0009BOOL\n*/\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_registerCuratorObject","Desc":" /*\n\n\u0009Description:\n\u0009Get individual cost of an object.\n\u0009Obsolete.\n\n\u0009Parameter(s):\n\u0009\u00090: STRING - object class\n\u0009\u00091: BOOL - default show status\n\u0009\u00092: NUMBER - default cost\n\n\u0009Returns:\n\u0009ARRAY in format [\u003cshow\u003e,\u003ccost\u003e,\u003ccost\u003e]\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.16"],"Additional":null},{"Name":"BIS_fnc_relativeDirTo","Desc":" /************************************************************\n\u0009Relative Direction To\n\nParameters: [object 1, object or position 2]\n\nReturns the relative direction from object 1 to\nobject/position 2. Return is always 0-360.\n\nA position to the right of unit would be at a relative direction of 90 degrees, for example.\n\nExample: [player, getpos dude] call BIS_fnc_relativeDirTo\n************************************************************/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 2","1.00"],"Additional":null},{"Name":"BIS_fnc_relPos","Desc":" /************************************************************\n\u0009Relative Position\n\nParameters: [object or position, distance, direction]\n\nReturns a position that is a specified distance and compass\ndirection from the passed position or object.\n\nExample: [player, 5, 100] call BIS_fnc_relPos\n************************************************************/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 2","1.00"],"Additional":null},{"Name":"BIS_fnc_relPosObject","Desc":" /*******************************************************************************\n\n\n\u0009Description:\n\u0009Place object relative to another object.\n\n\u0009Parameter(s):\n\u0009_this select 0: OBJECT - parent object\n\u0009_this select 1: OBJECT - child object what will be placed\n\u0009_this select 2: ARRAY  - offset [x,y,z] in parent object coords\n\u0009_this select 3: SCALAR (optional) - direction of the child object\n\n\u0009Example:\n\u0009[BIS_briefingTable,BIS_map,[0,0,1]] call BIS_fnc_relPosObject;\n\n\u0009Returns:\n\u0009-\n\n\u0009Example of quick preview code:\n\u0009[BIS_briefingTable,BIS_map,[0,-0.58,0.857],98] call BIS_fnc_relPosObject;\n\u0009BIS_briefingTable setPos getPos BIS_briefingTable;\n\n*******************************************************************************/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_relScaledDist","Desc":" /*\n\u0009File: fn_relScaledDist.sqf\n\n\u0009Description:\n\u0009Returns \n\n\u0009Parameter(s):\n\u0009\u0009_this select 0: Trigger\n\u0009\u0009_this select 1: Object\n\n\u0009Returns:\n\u0009- exponentially inflated rational number between 0 and 1, with 1 being center and 0 being edge of the trigger\n\u0009\n\u0009Todo:\n\u0009- Object or Position\n\u0009- BOOL flag for no exp scale\n\u0009- Finish rectangle implementation\n*/\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_removeAllScriptedEventHandlers","Desc":" /*\n\n\u0009Description:\n\u0009Remove all scripted event handlers of given type\n\n\u0009Parameter(s):\n\u0009\u00090: NAMESPACE, OBJECT, GROUP or LOCATION - namespace in which handler is saved\n\u0009\u00091: STRING - handler name\n\n\u0009Returns:\n\u0009BOOL\n*/\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_removeCommMenuItem","Desc":" Remove an item from the communication menu.","Syn":{"Syntax":" [owner,itemID] call BIS_fnc_removeCommMenuItem; ","Params":["owner: Object - object to which the item belongs to\n\n","itemID: Number - item ID returned by BIS_fnc_addCommMenuItem command"],"Return":" Boolean - true when the item was removed "},"Examples":["[player,2] call BIS_fnc_removeCommMenuItem;","_supportHeli = [player,\"Support_Request_CAS_Heli\"] call BIS_fnc_addCommMenuItem;\n[player,_supportHeli] call BIS_fnc_removeCommMenuItem;"],"Additional":["call","BIS_fnc_addCommMenuItem","Arma 3 Communication Menu"]},{"Name":"BIS_fnc_removeCuratorIcon","Desc":" /*\n\n\u0009Description:\n\u0009Remove icon displayed in curator interface\n\n\u0009Parameter(s):\n\u0009\u00090: OBJECT - curator module\n\u0009\u00091: NUMBER - icon ID returned by BIS_fnc_addCuratorIcon function\n\n\u0009Returns:\n\u0009BOOL - true if removed\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.16"],"Additional":null},{"Name":"BIS_fnc_removeDestroyedCuratorEditableObjects","Desc":" /*\n\n\u0009Description:\n\u0009Make destroyed curator objects non-editable\n\n\u0009Parameter(s):\n\u0009\u00090:  OBJECT - curator or object to be removed after death\n\u0009\u00091: ARRAY of STRINGS - parent classes of objects to be removed (e.g., \"Man\")\n\n\u0009Returns:\n\u0009BOOL\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.16"],"Additional":null},{"Name":"BIS_fnc_removeFromPairs","Desc":" /*\n\n\u0009Description:\n\u0009Removes an item from pair array.\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_removeIndex","Desc":" /************************************************************\n\u0009Remove Index\n\nParameters: [array, index, \u003cend index\u003e] OR [array, [indexes]]\n\nTakes an array, and returns a new array with the specified index(es)\nremoved.\n\nThis takes the array passed in the first parameter, and returns\nan array that has the index number in the second parameter removed.\n\nIf a third parameter is passed, then a range of indexes will be removed.\n\nAlternatively, you can pass an array of indexes to remove in the\nsecond parameter.\n\nThis function doesn't touch the original array (that is passed as a parameter).\n\n\u0009Examples:\n\n_array = [1,[\"b\"],\"c\",[4],\"d\"];\n\n[_array, 2]       call BIS_fnc_removeIndex; //returns: [1,[\"b\"],[4],\"d\"]\n[_array, [0,1,3]] call BIS_fnc_removeIndex; //returns: [\"c\",\"d\"]\n[_array, 2, 3]    call BIS_fnc_removeIndex; //returns: [1,[\"b\"],\"d\"]\n************************************************************/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 2","1.00"],"Additional":null},{"Name":"BIS_fnc_removeNestedElement","Desc":" /*\n\u0009File: fn_removeNestedElement.sqf\n\n\u0009Description:\n\u0009Function to remove an item in a nested array.\n\u0009\n\u0009Example:\n\u0009_array = [[1, 2], [3, 4]];\n\u0009_bool = [_array, 3] call BIS_fnc_removeNestedElement; //Expected result: [[0, 2], [4]]\n\n\u0009Parameter(s):\n\u0009_this select 0: Array\n\u0009_this select 1: new value (Any Value)\n\u0009\n\u0009Returns:\n\u0009Boolean success flag\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 2","1.00"],"Additional":null},{"Name":"BIS_fnc_removeRespawnInventory","Desc":" Remove a respawn inventory added by BIS_fnc_addRespawnInventory. ","Syn":{"Syntax":" [target,id] call BIS_fnc_removeRespawnInventory; ","Params":["target: Namespace or Side or Group or Object\n\n","id: Number"],"Return":" Boolean "},"Examples":["[west, 1] call BIS_fnc_removeRespawnInventory;","myRespawnInventory = [missionNamespace,\"ATSniper\"] call BIS_fnc_addRespawnInventory;\nmyRespawnInventory call BIS_fnc_removeRespawnInventory;\n"],"Additional":["call","BIS_fnc_addRespawnInventory","Arma 3 Respawn"]},{"Name":"BIS_fnc_removeRespawnPosition","Desc":" Remove a respawn position added by BIS_fnc_addRespawnPosition. ","Syn":{"Syntax":" [target,id] call BIS_fnc_removeRespawnPosition; ","Params":["target: Namespace or Side or Group or Object\n\n","id: Number"],"Return":" Boolean "},"Examples":["[west, 1] call BIS_fnc_removeRespawnPosition;","myRespawn = [missionNamespace,\"arena\"] call BIS_fnc_addRespawnPosition;\nmyRespawn call BIS_fnc_removeRespawnPosition;\n"],"Additional":["call","BIS_fnc_addRespawnPosition","Arma 3 Respawn"]},{"Name":"BIS_fnc_removeScriptedEventHandler","Desc":" /*\n\n\u0009Description:\n\u0009Remove scripted event handler\n\n\u0009Parameter(s):\n\u0009\u00090: NAMESPACE, OBJECT, GROUP or LOCATION - namespace in which handler is saved\n\u0009\u00091: STRING - handler name\n\u0009\u00092: NUMBER - handler ID\n\n\u0009Returns:\n\u0009BOOL\n*/\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_removeStackedEventHandler","Desc":" Remove a stacked event handler. ","Syn":{"Syntax":" [key, event] call BIS_fnc_removeStackedEventHandler; ","Params":["key: String - unique identifier\n\n","event: String - event handler type, see BIS_fnc_addStackedEventHandler"],"Return":" Array "},"Examples":["[\"someId\", \"onEachFrame\"] call BIS_fnc_removeStackedEventHandler;"],"Additional":["call","BIS_fnc_addStackedEventHandler"]},{"Name":"BIS_fnc_removeSupportLink","Desc":" /*\n\n\u0009Description:\n\u0009Removes support types during a mission.\n\n\u0009Parameter(s):\n\u0009_this select 0: OBJECT - Requester module\n\u0009_this select 1: OBJECT - Provider module\n\n\u0009Returns:\n\u0009nothing\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","0.76"],"Additional":null},{"Name":"BIS_fnc_removeVirtualBackpackCargo","Desc":" /*\n\n\u0009Description:\n\u0009Remove virtual backpacks from an object (e.g., ammo box).\n\u0009Virtual items can be selected in the Arsenal.\n\n\u0009Parameter(s):\n\u0009\u00090: OBJECT - objct from which backpacks will be removed\n\u0009\u00091: STRING or ARRAY of STRINGs - backpack class(es) to be removed\n\u0009\u00092 (Optional): BOOL - true to remove backpacks globally (default: false)\n\n\u0009Returns:\n\u0009ARRAY of ARRAYs - all virtual items within the object's space in format [\u003citems\u003e,\u003cweapons\u003e,\u003cmagazines\u003e,\u003cbackpacks\u003e]\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_removeVirtualItemCargo","Desc":" /*\n\n\u0009Description:\n\u0009Remove virtual items from an object (e.g., ammo box).\n\u0009Virtual items can be selected in the Arsenal.\n\n\u0009Parameter(s):\n\u0009\u00090: OBJECT - objct from which items will be removed\n\u0009\u00091: STRING or ARRAY of STRINGs - item class(es) to be removed\n\u0009\u00092 (Optional): BOOL - true to remove items globally (default: false)\n\n\u0009Returns:\n\u0009ARRAY of ARRAYs - all virtual items within the object's space in format [\u003citems\u003e,\u003cweapons\u003e,\u003cmagazines\u003e,\u003cbackpacks\u003e]\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_removeVirtualMagazineCargo","Desc":" /*\n\n\u0009Description:\n\u0009Remove virtual magazines from an object (e.g., ammo box).\n\u0009Virtual items can be selected in the Arsenal.\n\n\u0009Parameter(s):\n\u0009\u00090: OBJECT - objct from which magazines will be removed\n\u0009\u00091: STRING or ARRAY of STRINGs - magazine class(es) to be removed\n\u0009\u00092 (Optional): BOOL - true to remove magazines globally (default: false)\n\n\u0009Returns:\n\u0009ARRAY of ARRAYs - all virtual items within the object's space in format [\u003citems\u003e,\u003cweapons\u003e,\u003cmagazines\u003e,\u003cbackpacks\u003e]\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_removeVirtualWeaponCargo","Desc":" /*\n\n\u0009Description:\n\u0009Remove virtual weapons from an object (e.g., ammo box).\n\u0009Virtual items can be selected in the Arsenal.\n\n\u0009Parameter(s):\n\u0009\u00090: OBJECT - objct from which weapons will be removed\n\u0009\u00091: STRING or ARRAY of STRINGs - weapon class(es) to be removed\n\u0009\u00092 (Optional): BOOL - true to remove weapons globally (default: false)\n\n\u0009Returns:\n\u0009ARRAY of ARRAYs - all virtual items within the object's space in format [\u003citems\u003e,\u003cweapons\u003e,\u003cmagazines\u003e,\u003cbackpacks\u003e]\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_respawnBase","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_respawnConfirm","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_respawnCounter","Desc":" /*\n\n\u0009Description:\n\u0009Set or execute respawn counter params\n\n\u0009Parameter(s):\n\u0009\u00090: TEXT - text displayed below the respawn counter\n\u0009\u00091: NUMBER - counter color (0 - default, 1 - warning, 2 - error)\n\n\u0009Returns:\n\u0009BOOL\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_respawnEndMission","Desc":" /*\n\n\u0009Description:\n\u0009End a mission if all players are dead\n\n\u0009Parameter(s):\n\u0009NONE\n\n\u0009Returns:\n\u0009NOTHING (the script never ends)\n*/\n\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_respawnGroup","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_respawnInstant","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_RespawnManager","Desc":" /*******************************************************************************\n\u0009Version:\u00092.0\n\u0009Name:\u0009\u0009Respawn manager\n\u0009DESCRIPTION:\u0009All checkpoints must be markers with name prefix BIS_checkpointnr  \n\u0009PARAMETERS:\u00091) function called - string, list of functions:\n\u0009\u0009\u0009\u0009- Init\n\u0009\u0009\u0009\u0009- Destroy\n\u0009\u0009\u0009\u0009- AddCheckpoint\n\u0009\u0009\u0009\u0009- RemoveCheckpoint\u0009\u0009\u0009\n\u0009\u0009\u00092) parameter for the function\n\u0009\u0009\u0009For more informations see https://wiki.bistudio.com/index.php/RespawnManager\n\u0009RETURNED VALUE: depends on the function called\n\u0009\n\u0009TODO:\u0009\u0009-performance: add markers positions to the array instead of the testing \n\u0009\u0009\u0009their positions every loop in _CheckNearestCheckpoint function - DONE\n\u0009\u0009\u0009-pridat funkci GetActualCheckpoint(character) - DONE \n\u0009\u0009\u0009-osetrit pripad, kdy postava neexistuje (je prave v respawnu/zahynula) - NEPOTREBUJEME\n\u0009\u0009\u0009-typy markeru podle modu: normal/debug - DONE\n\u0009\u0009\u0009-optional parameter marker name - DONE\n\u0009\u0009\u0009-optional prefix marker name as a parameter to the Init procedure\n\u0009\u0009\u0009-add functionality for 3 parameters function call - DONE\n\u0009\u0009\u0009-vlastni lokalni checkpointy(markery) pro hratelne postavy(AddCheckpoint/RemoveCheckpoint)\n*******************************************************************************/\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 2: Operation Arrowhead","1.00"],"Additional":null},{"Name":"BIS_fnc_respawnMenuInventory","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_respawnMenuPosition","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_respawnMenuSpectator","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_respawnNone","Desc":" /*\n\n\u0009Description:\n\u0009Death screen.\n\n\u0009Parameter(s):\n\u0009\u00090: OBJECT - killed unit\n\u0009\u00091: OBJECT - killer\n\n\u0009Returns:\n\u0009NOTHING\n*/\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_respawnRounds","Desc":" /*\n\n\u0009Description:\n\u0009Disable respawn until players of only one side (including its allies) remains, then respawn everyone at once.\n\u0009When \"Rounds\" respawn is used by only one side, wait until all its players are dead.\n\n\u0009Parameter(s):\n\u0009\u0009BOOL - true to force round end\n\u0009\u0009SIDE - use any side to return side affected by round system (based on description.ext respawnTemplates settings)\n\u0009\u0009ARRAY - empty array to return if a round is still on (players of more than one involved faction are alive)\n*/\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_respawnSeagull","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_respawnSide","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_respawnSpectator","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_respawnTickets","Desc":" Manage respawn tickets used by Tickets respawn template.\n\nWhen player dies, number of tickets is decreased by 1. The most local tickets are always used. Example: When you first add tickets to player's side, they will be affected. If you later define tickets also to player's group, they will completely replace the side tickets.\n\nWhen player runs out of the tickets, his respawn is disabled. If you use also EndMission respawn template, the mission will automatically end once tickets in all name spaces are exhausted.\n ","Syn":{"Syntax":" [\u003ctarget\u003e,(\u003ctickets\u003e,\u003cdynamicTarget\u003e)] call BIS_fnc_respawnTickets; \u003cbr\u003e(Alternate Syntax exists check Read more)","Params":["target: Receiver of the respawn loadout\n\n Namespace - use missionNamespace to set/get global tickets available for everyone\n\n Side\n\n Group\n\n Object\n\n\n\n"," Namespace - use missionNamespace to set/get global tickets available for everyone\n"," Side\n"," Group\n"," Object\n","tickets: Number - added respawn tickets. When missing or set to 0, number of tickets won't be affected, which means you can use the function to simply get amount of tickets.","dynamicTarget: Boolean - when true, set/get tickets based on the target. target must be an Object."],"Return":" Number - remaining tickets after adjustment "},"Examples":["Add 5 tickets for BLUFOR\n[west, 5] call BIS_fnc_respawnTickets;","Return number of global tickets\nglobalTickets = [missionNamespace] call BIS_fnc_respawnTickets;","Return number of player's tickets\nplayerTickets = [player,nil,true] call BIS_fnc_respawnTickets;"],"Additional":["call","Arma 3 Respawn"]},{"Name":"BIS_fnc_respawnTimePenalty","Desc":" /*\n\n\u0009Description:\n\u0009Set or execute respawn time penalty\n\n\u0009Parameter(s):\n\u0009\u00090: CODE - penalty condition\n\u0009\u00091: NUMBER - penalty delay\n\u0009\u00092: TEXT - text displayed when penalty is in effect\n\n\u0009Returns:\n\u0009BOOL\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_respawnWave","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_respect","Desc":" /*\n\u0009File: RESTECP\n\n\u0009Description:\n\u0009RESpect - The Effective Calculation Process.\n\n\u0009Parameter(s):\n\u0009_this select 0: String - Mode\n\n\n\u0009* SET - set respect default values\n\u0009\u0009 o _this select 1: Nothing or Object\n\u0009\u0009 o Returned value: Array with zero respect values (if Object is passed as argument, 1 is on place of object's faction).\n\u0009* ADD - add respect values depending on global town respect\n\u0009\u0009 o _this select 1: Object - Unit to which is given respect from assigned town with random difference defined in third argument.\n\u0009\u0009 o _this select 2: Number - Range of random difference.\n\u0009\u0009 o Returned value: Unit's respect values. \n\u0009* MODIFY - change givern respect value\n\u0009\u0009 o _this select 1: Object - Unit of which respect value will be changed.\n\u0009\u0009 o _this select 2: String - Faction of which respect will be changed.\n\u0009\u0009 o _this select 3: String - Code which defines formula for change (current respect value is stored in variable _r) - e.g. \"_r / 2\"\n\u0009\u0009 o Returned value: Modified respect value. \n\u0009* KILLED - Modify global town respect after civilian has been killed.\n\u0009\u0009 o _this select 1: Object - Units's killer\n\u0009\u0009 o _this select 2: Object - Town logic\n\u0009\u0009 o _this select 3: Number - Optional - change coeficient\n\u0009\u0009 o Returned value: Modified town respect value. \n\n*/\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 2","1.00"],"Additional":null},{"Name":"BIS_fnc_returnChildren","Desc":" /*\n\n\u0009Description:\n\u0009Returns all subclasses within given class\n\u0009\n\u0009Parameter(s):\n\u0009\u00090: CONFIG - class which is searched\n\u0009\u00091: NUMBER - depth (e.g., 0  to return only subclasses, 1 to return also subclasses of subclasses and so on)\n\u0009\u00093: BOOL - true to return only the last tier, false to return all classes leading to it\n\u0009\n\u0009Returns:\n\u0009ARRAY of CONFIGs\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_returnConfigEntry","Desc":" /*\n\n\u0009Description:\n\u0009Explores parent classes in the run-time config for the value of a config entry.\n\u0009\n\u0009Parameter(s):\n\u0009_this select 0: starting config class (Config)\n\u0009_this select 1: queried entry name (String)\n\u0009_this select 2 (Optional): default value returned in case the entry does not exist\n\u0009\n\u0009Returns:\n\u0009Number / String - value of the found entry\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 2","1.00"],"Additional":null},{"Name":"BIS_fnc_returnGroupComposition","Desc":" /*\n\u0009File: returnGroupComp.sqf\n\n\u0009Description:\n\u0009Function which returns a logical group composition based on a number of parameters.\n\n\u0009Parameter(s):\n\u0009_this select 0: side (Side).\n\u0009_this select 1: number of characters (Number).\n\u0009_this select 2: (optional) type (String):\n\u0009\u0009- \"riflesquad\": (default) standard rifle squad.\n\u0009\u0009- \"sniper\": sniper team.\n\n\u0009Returns:\n\u0009Array of Strings - object types.\n\u0009\n\u0009TODO: use CfgGroups instead?\n*/\n\n//Validate parameter count\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 2","1.00"],"Additional":null},{"Name":"BIS_fnc_returnNestedElement","Desc":" /*\n\u0009File: fn_returnNestedElement.sqf\n\n\u0009Description:\n\u0009Function to return an item at a path in an array.\n\u0009\n\u0009Example:\n\u0009_array = [[1, 2], [3, 4]];\n\u0009_value = [_array, [0, 1]] call BIS_fnc_returnNestedElement; //Expected result: 2\n\n\u0009Parameter(s):\n\u0009_this select 0: Array\n\u0009_this select 1: path to the element (Array)\n\u0009\n\u0009Returns:\n\u0009Any Value found element\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 2","1.00"],"Additional":null},{"Name":"BIS_fnc_returnParents","Desc":" /*\n\n\u0009Description:\n\u0009Returns list of all parent classes\n\u0009\n\u0009Parameter(s):\n\u0009_this select 0: starting config class (Config)\n\u0009_this select 1: true if you want to return only classnames (Boolean)\n\u0009\n\u0009Returns:\n\u0009Array - List of all classes (including starting one)\n*/\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 2","1.00"],"Additional":null},{"Name":"BIS_fnc_returnVehicleTurrets","Desc":" /*\n\u0009File: fn_returnVehicleTurrets.sqf\n\n\u0009Description:\n\u0009Function return the path to all turrets and sub-turrets in a vehicle.\n\n\u0009Parameter(s):\n\u0009_this select 0: vehicle config entry (Config)\n\n\u0009Returns:\n\u0009Array of Scalars and Arrays - path to all turrets\n*/\n\n//Validate parameter count\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 2","1.00"],"Additional":null},{"Name":"BIS_fnc_romanNumeral","Desc":" /*\n\n\u0009Description:\n\u0009Convert number to roman numeral (e.g. 42 becomes \"XLII\")\n\n\u0009Parameter(s):\n\u0009\u00090: NUMBER\n\n\u0009Returns:\n\u0009STRING\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_rotateVector2D","Desc":" /************************************************************\n\u0009Rotate 2D Vector\n\nParameters: [[vector], angle]\nReturns: [vector]\n\nThis function returns a 2D vector rotated a specified number\nof degrees around the origin.\n************************************************************/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 2","1.00"],"Additional":null},{"Name":"BIS_fnc_roundDir","Desc":" /*\n\n\u0009Description:\n\u0009Round direction to nearest limit\n\u0009(used for determining cardinal direction)\n\n\u0009Parameter(s):\n\u0009_this select 0: NUMBER - direction\n\u0009_this select 1 (Optional): NUMBER - limit direction (default: 90)\n\n\u0009Returns:\n\u0009NUMBER - rounded direction\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Take On Helicopters","1.00"],"Additional":null},{"Name":"BIS_fnc_roundNum","Desc":" /*\n\u0009File: fn_roundNum.sqf\n\n\u0009Description:\n\u0009Round a number to the provided factor.\n\n\u0009Parameter(s):\n\u0009_this select 0: number (Scalar)\n\u0009_this select 1: factor (Scalar)\n\u0009_this select 2: (optional) secondary factor, used when number / primary factor is smaller than 10 (Scalar)\n\u0009\n\u0009Returns:\n\u0009Scalar - rounded number\n*/\n\n//Validate parameter count\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 2","1.00"],"Additional":null},{"Name":"BIS_fnc_rscLayer","Desc":" /*\n\n\u0009Description:\n\u0009Register RSC layer.\n\n\u0009Parameter(s):\n\u0009_this select 0: STRING - layer name. Parent function name is used automatically when param is nil.\n\n\u0009Returns:\n\u0009NUMBER\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_runLater","Desc":" Stack code/function that should be run later, after some time/frames or/and custom condition. ","Syn":{"Syntax":" param call BIS_fnc_runLater; ","Params":["Unique Id : String\n\n","Code/function that is executed later : [Code, String]","The timer value (can be in seconds or frames) : Number","The timer type, can be \"seconds\" or \"frames\" : String","The custom condition, code is only executed if timer is validated and condition is met : Code"],"Return":" Nothing "},"Examples":["//Hints current game time in the next frame after 5 seconds have passed\n[\"uniqueId\", { hint str time; }, 5] call BIS_fnc_runLater;","//Hints current game time in the next frame after 120 frames have passed\n[\"uniqueId\", { hint str time; }, 120, \"frames\"] call BIS_fnc_runLater;","//Hints current game time in the next frame after BIS_variable is assigned\n[\"uniqueId\", { hint str time; }, nil, nil, { !isNil { BIS_variable } }] call BIS_fnc_runLater;","//Hints current game time in the next frame after 5 seconds have passed and BIS_variable is assigned\n[\"uniqueId\", { hint str time; }, 5, \"seconds\", { !isNil { BIS_variable } }] call BIS_fnc_runLater;","//Hints current game time in the next frame\n[\"uniqueId\", { hint str time; }] call BIS_fnc_runLater;"],"Additional":["call","See also needed"]},{"Name":"BIS_fnc_sandstorm","Desc":" Creates particle sandstorm round given object. ","Syn":{"Syntax":" [object,interval,brightness,newspapers] call BIS_fnc_sandstorm  ","Params":["position: Object - sandstorm center (should be player)\n\n","interval (Optional): Number - particle refresh time (default is 0.07)","brightness (Optional): Number - brightness coeficient (default is 1)","newspapers (Optional): Boolean - true if flying newspapers will be present (default is true)"],"Return":" Array of created particle effect "},"Examples":["[player, -1, 0.8, false] call BIS_fnc_sandstorm;"],"Additional":["call","Functions Library"]},{"Name":"BIS_fnc_saveGame","Desc":" /*\n\n\u0009Description:\n\u0009Evaluates the current battlefield situation and saves the game when appropriate\n\n\u0009Parameter(s):\n\u0009\u0009_this: units to check (ARRAY)\n\n\u0009Returns:\n\u0009BOOL - true when saved\n*/\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Take On Helicopters","1.00"],"Additional":null},{"Name":"BIS_fnc_saveInventory","Desc":" /*\n\n\u0009Description:\n\u0009Save unit's loadout\n\n\u0009Parameter(s):\n\u0009\u00090: OBJECT - unit of which loadout will be saved\n\u0009\u00091: ARRAY in format\n\u0009\u0009\u00090: NAMESPACE or GROUP or OBJECT - target in which namespace the loadout will be saved\n\u0009\u0009\u00091: STRING - loadout name\n\u0009\u00092 (Optional): ARRAY - custom params to be saved along the loadout (default: [])\n\u0009\u00093 (Optional): BOOL - true to delete the loadout (default: false)\n\n\u0009Returns:\n\u0009ARRAY - saved value\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_sayMessage","Desc":" /*\n\n\u0009Description:\n\u0009Play radio message.\n\n\u0009Parameter(s):\n\u0009\u00090:\n\u0009\u0009\u0009OBJECT - speaker\n\u0009\u0009\u0009SIDE - side HQ (created by \"Headquarters Entity\" module)\n\u0009\u00091: STRING - message\n\u0009\u00092: STRING or NUMBER - channel (\"say3D\", \"direct\", \"group\", \"vehicle\", \"side\", \"command\", \"global\" or custom channel ID; default is \"side\")\n\n\u0009Returns:\n\u0009BOOL\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_sceneAreaClearance","Desc":" Removes object clutter within a set trigger, for use within cutscenes. ","Syn":{"Syntax":" param spawn BIS_fnc_sceneAreaClearance; ","Params":["Object - Name of trigger to use as center point.\n\n","Array - List of objects that will be kept during cutscene. Optional parameter, default empty array.","Array - Of format Position, where to move all unwanted objects. Optional parameter, default [-5000, 10000, 0]."],"Return":" Nothing "},"Examples":["0 = [triggerArea1] spawn BIS_fnc_sceneAreaClearance;"],"Additional":["call","See also needed"]},{"Name":"BIS_fnc_sceneCheckWeapons","Desc":" /**************************************************************************************************************************\n\u0009Version:\u00091.0\n\u0009Name:\u0009\u0009CheckWeaponsBefore scene\n\u0009DESCRIPTION:\u0009Checks if participants haven't missing weapon or haven't it selected before scene\n\u0009\u0009\u0009Function works as toggle - \n\u0009\u0009\u00091st run of script: running in SETUP mode - sets correct weapons for scene\n\u0009\u0009\u00092nd run of script: running in RESTORE mode - restore origin weapons(delete weapons after scene if character hadn't any)\n\u0009\u0009\u0009There is default SETUP: [[BIS_Cooper, \"primary\"],[BIS_Ohara, \"primary\"],[BIS_Rodriguez, \"primary\"],[BIS_Sykes, \"primary\"],[BIS_Miles, \"primary\"]]\n\u0009\u0009\u0009   \n\u0009PARAMETERS:\u0009_participants: ARRAY of arrays in format [[character1, \"typeofweapon\"],[character2, \"typeofweapon\"],..,[characterx, \"typeofweapon\"]]\n\u0009\u0009\u0009where character is for example BIS_Cooper and typeofweapon is one of primary/pistol\u0009\u0009\n\u0009RETURNED VALUE:\u0009nothing\n****************************************************************************************************************************/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 2","1.00"],"Additional":null},{"Name":"BIS_fnc_sceneCreateSceneTrigger","Desc":" /*******************************************************************************\n *\n *\u0009version: \u00091.0\n *\u0009name:\n *\u0009description:\u0009create trigger for scene which can interrupt scene with name passed during creating the trigger\n *\u0009parameters:\u0009described bellow\u0009\n *\u0009 \n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 2","1.00"],"Additional":null},{"Name":"BIS_fnc_sceneCreateSoundEntities","Desc":" /*******************************************************************************\n *\u0009version: \u00091.0\n *\u0009name:\u0009\u0009create sound entities\u0009\n *\u0009description:\u0009creates sound entities(logic objects) and attaches to \n *\u0009\u0009\u0009an objects passed as parameter     \n *\u0009\u0009\u0009After scene end it will detach and delete all created \n *\u0009\u0009\u0009sound entities (if scene was executed from scenes\n *\u0009\u0009\u0009controller.\n *\u0009\u0009\u0009 \u0009\n *\u0009paramater:\u0009objects - ARRAY of OBJECTS in format without \"BIS_\" \n *\u0009\u0009\u0009prefix. For example, if you have BIS_Cooper in mission \n *\u0009\u0009\u0009than parameter will be [Cooper]. Then you can use \n *\u0009\u0009\u0009created sound entities as BIS_ZvukCooper say \"something\"    \n *\u0009\u0009\u0009\u0009\u0009\u0009 \u0009\n *\u0009return value:\u0009nothing \u0009\n * \n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 2","1.00"],"Additional":null},{"Name":"BIS_fnc_sceneGetObjects","Desc":" /*******************************************************************************\n *\n *\u0009version: \u00091.0\n *\u0009name:\u0009\u0009sceneGetObjects\u0009\n *\u0009description:\u0009part of S.C.E.N.E.S. This script gets objects positions \n *\u0009\u0009\u0009and direction relative to the choosen object\n *\u0009\u0009\u0009more info on: https://wiki.bistudio.com/index.php/SCENES    \u0009\n *\u0009paramater:\u0009object or marker \n *\u0009\u0009\u0009(its position will be selected as a center of the scene)\n *\u0009\u0009\u0009optional: x, y - size of the area which objects will be \n *\u0009\u0009\u0009exported from \u0009\n *\u0009return value:\u0009nothing \u0009\n * \n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 2","1.00"],"Additional":null},{"Name":"BIS_fnc_sceneGetParticipants","Desc":" /*******************************************************************************\n *\n *\u0009version: \u00091.0\n *\u0009name:\u0009\u0009sceneGetParticipants\n *\u0009description:\u0009gets members of group who is in range (_MAXDISTANCE) \n *\u0009parameters:\u0009described bellow\u0009\n *\u0009return value:\u0009array of units in range\n *\u0009  \n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 2","1.00"],"Additional":null},{"Name":"BIS_fnc_sceneGetPositionByAngle","Desc":" /*******************************************************************************\n *\n *\u0009version: \u00091.0\n *\u0009name:\u0009\u0009sceneGetPositionByAngle\n *\u0009description:\u0009returns new calculated position of object from angle and distance from specified object   \n *\u0009parameters:\u0009described bellow\u0009\n *\u0009return value:\u0009array of new coordinates [x, y]\n *\u0009  \n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 2","1.00"],"Additional":null},{"Name":"BIS_fnc_sceneIntruderDetector","Desc":" /**************************************************************************************************************************\n\u0009Version:\u00091.0\n\u0009Name:\u0009\u0009Intruder detector during scene\n\u0009DESCRIPTION:\u0009Checks if there are intruders during scene. All intruders during scene will be disabled if they \n\u0009\u0009\u0009will get into the detector trigger. Position of trigger is default on player, and default radius is [60,60] \n\u0009\u0009\u0009Checking is deactivated by passing BIS_sceneIntruderDetectorLogic setVariable [\"_detectInProgress\", false]\n\u0009PARAMETERS:\u0009_centerOfScene: POSITION - trigger position\n\u0009\u0009\u0009_Radius: ARRAY: [_xRadius, _yRadius] - size of trigger\u0009\u0009\n\u0009RETURNED VALUE:\u0009nothing\n****************************************************************************************************************************/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 2","1.00"],"Additional":null},{"Name":"BIS_fnc_sceneMiscStuff","Desc":" /*********************************************************************\n\u0009Version:\u00091.0\n\u0009Name:\u0009\u0009sceneMiscStuff\n\u0009DESCRIPTION:\u0009Does the basic minor stuff for scene - cinema borders, map is denied etc.  \n\u0009PARAMETERS:\u00091) _cameraPositions - [[cameraTarget],[cameraPos]] - Coordinates. If BIS_debugScene is true then external camera is activated\n\u0009\u0009\u00092) _skipInitBlackout - BOOL - if true, initial blackout is skipped\n\u0009\u0009\u00093) _skipFinalBlackout - BOOL - if true, final blackout is skipped\n\u0009\u0009\u00094) _noUseCheckTheWeapons - BOOL - if true, checking of weapon before scene is skipped\n\u0009\u0009\u00095) _noUseLoadingScreen - BOOL - if true, loadingscreen is bypassed\n\u0009\u0009\u00096) __excludedObjectsForIntruderDetector - ARRAY of objects - objects will be excluded from intruder detector\n\u0009RETURNED VALUE:\u0009\n**********************************************************************/\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 2","1.00"],"Additional":null},{"Name":"BIS_fnc_sceneRotate","Desc":" /*********************************************************************\n\u0009Version:\u00091.0\n\u0009Name:\u0009\u0009sceneRotate \n\u0009DESCRIPTION:\u0009Compute new object coordinates from given center and angle from MOTION BUILDER  \n\u0009PARAMETERS:\u0009center: [x,y,z]; angle: number; init pos [x, y, z]\n\u0009RETURNED VALUE:\u0009coordinates\n**********************************************************************/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 2","1.00"],"Additional":null},{"Name":"BIS_fnc_sceneSetAnimationsForGroup","Desc":" Plays a range of animations for a specific set of units, intended for use during cutscenes. ","Syn":{"Syntax":" param call BIS_fnc_sceneSetAnimationsForGroup; ","Params":["Array - Units that should play animations.\n\n","Array - Array of animation names (in format String) to play."],"Return":" Boolean - Returns true if all animations started. "},"Examples":["setAnims = [group player, [\"AmovPercMstpSrasWrflDnon\"]] call BIS_fnc_sceneSetAnimationsForGroup;"],"Additional":["call","See also needed"]},{"Name":"BIS_fnc_sceneSetBehaviour","Desc":" Enables / disables a specific set of AI units, usable for cutscenes. ","Syn":{"Syntax":" param call BIS_fnc_sceneSetBehaviour; ","Params":["String - String to toggle AI (\"enableAI\",\"disableAI\")\n\n","Array - AI units that should be affected by function."],"Return":" Nothing "},"Examples":["[\"disableAI\",[unit1,player,unit2,unit3]] call BIS_fnc_sceneSetBehaviour; "],"Additional":["call","disableAI","enableAI","enableSimulation"]},{"Name":"BIS_fnc_sceneSetObjects","Desc":" /*******************************************************************************\n *\n *\u0009version: \u00091.0\n *\u0009name:\u0009\u0009sceneGetObjects\u0009\n *\u0009description:\u0009part of S.C.E.N.E.S. This script set objects positions \n *\u0009\u0009\u0009and direction relative to the choosen object\n *\u0009\u0009\u0009more info on: https://wiki.bistudio.com/index.php/SCENES    \u0009\n *\u0009paramater:\u0009object or marker \n *\u0009\u0009\u0009(its position will be selected as a center of the scene)\n *\u0009\u0009\u0009ARRAY_OF_PARAMETERS\n *\u0009\u0009\u0009- parameters gained from sceneGetObject\n *\n *\u0009return value:\u0009nothing \u0009\n * \n ******************************************************************************/\n//_this spawn \n//{  \n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 2","1.00"],"Additional":null},{"Name":"BIS_fnc_sceneSetPosFormation","Desc":" Adjusts units into a pre-determined formation, using a few variables. Part of S.C.E.N.E.S function group. ","Syn":{"Syntax":" param spawn BIS_fnc_sceneSetPosFormation; ","Params":["Array - Array of units involved.\n\n","Object - Scene initiator.","Object - Talking partner of scene initiator.","String - Formation in which to place units. Possible values: \"LINE\", \"CIRCLE\", \"HALFCIRCLE","Number - True / false in format Number (0 = false, 1 = true), determines debug mode (showing markers).","Number - Determines angle offset. Optional parameter, default 0."],"Return":" Nothing "},"Examples":["0 = [units group player, bluforCommander, player, \"HALFCIRCLE\",0] spawn BIS_fnc_sceneSetPosFormation;"],"Additional":["call","See also needed"]},{"Name":"BIS_fnc_scriptedMove","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 2: Operation Arrowhead","1.00"],"Additional":null},{"Name":"BIS_fnc_scriptedWaypointType","Desc":" /*\n\n\u0009Description:\n\u0009Return CfgWaypoints type of scripted waypoint.\n\u0009Returns empty string/config when waypoint is not scripted\n\u0009Returns \"Custom\"/CfgWaypoints root when waypoint is using custom script\n\n\u0009Parameters:\n\u0009\u00090: ARRAY - waypoint\n\u0009\u00092: (Optional) STRING or CONFIG - type of returned value\n\n\u0009Returns:\n\u0009STRING (in format \"category/class\") or CONFIG (CfgWaypoints path)\n*/\n\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_secondsToString","Desc":" /*\n\u0009\n\u0009Description:\n\u0009Convert seconds to formatted string.\n\u0009\n\u0009Parameter(s):\n\u0009_this select 0: \u003cscalar\u003e time in seconds\n\u0009_this select 1 (Optional): \u003cstring\u003e format\n\u0009\u0009\"HH\"\u0009\u0009\u0009- Hours\n\u0009\u0009\"HH:MM\"\u0009\u0009\u0009- Hours:Minutes\n\u0009\u0009\"HH:MM:SS\"\u0009\u0009- Hours:Minutes:Seconds (Default)\n\u0009\u0009\"HH:MM:SS.MS\"\u0009- Hours:Minutes:Seconds:Milliseconds\n\u0009\u0009\"MM\"\u0009\u0009\u0009- Minutes\n\u0009\u0009\"MM:SS\"\u0009\u0009\u0009- Minutes:Seconds\n\u0009\u0009\"MM:SS.MS\"\u0009\u0009- Minutes:Seconds:Milliseconds\n\u0009\u0009\"SS.MS\"\u0009\u0009\u0009- Seconds:Milliseconds\n\u0009_this select 2 (Optional): \u003cboolean\u003e return as Array (default: false)\n\u0009\n\u0009Returns:\n\u0009String or Array of Strings\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Take On Helicopters","1.00"],"Additional":null},{"Name":"BIS_fnc_selectCrew","Desc":" /*\n\u0009File: selectCrew.sqf\n\n\u0009Description:\n\u0009Return an appropriate crew type for a certain vehicle.\n\u0009\n\u0009Parameter(s):\n\u0009_this select 0: side (Side)\n\u0009_this select 1: vehicle config entry (Config)\n\u0009\n\u0009Returns:\n\u0009String - crew type\n*/\n\n//Validate parameter count\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 2","1.00"],"Additional":null},{"Name":"BIS_fnc_selectDiarySubject","Desc":" /*\n\n\u0009Description:\n\u0009Select diary subject\n\u0009Temporary replacement for selectDiarySubject scripting command which is currently broken\n\n\u0009Parameter(s):\n\u0009\u00090: STRING\n\n\u0009Returns:\n\u0009BOOL - true if the subject was found and selected\n*/\n\n#define CONTROL\u0009(finddisplay _idd displayctrl 1001)\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_selectRandom","Desc":" Selects one of the arguments at random\n","Syn":{"Syntax":" var1 call BIS_fnc_selectRandom  ","Params":["var1: Array - array of values of which one will be selected at random"],"Return":" Any Value - One of the values you passed, chosen at random "},"Examples":["_bestShooter = [_rento, _ben, _trit] call BIS_fnc_selectRandom;"],"Additional":["call","See also needed"]},{"Name":"BIS_fnc_selectRandomWeighted","Desc":" /*\n\n\u0009Description:\n\u0009Function to select a random item from an array, taking into account item weights.\n\u0009The weights should be Numbers between 0 and 1, with a maximum precision of hundreds.\n\u0009\n\u0009Parameter(s):\n\u0009_this select 0: source Array (Array of Any Value)\n\u0009_this select 1: weights (Array of Number)\n\u0009\n\u0009Returns:\n\u0009Any Value selected item\n\u0009\n\u0009TODO:\n\u0009[*] Algorithm is inefficient?\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 2","1.00"],"Additional":null},{"Name":"BIS_fnc_selectRespawnTemplate","Desc":" /*\n\n\u0009Description:\n\u0009Select respawn template from CfgRespawnTemplates and execute its script / function\n\n\u0009Parameter(s):\n\u0009\u00090: STRING - engine script which called the function\n\u0009\u00091: ARRAY - script arguments\n\n\u0009Returns:\n\u0009ARRAY of SCRIPTs\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_setCuratorAttributes","Desc":" /*\n\n\u0009Description:\n\u0009Set which attributes are available for given entity  or entity type.\n\n\u0009Parameter(s):\n\u0009\u00090: OBJECT - curator\n\u0009\u00091:\n\u0009\u0009\u0009STRING - general setting for all entities of the given type, can be  \"object\", \"player\", \"group', \"waypoint\" or \"marker\"\n\u0009\u0009\u0009OBJECT - setting for specific object, overrides general settings\n\u0009\u0009\u0009GROUP - setting for specific group, overrides general settings\n\u0009\u00092: ARRAY of STRINGs - attributes\n\u0009\u0009\u0009object:\n\u0009\u0009\u0009\u0009Skill\n\u0009\u0009\u0009\u0009UnitPos\n\u0009\u0009\u0009\u0009Rank\n\u0009\u0009\u0009\u0009Damage\n\u0009\u0009\u0009\u0009Fuel\n\u0009\u0009\u0009\u0009Lock\n\u0009\u0009\u0009\u0009RespawnVehicle\n\u0009\u0009\u0009\u0009RespawnPosition\n\u0009\u0009\u0009\u0009Exec\n\u0009\u0009\u0009group:\n\u0009\u0009\u0009\u0009GroupID\n\u0009\u0009\u0009\u0009Behaviour\n\u0009\u0009\u0009\u0009Formation\n\u0009\u0009\u0009waypoint:\n\u0009\u0009\u0009\u0009Behaviour\n\u0009\u0009\u0009\u0009Formation\n\u0009\u0009\u0009marker:\n\u0009\u0009\u0009\u0009MarkerText\n\u0009\u0009\u0009\u0009MarkerColor\n\n\u0009Returns:\n\u0009BOOL\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.16"],"Additional":null},{"Name":"BIS_fnc_setCuratorCamera","Desc":" /*\n\n\u0009Description:\n\u0009Move curator camera to a position and direction.\n\u0009Has to be tun in scheduled environment. Finished when animation ends.\n\n\u0009Parameter(s):\n\u0009\u00090 - positon, for supported types see BIS_fnc_position\n\u0009\u00091: ARRAY - vector dir or target object / position\n\u0009\u00092: NUMBER - commit time\n\n\u0009Returns:\n\u0009BOOL\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.16"],"Additional":null},{"Name":"BIS_fnc_setCuratorVisionModes","Desc":" /*\n\n\u0009Description:\n\u0009Set which vision modes curator can access\n\u0009Supported modes are:\n\u0009\u0009-2: NVG\n\u0009\u0009-1: Normal\n\u0009\u00090,1,...: Thermal (number represents type, see SetCamUseTi scripting command)\n\n\u0009Parameter(s):\n\u0009\u00090: OBJECT - curator\n\u0009\u00091: ARRAY of NUMBERs\n\n\u0009Returns:\n\u0009BOOL\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.16"],"Additional":null},{"Name":"BIS_fnc_setDate","Desc":" /*\n\n\u0009Description:\n\u0009Instantly set date and share it across network.\n\n\u0009Parameter(s):\n\u0009\u00090:\n\u0009\u0009\u0009ARRAY - date in format [Y,M,D,H,M]\n\u0009\u0009\u0009NUMBER - hours to skip\n\u0009\u00091: BOOL - true for global execution (default: true)\n\u0009\u00092 (Optional): BOOL - true to show a transition effect instead of immediate skip (default: false)\n\u0009Returns:\n\u0009ARRAY\n*/\n\n#define VALUEVAR\u0009\"bis_fnc_setdate_value\"\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_setFog","Desc":" /*\n\n\u0009Description:\n\u0009Instantly set weather conditions and share it across network.\n\n\u0009Parameter(s):\n\u0009\u00090: NUMBER - fog stregth\n\u0009\u00091: NUMBER - fog density\n\u0009\u00092: NUMBER - fog altitude (in metres)\n\n\u0009Returns:\n\u0009ARRAY\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_setHeight","Desc":" /*\n\n\u0009Description:\n\u0009Set a unit's height.\n\n\u0009Parameter(s):\n\n\u0009... if 1st parameter is an object:\n\u0009----------------------------------\n\u0009_this select 0: OBJECT \u0009\u0009  - affected object\n\u0009_this select 1: NUMBER \u0009\u0009  - height in meters\n\u0009_this select 2 (Optional): ARRAY  - position (default: object's position)\n\u0009_this select 3 (Optional): STRING - relative to (default: \"ROADWAY\", accepted: \"ROADWAY\",\"ASL\",\"ATL\")\n\n\u0009... if 1st parameter is a number:\n\u0009---------------------------------\n\u0009_this select 0: NUMBER \u0009\u0009  - heigth applied to 'this' (for use in init fields).\n\u0009_this select 1 (Optional): STRING - relative to (default: \"ROADWAY\", accepted: \"ROADWAY\",\"ASL\",\"ATL\")\n\n\u0009Returns:\n\u0009Bool\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Take On Helicopters","1.00"],"Additional":null},{"Name":"BIS_fnc_setIDCStreamFriendly","Desc":" /*\n\n\u0009Description:\n\u0009Shows or hides UI control according to state of the Stream Friendly UI switch in Game Options.\n\n\u0009Parameter(s):\n\u0009\u00090: DISPLAY or CONTROL\n\u0009\u00091: NUMBER - control IDC when the first parameter is a display\n\n\u0009Returns:\n\u0009BOOL - true when the control is visible, false when it's not\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_setNestedElement","Desc":" /*\n\u0009File: fn_setNestedElement.sqf\n\n\u0009Description:\n\u0009Function to set an item in a nested array using a path.\n\u0009\n\u0009Example:\n\u0009_array = [[1, 2], [3, 4]];\n\u0009_bool = [_array, [0, 0], 0] call BIS_fnc_setNestedElement; //Expected result: [[0, 2], [3, 4]]\n\n\u0009Parameter(s):\n\u0009_this select 0: Array\n\u0009_this select 1: path to the element (Array)\n\u0009_this select 2: new value (Any Value)\n\u0009\n\u0009Returns:\n\u0009Boolean success flag\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 2","1.00"],"Additional":null},{"Name":"BIS_fnc_setObjectTexture","Desc":" /*\n\n\u0009Description:\n\u0009Set object textures. To be used with BIS_fnc_MP.\n\n\u0009Parameter(s):\n\u0009\u00090: OBJECT\n\u0009\u00091: STRING or ARRAY - texture or array of textures\n\n\u0009Returns:\n\u0009BOOL\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_setOvercast","Desc":" Sets overcast based on number (ranging from 0 to 1) passed onto function. Distributes evenly across network (not updated for JIPs). Has to be executed in scheduled environment. ","Syn":{"Syntax":" [1] call BIS_fnc_setOvercast; ","Params":["Number - Number ranging from 0 (sunny) to 1 (stormy)."],"Return":" Boolean "},"Examples":["[0.5] call BIS_fnc_setOvercast;"],"Additional":["call","setOvercast","overcast"]},{"Name":"BIS_fnc_setPitchBank","Desc":" /************************************************************\n\u0009Set Pitch and Bank\n\nParameters: [object, pitch, bank]\nReturns: nothing\n\nRotates an object, giving it the specified pitch and bank,\nin degrees.\n\nPitch is 0 when the object is level; 90 when pointing straight\nup; and -90 when pointing straight down.\n\nBank is 0 when level; 90 when the object is rolled to the right,\n-90 when rolled to the left, and 180 when rolled upside down.\n\nNote that the object's yaw can be set with the setdir command,\nwhich should be issued before using this function, if required.\n\nThe pitch/bank can be leveled out (set to 0) by using the\nsetdir command.\n\nExample: [player, 45, -45] call BIS_fnc_setPitchBank\n************************************************************/\n\n//extract parameters\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 2","1.00"],"Additional":null},{"Name":"BIS_fnc_setPPeffectTemplate","Desc":" /*\n\n\u0009Description:\n\u0009Apply post-process effects according to template from CfgPostprocessTemplates\n\n\u0009Parameter(s):\n\u0009\u00090: STRING - template class\n\u0009\u00091 (Optional): NUMBER - commit time in seconds (default: 0)\n\u0009\u00092 (Optional): BOOL - true for global execution (default: true)\n\n\u0009Returns:\n\u0009BOOL\n*/\n\n#define VALUEVAR\u0009\"bis_fnc_setppeffecttemplate_value\"\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_setRank","Desc":" /*\n\n\u0009Description:\n\u0009Set rank of vehicle crew\n\n\u0009Parameter(s):\n\u00090: OBJECT\n\u00091: STRING or NUMBER - rank or rank ID\n\n\u0009Returns:\n\u0009BOOL\n*/\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_setRespawnDelay","Desc":" /*\n\n\u0009Description:\n\u0009Increase the respawn time based on a condition\n\n\u0009Parameter(s):\n\u0009\u00090: CODE - Condition, must return BOOL\n\u0009\u00091: NUMBER - delay in seconds which is applied when the condition is true\n\u0009\u00092: STRING - description displayed when the delay is in effect\n\n\u0009Returns:\n\u0009NOTHING\n*/\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_setRespawnInventory","Desc":" /*\n\n\u0009Description:\n\u0009Set respawn loadouts\n\n\u0009Parameter(s):\n\u0009\u00090:\n\u0009\u0009\u0009NAMESPACE\n\u0009\u0009\u0009SIDE\n\u0009\u0009\u0009GROUP\n\u0009\u0009\u0009OBJECT\n\u0009\u00091: ARRAY of STRINGs - CfgInventory or CfgVehicles classes\n\n\u0009Returns:\n\u0009ARRAY in format [target,ids] (used in BIS_fnc_removeRespawnInventory)\n*/\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_setServerVariable","Desc":" /*\n\n\u0009Description:\n\u0009Set variable stored only on server.\n\u0009Clients can the download it using BIS_fnc_getServerVariable.\n\u0009Used when you want to share variables only to specific clients to prevent large traffic.\n\n\u0009Parameter(s):\n\u0009\u00090: NAMESPACE or OBJECT or GROUP - variable name space\n\u0009\u00091: STRING - variable name\n\u0009\u00092: ANY - value\n\n\u0009Returns:\n\u0009BOOL\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_setTask","Desc":" Set a task parameters.\nCreate the task when it doesn't exist. ","Syn":{"Syntax":" [params, target, desc, (dest, state, priority, showNotification, isGlobal)] call BIS_fnc_setTask; ","Params":["params: String or Array - Task ID or array in the format [task ID, parent task ID]\n\n","target: Task owner(s)\nBoolean - true to set task of all playable units\nObject - set task of a specific object\nGroup - set tasks of all objects in the group\nSide - set tasks of all objects of the given side\nArray - collection of above types","desc: Array or String - Task description in the format [\"description\", \"title\", \"marker\"] or CfgTaskDescriptions class","dest (Optional): Task destination\nObject\nArray - either position in format [x,y,z], or [object,precision] as used by setSimpleTaskTarget command","state (Optional): Task state\nString - can be one of following:\n\"CREATED\"\n\"ASSIGNED\"\n\"AUTOASSIGNED\" (\"ASSIGNED\" when no task is assigned yet, otherwise \"CREATED\")\n\"SUCCEEDED\"\n\"FAILED\"\n\"CANCELED\"\nBoolean - true to set the task as current","priority (Optional): Number - priority. When a current task is completed, system select a next one with the larges priority \u003e= 0","showNotification (Optional): Boolean - true to show notification (default), false to disable it","isGlobal (Optional): Boolean - true to set task globally (default), false to set it only locally"],"Return":" String - Task ID "},"Examples":["Example needed"],"Additional":["call","See also needed"]},{"Name":"BIS_fnc_setTaskLocal","Desc":" /*\n\n\u0009Description:\n\u0009Local task management executed by BIS_fnc_setTask\n\u0009Not to be called independently!\n*/\n\n//--- Apply\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_setToPairs","Desc":" /*\n\n\u0009Description:\n\u0009Sets an item in pair array to given value.\n\n\u0009Remarks:\n\u0009Works similar to the BIS_fnc_addToPairs but it doesn't try to add values. It just overwrites the volue if the key already exists.\n\n\u0009Example:\n\u0009[[\"apple\",3],[\"pear\",10]] = [[[\"apple\",3],[\"pear\",2]],\"pear\",10] call BIS_fnc_setToPairs;\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_setUnitInsignia","Desc":" Set a config defined insignia to be displayed on a unit's uniform. See Arma 3 Unit Insignia for more details. ","Syn":{"Syntax":" [ object , className ] call BIS_fnc_setUnitInsignia; ","Params":["Target: Object - Target object insignia is going to be attached to.\n\n","Class: String - CfgUnitInsignia class name to use."],"Return":" Boolean - Returns true if successful. "},"Examples":["Example needed"],"Additional":["call","Arma 3 Unit Insignia","BIS_fnc_getUnitInsignia"]},{"Name":"BIS_fnc_shakeCuratorCamera","Desc":" /*\n\n\u0009Description:\n\u0009Shake curator camera.\n\u0009Must be executed in scheduled environment.\n\n\u0009Parameter(s):\n\u0009\u00090: NUMBER - shaking strength\n\u0009\u00091: NUMBER - duration\n\u0009\u00092: ARRAY in format [\u003ccenter\u003e,\u003cradius\u003e] - shake only when camera is in given distance from center\n\n\u0009Returns:\n\u0009BOOL\n*/\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.16"],"Additional":null},{"Name":"BIS_fnc_shakeGauges","Desc":" /*\n\n\u0009Description:\n\u0009Shake analogue gauges\n\n\u0009Parameter(s):\n\u0009_this select 0 (Optional): NUMBER - shake limit (max distance gauges can move on screen from original position)\n\u0009_this select 1 (Optional): NUMBER - number of repeats\n\u0009_this select 2 (Optional): NUMBER - delay between every position change\n\u0009_this select 3 (Optional): ARRAY - list of IDCs\n\n\u0009Returns:\n\u0009NOTHING\n*/\n\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Take On Helicopters","1.00"],"Additional":null},{"Name":"BIS_fnc_showCuratorAttributes","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.16"],"Additional":null},{"Name":"BIS_fnc_showCuratorFeedbackMessage","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.16"],"Additional":null},{"Name":"BIS_fnc_showMarkers","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_showNotification","Desc":" Show Notification. ","Syn":{"Syntax":" [template,(arguments)] call BIS_fnc_showNotification; ","Params":["template: String - notification template from CfgNotifications\n\n","arguments: Array - additional arguments passed to the template (default: [])"],"Return":" Boolean "},"Examples":["[\"TaskSucceeded\",[\"\",\"Disable the nuke\"]] call BIS_fnc_showNotification;","[\"ScoreAdded\",[\"Disabled the nuke without triggering an alarm.\",5]] call BIS_fnc_showNotification;"],"Additional":["call","Notification"]},{"Name":"BIS_fnc_showRespawnMenu","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_showTime","Desc":" /*\n\u0009File: showTime.sqf\n\n\u0009Description:\n\u0009Shows time gap between two dates\n\n\u0009Parameter(s):\n\u0009_this select 0: Starting date\n\u0009_this select 1: Ending date\n\n*/\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 2","1.00"],"Additional":null},{"Name":"BIS_fnc_showUnitInfo","Desc":" /*\n\n\u0009Description:\n\u0009\u0009Hides or shows weapon info.\n\n\u0009Parameter(s):\n\u0009\u0009_this select 0: BOOL - Show (true - show, false - hide)\n\n\u0009Returns:\n\u0009\u0009Bool\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_shutdown","Desc":" /*\n\n\u0009Description:\n\u0009Shut downs the game.\n\n\u0009Parameter(s):\n\u0009NOTHING\n\n\u0009Returns:\n\u0009NOTHING\n*/\n\n//--- Open options menu (forces to return to main menu)\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Take On Helicopters","1.00"],"Additional":null},{"Name":"BIS_fnc_sideColor","Desc":" /*\n\n\u0009Description:\n\u0009Returns side color in RGBA format.\n\n\u0009Parameter(s):\n\u00090: SIDE or NUMBER - either side or side ID\n\u00091 (Optional) - true to return marker color\n\n\u0009Returns:\n\u0009ARRAY or STRING\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_sideID","Desc":" /*\n\n\u0009Description:\n\u0009Returns side ID (as used in config).\n\n\u0009Parameter(s):\n\u00090: SIDE\n\n\u0009Returns:\n\u0009NUMBER\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_sideName","Desc":" Returns side name. ","Syn":{"Syntax":" [sideNumber] call BIS_fnc_sideName; ","Params":["sideNumber: Side or Number - either side or side ID"],"Return":" String "},"Examples":["[2] call BIS_fnc_sideName;"],"Additional":["call","See also needed"]},{"Name":"BIS_fnc_sideType","Desc":" /*\n\n\u0009Description:\n\u0009Returns side type based on side ID\n\n\u0009Parameter(s):\n\u00090: NUMBER\n\n\u0009Returns:\n\u0009SIDE\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_singleMissionConfig","Desc":" /*\n\n\u0009Description:\n\u0009Returns config of current single mission\n\n\u0009Parameter(s):\n\u0009_this select 0 (Optional): STRING - Mission class\n\n\u0009Returns:\n\u0009CONFIG - config path to mission\n\u0009NIL - no returned value when mission was not found\n*/\n\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Take On Helicopters","1.00"],"Additional":null},{"Name":"BIS_fnc_singleMissionKeys","Desc":" /*\n\n\u0009Description:\n\u0009Activate mission related keys\n\n\u0009Parameter(s):\n\u0009NOTHING\n\n\u0009Returns:\n\u0009ARRRAY - list of activated keys\n*/\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Take On Helicopters","1.00"],"Additional":null},{"Name":"BIS_fnc_singleMissionName","Desc":" /*\n\n\u0009Description:\n\u0009Returns name of currently selected single mission\n\n\u0009Parameter(s):\n\u0009NOTHING\n\n\u0009Returns:\n\u0009STRING\n*/\n\n#define DISPLAY (finddisplay 2)\n#define CONTROL (DISPLAY displayctrl 101)\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Take On Helicopters","1.00"],"Additional":null},{"Name":"BIS_fnc_skirmishTrigger","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_sortAlphabetically","Desc":" /*\n\n\u0009Description:\n\u0009Sort an array of strings alphabetically\n\n\u0009Parameter(s):\n\u0009ARRAY ot STRINGs\n\n\u0009Returns:\n\u0009ARRAY ot STRINGs\n*/\n\n#define CONTROL\u0009((finddisplay 0) displayctrl 1555)\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.10"],"Additional":null},{"Name":"BIS_fnc_sortBy","Desc":" /*\n\n\u0009Description:\n\u0009Sorts an array according to given algorithm.\n\n\u0009Parameter(s):\n\u0009_this select 0: any unsorted array (Array)\n\u0009\u0009- array can contain any types (object/numbers/strings ..)\n\n\u0009_this select 1: input parameters (Array)\n\u0009\u0009- used in the eval algorithm (object/numbers/strings ..)\n\u0009\u0009- input params are referenced in the sorting algorithm by _input0, _input1 .. _input9\n\u0009\u0009- max. number of 10 input params is supported (0-9)\n\n\u0009_this select 2: sorted algorithm (Code) [optional: default {_x}]\n\u0009\u0009- code needs to return a scalar\n\u0009\u0009- variable _x refers to array item\n\n\u0009_this select 3: sort direction (String) [optional: default \"ASCEND\"]\n\u0009\u0009\"ASCEND\": sorts array in ascending direction (from lowest value to highest)\n\u0009\u0009\"DESCEND\": sorts array in descending direction\n\n\u0009_this select 4: filter (Code) [optional: default {true}]\n\u0009\u0009- code that needs to evaluate true for the array item to be sorted, otherwise item is removed\n\n\u0009Returns:\n\u0009Array\n\n\u0009Examples:\n\n\u0009//sort numbers from lowest to highest\n\u0009_sortedNumbers = [[1,-80,0,480,15,-40],[],{_x},\"ASCEND\"] call BIS_fnc_sortBy;\n\n\u0009//sort helicopters by distance from player\n\u0009_closestHelicopters = [[_heli1,_heli2,_heli3],[],{player distance _x},\"ASCEND\"] call BIS_fnc_sortBy;\n\n\u0009//sort enemy by distance from friendly unit (referenced by local variable), the furtherest first\n\u0009_furtherstEnemy = [[_enemy1,_enemy2,_enemy3],[_friendly],{_input0 distance _x},\"DESCEND\",{canMove _x}] call BIS_fnc_sortBy;\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","0.58"],"Additional":null},{"Name":"BIS_fnc_sortNum","Desc":" /************************************************************\n\u0009Sort Numbers\n\nSorts an array of numbers from lowest (left) to highest (right).\nThe passed array is modified by reference.\n\nThis function uses the quick sort algorithm.\n************************************************************/\n\n\n//set up a function for recursion\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 2","1.00"],"Additional":null},{"Name":"BIS_fnc_spawn","Desc":" Execute given code with or without parameter. ","Syn":{"Syntax":" [params, code] spawn BIS_fnc_spawn; ","Params":["params: Anything - function arguments\n\n","functionCode: Code - function code"],"Return":" Nothing "},"Examples":["Show a message for the current player.\n[[\"Hello\"],  {hint _this select 0}] spawn BIS_fnc_spawn;","Show a message to all connected players.\n[[[\"Hello\"], {hint _this select 0}], \"BIS_fnc_spawn\", true, false, false] spawn BIS_fnc_MP;"],"Additional":["spawn","BIS_fnc_execFSM","BIS_fnc_execRemote","BIS_fnc_execVM","BIS_fnc_call"]},{"Name":"BIS_fnc_spawnCrew","Desc":" /*\n\u0009File: spawnCrew.sqf\n\n\u0009Description:\n\u0009Function to fill all crew positions in a vehicle, including turrets.\n\u0009In dummy mode no objects are created and the returned array contains only ones.\n\u0009In this mode the function can be used to count the actual crew of an existing vehicle or vehicle type.\n\n\u0009Parameter(s):\n\u0009_this select 0: the vehicle (Object)\n\u0009_this select 1: the crew's group (Group)\n\u0009_this select 2: (optional) dummy mode toggle (Boolean)\n\u0009_this select 3: (optional) dummy mode type (String)\n\u0009_this select 4: (optional) crew type (String)\n\n\u0009Returns:\n\u0009Array of Objects or Scalars - newly created crew or crew count\n*/\n\n//Validate parameter count\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 2","1.00"],"Additional":null},{"Name":"BIS_fnc_spawnEnemy","Desc":" /*\n\n\u0009Description:\n\u0009Spawns enemies around players\n\n\u0009Parameter(s):\n\u0009_this select 0: OBJECT - player\n\u0009_this select 1: OBJECT - refence object (enemies will be spawned on opposite direction)\n\u0009_this select 2: SIDE - side of enemies\n\u0009_this select 3 (Optional): ARRAY - list of enemy classes\n\u0009_this select 4 (Optional): NUMBER - delay between spawning\n\u0009_this select 5 (Optional): CODE - code executed on every soldier. Unit is passed as _this\n\n\u0009Returns:\n\u0009ARRAY - list of all spawned crows\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 2: Operation Arrowhead","1.00"],"Additional":null},{"Name":"BIS_fnc_spawnGroup","Desc":" Function which handles the spawning of a dynamic group of characters.  The composition of the group can be passed to the function.  Alternatively a number can be passed and the function will spawn that amount of characters with a random type.\n\nA side's Center must have been created before a group may be spawned.  Either by using createCenter or an editor placed (0% Probability of Presence is fine) unit of the appropriate side.\n\n","Syn":{"Syntax":" [position, side, character details, relative positions, list of ranks, skill range, ammo count range, randomization controls, azimuth] call BIS_fnc_spawnGroup ","Params":["position - group's starting position (Array)\n\n","side - group's Side (Side)","character details - Can be three different types: a list of character types (Array), an amount of characters to spawn (Number) or a CfgGroups entry (Config)","(optional) a list of relative positions (Array)","(optional) a list of ranks (Array)","(optional) skill range (Array)","(optional) ammunition count range (Array)","(optional) randomization controls (Array) 0: amount of mandatory units (Number) 1: spawn chance for remaining units (Number)","(optional) azimuth/Direction (Number)"],"Return":"(Group)  "},"Examples":["Spawn five random EAST units at aPos:\n[getPos aPos, EAST, 5] call BIS_fnc_spawnGroup","Spawn a Stryker MGS Platoon at marker \"tankSpawn\":\n[getMarkerPos \"tankSpawn\", side player, (configFile \u003e\u003e \"CfgGroups\" \u003e\u003e \"West\" \u003e\u003e \"BIS_US\" \u003e\u003e \"Armored\" \u003e\u003e \"US_MGSPlatoon\")] call BIS_fnc_spawnGroup","Spawn a TK Militia Medic and Soldier at aPos facing south:\n[getPos aPos, EAST, [\"TK_INS_Bonesetter_EP1\", \"TK_INS_Soldier_2_EP1\"],[],[],[],[],[],180] call BIS_fnc_spawnGroup"],"Additional":["call"," Arma 2 CfgVehicles"]},{"Name":"BIS_fnc_spawnObjects","Desc":" /*\n\n\u0009Description:\n\u0009Creates an objects or stack of objects at given position or on top of given object (eg. table).\n\n\u0009Parameter(s):\n\u00090: _positionASL:array\u0009\u0009\u0009\u0009- ASL position where the objects will be spawned\n\n\u00090: [\n\u0009\u0009_anchorObject:object,\u0009\u0009\u0009  - anchor object (eg. table) defining where the objects will be spawned\n\u0009 \u0009_anchorPlacement:string (default = \"TOP\") - anchor placement definition, valid values are \"BOTTOM\",\"TOP\",\"GROUND\"\n\u0009 \u0009\u0009\u0009\u0009\u0009\u0009\u0009\"BOTTOM\"  - at the bottom of the object\n\u0009 \u0009\u0009\u0009\u0009\u0009\u0009\u0009\"TOP\"\u0009  - top of the objects boundingbox\n\u0009 \u0009\u0009\u0009\u0009\u0009\u0009\u0009\"GROUND\"  - sitting just on the ground\n\u0009 \u0009\u0009\u0009\u0009\u0009\u0009\u0009\"ROADWAY\" - sitting just on the ground\n\u0009   ]\n\n\u00091: _className:string\u0009\u0009\u0009\u0009- class of the objects; all need to have same class\n\u00092: _count:scalar (default = 1)\u0009\u0009\u0009- number of the object; if \u003e 1 object will be spawned of top of each other\n\u00093: _offsetMatrix:array (default = [0,0,0])\u0009- starting spawning position offset\n\u00094: _offsetDir:scalar (default = 0)\u0009\u0009- starting spawning direction offset\n\u00095: _dirNoise:code (default = {0})\u0009\u0009- spawned object direction delta from the starting direction, defined as code returning dir delta value\n\u00096: _enableSimulation:bool (default = false)\u0009- shall the simulation of the spawned objects be enabled or not?\n\n\u0009Returns:\n\u0009array of created objects\n\n\u0009Example:\n\u0009_objects = [_position:array,_className:string,_count:scalar,_offsetMatrix:array,_offsetDir:scalar,_dirNoise:code,_enableSimulation:bool] call BIS_fnc_spawnObjects;\n\u0009_objects = [[_table,\"TOP\"],\"Box_NATO_Wps_F\",1,[(random 0.2)-0.1,(random 0.2)-0.1,0],(random 20)-10] call BIS_fnc_spawnObjects;\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_spawnVehicle","Desc":" Function to spawn a certain vehicle type with all crew (including turrets). The vehicle can either become part of an existing group or create a new group.\n\n","Syn":{"Syntax":" [position,direction,type,side or group] call BIS_fnc_spawnVehicle  ","Params":["position - desired position (Array)\n\n","direction - desired azimuth/direction (Number)","type - type of the vehicle (String)","side or group - side or existing group (Side or Group)"],"Return":" Array - 0: created vehicle (Object), 1: all crew (Array of Objects), 2: vehicle's group (Group)  "},"Examples":["[getPos mySpawnPos, 180, \"BMP3\", EAST] call bis_fnc_spawnvehicle"],"Additional":["call"," Arma 2 CfgVehicles"]},{"Name":"BIS_fnc_splitString","Desc":" /*\n\n\u0009Description:\n\u0009Split spring according to given separators\n\n\u0009Parameter(s):\n\u0009\u00091: STRING - affected string\n\u0009\u00092: STRING - one or more separators\n\n\u0009Returns:\n\u0009ARRAY of STRINGs\n*/\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_spotter","Desc":" /*\n\u0009File: fn_spotter.sqf\n\n\u0009Description:\n\u0009Spotter reprting target distance to sniper\n\n\u0009Parameter(s):\n\u0009_this:\u0009OBJECT\u0009- sniper\n\u0009\u0009OBJECT\u0009- spotter\n\n\u0009Returns:\n\u0009Nothing\n*/\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 2: Operation Arrowhead","1.00"],"Additional":null},{"Name":"BIS_fnc_startLoadingScreen","Desc":" /*\n\n\u0009Description:\n\u0009Register a loading screen. Start the loading when it's the first one registered.\n\n\u0009Parameter(s):\n\u0009\u00090: STRING - screen ID, will be used in BIS_fnc_endLoadingScreen\n\u0009\u00091 (Optional): STRING - loading screen layout\n\n\u0009Returns:\n\u0009BOOL - true when registered\n*/\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","0.58"],"Additional":null},{"Name":"BIS_fnc_StrategicMapAnimate","Desc":" /*\n\n\u0009Description:\n\u0009Animate a Strategic Map..\n\n\u0009Parameter(s):\n\u0009\u00090: (Optional) CONFIG or ARRAY - either config path to target group, or absolute position in format [x,y,z] or [x,y].\n\u0009\u00091: (Optional): NUMBER - commit time in seconds\n\n\u0009Returns:\n\u0009BOOL - true when animation is applied\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_StrategicMapMouseButtonClick","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_StrategicMapOpen","Desc":" /*\n\n\u0009Description:\n\u0009Open strategic map.\n\n\u0009Parameter(s):\n\u0009\u00090: DISPLAY - parent display. When empty, mission display is used.\n\u0009\u00091: ARRAY - default view position in format [x,y,y] or [x,y]\n\u0009\u00092: ARRAY - list of missions in format:\n\u0009\u0009\u00090: ARRAY - mission position in format [x,y,y] or [x,y]\n\u0009\u0009\u00091: CODE - expression executed when user clicks on mission icon\n\u0009\u0009\u00092: STRING - mission name\n\u0009\u0009\u00093: STRING - short description\n\u0009\u0009\u00094: STRING - name of mission's player\n\u0009\u0009\u00095: STRING - path to overview image\n\u0009\u0009\u00096: NUMBER - size multiplier, 1 means default size\n\u0009\u0009\u00097: ARRAY - parameters for the -on click- code; referenced from the script as (_this select 9)\n\u0009\u00093: ARRAY - list of ORBAT groups in format:\n\u0009\u0009\u00090: ARRAY - group position in format [x,y,y] or [x,y]\n\u0009\u0009\u00091: CONFIG - preview CfgORBAT group\n\u0009\u0009\u00092: CONFIG - topmost displayed CfgORBAT group\n\u0009\u0009\u00093: ARRAY - list of allowed tags\n\u0009\u0009\u00094: NUMBER - maximum number of displayed tiers\n\u0009\u00094: ARRAY - list of markers revealed in strategic map (will be hidden when map is closed)\n\u0009\u00095: ARRAY - list of custom images in format:\n\u0009\u0009\u00090: STRING - texture path\n\u0009\u0009\u00091: ARRAY - color in format [R,G,B,A]\n\u0009\u0009\u00092: ARRAY - image position\n\u0009\u0009\u00093: NUMBER - image width (in metres)\n\u0009\u0009\u00094: NUMBER - image height (in metres)\n\u0009\u0009\u00095: NUMBER - image angle (in degrees)\n\u0009\u0009\u00096: STRING - text displayed next to the image\n\u0009\u0009\u00097: BOOL - true to display shadow\n\u0009\u00096: NUMBER - value in range \u003c0-1\u003e defining weather on strategic map (i.e. density of clouds)\n\u0009\u00097: BOOL - true for night version of strategic map (darker with blue tone)\n\u0009\u00098: NUMBER - default map scale coeficient (1 is automatic scale)\n\u0009\u00099: BOOL - true to enable simulation while the map is opened (default: false)\n\u0009       10: STRING - bottom bar action label text (default: \"Select a mission\")\n\u0009       11: BOOL - true to show icon label as a mission name (default: true)\n\u0009       12: STRING - path to mission icon texture (default: \"\\A3\\Ui_f\\data\\Map\\GroupIcons\\badge_rotate_%1_gs.paa\")\n\u0009       \u0009\u0009%1 - animation frame from 0-6 (optional)\n\u0009       \u0009\u0009%2 - index from 1-9 (optional)\n\n\u0009Returns:\n\u0009DISPLAY - RscDisplayStrategicMap\n*/\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_subClasses","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_subSelect","Desc":" /************************************************************\n\u0009Subarray Select\n\nReturns a sub-selection of the passed array. There are various\nmethods the sub-array can be determined.\n\nParameters: [array, beg, \u003cend\u003e]\nReturns: subarray\n\narray - Array to select sub array from.\nbeg - Index of array to begin sub-array. If negative, index is\n\u0009counted from the end of array.\nend - Optional. Index of array to end the sub-array. If ommitted,\n\u0009remainder of the array will be selected. If negative, it\n\u0009specifies the length of the sub-array (in absolute form).\n\nExamples:\n\n\u0009_array = [\"a\",\"b\",true,3,8];\n\u0009[_array, 2] call BIS_fnc_subSelect; //returns [true,3,8]\n\u0009[_array, -2] call BIS_fnc_subSelect; //returns [3,8]\n\u0009[_array, 1, 3] call BIS_fnc_subSelect; //returns [\"b\",true,3]\n\u0009[_array, 1, -2] call BIS_fnc_subSelect; //returns [\"b\",true]\n\n************************************************************/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 2","1.00"],"Additional":null},{"Name":"BIS_fnc_supplydrop","Desc":" /*\n\u0009File: supplydrop.sqf\n\n\u0009Description:\n\u0009Script for para-drop of objects. Spawns waitUntil that handles ground hit (detaching of object from parachute). Used by supplydrop service.\n\n\u0009Parameter(s):\n\u00091: \u003cobject\u003e air unit\n\u00092: \u003cstring\u003e object class that will be dropped (use: \"reammobox\" or \"land\" for dropping ammobox/car appropriate to side of air vehicle)\n\u0009\n\u0009Returns:\n\u0009N/A\n*/\n\n\n\n/////* SMOKE*/////\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 2","1.00"],"Additional":null},{"Name":"BIS_fnc_supplydropService","Desc":" /*\n\u0009File: supplydropService.sqf\n\n\u0009Description:\n\u0009Supply drop service - controls approach and departure of transporting air vehicle and actual cargo drop. Used by Supply drop support request.\n\n\u0009Parameter(s):\n\u00091: \u003cobject\u003e unit allowed to use the transport system\n\u00092: \u003cobject\u003e vehicle providing transport\n\u00094: \u003carray\u003e positions to be cosen by player; accepted strings are \"pickup\" and \"unload\", the second position is defined by the next paramter (OPTIONAL)\n\u00095: \u003cposition\u003e (NEEDED ONLY IF PARAMETER #4 IS USED)\n\n\u0009Returns:\n\u0009N/A\n*/\n\n//MP framework init (used for move command given to transporter vehicle)\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 2","1.00"],"Additional":null},{"Name":"BIS_fnc_swapVars","Desc":" /************************************************************\n\u0009Swap Variables\n\nParameters: [\"variable name 1\", \"variable name 2\"]\n\nSwaps the values of two variables, passed in quotes.\n\nNothing is returned, as this function modifies the variables\ndirectly.\n\nExample:\n\n_a = 1;\n_b = 2;\n[\"_a\",\"_b\"] call BIS_fnc_swapVars\n//_a now equals 2\n//_b now equals 1\n\n************************************************************/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 2","1.00"],"Additional":null},{"Name":"BIS_fnc_target","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_taskAttack","Desc":" /*\n\u0009File: taskAttack.sqf\n\n\u0009Description:\n\u0009Group will attack the position.\n\n\u0009Parameter(s):\n\u0009_this select 0: group (Group)\n\u0009_this select 1: attack position (Array)\n\u0009\n\u0009Returns:\n\u0009Boolean - success flag\n*/\n\n//Validate parameter count\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 2","1.00"],"Additional":null},{"Name":"BIS_fnc_taskChildren","Desc":" /*\n\u0009\n\u0009Description:\n\u0009Return a task's sub-tasks.\n\u0009\n\u0009Parameters:\n\u0009\u00090: STRING - Task name\n\u0009\n\u0009Returns:\n\u0009ARRAY - task's sub-tasks.\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_taskCompleted","Desc":" /*\n\u0009\n\u0009Description:\n\u0009Return if a task has been completed.\n\u0009\n\u0009Parameters:\n\u0009\u00090: STRING - Task name\n\u0009\n\u0009Returns:\n\u0009BOOL - True if the task has been completed, false if not.\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_taskCreate","Desc":" /*\n\n\u0009Description:\n\u0009Create a task.\n\n\u0009Parameters:\n\u0009\u00090: BOOL or OBJECT or GROUP or SIDE or ARRAY - Task owner(s)\n\u0009\u00091: STRING or ARRAY - Task name or array in the format [task name, parent task name]\n\u0009\u00092: ARRAY or STRING - Task description in the format [\"description\", \"title\", \"marker\"] or CfgTaskDescriptions class\n\u0009\u00093: OBJECT or ARRAY or STRING - Task destination\n\u0009\u00094: BOOL or NUMBER or STRING - Task state (or true to set as current)\n\u0009\u00095: NUMBER - Task priority (when automatically selecting a new current task, higher priority is selected first)\n\n\u0009Returns:\n\u0009BOOL\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_taskCurrent","Desc":" /*\n\u0009\n\u0009Description:\n\u0009Return a unit's current task.\n\u0009\n\u0009Parameters:\n\u0009\u00090: OBJECT - Unit to check\n\u0009\n\u0009Returns:\n\u0009STRING - current task ID\n*/\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_taskDefend","Desc":" Group will man nearby static defenses within a 100 metre radius of the defense position and guard the position. Some units will man weapons, others will patrol and the remainder will sit on the ground.\n\n","Syn":{"Syntax":" [group,position] call BIS_fnc_taskDefend  ","Params":["group (Group)\n\n","position (Array)"],"Return":" Success Flag (Boolean) "},"Examples":["[group this, getPos this] call bis_fnc_taskDefend"],"Additional":["call","Functions Library"]},{"Name":"BIS_fnc_taskDescription","Desc":" /*\n\u0009\n\u0009Description:\n\u0009Return a task's description.\n\u0009\n\u0009Parameters:\n\u0009\u0009_this: STRING - Task name\n\u0009\n\u0009Returns:\n\u0009ARRAY -  task's description in the format [\"description\", \"title\", \"marker\"]\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_taskDestination","Desc":" /*\n\u0009\n\u0009Description:\n\u0009Return a task's destination.\n\u0009\n\u0009Parameters:\n\u0009\u00090: STRING - Task name\n\u0009\n\u0009Returns:\n\u0009STRING - The task's destination.\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_taskExists","Desc":" /*\n\u0009\n\u0009Description:\n\u0009Return if a task exists.\n\u0009\n\u0009Parameters:\n\u0009\u00090: STRING - Task name\n\u0009\n\u0009Returns:\n\u0009True if the task exists, false if not.\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_taskHandler","Desc":" /*******************************************************************************\n *\n *\u0009version: \u0009\u00091.0\n *\u0009name:\u0009\u0009\u0009Task handler\n *\u0009description:\u0009automatically sets tasks as current \u0009\n *\u0009paramaters:\u0009\u0009_this select 0: a unit whose tasks will be handled (Array)\n \u0009\u0009\u0009\u0009\u0009_this select 1: links to tasks created via MP Framwork with\n \u0009\u0009\u0009\u0009\u0009\u0009\u0009\u0009\u0009priorities (loewr number means higher\n \u0009\u0009\u0009\u0009\u0009\u0009\u0009\u0009\u0009priority)\n *\u0009return value:\u0009none \u0009\n * \u0009example:\u0009 \u0009[\n \u0009\u0009\u0009\u0009\u0009\u0009BIS_cooper,\n\u0009\u0009\u0009\u0009\u0009\u0009[\n\u0009\u0009\u0009\u0009\u0009\u0009\u0009[\"objShaftoe\",   \u0009\u00091],\n\u0009\u0009\u0009\u0009\u0009\u0009\u0009[\"objGorka\",\u0009\u0009\u00093],\n\u0009\u0009\u0009\u0009\u0009\u0009\u0009[\"objNikolayev\",\u0009\u00095],\n\u0009\u0009\u0009\u0009\u0009\u0009\u0009[\"objLagushina\",   \u0009\u00095],\n\u0009\u0009\u0009\u0009\u0009\u0009\u0009[\"objSmugglers\",   \u0009\u00095],\n\u0009\u0009\u0009\u0009\u0009\u0009\u0009[\"objFindBase\",    \u0009\u00094],\n\u0009\u0009\u0009\u0009\u0009\u0009\u0009[\"objSentries\",   \u0009\u00093],\n\u0009\u0009\u0009\u0009\u0009\u0009\u0009[\"objLeader\",\u0009\u0009\u00093],\n\u0009\u0009\u0009\u0009\u0009\u0009\u0009[\"objDestroyBase\",\u0009\u00093],\n\u0009\u0009\u0009\u0009\u0009\u0009\u0009[\"objEscortLagushina\",\u00091],\n\u0009\u0009\u0009\u0009\u0009\u0009\u0009[\"objRescueCrew\",   \u00092],\n\u0009\u0009\u0009\u0009\u0009\u0009\u0009[\"objSafehouse\",    \u00093],\n\u0009\u0009\u0009\u0009\u0009\u0009\u0009[\"objMaksim\",    \u0009\u00096],\n\u0009\u0009\u0009\u0009\u0009\u0009\u0009[\"objEvidence\",    \u0009\u00097]\n\u0009\u0009\u0009\u0009\u0009\u0009]\n\u0009\u0009\u0009\u0009\u0009] call BIS_fnc_taskHandler\n\n *\u0009TODO:\u0009\u0009\u0009* generalize so it can be used in WF\n \u0009\u0009\u0009\u0009\u0009* add support for standard tasks\n \u0009\u0009\u0009\u0009\u0009* randomize the selection of tasks with the same priority\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 2","1.00"],"Additional":null},{"Name":"BIS_fnc_taskHint","Desc":" /*\n\u0009\n\u0009Description:\n\u0009Display a task hint.\n\u0009\n\u0009Parameters:\n\u0009\u0009_this select 0: STRING - Task name\n\u0009\u0009_this select 1: STRING - Task state\n\u0009\n\u0009Returns:\n\u0009True if successful, false if not.\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_taskParent","Desc":" /*\n\u0009\n\u0009Description:\n\u0009Return a sub-task's parent task.\n\u0009\n\u0009Parameters:\n\u0009\u00090: STRING - Task name\n\u0009\n\u0009Returns:\n\u0009STRING - sub-task's parent task.\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_taskPatrol","Desc":" Create a random patrol of several waypoints around a given position.\n\n","Syn":{"Syntax":" [group,position,distance,area blacklist] call BIS_fnc_taskPatrol  ","Params":["group - the group to which to assign the waypoints (Group)\n\n","position - the position on which to base the patrol (Array)","distance - the maximum distance between waypoints (Number)","area blacklist - (optional) blacklist of areas (Array)"],"Return":" Success Flag (Boolean) "},"Examples":["\n[group this, getPos this, 1000] call bis_fnc_taskPatrol"],"Additional":["call","Functions Library"]},{"Name":"BIS_fnc_taskReal","Desc":" /*\n\u0009\n\u0009Description:\n\u0009Find the actual task associated with a task name assigned to a unit.\n\u0009\n\u0009Parameters:\n\u0009\u00090: STRING - Task name\n\u0009\u00091: OBJECT - Task owner\n\u0009\n\u0009Returns:\n\u0009The actual task.\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_taskSetCurrent","Desc":" /*\n\u0009\n\u0009Description:\n\u0009Set a task to current.\n\u0009\n\u0009Parameters:\n\u0009\u00090: STRING - Task name\n\u0009\n\u0009Returns:\n\u0009BOOL\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_taskSetDescription","Desc":" /*\n\u0009\n\u0009Description:\n\u0009Set a task's description.\n\u0009\n\u0009Parameters:\n\u0009\u00090: STRING - Task name\n\u0009\u00091: ARRAY - Task description in the format [\"description\", \"title\", \"marker\"]\n\u0009\n\u0009Returns:\n\u0009BOOL\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_taskSetDestination","Desc":" /*\n\u0009\n\u0009Description:\n\u0009Set a task's destination.\n\u0009\n\u0009Parameters:\n\u0009\u00090: STRING - Task name\n\u0009\u00091: OBJECT or ARRAY - Task destination\n\u0009\n\u0009Returns:\n\u0009BOOL\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_taskSetState","Desc":" /*\n\u0009\n\u0009Description:\n\u0009Set a task's state.\n\u0009\n\u0009Parameters:\n\u0009\u00090: STRING - Task name\n\u0009\u00091: STRING - Task state\n\u0009\u00092: BOOL - Show hint (default: true)\n\u0009\n\u0009Returns:\n\u0009BOOL\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_taskState","Desc":" /*\n\u0009\n\u0009Description:\n\u0009Return a task's state.\n\u0009\n\u0009Parameters:\n\u0009\u00090: STRING - Task name\n\u0009\n\u0009Returns:\n\u0009STRING - task's state.\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","0.76"],"Additional":null},{"Name":"BIS_fnc_tasksUnit","Desc":" /*\n\n\u0009Description:\n\u0009Grab all tasks currently created for a given unit\n\n\u0009Parameters:\n\u0009\u00090: OBJECT - Tasks owner\n\n\u0009Returns:\n\u0009ARRAY\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_taskVar","Desc":" /*\n\u0009\n\u0009Description:\n\u0009Return task variable\n\u0009\n\u0009Parameters:\n\u0009\u00090: STRING - task ID\n\u0009\n\u0009Returns:\n\u0009STRING\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_teamColor","Desc":" /*\n\n\u0009Description:\n\u0009Convert number to color team name or color\n\n\u0009Parameter(s):\n\u0009\u00090: NUMBER\n\u0009\u00091: BOOL - true to return RGBA color, otherwise name is returned (default)\n\n\u0009Returns:\n\u0009STRING or ARRAY\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_terrainGradAngle","Desc":" /************************************************************\n\u0009Terrain Gradient Angle\n\nDescription: \nReturns the gradient angle (in radians) of the terrain at a specified position and a compass direction. It is an angle of the slope of a tangent plane to the terrain at the specified position in the specified direction. \n\nParameters:\u0009\n0: OBJECT or ARRAY - object or its position\n1: NUMBER - direction where should be gradient calculated (compass direction)\n2: NUMBER (optional) - which stepsize should be used\n\nReturns: \nNUMBER\n\nExample: [getPos player, getDir player] call BIS_fnc_terrainGradient\n*************************************************************/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_textTiles","Desc":" \n\n\u0009Description:\n\u0009Show animated text\n\n\u0009Parameter(s):\n\u00090: Content\n\u0009\u0009STRING - Picture\n\u0009\u0009STRUCTURED TEXT - Text\n\u00091 (Optional):\n\u0009\u0009ARRAY - Position in format [x,y,w,h]\n\u0009\u0009BOOL - Use \"Mission\" area position (customizable in Layout options menu)\n\u00092 (Optional): ARRAY - Tile size in format [w,h]\n\u00093 (Optional): NUMBER - Duration in seconds (default: 5)\n\u00094 (Optional): NUMBER - Fade in/out time (default: 0.5)\n\u00095 (Optional): NUMBER - Tile transparency (default: 0.3)\n\n\u0009Returns:\n\u0009BOOL - true\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_textureMarker","Desc":" /*\n\n\u0009Description:\n\u0009Checks whether texture is defined in CfgMarkers and if so, returns the marker texture.\n\n\u0009Parameter(s):\n\u0009\u00090: STRING - texture\n\n\u0009Returns:\n\u0009STRING\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_textureVehicleIcon","Desc":" /*\n\n\u0009Description:\n\u0009Checks whether texture is defined in CfgVehicleIcons and if so, returns the icon.\n\n\u0009Parameter(s):\n\u0009\u00090: STRING - texture\n\n\u0009Returns:\n\u0009STRING\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_threat","Desc":" /*\n\u0009File: fn_threat.sqf\n\n\u0009Description:\n\u0009Calculates threat values of given unit\n\n\u0009Parameter(s):\n\u0009\u0009_this: Given unit\n\n\u0009Returns:\n\u0009Number: Threat level in range from 0 to 3\n*/\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 2","1.00"],"Additional":null},{"Name":"BIS_fnc_timeToString","Desc":" \n//------------------\n// Authors: Peter Morrison (snYpir) \u0026 Philipp Pilhofer (raedor)\n// Purpose: This function returns a 24-hour time as a string from a decimal\n// Arguments: [daytime]\n// Return: boolean\n\n/*\n\u0009This is meant to be used with the 'daytime' command, for\n\u0009example if 'daytime' was 7.36, '[daytime] call TimeToString'\n\u0009would return 07:21:36\n\n\u0009No rounding of the time is done - ie time is returned as per\n\u0009a clock\n\n\u0009The second array element passed in is the return time format.\n\u0009It can be:\n\n\u0009\"HH\"          - Hour\n\u0009\"HH:MM\"       - Hour:Minute\n\u0009\"HH:MM:SS\"    - Hour:Minute:Seconds\n\u0009\"HH:MM:SS:MM\" - Hour:Minute:Seconds:Milliseconds\n\u0009\"ARRAY\"       - [Hour,Minute,Seconds,Milliseconds]\n\n\u0009If the second parameter is not passed in, it defaults to\n\u0009\"HH:MM:SS\"\n*/\n\n//\n// Revision History:\n// 09/01/08 0.1 - First cut VBS2\n//------------------\n\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 2","1.00"],"Additional":null},{"Name":"BIS_fnc_titlecard","Desc":" /*\n\u0009\n\u0009Description:\n\u0009Display a mission-specific titlecard before the mission begins.\n\u0009\n\u0009Parameters:\n\u0009\u00090: STRING - Path to video file\n\u0009\u00091 (Optional): Subtitle visible when language is not English\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_titleText","Desc":" /*\n\n\u0009Description:\n\u0009Display TitleText with structured text\n\n\u0009Parameter(s):\n\u0009_this: STRING - displayed text\n\n\u0009Returns:\n\u0009BOOL - true\n*/\n\n#define TITLETEXT_DISPLAY\u0009(uinamespace getvariable \"RscTitleStructuredText\")\n#define TITLETEXT_CONTROL\u0009(TITLETEXT_DISPLAY displayctrl 9999)\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Take On Helicopters","1.00"],"Additional":null},{"Name":"BIS_fnc_toggleCuratorVisionMode","Desc":" /*\n\n\u0009Description:\n\u0009Toggle curator vision mode\n\n\u0009Parameter(s):\n\u0009\u00090: OBJECT - curator\n\u0009\u00091 (Optional): NUMBER - change index (default: 1)\n\n\u0009Returns:\n\u0009BOOL\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.16"],"Additional":null},{"Name":"BIS_fnc_toUpperDisplayTexts","Desc":" /*\n\n\u0009Description:\n\u0009\u0009* Converts text of selected classes in one display to upper-case.\n\u0009\u0009* Searches inside Controls class of the display. Looks inside RscControlsGroup as well.\n\u0009\u0009* Doesn't toUpper class with name \"PlayersName\" (TODO - Maybe make it parameter as well).\n\n\u0009Parameter(s):\n\u0009\u00090: STRING - Class name of the display (e. g. \"RscDisplayOptionsAudio\").\n\u0009\u00091: ARRAY OF STRINGS - Class names of parents of controls you want to toUpper (e. g. [\"RscText\", \"RscTitle\"]).\n\u0009\u00092 (Optional): ARRAY OF STRINGS - Class names of controls you don't want toUpper (e. g. [\"CA_VehicleAuthor\"] - suitable for toUppering all RscTexts except CA_VehicleAuthor).\n\n\u0009Returns:\n\u0009NOTHING\n*/\n\n\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_traceBullets","Desc":" /*\n\n\u0009Description:\n\u0009Visualizes bullet trajectories.\n\u0009NOTE: Currently works only for player in a single instance\n\n\u0009Parameter(s):\n\u0009\u00090: OBJECT - unit who's bullets will be visualized\n\u0009\u00091: (Optional) NUMBER - max trajectories (default 10)\n\n\u0009Returns:\n\u0009Nothing\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_trackMissionTime","Desc":" #define VAR_TIME\u0009(missionname + \"_time_\" + str ismultiplayer)\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_transportService","Desc":" /*\n\u0009File: transportService.sqf\n\n\u0009Description:\n\u0009Transportation system\n\n\u0009Parameter(s):\n\u00091: \u003cobject\u003e unit allowed to use the transport system\n\u00092: \u003cobject\u003e vehicle providing transport\n\u00093: \u003carray\u003e positions to be chosen by player; accepted strings are \"pickup\" and \"unload\", the second position is defined by the next paramter (OPTIONAL)\n\u00094: \u003cposition\u003e (NEEDED ONLY IF PARAMETER #3 IS USED)\n\n\u0009Returns:\n\u0009N/A\n*/\n\n//MP framework init (used for move command given to transporter vehicle)\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 2","1.00"],"Additional":null},{"Name":"BIS_fnc_tridentClient","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_tridentExecute","Desc":" /*\n\n\u0009Description:\n\u0009Execute a code based on Trident relationship.\n\u0009\u0009\n\u0009Parameter(s):\n\u0009\u00090: SIDE\n\u0009\u00091: SIDE\n\u0009\u00092: CODE - code executed when the sides are friendly\n\u0009\u00093: CODE - code executed when the sides are enemies\n\n\u0009Arguments passed to the code are:\n\u0009\u00090: SIDE - side with higher score (when the score is even, side from param 0 is used)\n\u0009\u00091: SIDE - side with lower score (when the score is even, side from param 1 is used)\n\u0009\u00092: BOOL - true when the sides are allied\n\n\u0009Returns:\n\u0009BOOL - true when the sides are allied\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_tridentGetRelationship","Desc":" /*\n\n\u0009Description:\n\u0009Get relationship of competing Trident sides.\n\u0009The value slowly decreases towards 0.\n\n\u0009Parameter(s):\n\u0009\u00090: SIDE\n\u0009\u00091: SIDE\n\n\u0009Returns:\n\u0009NUMBER - relationship value\n*/\n\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_tridentHandleDamage","Desc":" /*\n\n\u0009Description:\n\u0009Register a unit as Trident unit.\n\u0009When competing sides are still friendly and the unit is killed by the competing side,\n\u0009the killer won't be punsihed by negative score. Instead, Trident relationship will decrease.\n\n\u0009Parameter(s):\n\u0009\u00090: OBJECT\n\n\u0009Returns:\n\u0009BOOL - true if event handler managing the functionality was added, false when it existed already\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_tridentSetRelationship","Desc":" /*\n\n\u0009Description:\n\u0009Set relationship of competing Trident sides.\n\u0009When the value reaches threshold, side relationship will change.\n\u0009The value slowly decreases towards 0.\n\n\u0009Parameter(s):\n\u0009\u00090: SIDE\n\u0009\u00091: SIDE\n\u0009\u00092: NUMBER - changed value\n\u0009\u00093: BOOL - true to add the value, false to set the value\n\n\u0009Returns:\n\u0009NUMBER - relationship value after change\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_triggerToMarker","Desc":" /*\n\u0009File: triggerToMarker.sqf\n\u0009\n\u0009Description:\n\u0009Makes an existing or new trigger cover a marker area.\n\u0009\n\u0009Parameter(s):\n\u0009_this select 0: \u003cobject\u003e trigger that will be used to cover the marker - objNull to create a new trigger\n\u0009_this select 1: \u003cstring\u003e marker\n\u0009\n\u0009Returns:\n\u0009Trigger (object). Returns objNull if the function failed.\n\u0009\n\u0009How to use:\n\u0009_trigger = [objNull, \"marker1\"] call BIS_fnc_triggerToMarker;\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_trimString","Desc":" /*\n\n\u0009Description:\n\u0009Get a substring out of the string.\n\n\u0009Parameter(s):\n\u0009\u00091: STRING - source string\n\n\u0009\u00092: NUMBER (optional, default 0) - start index;\n\u0009\u0009   * indexing starts at 0\n\n\u0009\u00093: NUMBER (optional, default end of string) - end index\n\u0009\u0009   * negative number means -X chars from the string end\n\n\u0009Returns:\n\u0009STRING\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_typeText","Desc":" /*\n\n\u0009Description:\n\u0009Types a structured text on the screen, letter by letter, cursor blinking.\n\n\u0009Parameter(s):\n\u0009_this: array containing blocks of text with same structured text formatting\n\n\u0009Remarks:\n\u0009* Every text block is an array of text and formatting tag.\n\u0009* Blocks don't have to span over whole line.\n\n\u0009Example:\n\n\u0009[\n\u0009\u0009[\"CAMP ROGAIN,\",\"\u003ct align = 'center' shadow = '1' size = '0.7' font='PuristaBold'\u003e%1\u003c/t\u003e\"],\n\u0009\u0009[\"RESSUPLY POINT\",\"\u003ct align = 'center' shadow = '1' size = '0.7'\u003e%1\u003c/t\u003e\u003cbr/\u003e\"],\n\u0009\u0009[\"10 MINUTES LATER ...\",\"\u003ct align = 'center' shadow = '1' size = '1.0'\u003e%1\u003c/t\u003e\u003cbr/\u003e\"]\n\n\u0009] spawn BIS_fnc_typeText;\n*/\n\n#define DELAY_CHARACTER\u00090.06;\n#define DELAY_CURSOR\u00090.04;\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_typeText2","Desc":" /*\n\n\u0009Description:\n\u0009Types a structured text on the screen, letter by letter, cursor blinking.\n\n\u0009Parameter(s):\n\u0009_this: array containing blocks of text with same structured text formatting\n\n\u0009Remarks:\n\u0009* Every text block is an array of text and formatting tag.\n\u0009* Blocks don't have to span over whole line.\n\n\u0009Example:\n\n\u0009[\n\u0009\u0009[\n\u0009\u0009\u0009[\"CAMP ROGAIN,\",\"align = 'center' shadow = '1' size = '0.7' font='PuristaBold'\"],\n\u0009\u0009\u0009[\"RESSUPLY POINT\",\"align = 'center' shadow = '1' size = '0.7'\",\"#aaaaaa\"],\n\u0009\u0009\u0009[\"\",\"\u003cbr/\u003e\"],\n\u0009\u0009\u0009[\"10 MINUTES LATER ...\",\"align = 'center' shadow = '1' size = '1.0'\"]\n\u0009\u0009]\n\n\u0009] spawn BIS_fnc_typeText2;\n\n\u00090=[[[\"CAMP ROGAIN, \",\"align = 'center' size = '0.7' font='PuristaBold'\"],[\"RESSUPLY POINT\",\"align = 'center' size = '0.7'\",\"#aaaaaa\"],[\"\",\"\u003cbr/\u003e\"],[\"10 MINUTES LATER ...\",\"align = 'center' size = '1.0'\"]]] spawn BIS_fnc_typeText2;\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_uniqueClasses","Desc":" /*\n\n\u0009Description:\n\u0009Composes array of classes with unique param (based on returned value of passed code).\n\u0009If class inherits the param from parent, it's not listed.\n\u0009\n\u0009Parameter(s):\n\u0009\u00090: CONFIG - class which is searched\n\u0009\u00091: CODE - code executed on class, which is passed as _this\n\u0009\n\u0009Returns:\n\u0009\u0009ARRAY - classes in format [class,value]\n\u0009\u0009\u0009class: CONFIG - class with unique param\n\u0009\u0009\u0009value: ANY - value returned by the passed code for the given class\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_unitAddon","Desc":" /*\n\n\u0009Description:\n\u0009Return addon from CghPatches to which a given object belongs to\n\u0009\n\u0009Parameter(s):\n\u0009\u00090: OBJECT\n\u0009\n\u0009Returns:\n\u0009STRING - addon class\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_UnitCapture","Desc":" /*\n\u0009File: fn_UnitCapture.sqf\n\n\u0009Description:\n\u0009Records movement data of input unit over a specified period of time.\n\u0009Pressing the ESC key, the duration ending, or the unit dying ends\n\u0009the recording.\n\n\u0009Parameters:\n\u0009Unit\u0009\u0009\u0009- Unit to capture movement data from\n\u0009Duration\u0009\u0009- Duration to capture for\n\u0009OPT:FPS\u0009\u0009\u0009- OPTIONAL: Frames recorded Per Second (default 20). Limit is 1 - 100\n\u0009OPT:Firing\u0009\u0009- OPTIONAL: If true, will record the input unit's weapon fire data as well\n\u0009OPT:StartTime\u0009- OPTIONAL: Starting time offset for the frame time\n\n\u0009Copies to clipboard:\n\u0009Array in format [FrameTime, UnitPosition, UnitDirectionVector, UnitUpVector, UnitVelocity] for each frame\n\u0009\n\u0009Input Examples:\n\u0009a) [BIS_Vehicle, 50, 30, true, 10] spawn BIS_fnc_UnitCapture;\n\u0009\u0009\u0009Which would capture data from a unit named BIS_Vehicle, would capture for 50 seconds, would capture at 30 FPS,\n\u0009\u0009\u0009and would also record the unit's weapon fire data as well. Frame time offset would be 10 seconds.\n\u0009\n\u0009b) [BIS_Vehicle, 50] spawn BIS_fnc_UnitCapture;\n\u0009\u0009\u0009Which would capture data from a unit named BIS_Vehicle, and would capture for 50 seconds.\n\n\u0009Output Example:\n\u0009a) [[0,[8208.26,1953.13,296.04],[0,1,0],[0.000174453,0,1],[0,0,0]],[1.021,[8208.26,1953.13,296.04],[0,1,0],[0.000174453,0,1],[0,0,0]]]\n\u0009\u0009\u0009The above output has 2 frames.\n\u0009\n\u0009b) [[0,[8208.26,1953.13,296.04],[0,1,0],[0.000174453,0,1],[0,0,0]]]\n\u0009\u0009\u0009The above output has 1 frame.\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 2: Operation Arrowhead","1.00"],"Additional":null},{"Name":"BIS_fnc_UnitCaptureFiring","Desc":" /*\n\u0009File: fn_UnitCaptureFiring.sqf\n\n\u0009Description:\n\u0009Records weapon fire data of input unit over a specified period of time.\n\u0009Pressing the ESC key, the duration ending, or the unit dying ends the\n\u0009recording.\n\n\u0009Parameters:\n\u0009Unit\u0009\u0009\u0009- Unit to capture weapon fire data from\n\u0009Duration\u0009\u0009- Duration to capture for\n\u0009OPT:StartTime\u0009- OPTIONAL: Starting time offset for the frame time\n\n\u0009Copies to clipboard:\n\u0009Array in format [FrameTime, WeaponType, Target(If AI-controlled)] for each frame\n\u0009\n\u0009Input Example:\n\u0009a) [BIS_Vehicle, 50, 10] spawn BIS_fnc_UnitCaptureFiring;\n\u0009\u0009\u0009Which would capture data from a unit named BIS_Vehicle, and would capture for 50 seconds.\n\u0009\u0009\u0009Frame time offset would be 10 seconds.\n\u0009\n\u0009Output Example:\n\u0009a) [[2.135,\"GAU8\",\"\u003cNULL-object\u003e\"],[2.157,\"GAU8\",\"\u003cNULL-object\u003e\"]]\n\u0009\u0009\u0009The above output has 2 frames.\n\n\u0009b) [[2.135,\"GAU8\",\"\u003cNULL-object\u003e\"]]\n\u0009\u0009\u0009The above output has 1 frame.\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 2: Operation Arrowhead","1.00"],"Additional":null},{"Name":"BIS_fnc_UnitCaptureSimple","Desc":" /*\n\u0009File: fn_UnitCaptureSimple.sqf\n\n\u0009Description:\n\u0009Records movement data of input unit over a specified period of time. Simplified.\n\u0009Pressing the ESC key, the duration ending, or the unit dying ends\n\u0009the recording.\n\n\u0009Parameters:\n\u0009Unit\u0009\u0009\u0009- Unit to capture movement data from\n\u0009Duration\u0009\u0009- Duration to capture for\n\u0009OPT:FPS\u0009\u0009\u0009- OPTIONAL: Frames recorded Per Second (default 20). Limit is 1 - 100\n\u0009OPT:Firing\u0009\u0009- OPTIONAL: If true, will record the input unit's weapon fire data as well\n\u0009OPT:StartTime\u0009- OPTIONAL: Starting time offset for the frame time\n\n\u0009Copies to clipboard:\n\u0009Array in format [FrameTime, UnitPosition, UnitDirection] for each frame\n\u0009\n\u0009Input Examples:\n\u0009a) [BIS_Vehicle, 50, 30, true, 10] spawn BIS_fnc_UnitCapture;\n\u0009\u0009\u0009Which would capture data from a unit named BIS_Vehicle, would capture for 50 seconds, would capture at 30 FPS,\n\u0009\u0009\u0009and would also record the unit's weapon fire data as well. Frame time offset would be 10 seconds.\n\u0009\n\u0009b) [BIS_Vehicle, 50] spawn BIS_fnc_UnitCapture;\n\u0009\u0009\u0009Which would capture data from a unit named BIS_Vehicle, and would capture for 50 seconds.\n\n\u0009Output Example:\n\u0009a) [[0,[8208.26,1953.13,296.04],67],[1.021,[8208.26,1953.13,296.04],68]]\n\u0009\u0009\u0009The above output has 2 frames.\n\u0009\n\u0009b) [[0,[8208.26,1953.13,296.04],67]]\n\u0009\u0009\u0009The above output has 1 frame.\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 2: Operation Arrowhead","1.00"],"Additional":null},{"Name":"BIS_fnc_UnitPlay","Desc":" /*\n\n\u0009Description:\n\u0009Plays back input movement data on input unit.\n\n\u0009Parameter(s):\n\u0009\u00090: OBJECT - unit to play movement data on\n\u0009\u00091: ARRAY - movement data recorder by BIS_fnc_unitCapture\n\u0009\u00092: ARRAY (Optional) - variable to set once playback has finished. The array is in the following format:\n\u0009\u0009\u00090: NAMESPACE, GROUP or OBJECT\n\u0009\u0009\u00091: STRING - variable name\n\u0009\u00093: BOOL - true to allow playaback on destroyed objects (normally the playback will stop once the object is destroyed)\n\u0009\u00094: NOTHING - obsolete param, preserved because of backward compatibility\n\u0009\u00095: NOTHING - obsolete param, preserved because of backward compatibility\n\u0009\u00096: NUMBER - seconds to skip at the start of playback\n\n\u0009Returns:\n\u0009BOOL - always true. The script is completed once the playback is finished.\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 2: Operation Arrowhead","1.00"],"Additional":null},{"Name":"BIS_fnc_UnitPlayFiring","Desc":" /*\n\u0009File: fn_UnitPlayFiring.sqf\n\n\u0009Description:\n\u0009Plays back input weapon fire data on input unit.\n\n\u0009Parameters:\n\u0009Unit\u0009\u0009\u0009\u0009\u0009- Unit to play weapon fire data on\n\u0009Data\u0009\u0009\u0009\u0009\u0009- Weapon fire data to use\n\u0009OPT:IgnoreDisabled\u0009\u0009- OPTIONAL: Whether to ignore if the Unit is dead and/or cannot move\n\n\u0009Example (used in a script):\n\u0009a)\u0009_capturedFireData = [[2.135,\"GAU8\",\"\u003cNULL-object\u003e\"]];\n\u0009\u0009[BIS_Vehicle, _capturedData, true] spawn BIS_fnc_UnitPlayFiring;\n\u0009\u0009\u0009Which would play back the captured data in the _capturedFireData array (containing only one frame in this example)\n\u0009\u0009\u0009onto a unit named BIS_Vehicle. Playback will play even if the unit is dead or disabled.\n\u0009\n\u0009Note that in a very large captured sequence, it is a better idea to preprocess the data prior to mission start, or\n\u0009a short freeze would occur as it reads the data. For example using the following in the mission's init:\n\u0009\n\u0009\u0009UnitData = compile preprocessFile \"PlayBackUnit.sqf\";\n\n\u0009..And then later start the sequence like this:\n\u0009\n\u0009\u0009// Start the sequence\n\u0009\u0009_result = [] call UnitData;\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 2: Operation Arrowhead","1.00"],"Additional":null},{"Name":"BIS_fnc_UnitPlaySimple","Desc":" /*\n\u0009File: fn_UnitPlaySimple.sqf\n\n\u0009Description:\n\u0009Plays back input movement data on input unit. Simplified.\n\n\u0009Parameters:\n\u0009Unit\u0009\u0009\u0009\u0009\u0009- Unit to play movement data on\n\u0009Data\u0009\u0009\u0009\u0009\u0009- Movement data to use\n\u0009OPT:[Object, Variable]\u0009- OPTIONAL: Variable to set on specified Object once playback has finished\n\u0009OPT:IgnoreDisabled\u0009\u0009- OPTIONAL: Whether to ignore if the Unit is dead and/or cannot move\n\u0009OPT:Debug\u0009\u0009\u0009\u0009- OPTIONAL: Whether to give debug information on played frames per second\n\u0009OPT:Sleep\u0009\u0009\u0009\u0009- OPTIONAL: Time to Sleep between frames. This is if you want to be recording another unit\n\u0009\u0009\u0009\u0009\u0009\u0009\u0009  and playing back movement data on another as well. Limit is 0-1 seconds.\n\u0009OPT:SkipTime\u0009\u0009\u0009- OPTIONAL: Amount of time to skip at the start of playback. For example if you wish to\n\u0009\u0009\u0009\u0009\u0009\u0009\u0009  play the data from halfway instead of the start.\n\n\u0009Examples (used in a script):\n\u0009a)\u0009_capturedData = [[0,[8208.26,1953.13,296.04],67]];\n\u0009\u0009[BIS_Vehicle, _capturedData, [BIS_Object, \"DoneRecording\"], true, false, 0.2, 5] spawn BIS_fnc_UnitPlay;\n\u0009\u0009\u0009Which would play back the captured data in the _capturedData array (containing only one frame in this example)\n\u0009\u0009\u0009onto a unit named BIS_Vehicle. Playback will play even if the unit is dead or disabled. Debug information would\n\u0009\u0009\u0009not show and playing back would update once every 0.2 seconds. Once the playback finished, an object named\n\u0009\u0009\u0009BIS_Object would have a variable called \"DoneRecording\" set to TRUE. Playback would skip the first 5 seconds\n\u0009\u0009\u0009of data.\n\u0009\n\u0009b)\u0009_capturedData = [[0,[8208.26,1953.13,296.04],67]];\n\u0009\u0009[BIS_Vehicle, _capturedData, [], false, true] spawn BIS_fnc_UnitPlay;\n\u0009\u0009\u0009Which would play back the captured data in the _capturedData array (containing only one frame in this example)\n\u0009\u0009\u0009onto a unit named BIS_Vehicle. Playback will play only while the unit is alive and can move. Debug information\n\u0009\u0009\u0009would show.\n\u0009\n\u0009c)\u0009_capturedData = [[0,[8208.26,1953.13,296.04],67]];\n\u0009\u0009[BIS_Vehicle, _capturedData] spawn BIS_fnc_UnitPlay;\n\u0009\u0009\u0009Which would play back the captured data in the _capturedData array (containing only one frame in this example)\n\u0009\u0009\u0009onto a unit named BIS_Vehicle.\n\u0009\n\u0009Note that in a very large captured sequence, it is a better idea to preprocess the data prior to mission start, or\n\u0009a short freeze would occur as it reads the data. For example using the following in the mission's init:\n\u0009\n\u0009\u0009UnitData = compile preprocessFile \"PlayBackUnit.sqf\";\n\n\u0009..And then later start the sequence like this:\n\u0009\n\u0009\u0009// Start the sequence\n\u0009\u0009_result = [] call UnitData;\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 2: Operation Arrowhead","1.00"],"Additional":null},{"Name":"BIS_fnc_unitVector","Desc":" /************************************************************\n\u0009Unit Vector\n\nReturns the unit vector for the passed vector (vector pointing\nin the same direction, but with magnitude == 1)\nThis does not modify the original array.\nThe array can have any number of elements (2, 3, etc).\n************************************************************/\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 2","1.00"],"Additional":null},{"Name":"BIS_fnc_unpackStaticWeapon","Desc":" /*\n\u0009File: fn_unpackStaticWeapon.sqf\n\n\u0009Description:\n\u0009Function which uses a weapon team to pack a static weapon such\n\u0009as the HMG or Mortar. Requires three personnel in the team as\n\u0009a minimum (leader, gunner, assistant).\n\n\u0009Parameter(s):\n\u0009_this select 0: the support team group (group)\n\u0009_this select 1: location to place gun (position)\n\u0009_this select 2: location of target (position)\n*/\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_updatePlayerArray","Desc":" /*\n\u0009\n\u0009Description:\n\u0009Updates dead player objects to their current respawned  objects\n\u0009\n\u0009Parameters:\n\u0009\u0009_this: ARRAY\n\u0009\n\u0009Returns:\n\u0009ARRAY\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_validateParametersOO","Desc":" /*\n\u0009File: fn_validateParametersOO.sqf\n\n\u0009Description:\n\u0009Validating the parameters of a certain method in a class\n\n\u0009Parameter(s):\n\u0009_this select 0: String (class name)\n\u0009_this select 1: String (method name)\n\u0009_this select 2: Any (to-be-validated parameters)\n\u0009\n\u0009Returns:\n\u0009validation flag: Boolean\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_variableSpaceAdd","Desc":" /*\n\u0009File: variableSpaceAdd.sqf\n\n\u0009Description:\n\u0009Add element to variable from someone's variable space.\n\n\u0009Parameter(s):\n\u0009_this select 0: OBJECT - owner of variable space\n\u0009_this select 1: STRING - Name of variable\n\u0009_this select 2: ANYTHING - element which will be added (must be of same type as variable)\n\u0009_this select 3: BOOLEAN - optional - True if modified variable will be saved globally.\n\u0009_this select 4: BOOLEAN - optional - True if you want to check whether element is already in variable (only for arrays).\n\n\u0009Returned values:\n\u0009ANYTHING - updated variable\n\n*/\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 2","1.00"],"Additional":null},{"Name":"BIS_fnc_variableSpaceRemove","Desc":" /*\n\u0009File: variableSpaceAdd.sqf\n\n\u0009Description:\n\u0009Remove element from variable from someone's variable space.\n\n\u0009Parameter(s):\n\u0009_this select 0: OBJECT - owner of variable space\n\u0009_this select 1: STRING - Name of variable\n\u0009_this select 2: ANYTHING - element which will be removed (must be of same type as variable)\n\u0009_this select 3: BOOLEAN - optional - True if modified variable will be saved globally.i?1\n\n\u0009Returned values:\n\u0009ANYTHING - updated variable\n\n*/\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 2","1.00"],"Additional":null},{"Name":"BIS_fnc_vectorAdd","Desc":" /************************************************************\n\u0009Vector Add\n\n\u003cdifference\u003e = [\u003cvector1\u003e,\u003cvector2\u003e] call BIS_fnc_vectorAdd\n\nOperand types:\n\u003cdifference\u003e: array\n\u003cvector1\u003e: array\n\u003cvector2\u003e: array\n\nReturns a vector that is the sum of \u003cvector1\u003e and \u003cvector2\u003e.\n\n************************************************************/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki)\n\n\n\n\n \n\n Use vectorAdd instead.\n ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 2","1.00"],"Additional":null},{"Name":"BIS_fnc_vectorDiff","Desc":" /************************************************************\n\u0009Vector Difference\n\n\u003cdifference\u003e = [\u003cvector1\u003e,\u003cvector2\u003e] call BIS_fnc_vectorDiff\n\nOperand types:\n\u003cdifference\u003e: array\n\u003cvector1\u003e: array\n\u003cvector2\u003e: array\n\nReturns a vector that is the difference between \u003cvector1\u003e and \u003cvector2\u003e.\n\n************************************************************/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki)\n\n\n\n\n \n\n Use vectorDiff instead.\n ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 2","1.00"],"Additional":null},{"Name":"BIS_fnc_vectorFromXToY","Desc":" /************************************************************\n\u0009Vector From X to Y\n\n\u003cresultant vector\u003e = [\u003cvector1\u003e,\u003cvector2\u003e] call BIS_fnc_vectorFromXToY\n\nOperand types:\n\u003cvector1\u003e: array\n\u003cvector2\u003e: array\n\u003cresultant vector\u003e: array\n\nReturns a unit vector that 'points' from \u003cvector1\u003e to \u003cvector2\u003e.\nThis is a very useful function, as it can be used with the velocity\ncommand to move an object from one position to another\n(ie \u003cvector1\u003e to \u003cvector2\u003e) - ensure both positions are found using getposasl.\n************************************************************/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 2","1.00"],"Additional":null},{"Name":"BIS_fnc_vectorMultiply","Desc":" /************************************************************\n\u0009Vector Multiply\n\nOperand types:\n\u003cvector1\u003e: array\n\u003cscale\u003e: number\n\u003cresultant vector\u003e: array\n\nReturns a unit vector that 'points' from \u003cvector1\u003e to \u003cvector2\u003e.\nThis is a very useful function, as it can be used with the velocity\ncommand to move an object from one position to another.\n(ie \u003cvector1\u003e to \u003cvector2\u003e) - ensure both positions are found using getposasl.\n\n\u003cresultant vector\u003e = [\u003cvector\u003e,\u003cscale\u003e] call BIS_fnc_vectorMultiply\n************************************************************/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki)\n\n\n\n\n \n\n Use vectorMultiply instead.\n ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 2","1.00"],"Additional":null},{"Name":"BIS_fnc_vehicleRoles","Desc":" /*\n\n\u0009Description:\n\u0009Returns vehicle roles\n\n\u0009Parameter(s):\n\u0009\u00090: OBJECT or STRING\n\n\u0009Returns:\n\u0009ARRAY of ARRAYS in format [role,index],e.g. [[\"Driver\",[]],[\"Turret\",[0,1]],[\"Cargo\",[0]]]\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_version","Desc":" /*\n\u0009File: fn_version.sqf\n\n\u0009Description:\n\u0009Detects are available expansions and addons.\n\n\u0009Returns:\n\u0009Array -\u0009list ov expansions\n\u0009\u00090 - ARMA 2\n\u0009\u00091 - Operation Arrowhead\n\u0009\u00092 - BAF\n\u0009\u00093 - ...\n\u0009\u00094 - PMC\n*/\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 2","1.00"],"Additional":null},{"Name":"BIS_fnc_VRCourseBallistics1","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_VRCourseBallistics2","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_VRCourseBallistics3","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_VRCourseBallistics4","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_VRCourseCommandingActions1","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_VRCourseCommandingActions2","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_VRCourseCommandingActions3","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_VRCourseCommandingBehaviour1","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_VRCourseCommandingBehaviour2","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_VRCourseCommandingBehaviour3","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_VRCourseCommandingMovement1","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_VRCourseCommandingMovement2","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_VRCourseCommandingVehicles1","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_VRCourseCommandingVehicles2","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_VRCourseCommandingVehicles3","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_VRCourseLaunchers1","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_VRCourseLaunchers2","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_VRCourseLaunchers3","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_VRCoursePlaceables1","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_VRCoursePlaceables2","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_VRCoursePlaceables3","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_VRCourseTargetDesignation1","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_VRCourseTargetDesignation2","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_VRCourseTargetDesignation3","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_VRDrawBorder","Desc":" /*\n\n\u0009Description:\n\u0009Visualizes area border (used primarily for VR missions).\n\n\u0009Parameter(s):\n\u0009\u00090: ARRAY - center position\n\u0009\u00091: NUMBER - radius\n\n\u0009Returns:\n\u0009Array of objects used for the wall (so they can be easily deleted)\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_VRDrawGrid","Desc":" /*\n\n\u0009Description:\n\u0009Visualizes surface grid (used primarily for VR missions).\n\u0009NOTE: Only one instance of grid visualisation can run at any given time. Calling this function multiple times will only move the grid center\n\n\u0009Parameter(s):\n\u0009\u00090:\u0009ARRAY - center position (should be multiple of 4 in both axis to correspond with the tiles on the ground, like [1000,1000] or [2400,2400])\n\u0009\u0009\u0009or\n\u0009\u0009\u0009BOOL - use FALSE to disable grid visualisation\n\u0009\u00091:\u0009(Optional) ARRAY - grid color [R,G,B,A], default black [0,0,0,1];\n\n\n\u0009Returns:\n\u0009Nothing\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_VREffectKilled","Desc":" /*\n\n\u0009Description:\n\u0009Delete body of a virtual soldier after he's killed\n\n\u0009Parameter(s):\n\u0009\u00090: OBJECT\n\u0009\u00091 (Optional): BOOL - true to delete the body right away, false to add KILLED event handler which will delete it after death\n\u0009\u00092 (Optional): NUMBER - time in seconds before the body disappears\n\n\u0009Returns:\n\u0009BOOL\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_VRFadeIn","Desc":" /*\n\n\u0009Description:\n\u0009Fade In effect for VR.\n\n\u0009Parameter(s):\n\u0009\u0009NONE\n\n\u0009Returns:\n\u0009Nothing\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_VRFadeOut","Desc":" /*\n\n\u0009Description:\n\u0009Fade Out effect for VR.\n\n\u0009Parameter(s):\n\u0009\u0009NONE\n\n\u0009Returns:\n\u0009Nothing\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_VRSpawnEffect","Desc":" /*\n\n\u0009Description:\n\u0009VR unit spawn effect.\n\n\u0009Parameter(s):\n\u0009\u00090: OBJECT - Spawned unit\n\u0009\u00091: BOOL (Optional) - Reverse effect (hiding), default FALSE\n\n\u0009Returns:\n\u0009Nothing\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_VRSpawnSelector","Desc":" /*\n\n\u0009Description:\n\u0009Spawns the Course selector (used primarily for VR missions).\n\n\u0009Parameter(s):\n\u0009\u00090: ARRAY - position\n\u0009\u00091: STRING (Optional) - selector variant (\"default\", \"incomplete\", \"complete\", \"exit\")\n\n\u0009Returns:\n\u0009Selector object\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_VRTimer","Desc":" /*\n\n\u0009Description:\n\u0009Timer for VR.\n\n\u0009Parameter(s):\n\u0009\u00090: STRING (Optional) - Timer colour in HTML format\n\n\u0009Returns:\n\u0009Nothing\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_weaponAddon","Desc":" /*\n\n\u0009Description:\n\u0009Return addon from CghPatches to which a given weapon class belongs to\n\u0009\n\u0009Parameter(s):\n\u0009\u00090: OBJECT\n\u0009\n\u0009Returns:\n\u0009STRING - addon class\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_weaponComponents","Desc":" /*--------------------------------------------------------------------------------------------------\n\n\n\u0009Description:\n\u0009Returns array with classname of the plain weapon (without attachments), followed by classnames of all its attachments.\n\n\u0009Example:\n\u0009[\"arifle_mx_f\",\"optic_aco\",\"acc_pointer_ir\"] = \"arifle_mx_aco_pointer_f\" call BIS_fnc_weaponComponents;\n\n\u0009Remarks:\n\u0009* Classnames returned are converted all to lowercase.\n\n--------------------------------------------------------------------------------------------------*/\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_worldArea","Desc":" /*\n\n\u0009Description:\n\u0009Creates (or returns if it already exists) trigger with size of map\n\n\u0009Parameter(s):\n\u0009NOTHING\n\n\u0009Returns:\n\u0009OBJECT\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Take On Helicopters","1.00"],"Additional":null},{"Name":"BIS_fnc_wpArtillery","Desc":" /*\n\n\u0009Description:\n\u0009Let group members fire artillery barrage on waypoint position\n\n\u0009Parameters:\n\u0009\u00090: GROUP\n\u0009\u00091: ARRAY - waypoint position\n\u0009\u00092: OBJECT - target to which waypoint is attached to\n\u0009\u00093 (Optional): NUMBER - number of fired rounds\n\u0009\u00094 (Optional): STRING - magazine type\n\n\u0009Returns:\n\u0009BOOL\n*/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_wpLand","Desc":" LAND custom waypoint.\n\nLand on specific spot.\n ","Syn":{"Syntax":" arguments: [dirParam,visualize] ","Params":["dirParam: Array - in format [dir,dirDiff]\ndir: Number - required landing direction in degrees\ndirDiff: Number - direction tolerance (to both sides)\n\n","visualize: Boolean - true to show hint (default: false)"],"Return":" Nothing "},"Examples":["[player,position dude,10,[42,20],true] spawn BIS_fnc_wpLand;"],"Additional":["spawn","See also needed"]},{"Name":"BIS_fnc_wpPatrol","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_wpRelax","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_wpSuppress","Desc":" N/A ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 3","1.00"],"Additional":null},{"Name":"BIS_fnc_zzRotate","Desc":" /*********************************************************************\n\u0009Version:\u00091.6\n\u0009Name:\u0009\u0009zzRotate \n\u0009DESCRIPTION:\u0009Rotate objects around given center about given angle  \n\u0009PARAMETERS:\u0009center: [x,y,z]; angle: number; participants: [object, initPosX, initPosY, initPosZ, angle]\n\u0009RETURNED VALUE:\u0009Nothing\n**********************************************************************/\n\n(Placeholder description extracted from the function header by BIS_fnc_exportFunctionsToWiki) ","Syn":{"Syntax":"","Params":null,"Return":""},"Examples":["Arma 2","1.00"],"Additional":null}]